{
  "description": "Auto-Generated JSON Schema for Ansible-stable 2.3",
  "title": "Ansible 2.3",
  "items": {
    "anyOf": [
      {
        "required": [
          "script"
        ],
        "type": "object",
        "properties": {
          "args": {
            "type": "object",
            "properties": {
              "creates": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          },
          "script": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "command"
        ],
        "type": "object",
        "properties": {
          "args": {
            "type": "object",
            "properties": {
              "warn": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "chdir": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              }
            }
          },
          "command": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "raw"
        ],
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "args": {
            "type": "object",
            "properties": {
              "executable": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "raw"
        ],
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "args": {
            "type": "object",
            "properties": {
              "executable": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "shell"
        ],
        "type": "object",
        "properties": {
          "shell": {
            "type": "string"
          },
          "args": {
            "type": "object",
            "properties": {
              "warn": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "chdir": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "command"
        ],
        "type": "object",
        "properties": {
          "args": {
            "type": "object",
            "properties": {
              "warn": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "chdir": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              }
            }
          },
          "command": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "shell"
        ],
        "type": "object",
        "properties": {
          "shell": {
            "type": "string"
          },
          "args": {
            "type": "object",
            "properties": {
              "warn": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "chdir": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "script"
        ],
        "type": "object",
        "properties": {
          "args": {
            "type": "object",
            "properties": {
              "creates": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          },
          "script": {
            "type": "string"
          }
        }
      },
      {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "ecs_taskdefinition": {
            "required": [
              "state"
            ],
            "type": "object",
            "description": "Registers or deregisters task definitions in the Amazon Web Services (AWS) EC2 Container Service (ECS)",
            "properties": {
              "family": {
                "type": "string"
              },
              "task_role_arn": {
                "type": "string"
              },
              "network_mode": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "arn": {
                "type": "string"
              },
              "volumes": {
                "type": "string"
              },
              "containers": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "selinux": {
            "required": [
              "state"
            ],
            "type": "object",
            "description": "Configures the SELinux mode and policy. A reboot may be required after usage. Ansible will not issue this reboot but will let you know when it is required.",
            "properties": {
              "policy": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "conf": {
                "type": "string"
              }
            }
          },
          "consul": {
            "required": [
              "state"
            ],
            "type": "object",
            "description": "Registers services and checks for an agent with a consul cluster. A service is some process running on the agent node that should be advertised by consul's discovery mechanism. It may optionally supply a check definition, a periodic service test to notify the consul cluster of service's health.\nChecks may also be registered per node e.g. disk usage, or cpu usage and notify the health of the entire node to the cluster. Service level checks do not require a check name or id as these are derived by Consul from the Service name and id respectively by appending 'service:' Node level checks require a check_name and optionally a check_id.\nCurrently, there is no complete way to retrieve the script, interval or ttl metadata for a registered check. Without this metadata it is  not possible to tell if the data supplied with ansible represents a change to a check. As a result this does not attempt to determine changes and will always report a changed occurred. An api method is planned to supply this metadata so at that stage change management will be added.\nSee http://consul.io for more details.",
            "properties": {
              "service_address": {
                "type": "string"
              },
              "http": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "check_name": {
                "type": "string"
              },
              "service_name": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "check_id": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "service_port": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "service_id": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "alternatives": {
            "required": [
              "path",
              "name"
            ],
            "type": "object",
            "description": "Manages symbolic links using the 'update-alternatives' tool\nUseful when multiple programs are installed but provide similar functionality (e.g. different editors).",
            "properties": {
              "priority": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "set_stats": {
            "required": [
              "data"
            ],
            "type": "object",
            "description": "This module allows setting/accumulating stats on the current ansible run, either per host of for all hosts in the run.",
            "properties": {
              "aggregate": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "per_host": {
                "type": "string"
              }
            }
          },
          "gce_lb": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "members",
                        "nodes"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module can create and destroy Google Compute Engine C(loadbalancer) and C(httphealthcheck) resources.  The primary LB resource is the C(load_balancer) resource and the health check parameters are all prefixed with I(httphealthcheck). The full documentation for Google Compute Engine load balancing is at U(https://developers.google.com/compute/docs/load-balancing/).  However, the ansible module simplifies the configuration by following the libcloud model. Full install/configuration instructions for the gce* modules can be found in the comments of ansible/test/gce_tests.py.",
            "properties": {
              "httphealthcheck_host": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "external_ip": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "httphealthcheck_unhealthy_count": {
                "type": "string"
              },
              "httphealthcheck_healthy_count": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "httphealthcheck_path": {
                "type": "string"
              },
              "port_range": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "httphealthcheck_timeout": {
                "type": "string"
              },
              "members": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "httphealthcheck_port": {
                "type": "string"
              },
              "httphealthcheck_name": {
                "type": "string"
              },
              "nodes": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "httphealthcheck_interval": {
                "type": "string"
              }
            }
          },
          "ecs_cluster": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Creates or terminates ecs clusters.",
            "properties": {
              "delay": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "repeat": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "os_keystone_domain_facts": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Retrieve facts about a one or more OpenStack domains",
            "properties": {
              "name": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              }
            }
          },
          "win_say": {
            "type": "object",
            "description": "Uses .NET libraries to convert text to speech and optionally play .wav sounds.  Audio Service needs to be running and some kind of speakers or headphones need to be attached to the windows target(s) for the speech to be audible.",
            "properties": {
              "start_sound_path": {
                "type": "string"
              },
              "msg_file": {
                "type": "string"
              },
              "end_sound_path": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "voice": {
                "type": "string"
              },
              "speech_speed": {
                "type": "string"
              }
            }
          },
          "os_recordset": {
            "required": [
              "name",
              "zone",
              "records",
              "recordset_type"
            ],
            "type": "object",
            "description": "Manage OpenStack DNS recordsets. Recordsets can be created, deleted or updated. Only the I(records), I(description), and I(ttl) values can be updated.",
            "properties": {
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "records": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "recordset_type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "junos_rpc": {
            "required": [
              "rpc"
            ],
            "type": "object",
            "description": "Sends a request to the remote device running JUNOS to execute the specified RPC using the NetConf transport.  The reply is then returned to the playbook in the c(xml) key.  If an alternate output format is requested, the reply is transformed to the requested output.",
            "properties": {
              "output": {
                "type": "string"
              },
              "rpc": {
                "type": "string"
              },
              "args": {
                "type": "string"
              }
            }
          },
          "kernel_blacklist": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove kernel modules from blacklist.",
            "properties": {
              "blacklist_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pn_ospf": {
            "required": [
              "state",
              "pn_vrouter_name",
              "pn_network_ip"
            ],
            "type": "object",
            "description": "Execute vrouter-ospf-add, vrouter-ospf-remove command.\nThis command adds/removes Open Shortest Path First(OSPF) routing protocol to a virtual router(vRouter) service.",
            "properties": {
              "pn_ospf_area": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_vrouter_name": {
                "type": "string"
              },
              "pn_network_ip": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              }
            }
          },
          "htpasswd": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "username"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "username"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "dest",
                        "destfile"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "destfile"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add and remove username/password entries in a password file using htpasswd.\nThis is used by web servers such as Apache and Nginx for basic authentication.",
            "properties": {
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "create": {
                "type": "string"
              },
              "destfile": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "crypt_scheme": {
                "type": "string"
              }
            }
          },
          "gce_tag": {
            "required": [
              "instance_name",
              "tags"
            ],
            "type": "object",
            "description": "This module can add or remove tags U(https://cloud.google.com/compute/docs/instances/#tags) to/from GCE instance.",
            "properties": {
              "zone": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "instance_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              }
            }
          },
          "zabbix_maintenance": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_url",
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_url"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "host_names",
                        "host_name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "host_groups",
                        "host_group"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module will let you create Zabbix maintenance windows.",
            "properties": {
              "http_login_password": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "http_login_user": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "host_names": {
                "type": "string"
              },
              "host_group": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "host_name": {
                "type": "string"
              },
              "host_groups": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "collect_data": {
                "type": "string"
              },
              "minutes": {
                "type": "string"
              },
              "desc": {
                "type": "string"
              }
            }
          },
          "cl_img_install": {
            "required": [
              "src"
            ],
            "type": "object",
            "description": "install a different version of Cumulus Linux in the inactive slot. For more details go the Image Management User Guide at U(http://docs.cumulusnetworks.com/).",
            "properties": {
              "src": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "switch_slot": {
                "type": "string"
              }
            }
          },
          "panos_security_policy": {
            "required": [
              "password",
              "ip_address",
              "rule_name"
            ],
            "type": "object",
            "description": "Security policies allow you to enforce rules and take action, and can be as general or specific as needed. The policy rules are compared against the incoming traffic in sequence, and because the first rule that matches the traffic is applied, the more specific rules must precede the more general ones.",
            "properties": {
              "username": {
                "type": "string"
              },
              "spyware": {
                "type": "string"
              },
              "hip_profiles": {
                "type": "string"
              },
              "file_blocking": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "log_start": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "to_zone": {
                "type": "array"
              },
              "service": {
                "type": "array"
              },
              "source": {
                "type": "array"
              },
              "destination": {
                "type": "array"
              },
              "from_zone": {
                "type": "array"
              },
              "source_user": {
                "type": "string"
              },
              "url_filtering": {
                "type": "string"
              },
              "group_profile": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "wildfire_analysis": {
                "type": "string"
              },
              "devicegroup": {
                "type": "string"
              },
              "data_filtering": {
                "type": "string"
              },
              "antivirus": {
                "type": "string"
              },
              "rule_name": {
                "type": "string"
              },
              "application": {
                "type": "array"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "rule_type": {
                "type": "string"
              },
              "vulnerability": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "log_end": {
                "type": "string"
              }
            }
          },
          "infini_pool": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module to creates, deletes or modifies pools on Infinibox.",
            "properties": {
              "ssd_cache": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vsize": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "nxos_gir_profile_management": {
            "required": [
              "mode"
            ],
            "type": "object",
            "description": "Manage a maintenance-mode or normal-mode profile with configuration commands that can be applied during graceful removal or graceful insertion.",
            "properties": {
              "include_defaults": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "config": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "nxos_ntp": {
            "type": "object",
            "description": "Manages core NTP configuration.",
            "properties": {
              "source_addr": {
                "type": "string"
              },
              "prefer": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vrf_name": {
                "type": "string"
              },
              "peer": {
                "type": "string"
              },
              "key_id": {
                "type": "string"
              },
              "source_int": {
                "type": "string"
              }
            }
          },
          "cs_snapshot_policy": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "interval_type",
                        "interval"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "time_zone",
                        "timezone"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "max_snaps",
                        "max"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update and delete volume snapshot policies.",
            "properties": {
              "project": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "schedule": {
                "type": "string"
              },
              "max": {
                "type": "string"
              },
              "interval_type": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "volume_type": {
                "type": "string"
              },
              "time_zone": {
                "type": "string"
              },
              "volume": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vpc": {
                "type": "string"
              },
              "max_snaps": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "device_id": {
                "type": "string"
              }
            }
          },
          "nxos_install_os": {
            "required": [
              "system_image_file"
            ],
            "type": "object",
            "description": "Install an operating system by setting the boot options like boot image and kickstart image.",
            "properties": {
              "system_image_file": {
                "type": "string"
              },
              "kickstart_image_file": {
                "type": "string"
              }
            }
          },
          "virt_pool": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pool"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage I(libvirt) storage pools.",
            "properties": {
              "xml": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "uri": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "autostart": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              }
            }
          },
          "infini_export_client": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "client",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "client"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module creates, deletes or modifys NFS client(s) for existing exports on Infinibox.",
            "properties": {
              "no_root_squash": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "client": {
                "type": "string"
              },
              "export": {
                "type": "string"
              },
              "access_mode": {
                "type": "string"
              }
            }
          },
          "netapp_e_amg_sync": {
            "required": [
              "api_password",
              "state",
              "api_username",
              "api_url",
              "name"
            ],
            "type": "object",
            "description": "Allows for the initialization, suspension and resumption of an asynchronous mirror group's synchronization for NetApp E-series storage arrays.",
            "properties": {
              "api_url": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "delete_recovery_point": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              }
            }
          },
          "rabbitmq_parameter": {
            "required": [
              "name",
              "component"
            ],
            "type": "object",
            "description": "Manage dynamic, cluster-wide parameters for RabbitMQ",
            "properties": {
              "node": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "component": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "vhost": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "logentries": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Sends logs to LogEntries in realtime",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "logtype": {
                "type": "string"
              }
            }
          },
          "openwrt_init": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "service"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "service"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Controls OpenWrt services on remote hosts.",
            "properties": {
              "pattern": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "service": {
                "type": "string"
              }
            }
          },
          "smartos_image_facts": {
            "type": "object",
            "description": "Retrieve facts about all installed images on SmartOS. Facts will be inserted to the ansible_facts key.",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "bigip_pool_member": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "host",
                        "address",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "host"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP LTM pool members via iControl SOAP API",
            "properties": {
              "session_state": {
                "type": "string"
              },
              "ratio": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "monitor_state": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "connection_limit": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "preserve_node": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "rate_limit": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "win_ping": {
            "type": "object",
            "description": "Checks management connectivity of a windows host",
            "properties": {
              "data": {
                "type": "string"
              }
            }
          },
          "avi_api_session": {
            "required": [
              "http_method"
            ],
            "type": "object",
            "description": "This module can be used for calling any resources defined in Avi REST API. U(https://avinetworks.com/)\nThis module is useful for invoking HTTP Patch methods and accessing resources that do not have an REST object associated with them.",
            "properties": {
              "params": {
                "type": "string"
              },
              "http_method": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "ovirt_disks": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "alias"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage Virtual Machine and floating disks in oVirt.",
            "properties": {
              "vm_name": {
                "type": "string"
              },
              "profile": {
                "type": "string"
              },
              "storage_domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "bootable": {
                "type": "string"
              },
              "logical_unit": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "shareable": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "vm_id": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "nginx_status_facts": {
            "required": [
              "url"
            ],
            "type": "object",
            "description": "Gathers facts from nginx from an URL having C(stub_status) enabled.",
            "properties": {
              "url": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "macports": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages MacPorts packages",
            "properties": {
              "state": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "win_feature": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Installs or uninstalls Windows Roles or Features on Windows Server. This module uses the Add/Remove-WindowsFeature Cmdlets on Windows 2008 and Install/Uninstall-WindowsFeature Cmdlets on Windows 2012, which are not available on client os machines.",
            "properties": {
              "name": {
                "type": "string"
              },
              "include_management_tools": {
                "type": "string"
              },
              "include_sub_features": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "restart": {
                "type": "string"
              }
            }
          },
          "win_psexec": {
            "required": [
              "command"
            ],
            "type": "object",
            "description": "Run commands (remotely) through the PsExec service\nRun commands as another (domain) user (with elevated privileges)",
            "properties": {
              "username": {
                "type": "string"
              },
              "limited": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "chdir": {
                "type": "string"
              },
              "noprofile": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "elevated": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "hostnames": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "interactive": {
                "type": "string"
              }
            }
          },
          "win_service": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages Windows services",
            "properties": {
              "username": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "force_dependent_services": {
                "type": "string"
              },
              "dependency_action": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "start_mode": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "dependencies": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "desktop_interact": {
                "type": "string"
              }
            }
          },
          "ec2_elb": {
            "required": [
              "instance_id",
              "state"
            ],
            "type": "object",
            "description": "This module de-registers or registers an AWS EC2 instance from the ELBs that it belongs to.\nReturns fact \"ec2_elbs\" which is a list of elbs attached to the instance if state=absent is passed as an argument.\nWill be marked changed when called only if there are ELBs found to operate on.",
            "properties": {
              "instance_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "ec2_elbs": {
                "type": "array"
              },
              "validate_certs": {
                "type": "string"
              },
              "enable_availability_zone": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "win_tempfile": {
            "type": "object",
            "description": "Creates temporary files and directories.",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              },
              "suffix": {
                "type": "string"
              }
            }
          },
          "git_config": {
            "type": "object",
            "description": "The M(git_config) module changes git configuration by invoking 'git config'. This is needed if you don't want to use M(template) for the entire git config file (e.g. because you need to change just C(user.email) in /etc/.git/config).  Solutions involving M(command) are cumbersone or don't work correctly in check mode.",
            "properties": {
              "repo": {
                "type": "string"
              },
              "scope": {
                "type": "string"
              },
              "list_all": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "rax_identity": {
            "type": "object",
            "description": "Verifies Rackspace Cloud credentials and returns identity information",
            "properties": {
              "state": {
                "type": "string"
              }
            }
          },
          "nxos_vxlan_vtep": {
            "required": [
              "interface"
            ],
            "type": "object",
            "description": "Manages VXLAN Network Virtualization Endpoint (NVE) overlay interface that terminates VXLAN tunnels.",
            "properties": {
              "description": {
                "type": "string"
              },
              "host_reachability": {
                "type": "string"
              },
              "source_interface_hold_down_time": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "shutdown": {
                "type": "string"
              },
              "source_interface": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              }
            }
          },
          "cs_vmsnapshot": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "display_name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "display_name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, remove and revert VM from snapshots.",
            "properties": {
              "snapshot_memory": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "cs_portforward": {
            "required": [
              "private_port",
              "ip_address",
              "public_port"
            ],
            "type": "object",
            "description": "Create, update and remove port forwarding rules.",
            "properties": {
              "vm_guest_ip": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "open_firewall": {
                "type": "string"
              },
              "public_port": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "public_end_port": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "private_port": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vpc": {
                "type": "string"
              },
              "private_end_port": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "iam_policy": {
            "required": [
              "state",
              "iam_name",
              "iam_type",
              "policy_name"
            ],
            "type": "object",
            "description": "Allows uploading or removing IAM policies for IAM users, groups or roles.",
            "properties": {
              "policy_document": {
                "type": "string"
              },
              "iam_name": {
                "type": "string"
              },
              "iam_type": {
                "type": "string"
              },
              "policy_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "policy_json": {
                "type": "string"
              },
              "skip_duplicates": {
                "type": "string"
              }
            }
          },
          "win_reboot": {
            "type": "object",
            "description": "Reboot a Windows machine, wait for it to go down, come back up, and respond to commands.",
            "properties": {
              "reboot_timeout_sec": {
                "type": "string"
              },
              "pre_reboot_delay_sec": {
                "type": "string"
              },
              "shutdown_timeout_sec": {
                "type": "string"
              },
              "test_command": {
                "type": "string"
              },
              "connect_timeout_sec": {
                "type": "string"
              }
            }
          },
          "rax_files_objects": {
            "required": [
              "container"
            ],
            "type": "object",
            "description": "Upload, download, and delete objects in Rackspace Cloud Files",
            "properties": {
              "src": {
                "type": "string"
              },
              "container": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "expires": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "clear_meta": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "structure": {
                "type": "string"
              }
            }
          },
          "elasticache_parameter_group": {
            "required": [
              "group_family",
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manage cache security groups in Amazon Elasticache.\nReturns information about the specified cache cluster.",
            "properties": {
              "group_family": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "values": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "quantum_router_interface": {
            "required": [
              "login_tenant_name",
              "login_password",
              "login_username",
              "subnet_name",
              "router_name"
            ],
            "type": "object",
            "description": "Attach/Detach a subnet interface to a router, to provide a gateway for the subnet.",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "tenant_name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "subnet_name": {
                "type": "string"
              },
              "router_name": {
                "type": "string"
              }
            }
          },
          "jenkins_plugin": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Ansible module which helps to manage Jenkins plugins.",
            "properties": {
              "jenkins_home": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "updates_url": {
                "type": "string"
              },
              "with_dependencies": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "updates_expiration": {
                "type": "string"
              }
            }
          },
          "win_acl": {
            "required": [
              "user",
              "rights",
              "path",
              "type"
            ],
            "type": "object",
            "description": "Add or remove rights/permissions for a given user or group for the specified src file or folder.",
            "properties": {
              "rights": {
                "type": "string"
              },
              "inherit": {
                "type": "string"
              },
              "propagation": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "ovirt_groups": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "authz_name",
                        "domain"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "authz_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "domain"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage groups in oVirt",
            "properties": {
              "namespace": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "authz_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "supervisorctl": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manage the state of a program or group of programs running via supervisord",
            "properties": {
              "username": {
                "type": "string"
              },
              "supervisorctl_path": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "config": {
                "type": "string"
              }
            }
          },
          "infini_vol": {
            "required": [
              "name",
              "pool"
            ],
            "type": "object",
            "description": "This module creates, deletes or modifies volume on Infinibox.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "rax_cbs_attachments": {
            "required": [
              "volume",
              "state",
              "device",
              "server"
            ],
            "type": "object",
            "description": "Manipulate Rackspace Cloud Block Storage Volume Attachments",
            "properties": {
              "server": {
                "type": "string"
              },
              "volume": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "device": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "mysql_user": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Adds or removes a user from a MySQL database.",
            "properties": {
              "update_password": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "encrypted": {
                "type": "string"
              },
              "append_privs": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "host_all": {
                "type": "string"
              },
              "sql_log_bin": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "check_implicit_admin": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "priv": {
                "type": "string"
              }
            }
          },
          "ec2_group": {
            "required": [
              "name",
              "description"
            ],
            "type": "object",
            "description": "maintains ec2 security groups. This module has a dependency on python-boto >= 2.5",
            "properties": {
              "rules_egress": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "purge_rules": {
                "type": "string"
              },
              "rules": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "purge_rules_egress": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "cnos_portchannel": {
            "required": [
              "interfaceRange",
              "interfaceArg1"
            ],
            "type": "object",
            "description": "This module allows you to work with port aggregation related configurations. The operators used are overloaded to ensure control over switch port aggregation configurations. Apart from the regular device connection related attributes, there are five LAG arguments which are overloaded variables that will perform further configurations. They are interfaceArg1, interfaceArg2, interfaceArg3, interfaceArg4, and interfaceArg5. For more details on how to use these arguments, see [Overloaded Variables]. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_portchannel.html)",
            "properties": {
              "interfaceRange": {
                "type": "string"
              },
              "interfaceArg4": {
                "type": "string"
              },
              "interfaceArg5": {
                "type": "string"
              },
              "interfaceArg6": {
                "type": "string"
              },
              "interfaceArg7": {
                "type": "string"
              },
              "interfaceArg1": {
                "type": "string"
              },
              "interfaceArg2": {
                "type": "string"
              },
              "interfaceArg3": {
                "type": "string"
              }
            }
          },
          "cnos_rollback": {
            "required": [
              "serverpassword",
              "configType",
              "protocol",
              "serverusername",
              "rcserverip",
              "rcpath"
            ],
            "type": "object",
            "description": "This module allows you to work with switch configurations. It provides a way to roll back configurations of a switch from a remote server. This is achieved by using startup or running configurations of the target device that were previously backed up to a remote server using FTP, SFTP, TFTP, or SCP. The first step is to create a directory from where the remote server can be reached. The next step is to provide the full file path of the backup configuration’s location. Authentication details required by the remote server must be provided as well. By default, this method overwrites the switch’s configuration file with the newly downloaded file. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_rollback.html)",
            "properties": {
              "serverpassword": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "configType": {
                "type": "string"
              },
              "serverusername": {
                "type": "string"
              },
              "rcserverip": {
                "type": "string"
              },
              "rcpath": {
                "type": "string"
              }
            }
          },
          "os_group": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage OpenStack Identity Groups. Groups can be created, deleted or updated. Only the I(description) value can be updated.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "glance_image": {
            "required": [
              "login_password",
              "login_username",
              "name",
              "login_tenant_name"
            ],
            "type": "object",
            "description": "Add or Remove images from the glance repository.",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "container_format": {
                "type": "string"
              },
              "min_ram": {
                "type": "string"
              },
              "disk_format": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "copy_from": {
                "type": "string"
              },
              "min_disk": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "endpoint_type": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "file": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "is_public": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "consul_session": {
            "type": "object",
            "description": "allows the addition, modification and deletion of sessions in a consul cluster. These sessions can then be used in conjunction with key value pairs to implement distributed locks. In depth documentation for working with sessions can be found here http://www.consul.io/docs/internals/sessions.html",
            "properties": {
              "node": {
                "type": "string"
              },
              "datacenter": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "delay": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "behavior": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "checks": {
                "type": "string"
              }
            }
          },
          "ec2_group_facts": {
            "type": "object",
            "description": "Gather facts about ec2 security groups in AWS.",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "parted": {
            "required": [
              "device"
            ],
            "type": "object",
            "description": "This module allows configuring block device partition using the C(parted) command line tool. For a full description of the fields and the options check the GNU parted manual.",
            "properties": {
              "part_start": {
                "type": "string"
              },
              "part_end": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "align": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "part_type": {
                "type": "string"
              },
              "flags": {
                "type": "string"
              },
              "device": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              }
            }
          },
          "ec2_win_password": {
            "required": [
              "instance_id",
              "key_file"
            ],
            "type": "object",
            "description": "Gets the default administrator password from any EC2 Windows instance.  The instance is referenced by its id (e.g. i-XXXXXXX). This module has a dependency on python-boto.",
            "properties": {
              "instance_id": {
                "type": "string"
              },
              "key_file": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "key_passphrase": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_vgw": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "resource_tags"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates AWS VPN Virtual Gateways\nDeletes AWS VPN Virtual Gateways\nAttaches Virtual Gateways to VPCs\nDetaches Virtual Gateways from VPCs",
            "properties": {
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "resource_tags": {
                "type": "string"
              },
              "vpn_gateway_id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "win_domain_controller": {
            "required": [
              "domain_admin_user",
              "domain_admin_password"
            ],
            "type": "object",
            "description": "Ensure that a Windows Server 2012+ host is configured as a domain controller or demoted to member server. This module may require subsequent use of the M(win_reboot) action if changes are made.",
            "properties": {
              "domain_admin_user": {
                "type": "string"
              },
              "dns_domain_name": {
                "type": "string"
              },
              "safe_mode_password": {
                "type": "string"
              },
              "domain_admin_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "local_admin_password": {
                "type": "string"
              }
            }
          },
          "vmware_maintenancemode": {
            "required": [
              "esxi_hostname"
            ],
            "type": "object",
            "description": "Place an ESXI host into maintenance mode\nSupport for VSAN compliant maintenance mode when selected",
            "properties": {
              "state": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "evacuate": {
                "type": "string"
              },
              "esxi_hostname": {
                "type": "string"
              },
              "vsan_mode": {
                "type": "string"
              }
            }
          },
          "jenkins_job": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage Jenkins jobs by using Jenkins REST API.",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "config": {
                "type": "string"
              }
            }
          },
          "netapp_e_storage_system": {
            "required": [
              "ssid",
              "api_password",
              "api_username",
              "state",
              "api_url",
              "controller_addresses"
            ],
            "type": "object",
            "description": "Manage the arrays accessible via a NetApp Web Services Proxy for NetApp E-series storage arrays.",
            "properties": {
              "meta_tags": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "array_wwn": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "controller_addresses": {
                "type": "string"
              },
              "enable_trace": {
                "type": "string"
              },
              "array_password": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              }
            }
          },
          "cron": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "job",
                        "value"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "day",
                        "dom"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "weekday",
                        "dow"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Use this module to manage crontab and environment variables entries. This module allows you to create environment variables and named crontab entries, update, or delete them.\nWhen crontab jobs are managed: the module includes one line with the description of the crontab entry C(\"#Ansible: <name>\") corresponding to the \"name\" passed to the module, which is used by future ansible/module calls to find/check the state. The \"name\" parameter should be unique, and changing the \"name\" value will result in a new cron task being created (or a different one being removed).\nWhen environment variables are managed: no comment line is added, but, when the module needs to find/check the state, it uses the \"name\" parameter to find the environment variable definition line.\nWhen using symbols such as %, they must be properly escaped.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "insertbefore": {
                "type": "string"
              },
              "dom": {
                "type": "string"
              },
              "hour": {
                "type": "string"
              },
              "dow": {
                "type": "string"
              },
              "cron_file": {
                "type": "string"
              },
              "reboot": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "month": {
                "type": "string"
              },
              "disabled": {
                "type": "string"
              },
              "job": {
                "type": "string"
              },
              "special_time": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "env": {
                "type": "string"
              },
              "insertafter": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "day": {
                "type": "string"
              },
              "minute": {
                "type": "string"
              },
              "weekday": {
                "type": "string"
              }
            }
          },
          "lvol": {
            "required": [
              "vg",
              "lv"
            ],
            "type": "object",
            "description": "This module creates, removes or resizes logical volumes.",
            "properties": {
              "pvs": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "vg": {
                "type": "string"
              },
              "lv": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "snapshot": {
                "type": "string"
              },
              "active": {
                "type": "string"
              },
              "shrink": {
                "type": "string"
              },
              "opts": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "ios_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from a remote device that is running IOS.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "s3_website": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Configure an s3 bucket as a website",
            "properties": {
              "redirect_all_requests": {
                "type": "string"
              },
              "suffix": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "error_key": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_peer": {
            "type": "object",
            "description": "Read the AWS documentation for VPC Peering Connections U(http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-peering.html)",
            "properties": {
              "peering_id": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "peer_owner_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "peer_vpc_id": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_subnet_facts": {
            "type": "object",
            "description": "Gather facts about ec2 VPC subnets in AWS",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "sf_snapshot_schedule_manager": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "Create, destroy, or update accounts on SolidFire",
            "properties": {
              "time_interval_days": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "time_interval_minutes": {
                "type": "string"
              },
              "schedule_id": {
                "type": "string"
              },
              "time_interval_hours": {
                "type": "string"
              },
              "paused": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "snapshot_name": {
                "type": "string"
              },
              "volumes": {
                "type": "string"
              },
              "starting_date": {
                "type": "string"
              },
              "recurring": {
                "type": "string"
              },
              "retention": {
                "type": "string"
              }
            }
          },
          "ovirt_storage_domains_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt storage domains.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "airbrake_deployment": {
            "required": [
              "environment",
              "token"
            ],
            "type": "object",
            "description": "Notify airbrake about app deployments (see http://help.airbrake.io/kb/api-2/deploy-tracking)",
            "properties": {
              "environment": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "pacemaker_cluster": {
            "required": [
              "state"
            ],
            "type": "object",
            "description": "This module can manage a pacemaker cluster and nodes from Ansible using the pacemaker cli.",
            "properties": {
              "node": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "digital_ocean_block_storage": {
            "required": [
              "region",
              "volume_name",
              "state",
              "command",
              "api_token"
            ],
            "type": "object",
            "description": "Create/destroy Block Storage volume in DigitalOcean, or attach/detach Block Storage volume to a droplet.",
            "properties": {
              "droplet_id": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "api_token": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "volume_name": {
                "type": "string"
              },
              "block_size": {
                "type": "string"
              }
            }
          },
          "nxos_switchport": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "trunk_vlans",
                        "trunk_add_vlans"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages Layer 2 interfaces",
            "properties": {
              "native_vlan": {
                "type": "string"
              },
              "access_vlan": {
                "type": "string"
              },
              "trunk_vlans": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "trunk_allowed_vlans": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "trunk_add_vlans": {
                "type": "string"
              }
            }
          },
          "iso_extract": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "image",
                        "path",
                        "src"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "image"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "src"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module mounts an iso image in a temporary directory and extracts files from there to a given destination.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "files": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "os_server_facts": {
            "type": "object",
            "description": "Retrieve facts about server instances from OpenStack.",
            "properties": {
              "detailed": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "server": {
                "type": "string"
              }
            }
          },
          "ovirt_vmpools_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt vmpools.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "ec2_vpc": {
            "required": [
              "state",
              "resource_tags"
            ],
            "type": "object",
            "description": "Create or terminates AWS virtual private clouds.  This module has a dependency on python-boto.",
            "properties": {
              "subnets": {
                "type": "string"
              },
              "route_tables": {
                "type": "string"
              },
              "dns_support": {
                "type": "string"
              },
              "internet_gateway": {
                "type": "string"
              },
              "instance_tenancy": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "dns_hostnames": {
                "type": "string"
              },
              "resource_tags": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "cidr_block": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "jboss": {
            "required": [
              "deployment"
            ],
            "type": "object",
            "description": "Deploy applications to JBoss standalone using the filesystem",
            "properties": {
              "src": {
                "type": "string"
              },
              "deploy_path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "deployment": {
                "type": "string"
              }
            }
          },
          "ovirt_host_pm": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "host"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "host"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "encrypt_options",
                        "encrypt"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage power management of hosts in oVirt.",
            "properties": {
              "username": {
                "type": "string"
              },
              "slot": {
                "type": "string"
              },
              "encrypt_options": {
                "type": "string"
              },
              "encrypt": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "options": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "order": {
                "type": "string"
              }
            }
          },
          "avi_systemconfiguration": {
            "type": "object",
            "description": "This module is used to configure SystemConfiguration object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "email_configuration": {
                "type": "string"
              },
              "docker_mode": {
                "type": "string"
              },
              "snmp_configuration": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "dns_configuration": {
                "type": "string"
              },
              "proxy_configuration": {
                "type": "string"
              },
              "tech_support_uploader_configuration": {
                "type": "string"
              },
              "ssh_hmacs": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "global_tenant_config": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "linux_configuration": {
                "type": "string"
              },
              "portal_configuration": {
                "type": "string"
              },
              "dns_virtualservice_refs": {
                "type": "string"
              },
              "admin_auth_configuration": {
                "type": "string"
              },
              "mgmt_ip_access_control": {
                "type": "string"
              },
              "ssh_ciphers": {
                "type": "string"
              },
              "ntp_configuration": {
                "type": "string"
              }
            }
          },
          "yum_repository": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove YUM repositories in RPM-based Linux distributions.",
            "properties": {
              "ip_resolve": {
                "type": "string"
              },
              "reposdir": {
                "type": "string"
              },
              "proxy_password": {
                "type": "string"
              },
              "bandwidth": {
                "type": "string"
              },
              "cost": {
                "type": "string"
              },
              "file": {
                "type": "string"
              },
              "mirrorlist_expire": {
                "type": "string"
              },
              "exclude": {
                "type": "array"
              },
              "keepalive": {
                "type": "string"
              },
              "repo_gpgcheck": {
                "type": "string"
              },
              "sslverify": {
                "type": "string"
              },
              "failovermethod": {
                "type": "string"
              },
              "deltarpm_metadata_percentage": {
                "type": "string"
              },
              "gpgkey": {
                "type": "string"
              },
              "http_caching": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "mirrorlist": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "gpgcheck": {
                "type": "string"
              },
              "include": {
                "type": "string"
              },
              "sslcacert": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "metadata_expire": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "ui_repoid_vars": {
                "type": "string"
              },
              "sslclientcert": {
                "type": "string"
              },
              "baseurl": {
                "type": "string"
              },
              "gpgcakey": {
                "type": "string"
              },
              "s3_enabled": {
                "type": "string"
              },
              "includepkgs": {
                "type": "array"
              },
              "async": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "retries": {
                "type": "string"
              },
              "protect": {
                "type": "string"
              },
              "ssl_check_cert_permissions": {
                "type": "string"
              },
              "throttle": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "deltarpm_percentage": {
                "type": "string"
              },
              "sslclientkey": {
                "type": "string"
              },
              "metalink": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "skip_if_unavailable": {
                "type": "string"
              },
              "keepcache": {
                "type": "string"
              },
              "proxy_username": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "enablegroups": {
                "type": "string"
              },
              "metadata_expire_filter": {
                "type": "string"
              },
              "proxy": {
                "type": "string"
              }
            }
          },
          "template": {
            "required": [
              "dest",
              "src"
            ],
            "type": "object",
            "description": "Templates are processed by the Jinja2 templating language (U(http://jinja.pocoo.org/docs/)) - documentation on the template formatting can be found in the Template Designer Documentation (U(http://jinja.pocoo.org/docs/templates/)).\nSix additional variables can be used in templates: C(ansible_managed) (configurable via the C(defaults) section of C(ansible.cfg)) contains a string which can be used to describe the template name, host, modification time of the template file and the owner uid, C(template_host) contains the node name of the template's machine, C(template_uid) the owner, C(template_path) the absolute path of the template, C(template_fullpath) is the absolute path of the template, and C(template_run_date) is the date that the template was rendered. Note that including a string that uses a date in the template will result in the template being marked 'changed' each time.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "tower_inventory": {
            "required": [
              "name",
              "organization"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower inventories. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "name": {
                "type": "string"
              },
              "variables": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "cl_license": {
            "required": [
              "src"
            ],
            "type": "object",
            "description": "Installs a Cumulus Linux license. The module reports no change of status when a license is installed. For more details go the Cumulus Linux License Documentation at U(http://docs.cumulusnetwork.com) and the Licensing KB Site at U(https://support.cumulusnetworks.com/hc/en-us/sections/200507688)",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              }
            }
          },
          "aos_template": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Template module let you manage your Template easily. You can create create and delete Template by Name, ID or by using a JSON File. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "ec2_ami_find": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "region",
                        "aws_region",
                        "ec2_region"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "aws_region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ec2_region"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Returns list of matching AMIs with AMI ID, along with other useful information\nCan search AMIs with different owners\nCan search by matching tag(s), by AMI name and/or other criteria\nResults can be sorted and sliced",
            "properties": {
              "sort": {
                "type": "string"
              },
              "no_result_action": {
                "type": "string"
              },
              "sort_end": {
                "type": "string"
              },
              "ami_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "platform": {
                "type": "string"
              },
              "hypervisor": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "aws_region": {
                "type": "string"
              },
              "sort_start": {
                "type": "string"
              },
              "virtualization_type": {
                "type": "string"
              },
              "ami_tags": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "sort_order": {
                "type": "string"
              },
              "architecture": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "is_public": {
                "type": "string"
              },
              "sort_tag": {
                "type": "string"
              },
              "ec2_region": {
                "type": "string"
              }
            }
          },
          "cs_cluster": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update and remove clusters.",
            "properties": {
              "username": {
                "type": "string"
              },
              "guest_vswitch_type": {
                "type": "string"
              },
              "ovm3_cluster": {
                "type": "string"
              },
              "ovm3_pool": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "vms_username": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "hypervisor": {
                "type": "string"
              },
              "ovm3_vip": {
                "type": "string"
              },
              "vms_ip_address": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "public_vswitch_name": {
                "type": "string"
              },
              "cluster_type": {
                "type": "string"
              },
              "public_vswitch_type": {
                "type": "string"
              },
              "pod": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "vms_password": {
                "type": "string"
              },
              "guest_vswitch_name": {
                "type": "string"
              }
            }
          },
          "nxos_snmp_community": {
            "required": [
              "state",
              "community"
            ],
            "type": "object",
            "description": "Manages SNMP community configuration.",
            "properties": {
              "access": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "community": {
                "type": "string"
              },
              "acl": {
                "type": "string"
              }
            }
          },
          "ovirt_tags": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module manage tags in oVirt. It can also manage assignments of those tags to entities.",
            "properties": {
              "description": {
                "type": "string"
              },
              "parent": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hosts": {
                "type": "array"
              },
              "vms": {
                "type": "array"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_ami_search": {
            "required": [
              "release",
              "distro"
            ],
            "type": "object",
            "description": "Look up the most recent AMI on AWS for a given operating system.\nReturns C(ami), C(aki), C(ari), C(serial), C(tag)\nIf there is no AKI or ARI associated with an image, these will be C(null).\nOnly supports images from cloud-images.ubuntu.com\nExample output: C({\"ami\": \"ami-69f5a900\", \"changed\": false, \"aki\": \"aki-88aa75e1\", \"tag\": \"release\", \"ari\": null, \"serial\": \"20131024\"})",
            "properties": {
              "stream": {
                "type": "string"
              },
              "virt": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "release": {
                "type": "string"
              },
              "arch": {
                "type": "string"
              },
              "store": {
                "type": "string"
              },
              "distro": {
                "type": "string"
              }
            }
          },
          "sl_vm": {
            "required": [
              "disks",
              "cpus",
              "memory"
            ],
            "type": "object",
            "description": "Creates or cancels SoftLayer instances. When created, optionally waits for it to be 'running'.",
            "properties": {
              "domain": {
                "type": "string"
              },
              "cpus": {
                "type": "string"
              },
              "dedicated": {
                "type": "string"
              },
              "private_vlan": {
                "type": "string"
              },
              "hourly": {
                "type": "string"
              },
              "ssh_keys": {
                "type": "array"
              },
              "hostname": {
                "type": "string"
              },
              "os_code": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "post_uri": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "image_id": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "private": {
                "type": "string"
              },
              "public_vlan": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "datacenter": {
                "type": "string"
              },
              "disks": {
                "type": "array"
              },
              "instance_id": {
                "type": "string"
              },
              "local_disk": {
                "type": "string"
              },
              "nic_speed": {
                "type": "string"
              }
            }
          },
          "na_cdot_qtree": {
            "required": [
              "vserver",
              "state",
              "name"
            ],
            "type": "object",
            "description": "Create or destroy Qtrees.",
            "properties": {
              "vserver": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "flexvol_name": {
                "type": "string"
              }
            }
          },
          "rds_param_group": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Creates, modifies, and deletes RDS parameter groups. This module has a dependency on python-boto >= 2.5.",
            "properties": {
              "engine": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "immediate": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "xenserver_facts": {
            "type": "object",
            "description": "Reads data out of XenAPI, can be used instead of multiple xe commands.",
            "properties": {}
          },
          "elasticache_subnet_group": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Creates, modifies, and deletes Elasticache subnet groups. This module has a dependency on python-boto >= 2.5.",
            "properties": {
              "subnets": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "logstash_plugin": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages Logstash plugins.",
            "properties": {
              "name": {
                "type": "string"
              },
              "proxy_host": {
                "type": "string"
              },
              "proxy_port": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "plugin_bin": {
                "type": "string"
              }
            }
          },
          "iosxr_template": {
            "type": "object",
            "description": "Manages network device configurations over SSH.  This module allows implementers to work with the device running-config.  It provides a way to push a set of commands onto a network device by evaluating the current running-config and only pushing configuration commands that are not already configured.  The config source can be a set of commands or a template.",
            "properties": {
              "src": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "gce_instance_template": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Creates or destroy Google instance templates of Compute Engine of Google Cloud Platform.",
            "properties": {
              "automatic_restart": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "service_account_permissions": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "nic_gce_struct": {
                "type": "string"
              },
              "disk_auto_delete": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "preemptible": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "image_family": {
                "type": "string"
              },
              "can_ip_forward": {
                "type": "string"
              },
              "disk_type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "external_ip": {
                "type": "string"
              },
              "disks": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "subnetwork": {
                "type": "string"
              }
            }
          },
          "vmware_host": {
            "required": [
              "cluster_name",
              "datacenter_name",
              "esxi_hostname",
              "esxi_password",
              "esxi_username"
            ],
            "type": "object",
            "description": "This module can be used to add/remove an ESXi host to/from vCenter",
            "properties": {
              "datacenter_name": {
                "type": "string"
              },
              "esxi_hostname": {
                "type": "string"
              },
              "esxi_username": {
                "type": "string"
              },
              "cluster_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "esxi_password": {
                "type": "string"
              }
            }
          },
          "openvswitch_db": {
            "required": [
              "record",
              "key",
              "column",
              "table",
              "value"
            ],
            "type": "object",
            "description": "Set column values in record in database table.",
            "properties": {
              "timeout": {
                "type": "string"
              },
              "column": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "record": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "table": {
                "type": "string"
              }
            }
          },
          "webfaction_domain": {
            "required": [
              "login_name",
              "name",
              "login_password"
            ],
            "type": "object",
            "description": "Add or remove domains or subdomains on a Webfaction host. Further documentation at http://github.com/quentinsf/ansible-webfaction.",
            "properties": {
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "subdomains": {
                "type": "string"
              }
            }
          },
          "aix_inittab": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "service"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "service"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages the inittab on AIX.",
            "properties": {
              "name": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "insertafter": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "runlevel": {
                "type": "string"
              },
              "action": {
                "type": "string"
              }
            }
          },
          "rds": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_secret_key",
                        "ec2_secret_key",
                        "secret_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "zone",
                        "aws_zone",
                        "ec2_zone"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_access_key",
                        "ec2_access_key",
                        "access_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "region",
                        "aws_region",
                        "ec2_region"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "aws_region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ec2_region"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates, deletes, or modifies rds instances.  When creating an instance it can be either a new instance or a read-only replica of an existing instance. This module has a dependency on python-boto >= 2.5. The 'promote' command requires boto >= 2.18.0. Certain features such as tags rely on boto.rds2 (boto >= 2.26.0)",
            "properties": {
              "db_engine": {
                "type": "string"
              },
              "force_failover": {
                "type": "string"
              },
              "iops": {
                "type": "string"
              },
              "backup_window": {
                "type": "string"
              },
              "backup_retention": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "security_groups": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "aws_secret_key": {
                "type": "string"
              },
              "subnet": {
                "type": "string"
              },
              "vpc_security_groups": {
                "type": "string"
              },
              "upgrade": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "source_instance": {
                "type": "string"
              },
              "parameter_group": {
                "type": "string"
              },
              "snapshot": {
                "type": "string"
              },
              "multi_zone": {
                "type": "string"
              },
              "new_instance_name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "access_key": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "aws_region": {
                "type": "string"
              },
              "db_name": {
                "type": "string"
              },
              "license_model": {
                "type": "string"
              },
              "ec2_access_key": {
                "type": "string"
              },
              "ec2_secret_key": {
                "type": "string"
              },
              "apply_immediately": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "aws_zone": {
                "type": "string"
              },
              "aws_access_key": {
                "type": "string"
              },
              "ec2_region": {
                "type": "string"
              },
              "character_set_name": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "option_group": {
                "type": "string"
              },
              "engine_version": {
                "type": "string"
              },
              "ec2_zone": {
                "type": "string"
              },
              "instance_name": {
                "type": "string"
              },
              "instance_type": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "publicly_accessible": {
                "type": "string"
              },
              "secret_key": {
                "type": "string"
              },
              "maint_window": {
                "type": "string"
              }
            }
          },
          "tower_credential": {
            "required": [
              "kind",
              "name"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower credentials. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "authorize": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "vault_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "become_username": {
                "type": "string"
              },
              "become_method": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "secret": {
                "type": "string"
              },
              "ssh_key_unlock": {
                "type": "string"
              },
              "authorize_password": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "become_password": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "tenant": {
                "type": "string"
              },
              "subscription": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "client": {
                "type": "string"
              },
              "ssh_key_data": {
                "type": "string"
              },
              "team": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              }
            }
          },
          "wakeonlan": {
            "required": [
              "mac"
            ],
            "type": "object",
            "description": "The M(wakeonlan) module sends magic Wake-on-LAN (WoL) broadcast packets.",
            "properties": {
              "broadcast": {
                "type": "string"
              },
              "mac": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "ops_facts": {
            "type": "object",
            "description": "Collects facts from devices running the OpenSwitch operating system.  Fact collection is supported over both Cli and Rest transports.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.\nThe facts collected from pre Ansible 2.2 are still available and are collected for backwards compatibility; however, these facts should be considered deprecated and will be removed in a future release.",
            "properties": {
              "gather_subset": {
                "type": "string"
              },
              "endpoints": {
                "type": "string"
              },
              "config": {
                "type": "string"
              }
            }
          },
          "consul_kv": {
            "required": [
              "value",
              "key"
            ],
            "type": "object",
            "description": "Allows the addition, modification and deletion of key/value entries in a consul cluster via the agent. The entire contents of the record, including the indices, flags and session are returned as 'value'.\nIf the key represents a prefix then Note that when a value is removed, the existing value if any is returned as part of the results.\nSee http://www.consul.io/docs/agent/http.html#kv for more details.",
            "properties": {
              "cas": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "flags": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "ipa_role": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cn",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "cn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify and delete a role within FreeIPA server using FreeIPA API",
            "properties": {
              "ipa_port": {
                "type": "string"
              },
              "group": {
                "type": "array"
              },
              "description": {
                "type": "string"
              },
              "service": {
                "type": "array"
              },
              "user": {
                "type": "array"
              },
              "ipa_prot": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hostgroup": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "host": {
                "type": "array"
              },
              "ipa_host": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "ipa_pass": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "cn": {
                "type": "string"
              }
            }
          },
          "ejabberd_user": {
            "required": [
              "username",
              "host"
            ],
            "type": "object",
            "description": "This module provides user management for ejabberd servers",
            "properties": {
              "username": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "logging": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "sros_rollback": {
            "type": "object",
            "description": "Configure the rollback feature on remote Nokia devices running the SR OS operating system.  this module provides a stateful implementation for managing the configuration of the rollback feature",
            "properties": {
              "state": {
                "type": "string"
              },
              "local_max_checkpoints": {
                "type": "string"
              },
              "rescue_location": {
                "type": "string"
              },
              "remote_max_checkpoints": {
                "type": "string"
              },
              "rollback_location": {
                "type": "string"
              }
            }
          },
          "ecs_service_facts": {
            "type": "object",
            "description": "Lists or describes services in ecs.",
            "properties": {
              "cluster": {
                "type": "string"
              },
              "details": {
                "type": "string"
              },
              "service": {
                "type": "string"
              }
            }
          },
          "hpilo_boot": {
            "required": [
              "host"
            ],
            "type": "object",
            "description": "This module boots a system through its HP iLO interface. The boot media can be one of: cdrom, floppy, hdd, network or usb.\nThis module requires the hpilo python module.",
            "properties": {
              "force": {
                "type": "string"
              },
              "media": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "login": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "webfaction_mailbox": {
            "required": [
              "mailbox_password",
              "login_name",
              "mailbox_name",
              "login_password"
            ],
            "type": "object",
            "description": "Add or remove mailboxes on a Webfaction account. Further documentation at http://github.com/quentinsf/ansible-webfaction.",
            "properties": {
              "mailbox_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_name": {
                "type": "string"
              },
              "mailbox_name": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              }
            }
          },
          "nxos_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends an arbitrary command to an NXOS node and returns the results read from the device.  This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "waitfor": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "string"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "sf_account_manager": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "Create, destroy, or update accounts on SolidFire",
            "properties": {
              "new_name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "initiator_secret": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "attributes": {
                "type": "array"
              },
              "target_secret": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "sns_topic": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "The C(sns_topic) module allows you to create, delete, and manage subscriptions for AWS SNS topics.",
            "properties": {
              "display_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "subscriptions": {
                "type": "array"
              },
              "delivery_policy": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "purge_subscriptions": {
                "type": "string"
              }
            }
          },
          "bigip_gtm_datacenter": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage BIG-IP data center configuration. A data center defines the location where the physical network components reside, such as the server and link objects that share the same subnet on the network. This module is able to manipulate the data center definitions in a BIG-IP",
            "properties": {
              "description": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "contact": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "win_iis_website": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Creates, Removes and configures a IIS Web site",
            "properties": {
              "hostname": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parameters": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "physical_path": {
                "type": "string"
              },
              "application_pool": {
                "type": "string"
              },
              "site_id": {
                "type": "string"
              },
              "ssl": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "win_dotnet_ngen": {
            "type": "object",
            "description": "After .NET framework is installed/updated, Windows will probably want to recompile things to optimise for the host.\nThis happens via scheduled task, usually at some inopportune time.\nThis module allows you to run this task on your own schedule, so you incur the CPU hit at some more convenient and controlled time.\nhttp://blogs.msdn.com/b/dotnet/archive/2013/08/06/wondering-why-mscorsvw-exe-has-high-cpu-usage-you-can-speed-it-up.aspx",
            "properties": {}
          },
          "apt": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg",
                        "package"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "autoremove",
                        "autoclean"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages I(apt) packages (such as for Debian/Ubuntu).",
            "properties": {
              "dpkg_options": {
                "type": "string"
              },
              "upgrade": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "install_recommends": {
                "type": "string"
              },
              "package": {
                "type": "string"
              },
              "autoclean": {
                "type": "string"
              },
              "purge": {
                "type": "string"
              },
              "allow_unauthenticated": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "autoremove": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "default_release": {
                "type": "string"
              },
              "only_upgrade": {
                "type": "string"
              },
              "deb": {
                "type": "string"
              },
              "cache_valid_time": {
                "type": "string"
              }
            }
          },
          "os_user_facts": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Retrieve facts about a one or more OpenStack users",
            "properties": {
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              }
            }
          },
          "apk": {
            "type": "object",
            "description": "Manages I(apk) packages for Alpine Linux.",
            "properties": {
              "state": {
                "type": "string"
              },
              "upgrade": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "panos_cert_gen_ssh": {
            "required": [
              "password",
              "cert_cn",
              "cert_friendly_name",
              "key_filename",
              "ip_address",
              "signed_by"
            ],
            "type": "object",
            "description": "This module generates a self-signed certificate that can be used by GlobalProtect client, SSL connector, or\notherwise. Root certificate must be preset on the system first. This module depends on paramiko for ssh.",
            "properties": {
              "cert_friendly_name": {
                "type": "string"
              },
              "key_filename": {
                "type": "string"
              },
              "rsa_nbits": {
                "type": "string"
              },
              "cert_cn": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "signed_by": {
                "type": "string"
              }
            }
          },
          "win_iis_webapplication": {
            "required": [
              "name",
              "site"
            ],
            "type": "object",
            "description": "Creates, Removes and configures a IIS Web applications",
            "properties": {
              "state": {
                "type": "string"
              },
              "application_pool": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "physical_path": {
                "type": "string"
              },
              "site": {
                "type": "string"
              }
            }
          },
          "composer": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "no_scripts",
                        "no-scripts"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "prefer_source",
                        "prefer-source"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "prefer_dist",
                        "prefer-dist"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "working_dir",
                        "working-dir"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "working_dir"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "working-dir"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ignore_platform_reqs",
                        "ignore-platform-reqs"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "no_dev",
                        "no-dev"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "no_plugins",
                        "no-plugins"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "optimize_autoloader",
                        "optimize-autoloader"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Composer is a tool for dependency management in PHP. It allows you to declare the dependent libraries your project needs and it will install them in your project for you",
            "properties": {
              "prefer-source": {
                "type": "string"
              },
              "prefer-dist": {
                "type": "string"
              },
              "no-plugins": {
                "type": "string"
              },
              "no_scripts": {
                "type": "string"
              },
              "no_plugins": {
                "type": "string"
              },
              "optimize_autoloader": {
                "type": "string"
              },
              "working-dir": {
                "type": "string"
              },
              "optimize-autoloader": {
                "type": "string"
              },
              "working_dir": {
                "type": "string"
              },
              "ignore-platform-reqs": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "arguments": {
                "type": "string"
              },
              "no-dev": {
                "type": "string"
              },
              "ignore_platform_reqs": {
                "type": "string"
              },
              "no_dev": {
                "type": "string"
              },
              "no-scripts": {
                "type": "string"
              },
              "prefer_dist": {
                "type": "string"
              },
              "prefer_source": {
                "type": "string"
              }
            }
          },
          "nxos_mtu": {
            "type": "object",
            "description": "Manages MTU settings on Nexus switch.",
            "properties": {
              "interface": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "sysmtu": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              }
            }
          },
          "rpm_key": {
            "required": [
              "key"
            ],
            "type": "object",
            "description": "Adds or removes (rpm --import) a gpg key to your rpm database.",
            "properties": {
              "state": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "avi_applicationpersistenceprofile": {
            "required": [
              "persistence_type",
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure ApplicationPersistenceProfile object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "name": {
                "type": "string"
              },
              "app_cookie_persistence_profile": {
                "type": "string"
              },
              "persistence_type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "server_hm_down_recovery": {
                "type": "string"
              },
              "http_cookie_persistence_profile": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ip_persistence_profile": {
                "type": "string"
              },
              "hdr_persistence_profile": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            }
          },
          "hipchat": {
            "required": [
              "room",
              "token",
              "msg"
            ],
            "type": "object",
            "description": "Send a message to a Hipchat room, with options to control the formatting.",
            "properties": {
              "from": {
                "type": "string"
              },
              "room": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "msg_format": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "api": {
                "type": "string"
              },
              "notify": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "pubnub_blocks": {
            "required": [
              "name",
              "keyset",
              "application"
            ],
            "type": "object",
            "description": "This module allows Ansible to interface with the PubNub BLOCKS infrastructure by providing the following operations: create / remove, start / stop and rename for blocks and create / modify / remove for event handlers",
            "properties": {
              "name": {
                "type": "string"
              },
              "application": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "cache": {
                "type": "string"
              },
              "keyset": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "changes": {
                "type": "array"
              },
              "email": {
                "type": "string"
              },
              "event_handlers": {
                "type": "array"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "win_robocopy": {
            "required": [
              "dest",
              "src"
            ],
            "type": "object",
            "description": "Synchronizes the contents of two directories on the remote machine. Under the hood this just calls out to RoboCopy, since that should be available on most modern Windows Systems.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "purge": {
                "type": "string"
              },
              "flags": {
                "type": "string"
              }
            }
          },
          "dnf": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Installs, upgrade, removes, and lists packages and groups with the I(dnf) package manager.",
            "properties": {
              "name": {
                "type": "string"
              },
              "list": {
                "type": "string"
              },
              "disable_gpg_check": {
                "type": "string"
              },
              "conf_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "disablerepo": {
                "type": "string"
              },
              "enablerepo": {
                "type": "string"
              },
              "installroot": {
                "type": "string"
              }
            }
          },
          "win_nssm": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "nssm is a service helper which doesn't suck. See U(https://nssm.cc/) for more information.",
            "properties": {
              "name": {
                "type": "string"
              },
              "start_mode": {
                "type": "string"
              },
              "stderr_file": {
                "type": "string"
              },
              "app_parameters_free_form": {
                "type": "string"
              },
              "application": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "dependencies": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "stdout_file": {
                "type": "string"
              },
              "app_parameters": {
                "type": "string"
              }
            }
          },
          "bundler": {
            "type": "object",
            "description": "Manage installation and Gem version dependencies for Ruby using the Bundler gem",
            "properties": {
              "executable": {
                "type": "string"
              },
              "chdir": {
                "type": "string"
              },
              "gemfile": {
                "type": "string"
              },
              "deployment_mode": {
                "type": "string"
              },
              "user_install": {
                "type": "string"
              },
              "extra_args": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "clean": {
                "type": "string"
              },
              "binstub_directory": {
                "type": "string"
              },
              "exclude_groups": {
                "type": "string"
              },
              "local": {
                "type": "string"
              },
              "gem_path": {
                "type": "string"
              }
            }
          },
          "os_nova_host_aggregate": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, or delete OpenStack host aggregates. If a aggregate with the supplied name already exists, it will be updated with the new name, new availability zone, new metadata and new list of hosts.",
            "properties": {
              "state": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "hosts": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              }
            }
          },
          "udm_group": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module allows to manage user groups on a univention corporate server (UCS). It uses the python API of the UCS to create a new object or edit it.",
            "properties": {
              "description": {
                "type": "string"
              },
              "subpath": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "position": {
                "type": "string"
              },
              "ou": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "urpmi": {
            "required": [
              "pkg"
            ],
            "type": "object",
            "description": "Manages packages with I(urpmi) (such as for Mageia or Mandriva)",
            "properties": {
              "force": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "no-recommends": {
                "type": "string"
              }
            }
          },
          "os_flavor_facts": {
            "type": "object",
            "description": "Retrieve facts about available OpenStack instance flavors. By default, facts about ALL flavors are retrieved. Filters can be applied to get facts for only matching flavors. For example, you can filter on the amount of RAM available to the flavor, or the number of virtual CPUs available to the flavor, or both. When specifying multiple filters, *ALL* filters must match on a flavor before that flavor is returned as a fact.",
            "properties": {
              "name": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "ram": {
                "type": "string"
              },
              "ephemeral": {
                "type": "string"
              },
              "vcpus": {
                "type": "string"
              },
              "limit": {
                "type": "string"
              }
            }
          },
          "azure_rm_storageaccount_facts": {
            "type": "object",
            "description": "Get facts for one storage account or all storage accounts within a resource group.",
            "properties": {
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "nxos_ping": {
            "required": [
              "dest"
            ],
            "type": "object",
            "description": "Tests reachability using ping from switch to a remote destination.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "count": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              },
              "source": {
                "type": "string"
              }
            }
          },
          "docker_login": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "config_path",
                        "self.config_path",
                        "dockercfg_path"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "reauthorize",
                        "reauth"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "registry_url",
                        "registry",
                        "url"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Provides functionality similar to the \"docker login\" command.\nAuthenticate with a docker registry and add the credentials to your local Docker config file. Adding the credentials to the config files allows future connections to the registry using tools such as Ansible's Docker modules, the Docker CLI and docker-py without needing to provide credentials.\nRunning in check mode will perform the authentication without updating the config file.",
            "properties": {
              "username": {
                "type": "string"
              },
              "config_path": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "registry_url": {
                "type": "string"
              },
              "reauth": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "registry": {
                "type": "string"
              },
              "dockercfg_path": {
                "type": "string"
              },
              "self.config_path": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "reauthorize": {
                "type": "string"
              }
            }
          },
          "vmware_vm_facts": {
            "type": "object",
            "description": "Return basic facts pertaining to a vSphere virtual machine guest",
            "properties": {}
          },
          "proxysql_backend_servers": {
            "required": [
              "hostname"
            ],
            "type": "object",
            "description": "The M(proxysql_backend_servers) module adds or removes mysql hosts using the proxysql admin interface.",
            "properties": {
              "status": {
                "type": "string"
              },
              "comment": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "config_file": {
                "type": "string"
              },
              "compression": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "login_port": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "hostgroup_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "load_to_runtime": {
                "type": "string"
              },
              "save_to_disk": {
                "type": "string"
              },
              "use_ssl": {
                "type": "string"
              },
              "max_replication_lag": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "max_latency_ms": {
                "type": "string"
              },
              "max_connections": {
                "type": "string"
              }
            }
          },
          "gitlab_user": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "validate_certs",
                        "verify_ssl"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "When the user does not exists in Gitlab, it will be created.\nWhen the user does exists and state=absent, the user will be deleted.\nWhen changes are made to user, the user will be updated.",
            "properties": {
              "username": {
                "type": "string"
              },
              "verify_ssl": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "sshkey_file": {
                "type": "string"
              },
              "sshkey_name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_token": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "access_level": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          },
          "avi_pool": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure Pool object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "lb_algorithm": {
                "type": "string"
              },
              "use_service_port": {
                "type": "string"
              },
              "rewrite_host_header_to_server_name": {
                "type": "string"
              },
              "host_check_enabled": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "rewrite_host_header_to_sni": {
                "type": "string"
              },
              "capacity_estimation": {
                "type": "string"
              },
              "max_conn_rate_per_server": {
                "type": "string"
              },
              "servers": {
                "type": "string"
              },
              "fewest_tasks_feedback_delay": {
                "type": "string"
              },
              "server_auto_scale": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "capacity_estimation_ttfb_thresh": {
                "type": "string"
              },
              "ab_pool": {
                "type": "string"
              },
              "fail_action": {
                "type": "string"
              },
              "placement_networks": {
                "type": "string"
              },
              "networks": {
                "type": "string"
              },
              "lb_algorithm_hash": {
                "type": "string"
              },
              "sni_enabled": {
                "type": "string"
              },
              "server_name": {
                "type": "string"
              },
              "lb_algorithm_consistent_hash_hdr": {
                "type": "string"
              },
              "cloud_ref": {
                "type": "string"
              },
              "domain_name": {
                "type": "string"
              },
              "autoscale_policy_ref": {
                "type": "string"
              },
              "ssl_profile_ref": {
                "type": "string"
              },
              "ipaddrgroup_ref": {
                "type": "string"
              },
              "apic_epg_name": {
                "type": "string"
              },
              "server_reselect": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "a_pool": {
                "type": "string"
              },
              "pki_profile_ref": {
                "type": "string"
              },
              "east_west": {
                "type": "string"
              },
              "application_persistence_profile_ref": {
                "type": "string"
              },
              "inline_health_monitor": {
                "type": "string"
              },
              "default_server_port": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "request_queue_depth": {
                "type": "string"
              },
              "graceful_disable_timeout": {
                "type": "string"
              },
              "ab_priority": {
                "type": "string"
              },
              "server_count": {
                "type": "string"
              },
              "ssl_key_and_certificate_ref": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "request_queue_enabled": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "max_concurrent_connections_per_server": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "autoscale_launch_config_ref": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "autoscale_networks": {
                "type": "string"
              },
              "health_monitor_refs": {
                "type": "string"
              },
              "connection_ramp_duration": {
                "type": "string"
              },
              "cloud_config_cksum": {
                "type": "string"
              },
              "vrf_ref": {
                "type": "string"
              },
              "prst_hdr_name": {
                "type": "string"
              }
            }
          },
          "cs_router": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Start, restart, stop and destroy routers.\nC(state=present) is not able to create routers, use M(cs_network) instead.",
            "properties": {
              "account": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "service_offering": {
                "type": "string"
              }
            }
          },
          "os_keystone_role": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage OpenStack Identity Roles.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "na_cdot_user_role": {
            "required": [
              "vserver",
              "state",
              "name",
              "command_directory_name"
            ],
            "type": "object",
            "description": "Create or destroy user roles",
            "properties": {
              "vserver": {
                "type": "string"
              },
              "access_level": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "command_directory_name": {
                "type": "string"
              }
            }
          },
          "ovirt_affinity_groups": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module manage affinity groups in oVirt. It can also manage assignments of those groups to VMs.",
            "properties": {
              "vm_enforcing": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "host_rule": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hosts": {
                "type": "array"
              },
              "vm_rule": {
                "type": "string"
              },
              "host_enforcing": {
                "type": "string"
              },
              "vms": {
                "type": "array"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "ec2_remote_facts": {
            "type": "object",
            "description": "Gather facts about ec2 instances in AWS",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "os_keypair": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or Remove key pair from OpenStack",
            "properties": {
              "public_key": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "public_key_file": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              }
            }
          },
          "quantum_subnet": {
            "required": [
              "login_password",
              "login_username",
              "cidr",
              "network_name",
              "name",
              "login_tenant_name"
            ],
            "type": "object",
            "description": "Add/remove subnet from a network",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "enable_dhcp": {
                "type": "string"
              },
              "tenant_name": {
                "type": "string"
              },
              "dns_nameservers": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "allocation_pool_start": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "gateway_ip": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "network_name": {
                "type": "string"
              },
              "ip_version": {
                "type": "string"
              },
              "allocation_pool_end": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_route_table_facts": {
            "type": "object",
            "description": "Gather facts about ec2 VPC route tables in AWS",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "eos_config": {
            "type": "object",
            "description": "Arista EOS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with eos configuration sections in a deterministic way.  This module works with either CLI or eAPI transports.",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "defaults": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "eos_template": {
            "required": [
              "src"
            ],
            "type": "object",
            "description": "Manages network device configurations over SSH or eos_local.  This module allows implementers to work with the device running-config.  It provides a way to push a set of commands onto a network device by evaluating the current running-config and only pushing configuration commands that are not already configured.  The config source can be a set of commands or a template.",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "include_defaults": {
                "type": "string"
              },
              "config": {
                "type": "string"
              }
            }
          },
          "tower_role": {
            "required": [
              "role"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower roles. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "credential": {
                "type": "string"
              },
              "job_template": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "inventory": {
                "type": "string"
              },
              "team": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "target_team": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "user": {
                "type": "string"
              }
            }
          },
          "known_hosts": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "host"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "host"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "The M(known_hosts) module lets you add or remove a host keys from the C(known_hosts) file.\nStarting at Ansible 2.2, multiple entries per host are allowed, but only one for each key type supported by ssh. This is useful if you're going to want to use the M(git) module over ssh, for example.\nIf you have a very large number of host keys to manage, you will find the M(template) module more useful.",
            "properties": {
              "host": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "panos_lic": {
            "required": [
              "ip_address",
              "password",
              "auth_code"
            ],
            "type": "object",
            "description": "Apply an authcode to a device.\nThe authcode should have been previously registered on the Palo Alto Networks support portal.\nThe device should have Internet access.",
            "properties": {
              "username": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "auth_code": {
                "type": "string"
              }
            }
          },
          "snmp_facts": {
            "required": [
              "host",
              "version"
            ],
            "type": "object",
            "description": "Retrieve facts for a device using SNMP, the facts will be inserted to the ansible_facts key.",
            "properties": {
              "username": {
                "type": "string"
              },
              "privacy": {
                "type": "string"
              },
              "level": {
                "type": "string"
              },
              "community": {
                "type": "string"
              },
              "authkey": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "integrity": {
                "type": "string"
              },
              "privkey": {
                "type": "string"
              }
            }
          },
          "tower_job_launch": {
            "required": [
              "job_template"
            ],
            "type": "object",
            "description": "Launch an Ansible Tower jobs. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "credential": {
                "type": "string"
              },
              "use_job_endpoint": {
                "type": "string"
              },
              "job_template": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "extra_vars": {
                "type": "string"
              },
              "job_explanation": {
                "type": "string"
              },
              "job_type": {
                "type": "string"
              },
              "limit": {
                "type": "string"
              },
              "inventory": {
                "type": "string"
              }
            }
          },
          "setup": {
            "type": "object",
            "description": "This module is automatically called by playbooks to gather useful variables about remote hosts that can be used in playbooks. It can also be executed directly by C(/usr/bin/ansible) to check what variables are available to a host. Ansible provides many I(facts) about the system, automatically.",
            "properties": {
              "filter": {
                "type": "string"
              },
              "gather_subset": {
                "type": "string"
              },
              "fact_path": {
                "type": "string"
              },
              "gather_timeout": {
                "type": "string"
              }
            }
          },
          "cs_instance": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "tag"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "networks",
                        "network"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "security_groups",
                        "security_group"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ip_to_networks",
                        "ip_to_network"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "affinity_groups",
                        "affinity_group"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "template_filter",
                        "iso_filter"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Deploy, start, update, scale, restart, restore, stop and destroy instances.",
            "properties": {
              "domain": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "disk_offering": {
                "type": "string"
              },
              "keyboard": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "root_disk_size": {
                "type": "string"
              },
              "iso_filter": {
                "type": "string"
              },
              "tag": {
                "type": "array"
              },
              "cpu_speed": {
                "type": "string"
              },
              "ip6_address": {
                "type": "string"
              },
              "networks": {
                "type": "array"
              },
              "security_groups": {
                "type": "array"
              },
              "group": {
                "type": "string"
              },
              "network": {
                "type": "array"
              },
              "zone": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "iso": {
                "type": "string"
              },
              "template_filter": {
                "type": "string"
              },
              "ip_to_network": {
                "type": "array"
              },
              "tags": {
                "type": "array"
              },
              "ssh_key": {
                "type": "string"
              },
              "affinity_group": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "service_offering": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "disk_size": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "hypervisor": {
                "type": "string"
              },
              "ip_to_networks": {
                "type": "array"
              },
              "project": {
                "type": "string"
              },
              "affinity_groups": {
                "type": "string"
              },
              "security_group": {
                "type": "array"
              },
              "poll_async": {
                "type": "string"
              },
              "cpu": {
                "type": "string"
              }
            }
          },
          "win_file_version": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Get DLL or EXE file build version\nchange state alway be false",
            "properties": {
              "path": {
                "type": "string"
              }
            }
          },
          "eos_banner": {
            "required": [
              "banner"
            ],
            "type": "object",
            "description": "This will configure both login and motd banners on remote devices running Arista EOS.  It allows playbooks to add or remote banner text from the active running configuration.",
            "properties": {
              "text": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "banner": {
                "type": "string"
              }
            }
          },
          "cs_iso": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Register and remove ISO images.",
            "properties": {
              "account": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "checksum": {
                "type": "string"
              },
              "is_featured": {
                "type": "string"
              },
              "is_dynamically_scalable": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "bootable": {
                "type": "string"
              },
              "iso_filter": {
                "type": "string"
              },
              "is_ready": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "is_public": {
                "type": "string"
              },
              "os_type": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_nat_gateway_facts": {
            "type": "object",
            "description": "Gets various details related to AWS VPC Managed Nat Gateways",
            "properties": {
              "nat_gateway_ids": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              }
            }
          },
          "sorcery": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "update_cache",
                        "update_codex"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "spell"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages \"spells\" on Source Mage GNU/Linux using I(sorcery) toolchain",
            "properties": {
              "update_codex": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "spell": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "depends": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "cache_valid_time": {
                "type": "string"
              }
            }
          },
          "dellos6_command": {
            "required": [
              "commands"
            ],
            "type": "object",
            "description": "Sends arbitrary commands to a Dell OS6 node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use M(dellos6_config) to configure Dell OS6 devices.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "wait_for": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              }
            }
          },
          "get_url": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "force",
                        "thirsty"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Downloads files from HTTP, HTTPS, or FTP to the remote server. The remote server I(must) have direct access to the remote resource.\nBy default, if an environment variable C(<protocol>_proxy) is set on the target host, requests will be sent through that proxy. This behaviour can be overridden by setting a variable for this task (see `setting the environment <http://docs.ansible.com/playbooks_environment.html>`_), or by using the use_proxy option.\nHTTP redirects can redirect from HTTP to HTTPS so you should be sure that your proxy environment for both protocols is correct.",
            "properties": {
              "url_password": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "use_proxy": {
                "type": "string"
              },
              "thirsty": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "checksum": {
                "type": "string"
              },
              "force_basic_auth": {
                "type": "string"
              },
              "sha256sum": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "headers": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "others": {
                "type": "string"
              },
              "url_username": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "tmp_dest": {
                "type": "string"
              }
            }
          },
          "ec2_tag": {
            "required": [
              "resource",
              "tags"
            ],
            "type": "object",
            "description": "Creates, removes and lists tags from any EC2 resource.  The resource is referenced by its resource id (e.g. an instance being i-XXXXXXX). It is designed to be used with complex args (tags), see the examples.  This module has a dependency on python-boto.",
            "properties": {
              "state": {
                "type": "string"
              },
              "resource": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "win_domain_membership": {
            "required": [
              "domain_admin_user"
            ],
            "type": "object",
            "description": "Manages domain membership or workgroup membership for a Windows host. Also supports hostname changes. This module may require subsequent use of the M(win_reboot) action if changes are made.",
            "properties": {
              "workgroup_name": {
                "type": "string"
              },
              "domain_admin_user": {
                "type": "string"
              },
              "dns_domain_name": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "domain_admin_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "rds_subnet_group": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Creates, modifies, and deletes RDS database subnet groups. This module has a dependency on python-boto >= 2.5.",
            "properties": {
              "subnets": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "fetch": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "validate_checksum",
                        "validate_md5"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module works like M(copy), but in reverse. It is used for fetching files from remote machines and storing them locally in a file tree, organized by hostname. Note that this module is written to transfer log files that might not be present, so a missing remote file won't be an error unless fail_on_missing is set to 'yes'.",
            "properties": {
              "src": {
                "type": "string"
              },
              "flat": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "validate_md5": {
                "type": "string"
              },
              "validate_checksum": {
                "type": "string"
              },
              "fail_on_missing": {
                "type": "string"
              }
            }
          },
          "pushbullet": {
            "required": [
              "title",
              "api_key"
            ],
            "type": "object",
            "description": "This module sends push notifications via Pushbullet to channels or devices.",
            "properties": {
              "body": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "push_type": {
                "type": "string"
              },
              "device": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              }
            }
          },
          "github_release": {
            "required": [
              "repo",
              "action",
              "token",
              "user"
            ],
            "type": "object",
            "description": "Fetch metadata about Github Releases",
            "properties": {
              "repo": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "user": {
                "type": "string"
              }
            }
          },
          "ec2_ami": {
            "type": "object",
            "description": "Creates or deletes ec2 images.",
            "properties": {
              "device_mapping": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "launch_permissions": {
                "type": "string"
              },
              "delete_snapshot": {
                "type": "string"
              },
              "no_reboot": {
                "type": "string"
              },
              "instance_id": {
                "type": "string"
              },
              "image_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "panos_check": {
            "required": [
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "Check if PAN-OS device is ready for being configured (no pending jobs).\nThe check could be done once or multiple times until the device is ready.",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              }
            }
          },
          "cloudtrail": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_secret_key",
                        "ec2_secret_key",
                        "secret_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_access_key",
                        "ec2_access_key",
                        "access_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "region",
                        "aws_region",
                        "ec2_region"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates or deletes CloudTrail configuration. Ensures logging is also enabled.",
            "properties": {
              "aws_secret_key": {
                "type": "string"
              },
              "access_key": {
                "type": "string"
              },
              "aws_access_key": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "include_global_events": {
                "type": "string"
              },
              "aws_region": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "s3_bucket_prefix": {
                "type": "string"
              },
              "ec2_access_key": {
                "type": "string"
              },
              "secret_key": {
                "type": "string"
              },
              "ec2_secret_key": {
                "type": "string"
              },
              "s3_key_prefix": {
                "type": "string"
              },
              "ec2_region": {
                "type": "string"
              }
            }
          },
          "netapp_e_volume_copy": {
            "required": [
              "api_url",
              "api_password",
              "state",
              "api_username"
            ],
            "type": "object",
            "description": "Create and delete snapshots images on volume groups for NetApp E-series storage arrays.",
            "properties": {
              "create_copy_pair_if_does_not_exist": {
                "type": "string"
              },
              "search_volume_id": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "source_volume_id": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "volume_copy_pair_id": {
                "type": "string"
              },
              "destination_volume_id": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "start_stop_copy": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "os_ironic": {
            "required": [
              "nics",
              "driver"
            ],
            "type": "object",
            "description": "Create or Remove Ironic nodes from OpenStack.",
            "properties": {
              "uuid": {
                "type": "string"
              },
              "driver_info": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "nics": {
                "type": "string"
              },
              "driver": {
                "type": "string"
              },
              "ironic_url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "chassis_uuid": {
                "type": "string"
              },
              "skip_update_of_driver_password": {
                "type": "string"
              },
              "properties": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "lineinfile": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "dest",
                        "destfile",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "destfile"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module will search a file for a line, and ensure that it is present or absent.\nThis is primarily useful when you want to change a single line in a file only. See the M(replace) module if you want to change multiple, similar lines or check M(blockinfile) if you want to insert/update/remove a block of lines in a file. For other cases, see the M(copy) or M(template) modules.",
            "properties": {
              "name": {
                "type": "string"
              },
              "insertbefore": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "create": {
                "type": "string"
              },
              "destfile": {
                "type": "string"
              },
              "backrefs": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "others": {
                "type": "string"
              },
              "insertafter": {
                "type": "string"
              },
              "regexp": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "line": {
                "type": "string"
              }
            }
          },
          "gce_net": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ipv4_range",
                        "cidr"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "fwname",
                        "fwrule"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "src_range",
                        "src_cidr"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module can create and destroy Google Compute Engine networks and firewall rules U(https://developers.google.com/compute/docs/networking). The I(name) parameter is reserved for referencing a network while the I(fwname) parameter is used to reference firewall rules. IPv4 Address ranges must be specified using the CIDR U(http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) format. Full install/configuration instructions for the gce* modules can be found in the comments of ansible/test/gce_tests.py.",
            "properties": {
              "src_tags": {
                "type": "string"
              },
              "subnet_region": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "src_range": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "fwname": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "target_tags": {
                "type": "string"
              },
              "subnet_name": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "allowed": {
                "type": "string"
              },
              "ipv4_range": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "fwrule": {
                "type": "string"
              },
              "subnet_desc": {
                "type": "string"
              },
              "src_cidr": {
                "type": "string"
              }
            }
          },
          "lxd_container": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Management of LXD containers",
            "properties": {
              "name": {
                "type": "string"
              },
              "wait_for_ipv4_addresses": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "trust_password": {
                "type": "string"
              },
              "cert_file": {
                "type": "string"
              },
              "ephemeral": {
                "type": "string"
              },
              "devices": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "architecture": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "key_file": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "force_stop": {
                "type": "string"
              }
            }
          },
          "asa_acl": {
            "required": [
              "lines"
            ],
            "type": "object",
            "description": "This module allows you to work with access-lists on a Cisco ASA device.",
            "properties": {
              "force": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "apt_rpm": {
            "required": [
              "pkg"
            ],
            "type": "object",
            "description": "Manages packages with I(apt-rpm). Both low-level (I(rpm)) and high-level (I(apt-get)) package manager binaries required.",
            "properties": {
              "state": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              }
            }
          },
          "avi_virtualservice": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure VirtualService object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "client_auth": {
                "type": "string"
              },
              "auto_allocate_ip": {
                "type": "string"
              },
              "port_uuid": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "active_standby_se_tag": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "flow_dist": {
                "type": "string"
              },
              "ipam_network_subnet": {
                "type": "string"
              },
              "floating_subnet_uuid": {
                "type": "string"
              },
              "delay_fairness": {
                "type": "string"
              },
              "snat_ip": {
                "type": "string"
              },
              "dns_info": {
                "type": "string"
              },
              "avi_allocated_vip": {
                "type": "string"
              },
              "enable_rhi_snat": {
                "type": "string"
              },
              "vrf_context_ref": {
                "type": "string"
              },
              "requests_rate_limit": {
                "type": "string"
              },
              "analytics_profile_ref": {
                "type": "string"
              },
              "ign_pool_net_reach": {
                "type": "string"
              },
              "fqdn": {
                "type": "string"
              },
              "cloud_type": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "vh_domain_name": {
                "type": "string"
              },
              "cloud_ref": {
                "type": "string"
              },
              "avi_allocated_fip": {
                "type": "string"
              },
              "se_group_ref": {
                "type": "string"
              },
              "performance_limits": {
                "type": "string"
              },
              "ssl_profile_ref": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "scaleout_ecmp": {
                "type": "string"
              },
              "max_cps_per_client": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "discovered_subnet": {
                "type": "string"
              },
              "cloud_config_cksum": {
                "type": "string"
              },
              "network_ref": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "ssl_sess_cache_avg_size": {
                "type": "string"
              },
              "ssl_key_and_certificate_refs": {
                "type": "string"
              },
              "remove_listening_port_on_vs_down": {
                "type": "string"
              },
              "network_profile_ref": {
                "type": "string"
              },
              "floating_ip": {
                "type": "string"
              },
              "use_bridge_ip_as_vip": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "subnet": {
                "type": "string"
              },
              "http_policies": {
                "type": "string"
              },
              "application_profile_ref": {
                "type": "string"
              },
              "microservice_ref": {
                "type": "string"
              },
              "host_name_xlate": {
                "type": "string"
              },
              "services": {
                "type": "array"
              },
              "connections_rate_limit": {
                "type": "string"
              },
              "auto_allocate_floating_ip": {
                "type": "string"
              },
              "pool_ref": {
                "type": "string"
              },
              "discovered_network_ref": {
                "type": "string"
              },
              "pool_group_ref": {
                "type": "string"
              },
              "east_west_placement": {
                "type": "string"
              },
              "subnet_uuid": {
                "type": "string"
              },
              "limit_doser": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "service_pool_select": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "enable_autogw": {
                "type": "string"
              },
              "discovered_networks": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "content_rewrite": {
                "type": "string"
              },
              "network_security_policy_ref": {
                "type": "string"
              },
              "vs_datascripts": {
                "type": "string"
              },
              "static_dns_records": {
                "type": "array"
              },
              "server_network_profile_ref": {
                "type": "string"
              },
              "analytics_policy": {
                "type": "string"
              },
              "enable_rhi": {
                "type": "string"
              },
              "vh_parent_vs_uuid": {
                "type": "string"
              },
              "flow_label_type": {
                "type": "string"
              }
            }
          },
          "os_floating_ip": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "nat_destination",
                        "fixed_network",
                        "internal_network"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add or Remove a floating IP to an instance",
            "properties": {
              "purge": {
                "type": "string"
              },
              "fixed_address": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "internal_network": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "nat_destination": {
                "type": "string"
              },
              "fixed_network": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "floating_ip_address": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "reuse": {
                "type": "string"
              }
            }
          },
          "azure_rm_publicipaddress_facts": {
            "type": "object",
            "description": "Get facts for a specific public IP or all public IPs within a resource group.",
            "properties": {
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "s3_logging": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage logging facility of an s3 bucket in AWS",
            "properties": {
              "target_bucket": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "target_prefix": {
                "type": "string"
              }
            }
          },
          "digital_ocean_tag": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create and remove tag(s) to DigitalOcean resource.",
            "properties": {
              "state": {
                "type": "string"
              },
              "api_token": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "resource_type": {
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              }
            }
          },
          "os_quota": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "floatingip",
                        "network_floating_ips"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "floating_ips",
                        "compute_floating_ips"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage OpenStack Quotas. Quotas can be created, updated or deleted using this module. A quota will be updated if matches an existing project and is present.",
            "properties": {
              "snapshots_lvm": {
                "type": "string"
              },
              "server_groups": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "ram": {
                "type": "string"
              },
              "snapshots": {
                "type": "string"
              },
              "instances": {
                "type": "string"
              },
              "network_floating_ips": {
                "type": "string"
              },
              "backups": {
                "type": "string"
              },
              "fixed_ips": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "subnet": {
                "type": "string"
              },
              "per_volume_gigabytes": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "floatingip": {
                "type": "string"
              },
              "volumes_lvm": {
                "type": "string"
              },
              "floating_ips": {
                "type": "string"
              },
              "security_group_rule": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "injected_files": {
                "type": "string"
              },
              "rbac_policy": {
                "type": "string"
              },
              "injected_path_size": {
                "type": "string"
              },
              "gigabytes": {
                "type": "string"
              },
              "backup_gigabytes": {
                "type": "string"
              },
              "subnetpool": {
                "type": "string"
              },
              "key_pairs": {
                "type": "string"
              },
              "injected_file_size": {
                "type": "string"
              },
              "cores": {
                "type": "string"
              },
              "properties": {
                "type": "string"
              },
              "server_group_members": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "compute_floating_ips": {
                "type": "string"
              },
              "volumes": {
                "type": "string"
              },
              "gigabytes_lvm": {
                "type": "string"
              },
              "security_group": {
                "type": "string"
              },
              "router": {
                "type": "string"
              }
            }
          },
          "nxos_vrrp": {
            "required": [
              "group",
              "interface"
            ],
            "type": "object",
            "description": "Manages VRRP configuration on NX-OS switches.",
            "properties": {
              "group": {
                "type": "string"
              },
              "vip": {
                "type": "string"
              },
              "authentication": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "admin_state": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              }
            }
          },
          "dellos10_command": {
            "required": [
              "commands"
            ],
            "type": "object",
            "description": "Sends arbitrary commands to a Dell OS10 node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use M(dellos10_config) to configure Dell OS10 devices.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "wait_for": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              }
            }
          },
          "gce": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "base_name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates or terminates Google Compute Engine (GCE) instances.  See U(https://cloud.google.com/compute) for an overview. Full install/configuration instructions for the gce* modules can be found in the comments of ansible/test/gce_tests.py.",
            "properties": {
              "num_instances": {
                "type": "string"
              },
              "ip_forward": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "service_account_permissions": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "persistent_boot_disk": {
                "type": "string"
              },
              "disk_auto_delete": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "preemptible": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "instance_names": {
                "type": "string"
              },
              "machine_type": {
                "type": "string"
              },
              "disk_size": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "base_name": {
                "type": "string"
              },
              "external_ip": {
                "type": "string"
              },
              "disks": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "subnetwork": {
                "type": "string"
              }
            }
          },
          "nxos_pim_rp_address": {
            "required": [
              "rp_address"
            ],
            "type": "object",
            "description": "Manages configuration of an Protocol Independent Multicast (PIM) static rendezvous point (RP) address instance.",
            "properties": {
              "route_map": {
                "type": "string"
              },
              "prefix_list": {
                "type": "string"
              },
              "rp_address": {
                "type": "string"
              },
              "group_list": {
                "type": "string"
              },
              "bidir": {
                "type": "string"
              }
            }
          },
          "s3": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_secret_key",
                        "ec2_secret_key",
                        "secret_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_access_key",
                        "ec2_access_key",
                        "access_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "s3_url",
                        "S3_URL"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows the user to manage S3 buckets and the objects within them. Includes support for creating and deleting both objects and buckets, retrieving objects as files or strings and generating download links. This module has a dependency on python-boto.",
            "properties": {
              "prefix": {
                "type": "string"
              },
              "marker": {
                "type": "string"
              },
              "overwrite": {
                "type": "string"
              },
              "aws_secret_key": {
                "type": "string"
              },
              "encrypt": {
                "type": "string"
              },
              "rgw": {
                "type": "string"
              },
              "retries": {
                "type": "string"
              },
              "max_keys": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "s3_url": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "permission": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "object": {
                "type": "string"
              },
              "ec2_access_key": {
                "type": "string"
              },
              "ec2_secret_key": {
                "type": "string"
              },
              "S3_URL": {
                "type": "string"
              },
              "access_key": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "aws_access_key": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "expiration": {
                "type": "string"
              },
              "bucket": {
                "type": "string"
              },
              "headers": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "secret_key": {
                "type": "string"
              }
            }
          },
          "portage": {
            "type": "object",
            "description": "Manages Gentoo packages",
            "properties": {
              "nodeps": {
                "type": "string"
              },
              "getbinpkg": {
                "type": "string"
              },
              "onlydeps": {
                "type": "string"
              },
              "newuse": {
                "type": "string"
              },
              "package": {
                "type": "string"
              },
              "oneshot": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "deep": {
                "type": "string"
              },
              "sync": {
                "type": "string"
              },
              "changed_use": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "quiet": {
                "type": "string"
              },
              "usepkgonly": {
                "type": "string"
              },
              "depclean": {
                "type": "string"
              },
              "noreplace": {
                "type": "string"
              },
              "verbose": {
                "type": "string"
              }
            }
          },
          "pkgin": {
            "type": "object",
            "description": "The standard package manager for SmartOS, but also usable on NetBSD or any OS that uses C(pkgsrc).  (Home: U(http://pkgin.net/))",
            "properties": {
              "upgrade": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "full_upgrade": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "clean": {
                "type": "string"
              }
            }
          },
          "ping": {
            "type": "object",
            "description": "A trivial test module, this module always returns C(pong) on successful contact. It does not make sense in playbooks, but it is useful from C(/usr/bin/ansible) to verify the ability to login and that a usable python is configured.\nThis is NOT ICMP ping, this is just a trivial test module.",
            "properties": {}
          },
          "nxos_vtp_password": {
            "type": "object",
            "description": "Manages VTP password configuration.",
            "properties": {
              "vtp_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "pn_cluster": {
            "required": [
              "pn_name",
              "state"
            ],
            "type": "object",
            "description": "Execute cluster-create or cluster-delete command.\nA cluster allows two switches to cooperate in high-availability (HA) deployments. The nodes that form the cluster must be members of the same fabric. Clusters are typically used in conjunction with a virtual link aggregation group (VLAG) that allows links physically connected to two separate switches appear as a single trunk to a third device. The third device can be a switch,server, or any Ethernet device.",
            "properties": {
              "pn_name": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_validate": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_cluster_node1": {
                "type": "string"
              },
              "pn_cluster_node2": {
                "type": "string"
              }
            }
          },
          "route53_zone": {
            "required": [
              "zone"
            ],
            "type": "object",
            "description": "Creates and deletes Route53 private and public zones",
            "properties": {
              "comment": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vpc_region": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              }
            }
          },
          "beadm": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "be"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "be"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, delete or activate ZFS boot environments.\nMount and unmount ZFS boot environments.",
            "properties": {
              "be": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "snapshot": {
                "type": "string"
              },
              "mountpoint": {
                "type": "string"
              },
              "options": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "netapp_e_storagepool": {
            "required": [
              "api_password",
              "api_url",
              "name",
              "ssid",
              "raid_level",
              "state",
              "api_username"
            ],
            "type": "object",
            "description": "Create or remove disk groups and disk pools for NetApp E-series storage arrays.",
            "properties": {
              "criteria_size_unit": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "criteria_drive_require_fde": {
                "type": "string"
              },
              "criteria_min_usable_capacity": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "erase_secured_drives": {
                "type": "string"
              },
              "secure_pool": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "raid_level": {
                "type": "string"
              },
              "criteria_drive_min_size": {
                "type": "string"
              },
              "remove_volumes": {
                "type": "string"
              },
              "criteria_drive_type": {
                "type": "string"
              },
              "criteria_drive_count": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "criteria_drive_interface_type": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "reserve_drive_count": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "cs_securitygroup": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create and remove security groups.",
            "properties": {
              "account": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "bigip_facts": {
            "required": [
              "include"
            ],
            "type": "object",
            "description": "Collect facts from F5 BIG-IP devices via iControl SOAP API",
            "properties": {
              "filter": {
                "type": "string"
              },
              "include": {
                "type": "string"
              },
              "session": {
                "type": "string"
              }
            }
          },
          "proxysql_query_rules": {
            "type": "object",
            "description": "The M(proxysql_query_rules) module modifies query rules using the proxysql admin interface.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "flagOUT": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "match_pattern": {
                "type": "string"
              },
              "mirror_flagOUT": {
                "type": "string"
              },
              "apply": {
                "type": "string"
              },
              "schemaname": {
                "type": "string"
              },
              "replace_pattern": {
                "type": "string"
              },
              "digest": {
                "type": "string"
              },
              "match_digest": {
                "type": "string"
              },
              "mirror_hostgroup": {
                "type": "string"
              },
              "log": {
                "type": "string"
              },
              "delay": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "proxy_addr": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "config_file": {
                "type": "string"
              },
              "login_port": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "destination_hostgroup": {
                "type": "string"
              },
              "proxy_port": {
                "type": "string"
              },
              "load_to_runtime": {
                "type": "string"
              },
              "save_to_disk": {
                "type": "string"
              },
              "active": {
                "type": "string"
              },
              "cache_ttl": {
                "type": "string"
              },
              "error_msg": {
                "type": "string"
              },
              "retries": {
                "type": "string"
              },
              "negate_match_pattern": {
                "type": "string"
              },
              "flagIN": {
                "type": "string"
              },
              "client_addr": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "force_delete": {
                "type": "string"
              },
              "rule_id": {
                "type": "string"
              }
            }
          },
          "zabbix_hostmacro": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_url",
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_url"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "manages Zabbix host macros, it can create, update or delete them.",
            "properties": {
              "http_login_password": {
                "type": "string"
              },
              "macro_name": {
                "type": "string"
              },
              "macro_value": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "http_login_user": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "host_name": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              }
            }
          },
          "os_volume": {
            "required": [
              "display_name"
            ],
            "type": "object",
            "description": "Create or Remove cinder block storage volumes",
            "properties": {
              "display_name": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "volume_type": {
                "type": "string"
              },
              "volume": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "display_description": {
                "type": "string"
              },
              "snapshot_id": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "async_status": {
            "required": [
              "jid"
            ],
            "type": "object",
            "description": "This module gets the status of an asynchronous task.",
            "properties": {
              "jid": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              }
            }
          },
          "iam_role": {
            "required": [
              "managed_policy",
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manage AWS IAM roles",
            "properties": {
              "assume_role_policy_document": {
                "type": "string"
              },
              "managed_policy": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "npm": {
            "type": "object",
            "description": "Manage node.js packages with Node Package Manager (npm)",
            "properties": {
              "executable": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "global": {
                "type": "string"
              },
              "ignore_scripts": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "production": {
                "type": "string"
              },
              "registry": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "a10_server_axapi3": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_ip",
                        "ip",
                        "address"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_ip"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ip"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_name",
                        "server"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "server"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_status",
                        "action"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage SLB (Server Load Balancer) server objects on A10 Networks devices via aXAPIv3.",
            "properties": {
              "server_name": {
                "type": "string"
              },
              "server_ports": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "server_ip": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "operation": {
                "type": "string"
              },
              "server_status": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "cnos_template": {
            "required": [
              "commandfile"
            ],
            "type": "object",
            "description": "This module allows you to work with the running configuration of a switch. It provides a way to execute a set of CNOS commands on a switch by evaluating the current running configuration and executing the commands only if the specific settings have not been already configured. The configuration source can be a set of commands or a template written in the Jinja2 templating language. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_template.html)",
            "properties": {
              "commandfile": {
                "type": "string"
              }
            }
          },
          "set_fact": {
            "required": [
              "key_value"
            ],
            "type": "object",
            "description": "This module allows setting new variables.  Variables are set on a host-by-host basis just like facts discovered by the setup module.\nThese variables will be available to subsequent plays during an ansible-playbook run, but will not be saved across executions even if you use a fact cache.",
            "properties": {
              "key_value": {
                "type": "string"
              }
            }
          },
          "vmware_vmkernel_ip_config": {
            "required": [
              "vmk_name",
              "ip_address",
              "subnet_mask"
            ],
            "type": "object",
            "description": "Configure the VMkernel IP Address",
            "properties": {
              "ip_address": {
                "type": "string"
              },
              "vmk_name": {
                "type": "string"
              },
              "subnet_mask": {
                "type": "string"
              }
            }
          },
          "ec2_eni_facts": {
            "type": "object",
            "description": "Gather facts about ec2 ENI interfaces in AWS",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "junos_netconf": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "netconf_port",
                        "listens_on"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module provides an abstraction that enables and configures the netconf system service running on Junos devices.  This module can be used to easily enable the Netconf API. Netconf provides a programmatic interface for working with configuration and state resources as defined in RFC 6242.",
            "properties": {
              "state": {
                "type": "string"
              },
              "listens_on": {
                "type": "string"
              },
              "netconf_port": {
                "type": "string"
              }
            }
          },
          "na_cdot_aggregate": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Create or destroy aggregates on NetApp cDOT.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "disk_count": {
                "type": "string"
              }
            }
          },
          "ovirt_snapshots": {
            "required": [
              "vm_name"
            ],
            "type": "object",
            "description": "Module to manage Virtual Machine Snapshots in oVirt",
            "properties": {
              "vm_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "use_memory": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "snapshot_id": {
                "type": "string"
              }
            }
          },
          "nxos_igmp_snooping": {
            "type": "object",
            "description": "Manages IGMP snooping global configuration.",
            "properties": {
              "link_local_grp_supp": {
                "type": "string"
              },
              "report_supp": {
                "type": "string"
              },
              "snooping": {
                "type": "string"
              },
              "group_timeout": {
                "type": "string"
              },
              "v3_report_supp": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "win_disk_image": {
            "required": [
              "image_path"
            ],
            "type": "object",
            "description": "Manages mount behavior for a specified ISO, VHD, or VHDX image on a Windows host. When C(state) is C(present), the image will be mounted under a system-assigned drive letter, which will be returned in the C(mount_path) value of the module result. Requires Windows 8+ or Windows Server 2012+.",
            "properties": {
              "state": {
                "type": "string"
              },
              "image_path": {
                "type": "string"
              }
            }
          },
          "sns": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_secret_key",
                        "ec2_secret_key",
                        "secret_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_access_key",
                        "ec2_access_key",
                        "access_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "region",
                        "aws_region",
                        "ec2_region"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "msg",
                        "default"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "msg"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "default"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "The M(sns) module sends notifications to a topic on your Amazon SNS account",
            "properties": {
              "aws_secret_key": {
                "type": "string"
              },
              "access_key": {
                "type": "string"
              },
              "aws_access_key": {
                "type": "string"
              },
              "http": {
                "type": "string"
              },
              "sqs": {
                "type": "string"
              },
              "sms": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "aws_region": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "topic": {
                "type": "string"
              },
              "default": {
                "type": "string"
              },
              "https": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "ec2_access_key": {
                "type": "string"
              },
              "secret_key": {
                "type": "string"
              },
              "ec2_secret_key": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "ec2_region": {
                "type": "string"
              }
            }
          },
          "ecs_task": {
            "required": [
              "operation"
            ],
            "type": "object",
            "description": "Creates or deletes instances of task definitions.",
            "properties": {
              "count": {
                "type": "string"
              },
              "task": {
                "type": "string"
              },
              "overrides": {
                "type": "string"
              },
              "started_by": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "task_definition": {
                "type": "string"
              },
              "container_instances": {
                "type": "string"
              },
              "operation": {
                "type": "string"
              }
            }
          },
          "bigip_ssl_certificate": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "This module will import/delete SSL certificates on BIG-IP LTM. Certificates can be imported from certificate and key files on the local disk, in PEM format.",
            "properties": {
              "name": {
                "type": "string"
              },
              "cert_content": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "cert_src": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "passphrase": {
                "type": "string"
              },
              "key_content": {
                "type": "string"
              },
              "key_src": {
                "type": "string"
              }
            }
          },
          "os_object": {
            "required": [
              "container"
            ],
            "type": "object",
            "description": "Create or Delete objects and containers from OpenStack",
            "properties": {
              "container": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "filename": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "container_access": {
                "type": "string"
              }
            }
          },
          "udm_user": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_user_workstations",
                        "sambaUserWorkstations"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "room_number",
                        "roomNumber"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "primary_group",
                        "primaryGroup"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "home_share",
                        "homeShare"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "override_pw_history",
                        "overridePWHistory"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "display_name",
                        "displayName"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "pager_telephonenumber",
                        "pagerTelephonenumber"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "employee_number",
                        "employeeNumber"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "home_share_path",
                        "homeSharePath"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "mail_home_server",
                        "mailHomeServer"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "username",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "username"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "home_telephone_number",
                        "homeTelephoneNumber"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "mail_alternative_address",
                        "mailAlternativeAddress"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "employee_type",
                        "employeeType"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "pwd_change_next_login",
                        "pwdChangeNextLogin"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "mail_primary_address",
                        "mailPrimaryAddress"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "override_pw_length",
                        "overridePWLength"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "mobile_telephone_number",
                        "mobileTelephoneNumber"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "department_number",
                        "departmentNumber"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_privileges",
                        "sambaPrivileges"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows to manage posix users on a univention corporate server (UCS). It uses the python API of the UCS to create a new object or edit it.",
            "properties": {
              "mobileTelephoneNumber": {
                "type": "string"
              },
              "shell": {
                "type": "string"
              },
              "samba_user_workstations": {
                "type": "string"
              },
              "pager_telephonenumber": {
                "type": "array"
              },
              "departmentNumber": {
                "type": "string"
              },
              "subpath": {
                "type": "string"
              },
              "overridePWLength": {
                "type": "string"
              },
              "homeShare": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "scriptpath": {
                "type": "string"
              },
              "sambaPrivileges": {
                "type": "string"
              },
              "home_share": {
                "type": "string"
              },
              "override_pw_history": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "homedrive": {
                "type": "string"
              },
              "employee_number": {
                "type": "string"
              },
              "mailAlternativeAddress": {
                "type": "array"
              },
              "serviceprovider": {
                "type": "string"
              },
              "organisation": {
                "type": "string"
              },
              "mailPrimaryAddress": {
                "type": "string"
              },
              "room_number": {
                "type": "string"
              },
              "userexpiry": {
                "type": "string"
              },
              "home_share_path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "unixhome": {
                "type": "string"
              },
              "mail_home_server": {
                "type": "string"
              },
              "sambaUserWorkstations": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "sambahome": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "home_telephone_number": {
                "type": "array"
              },
              "primary_group": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "firstname": {
                "type": "string"
              },
              "pagerTelephonenumber": {
                "type": "array"
              },
              "lastname": {
                "type": "string"
              },
              "mailHomeServer": {
                "type": "string"
              },
              "mail_alternative_address": {
                "type": "array"
              },
              "position": {
                "type": "string"
              },
              "phone": {
                "type": "array"
              },
              "birthday": {
                "type": "string"
              },
              "employeeNumber": {
                "type": "string"
              },
              "groups": {
                "type": "string"
              },
              "primaryGroup": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "employee_type": {
                "type": "string"
              },
              "employeeType": {
                "type": "string"
              },
              "pwd_change_next_login": {
                "type": "string"
              },
              "overridePWHistory": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "mail_primary_address": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "roomNumber": {
                "type": "string"
              },
              "override_pw_length": {
                "type": "string"
              },
              "samba_privileges": {
                "type": "string"
              },
              "pwdChangeNextLogin": {
                "type": "string"
              },
              "gecos": {
                "type": "string"
              },
              "mobile_telephone_number": {
                "type": "string"
              },
              "homeTelephoneNumber": {
                "type": "array"
              },
              "profilepath": {
                "type": "string"
              },
              "ou": {
                "type": "string"
              },
              "secretary": {
                "type": "string"
              },
              "homeSharePath": {
                "type": "string"
              },
              "department_number": {
                "type": "string"
              }
            }
          },
          "win_owner": {
            "required": [
              "path",
              "user"
            ],
            "type": "object",
            "description": "Set owner of files or directories",
            "properties": {
              "path": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "user": {
                "type": "string"
              }
            }
          },
          "efs_facts": {
            "type": "object",
            "description": "Module searches Amazon EFS file systems",
            "properties": {
              "tags": {
                "type": "array"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "targets": {
                "type": "array"
              }
            }
          },
          "ovirt_clusters": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Module to manage clusters in oVirt",
            "properties": {
              "comment": {
                "type": "string"
              },
              "ha_reservation": {
                "type": "string"
              },
              "fence_skip_if_connectivity_broken": {
                "type": "string"
              },
              "virt": {
                "type": "string"
              },
              "threads_as_cores": {
                "type": "string"
              },
              "gluster": {
                "type": "string"
              },
              "vm_reason": {
                "type": "string"
              },
              "migration_bandwidth_limit": {
                "type": "string"
              },
              "data_center": {
                "type": "string"
              },
              "ksm_numa": {
                "type": "string"
              },
              "migration_auto_converge": {
                "type": "string"
              },
              "cpu_arch": {
                "type": "string"
              },
              "rng_sources": {
                "type": "array"
              },
              "compatibility_version": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ksm": {
                "type": "string"
              },
              "migration_compressed": {
                "type": "string"
              },
              "ballooning": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fence_enabled": {
                "type": "string"
              },
              "migration_policy": {
                "type": "string"
              },
              "resilience_policy": {
                "type": "string"
              },
              "fence_connectivity_threshold": {
                "type": "string"
              },
              "spice_proxy": {
                "type": "string"
              },
              "memory_policy": {
                "type": "string"
              },
              "migration_bandwidth": {
                "type": "string"
              },
              "fence_skip_if_sd_active": {
                "type": "string"
              },
              "scheduling_policy": {
                "type": "string"
              },
              "switch_type": {
                "type": "string"
              },
              "serial_policy_value": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "host_reason": {
                "type": "string"
              },
              "cpu_type": {
                "type": "string"
              },
              "serial_policy": {
                "type": "string"
              },
              "trusted_service": {
                "type": "string"
              }
            }
          },
          "azure_rm_resourcegroup": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update and delete a resource group.",
            "properties": {
              "state": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_portchannel": {
            "required": [
              "group"
            ],
            "type": "object",
            "description": "Manages port-channel specific configuration parameters.",
            "properties": {
              "group": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "members": {
                "type": "array"
              },
              "min_links": {
                "type": "string"
              },
              "force": {
                "type": "string"
              }
            }
          },
          "tower_project": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower projects. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "scm_credential": {
                "type": "string"
              },
              "scm_branch": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "scm_clean": {
                "type": "string"
              },
              "scm_type": {
                "type": "string"
              },
              "scm_delete_on_update": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "local_path": {
                "type": "string"
              },
              "scm_url": {
                "type": "string"
              },
              "scm_update_on_launch": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_dhcp_options_facts": {
            "type": "object",
            "description": "Gather facts about dhcp options sets in AWS",
            "properties": {
              "DhcpOptionsIds": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              }
            }
          },
          "ovirt_templates_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt templates.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "gcdns_record": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "record",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "record"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "record_data",
                        "value"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates or removes resource records in Google Cloud DNS.",
            "properties": {
              "zone_id": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "record_data": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "record": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "overwrite": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "os_keystone_service": {
            "required": [
              "service_type",
              "name"
            ],
            "type": "object",
            "description": "Create, update, or delete OpenStack Identity service. If a service with the supplied name already exists, it will be updated with the new description and enabled attributes.",
            "properties": {
              "service_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "cloudflare_dns": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "value",
                        "content"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "record",
                        "name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "zone",
                        "domain"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "zone"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "domain"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages dns records via the Cloudflare API, see the docs: U(https://api.cloudflare.com/)",
            "properties": {
              "solo": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "account_email": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "proto": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "record": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "account_api_token": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              }
            }
          },
          "clc_blueprint_package": {
            "required": [
              "server_ids",
              "package_id"
            ],
            "type": "object",
            "description": "An Ansible module to deploy blue print package on a set of servers in CenturyLink Cloud.",
            "properties": {
              "server_ids": {
                "type": "string"
              },
              "package_id": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "package_params": {
                "type": "string"
              }
            }
          },
          "vca_nat": {
            "required": [
              "nat_rules"
            ],
            "type": "object",
            "description": "Adds or removes nat rules from a gateway in a vca environment",
            "properties": {
              "nat_rules": {
                "type": "string"
              },
              "purge_rules": {
                "type": "string"
              }
            }
          },
          "fireball": {
            "type": "object",
            "description": "Modern SSH clients support ControlPersist which is just as fast as fireball was.  Please enable that in ansible.cfg as a replacement for fireball.\nRemoved in ansible 2.0.",
            "properties": {}
          },
          "sendgrid": {
            "required": [
              "from_address",
              "subject",
              "to_addresses"
            ],
            "type": "object",
            "description": "Sends an email with a SendGrid account through their API, not through the SMTP service.",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "from_name": {
                "type": "string"
              },
              "from_address": {
                "type": "string"
              },
              "cc": {
                "type": "string"
              },
              "bcc": {
                "type": "string"
              },
              "attachments": {
                "type": "string"
              },
              "headers": {
                "type": "string"
              },
              "to_addresses": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "html_body": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              }
            }
          },
          "na_cdot_lun": {
            "required": [
              "name",
              "vserver",
              "state"
            ],
            "type": "object",
            "description": "Create, destroy, resize luns on NetApp cDOT.",
            "properties": {
              "vserver": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "flexvol_name": {
                "type": "string"
              },
              "size_unit": {
                "type": "string"
              },
              "force_remove": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "force_resize": {
                "type": "string"
              },
              "force_remove_fenced": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "jira": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "operation",
                        "command"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "operation"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "command"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "project",
                        "prj"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create and modify issues in a JIRA instance.",
            "properties": {
              "username": {
                "type": "string"
              },
              "comment": {
                "type": "string"
              },
              "prj": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fields": {
                "type": "string"
              },
              "outwardissue": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "uri": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "assignee": {
                "type": "string"
              },
              "inwardissue": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "issuetype": {
                "type": "string"
              },
              "linktype": {
                "type": "string"
              },
              "operation": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "issue": {
                "type": "string"
              }
            }
          },
          "hostname": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Set system's hostname.\nCurrently implemented on Debian, Ubuntu, Fedora, RedHat, openSUSE, Linaro, ScientificLinux, Arch, CentOS, AMI.\nAny distribution that uses systemd as their init system.\nNote, this module does *NOT* modify /etc/hosts. You need to modify it yourself using other modules like template or replace.",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "sysctl": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "key"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "key"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "value",
                        "val"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module manipulates sysctl entries and optionally performs a C(/sbin/sysctl -p) after changing them.",
            "properties": {
              "name": {
                "type": "string"
              },
              "val": {
                "type": "string"
              },
              "ignoreerrors": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "reload": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "sysctl_set": {
                "type": "string"
              },
              "sysctl_file": {
                "type": "string"
              }
            }
          },
          "nxos_config": {
            "type": "object",
            "description": "Cisco NXOS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with NXOS configuration sections in a deterministic way.  This module works with either CLI or NXAPI transports.",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "defaults": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "win_shortcut": {
            "required": [
              "dest"
            ],
            "type": "object",
            "description": "Create, manage and delete Windows shortcuts",
            "properties": {
              "windowstyle": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "args": {
                "type": "string"
              },
              "hotkey": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "directory": {
                "type": "string"
              },
              "icon": {
                "type": "string"
              }
            }
          },
          "nxos_acl": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages access list entries for ACLs.",
            "properties": {
              "seq": {
                "type": "string"
              },
              "time-range": {
                "type": "string"
              },
              "dest_port_op": {
                "type": "string"
              },
              "established": {
                "type": "string"
              },
              "precedence": {
                "type": "string"
              },
              "proto": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "fragments": {
                "type": "string"
              },
              "src_port1": {
                "type": "string"
              },
              "src_port2": {
                "type": "string"
              },
              "src_port_op": {
                "type": "string"
              },
              "psh": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "syn": {
                "type": "string"
              },
              "dscp": {
                "type": "string"
              },
              "rst": {
                "type": "string"
              },
              "log": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "remark": {
                "type": "string"
              },
              "urg": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "ack": {
                "type": "string"
              },
              "fin": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "dest_port1": {
                "type": "string"
              },
              "dest_port2": {
                "type": "string"
              }
            }
          },
          "panos_admin": {
            "required": [
              "admin_password",
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "PanOS module that allows changes to the user account passwords by doing API calls to the Firewall using pan-api as the protocol.",
            "properties": {
              "username": {
                "type": "string"
              },
              "admin_username": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "admin_password": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "nova_compute": {
            "required": [
              "image_name",
              "image_id",
              "login_password",
              "login_username",
              "name",
              "login_tenant_name"
            ],
            "type": "object",
            "description": "Create or Remove virtual machines from Openstack.",
            "properties": {
              "availability_zone": {
                "type": "string"
              },
              "image_exclude": {
                "type": "string"
              },
              "flavor_include": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "wait_for": {
                "type": "string"
              },
              "security_groups": {
                "type": "string"
              },
              "scheduler_hints": {
                "type": "string"
              },
              "nics": {
                "type": "string"
              },
              "floating_ips": {
                "type": "array"
              },
              "flavor_ram": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auto_floating_ip": {
                "type": "string"
              },
              "config_drive": {
                "type": "string"
              },
              "region_name": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "image_name": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "image_id": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "flavor_id": {
                "type": "string"
              },
              "floating_ip_pools": {
                "type": "array"
              }
            }
          },
          "panos_import": {
            "required": [
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "Import file on PAN-OS device",
            "properties": {
              "username": {
                "type": "string"
              },
              "category": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "file": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "ecs_ecr": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage Elastic Container Registry repositories",
            "properties": {
              "name": {
                "type": "string"
              },
              "delete_policy": {
                "type": "string"
              },
              "force_set_policy": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "registry_id": {
                "type": "string"
              }
            }
          },
          "win_webpicmd": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Installs packages using Web Platform Installer command-line (http://www.iis.net/learn/install/web-platform-installer/web-platform-installer-v4-command-line-webpicmdexe-rtw-release).\nMust be installed and present in PATH (see win_chocolatey module; 'webpicmd' is the package name, and you must install 'lessmsi' first too)\nInstall IIS first (see win_feature module)",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "ovirt_mac_pools": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module manage MAC pools in oVirt.",
            "properties": {
              "allow_duplicates": {
                "type": "string"
              },
              "ranges": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "aos_blueprint": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Blueprint module let you manage your Blueprint easily. You can create create and delete Blueprint by Name or ID. You can also use it to retrieve all data from a blueprint. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "reference_arch": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "template": {
                "type": "string"
              }
            }
          },
          "exo_dns_domain": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create and remove domain records.",
            "properties": {
              "name": {
                "type": "string"
              },
              "api_secret": {
                "type": "string"
              },
              "api_timeout": {
                "type": "string"
              },
              "api_region": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "netapp_e_amg_role": {
            "required": [
              "ssid",
              "api_password",
              "role",
              "api_username",
              "api_url"
            ],
            "type": "object",
            "description": "Update a storage array to become the primary or secondary instance in an asynchronous mirror group",
            "properties": {
              "force": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "noSync": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              }
            }
          },
          "postgresql_privs": {
            "required": [
              "roles",
              "database"
            ],
            "type": "object",
            "description": "Grant or revoke privileges on PostgreSQL database objects.\nThis module is basically a wrapper around most of the functionality of PostgreSQL's GRANT and REVOKE statements with detection of changes (GRANT/REVOKE I(privs) ON I(type) I(objs) TO/FROM I(roles))",
            "properties": {
              "objs": {
                "type": "string"
              },
              "roles": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "privs": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "unix_socket": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "grant_option": {
                "type": "string"
              },
              "schema": {
                "type": "string"
              }
            }
          },
          "nxos_interface": {
            "required": [
              "state",
              "interface"
            ],
            "type": "object",
            "description": "Manages physical attributes of interfaces of NX-OS switches.",
            "properties": {
              "description": {
                "type": "string"
              },
              "fabric_forwarding_anycast_gateway": {
                "type": "string"
              },
              "interface_type": {
                "type": "string"
              },
              "ip_forward": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "admin_state": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              }
            }
          },
          "cnos_facts": {
            "type": "object",
            "description": "This module allows you to view the switch information. It executes the show sysinfo CLI command on a switch and returns a file containing all the system information of the target network device. This module uses SSH to manage network device configuration. The results of the operation can be viewed in results directory. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_facts.html)",
            "properties": {}
          },
          "tower_job_cancel": {
            "required": [
              "job_id"
            ],
            "type": "object",
            "description": "Cancel Ansible Tower jobs. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "job_id": {
                "type": "string"
              },
              "fail_if_not_running": {
                "type": "string"
              }
            }
          },
          "pn_show": {
            "required": [
              "pn_command"
            ],
            "type": "object",
            "description": "Execute show command in the nodes and returns the results read from the device.",
            "properties": {
              "pn_clipassword": {
                "type": "string"
              },
              "pn_command": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_parameters": {
                "type": "string"
              },
              "pn_options": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              }
            }
          },
          "systemd": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "unit",
                        "service"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "unit"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "service"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "daemon_reload",
                        "daemon-reload"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Controls systemd services on remote hosts.",
            "properties": {
              "daemon-reload": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "daemon_reload": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "masked": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              },
              "user": {
                "type": "string"
              }
            }
          },
          "cs_sshkeypair": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, register and remove SSH keys.\nIf no key was found and no public key was provided and a new SSH private/public key pair will be created and the private key will be returned.",
            "properties": {
              "public_key": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "group": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage presence of groups on a host.",
            "properties": {
              "state": {
                "type": "string"
              },
              "gid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "system": {
                "type": "string"
              }
            }
          },
          "tower_job_wait": {
            "required": [
              "job_id"
            ],
            "type": "object",
            "description": "Wait for Ansible Tower job to finish and report success or failure. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "min_interval": {
                "type": "string"
              },
              "max_interval": {
                "type": "string"
              },
              "job_id": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "cs_host": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "ip_address"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ip_address"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update and remove hosts.",
            "properties": {
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "host_tags": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "hypervisor": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "allocation_state": {
                "type": "string"
              },
              "pod": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "icinga2_feature": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Enable or disable an Icinga2 feature",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "netapp_e_flashcache": {
            "required": [
              "ssid",
              "api_password",
              "state",
              "api_username",
              "api_url",
              "name"
            ],
            "type": "object",
            "description": "Create or remove SSD caches on a NetApp E-Series storage array.",
            "properties": {
              "cache_size_min": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "io_type": {
                "type": "string"
              },
              "size_unit": {
                "type": "string"
              },
              "disk_count": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              }
            }
          },
          "keystone_user": {
            "type": "object",
            "description": "Manage users,tenants, roles from OpenStack.",
            "properties": {
              "tenant_description": {
                "type": "string"
              },
              "endpoint": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "tenant": {
                "type": "string"
              }
            }
          },
          "a10_server": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_ip",
                        "ip",
                        "address"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_name",
                        "server"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "server"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_status",
                        "status"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage SLB (Server Load Balancer) server objects on A10 Networks devices via aXAPIv2.",
            "properties": {
              "status": {
                "type": "string"
              },
              "server_name": {
                "type": "string"
              },
              "server_ports": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "server_ip": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "server_status": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "webfaction_app": {
            "required": [
              "name",
              "login_password",
              "type",
              "login_name"
            ],
            "type": "object",
            "description": "Add or remove applications on a Webfaction host.  Further documentation at http://github.com/quentinsf/ansible-webfaction.",
            "properties": {
              "name": {
                "type": "string"
              },
              "login_name": {
                "type": "string"
              },
              "machine": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "autostart": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port_open": {
                "type": "string"
              },
              "extra_info": {
                "type": "string"
              }
            }
          },
          "sts_session_token": {
            "type": "object",
            "description": "Obtain a session token from the AWS Security Token Service",
            "properties": {
              "mfa_token": {
                "type": "string"
              },
              "mfa_serial_number": {
                "type": "string"
              },
              "duration_seconds": {
                "type": "string"
              }
            }
          },
          "netapp_e_snapshot_volume": {
            "required": [
              "snapshot_image_id",
              "ssid",
              "api_password",
              "view_mode",
              "state",
              "storage_pool_name",
              "api_username",
              "api_url",
              "name"
            ],
            "type": "object",
            "description": "Create, update, remove snapshot volumes for NetApp E/EF-Series storage arrays.",
            "properties": {
              "snapshot_image_id": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "repo_percentage": {
                "type": "string"
              },
              "full_threshold": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "view_mode": {
                "type": "string"
              },
              "storage_pool_name": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              }
            }
          },
          "iam_server_certificate_facts": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Retrieve the attributes of a server certificate",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "gcspanner": {
            "required": [
              "instance_id",
              "configuration"
            ],
            "type": "object",
            "description": "Create and Delete Instances/Databases on Spanner. See U(https://cloud.google.com/spanner/docs) for an overview.",
            "properties": {
              "instance_display_name": {
                "type": "string"
              },
              "database_name": {
                "type": "string"
              },
              "force_instance_delete": {
                "type": "string"
              },
              "instance_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "node_count": {
                "type": "string"
              },
              "configuration": {
                "type": "string"
              }
            }
          },
          "cs_zone": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update and remove zones.",
            "properties": {
              "internal_dns1": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dns2": {
                "type": "string"
              },
              "dns1": {
                "type": "string"
              },
              "internal_dns2": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "guest_cidr_address": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "dhcp_provider": {
                "type": "string"
              },
              "network_domain": {
                "type": "string"
              },
              "dns2_ipv6": {
                "type": "string"
              },
              "network_type": {
                "type": "string"
              },
              "dns1_ipv6": {
                "type": "string"
              }
            }
          },
          "win_iis_webbinding": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Creates, Removes and configures a binding to an existing IIS Web site",
            "properties": {
              "protocol": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "certificate_hash": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "host_header": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "certificate_store_name": {
                "type": "string"
              }
            }
          },
          "rhn_channel": {
            "required": [
              "sysname",
              "name",
              "url",
              "password",
              "user"
            ],
            "type": "object",
            "description": "Adds or removes Red Hat software channels",
            "properties": {
              "sysname": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "ovirt_quotas_facts": {
            "required": [
              "data_center"
            ],
            "type": "object",
            "description": "Retrieve facts about one or more oVirt quotas.",
            "properties": {
              "name": {
                "type": "string"
              },
              "data_center": {
                "type": "string"
              }
            }
          },
          "apt_repository": {
            "required": [
              "repo"
            ],
            "type": "object",
            "description": "Add or remove an APT repositories in Ubuntu and Debian.",
            "properties": {
              "filename": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "ovirt_vmpools": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Module to manage VM pools in oVirt.",
            "properties": {
              "name": {
                "type": "string"
              },
              "vm_per_user": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "prestarted": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "vm_count": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "azure_rm_publicip_facts": {
            "type": "object",
            "description": "Get facts for a specific public IP or all public IPs within a resource group.",
            "properties": {
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "postgresql_schema": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove PostgreSQL schema from a remote host.",
            "properties": {
              "name": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "login_unix_socket": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "ecs_service": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "Creates or terminates ecs services.",
            "properties": {
              "repeat": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "desired_count": {
                "type": "string"
              },
              "task_definition": {
                "type": "string"
              },
              "delay": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "deployment_configuration": {
                "type": "string"
              },
              "load_balancers": {
                "type": "string"
              },
              "client_token": {
                "type": "string"
              }
            }
          },
          "pushover": {
            "required": [
              "msg",
              "user_key",
              "app_token"
            ],
            "type": "object",
            "description": "Send notifications via pushover, to subscriber list of devices, and email addresses. Requires pushover app on devices.",
            "properties": {
              "msg": {
                "type": "string"
              },
              "user_key": {
                "type": "string"
              },
              "app_token": {
                "type": "string"
              },
              "pri": {
                "type": "string"
              }
            }
          },
          "dellos9_command": {
            "required": [
              "commands"
            ],
            "type": "object",
            "description": "Sends arbitrary commands to a Dell OS9 node and returns the results read from the device. This  module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use M(dellos9_config) to configure Dell OS9 devices.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "wait_for": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              }
            }
          },
          "cnos_image": {
            "required": [
              "protocol",
              "serverusername",
              "imgtype",
              "serverip",
              "imgpath"
            ],
            "type": "object",
            "description": "This module allows you to work with switch firmware images. It provides a way to download a firmware image to a network device from a remote server using FTP, SFTP, TFTP, or SCP. The first step is to create a directory from where the remote server can be reached. The next step is to provide the full file path of the image’s location. Authentication details required by the remote server must be provided as well. By default, this method makes the newly downloaded firmware image the active image, which will be used by the switch during the next restart. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_image.html)",
            "properties": {
              "serverpassword": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "serverip": {
                "type": "string"
              },
              "imgpath": {
                "type": "string"
              },
              "serverusername": {
                "type": "string"
              },
              "imgtype": {
                "type": "string"
              }
            }
          },
          "dladm_linkprop": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "link",
                        "nic",
                        "interface"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "link"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "nic"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "interface"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "property",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "property"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Set / reset link properties on Solaris/illumos systems.",
            "properties": {
              "temporary": {
                "description": "Specifies that lin property configuration is temporary. Temporary link property configuration does not persist across reboots.",
                "$ref": "#/definitions/ansible_truth"
              },
              "name": {
                "type": "string"
              },
              "nic": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "property": {
                "type": "string"
              }
            }
          },
          "sts_assume_role": {
            "required": [
              "role_session_name",
              "role_arn"
            ],
            "type": "object",
            "description": "Assume a role using AWS Security Token Service and obtain temporary credentials",
            "properties": {
              "role_arn": {
                "type": "string"
              },
              "duration_seconds": {
                "type": "string"
              },
              "mfa_serial_number": {
                "type": "string"
              },
              "role_session_name": {
                "type": "string"
              },
              "mfa_token": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "external_id": {
                "type": "string"
              }
            }
          },
          "rax_cdb_user": {
            "type": "object",
            "description": "create / delete a database in the Cloud Databases.",
            "properties": {
              "db_password": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cdb_id": {
                "type": "string"
              },
              "db_username": {
                "type": "string"
              },
              "databases": {
                "type": "string"
              }
            }
          },
          "azure_rm_subnet": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "address_prefix_cidr",
                        "address_prefix"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "address_prefix_cidr"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "address_prefix"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "virtual_network_name",
                        "virtual_network"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "virtual_network_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "virtual_network"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "security_group_name",
                        "security_group"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update or delete a subnet within a given virtual network. Allows setting and updating the address prefix CIDR, which must be valid within the context of the virtual network. Use the azure_rm_networkinterface module to associate interfaces with the subnet and assign specific IP addresses.",
            "properties": {
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "virtual_network_name": {
                "type": "string"
              },
              "security_group_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "address_prefix": {
                "type": "string"
              },
              "address_prefix_cidr": {
                "type": "string"
              },
              "security_group": {
                "type": "string"
              },
              "virtual_network": {
                "type": "string"
              }
            }
          },
          "pkg5_publisher": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "publisher"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "publisher"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "IPS packages are the native packages in Solaris 11 and higher.\nThis modules will configure which publishers a client will download IPS packages from.",
            "properties": {
              "origin": {
                "type": "string"
              },
              "publisher": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "sticky": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "mirror": {
                "type": "string"
              }
            }
          },
          "openbsd_pkg": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manage packages on OpenBSD using the pkg tools.",
            "properties": {
              "ports_dir": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "build": {
                "type": "string"
              },
              "clean": {
                "type": "string"
              },
              "quick": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pn_vlag": {
            "required": [
              "pn_name",
              "state"
            ],
            "type": "object",
            "description": "Execute vlag-create/vlag-delete/vlag-modify command.\nA virtual link aggregation group (VLAG) allows links that are physically connected to two different Pluribus Networks devices to appear as a single trunk to a third device. The third device can be a switch, server, or any Ethernet device. A VLAG can provide Layer 2 multipathing, which allows you to create redundancy by increasing bandwidth, enabling multiple parallel paths between nodes and loadbalancing traffic where alternative paths exist.",
            "properties": {
              "pn_name": {
                "type": "string"
              },
              "pn_lacp_fallback": {
                "type": "string"
              },
              "pn_lacp_fallback_timeout": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_lacp_timeout": {
                "type": "string"
              },
              "pn_failover_action": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_lacp_mode": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_peer_port": {
                "type": "string"
              },
              "pn_peer_switch": {
                "type": "string"
              },
              "pn_mode": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_port": {
                "type": "string"
              }
            }
          },
          "nxos_ip_interface": {
            "required": [
              "interface"
            ],
            "type": "object",
            "description": "Manages Layer 3 attributes for IPv4 and IPv6 interfaces.",
            "properties": {
              "interface": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "mask": {
                "type": "string"
              },
              "addr": {
                "type": "string"
              }
            }
          },
          "bigip_snat_pool": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "members",
                        "member"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage SNAT pools on a BIG-IP.",
            "properties": {
              "member": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "members": {
                "type": "array"
              },
              "append": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "vmware_migrate_vmk": {
            "required": [
              "current_switch_name",
              "migrate_portgroup_name",
              "esxi_hostname",
              "device",
              "migrate_switch_name",
              "current_portgroup_name"
            ],
            "type": "object",
            "description": "Migrate a VMK interface from VSS to VDS",
            "properties": {
              "current_switch_name": {
                "type": "string"
              },
              "migrate_portgroup_name": {
                "type": "string"
              },
              "esxi_hostname": {
                "type": "string"
              },
              "device": {
                "type": "string"
              },
              "migrate_switch_name": {
                "type": "string"
              },
              "current_portgroup_name": {
                "type": "string"
              }
            }
          },
          "win_scheduled_task": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "executable",
                        "execute"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "arguments",
                        "argument"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage scheduled tasks",
            "properties": {
              "executable": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "days_of_week": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "execute": {
                "type": "string"
              },
              "argument": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              },
              "arguments": {
                "type": "string"
              },
              "time": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "rax_mon_alarm": {
            "required": [
              "entity_id",
              "notification_plan_id",
              "check_id",
              "label"
            ],
            "type": "object",
            "description": "Create or delete a Rackspace Cloud Monitoring alarm that associates an existing rax_mon_entity, rax_mon_check, and rax_mon_notification_plan with criteria that specify what conditions will trigger which levels of notifications. Rackspace monitoring module flow | rax_mon_entity -> rax_mon_check -> rax_mon_notification -> rax_mon_notification_plan -> *rax_mon_alarm*",
            "properties": {
              "entity_id": {
                "type": "string"
              },
              "notification_plan_id": {
                "type": "string"
              },
              "check_id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "disabled": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "criteria": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              }
            }
          },
          "ios_template": {
            "required": [
              "src",
              "include_defaults"
            ],
            "type": "object",
            "description": "Manages Cisco IOS network device configurations over SSH.  This module allows implementers to work with the device running-config.  It provides a way to push a set of commands onto a network device by evaluating the current running-config and only pushing configuration commands that are not already configured.  The config source can be a set of commands or a template.",
            "properties": {
              "src": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "include_defaults": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          },
          "wait_for_connection": {
            "type": "object",
            "description": "Waits for a total of C(timeout) seconds.\nRetries the transport connection after a timeout of C(connect_timeout).\nTests the transport connection every C(sleep) seconds.\nThis module makes use of internal ansible transport (and configuration) and the ping/win_ping module to guarantee correct end-to-end functioning.",
            "properties": {
              "delay": {
                "type": "string"
              },
              "sleep": {
                "type": "string"
              },
              "connect_timeout": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "clc_server": {
            "type": "object",
            "description": "An Ansible module to Create, Delete, Start and Stop servers in CenturyLink Cloud.",
            "properties": {
              "anti_affinity_policy_name": {
                "type": "string"
              },
              "storage_type": {
                "type": "string"
              },
              "anti_affinity_policy_id": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "count_group": {
                "type": "string"
              },
              "secondary_dns": {
                "type": "string"
              },
              "custom_fields": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "exact_count": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cpu_autoscale_policy_id": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "server_ids": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "managed_os": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "additional_disks": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "add_public_ip": {
                "type": "string"
              },
              "alert_policy_id": {
                "type": "string"
              },
              "alert_policy_name": {
                "type": "string"
              },
              "packages": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "os_type": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "count": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "network_id": {
                "type": "string"
              },
              "primary_dns": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              },
              "public_ip_ports": {
                "type": "string"
              },
              "source_server_password": {
                "type": "string"
              },
              "public_ip_protocol": {
                "type": "string"
              },
              "configuration_id": {
                "type": "string"
              },
              "cpu": {
                "type": "string"
              }
            }
          },
          "win_chocolatey": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Installs packages using Chocolatey (http://chocolatey.org/). If Chocolatey is missing from the system, the module will install it. List of packages can be found at http://chocolatey.org/packages",
            "properties": {
              "upgrade": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "ignore_checksums": {
                "type": "string"
              },
              "allow_empty_checksums": {
                "type": "string"
              },
              "install_args": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "ignore_dependencies": {
                "type": "string"
              }
            }
          },
          "iosxr_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from a remote device that is running iosxr.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "synchronize": {
            "required": [
              "src",
              "dest"
            ],
            "type": "object",
            "description": "C(synchronize) is a wrapper around rsync to make common tasks in your playbooks quick and easy. It is run and originates on the local host where Ansible is being run. Of course, you could just use the C(command) action to call rsync yourself, but you also have to add a fair number of boilerplate options and host facts. C(synchronize) is not intended to provide access to the full power of rsync, but does make the most common invocations easier to implement. You `still` may need to call rsync directly via C(command) or C(shell) depending on your use case.",
            "properties": {
              "partial": {
                "type": "string"
              },
              "links": {
                "type": "string"
              },
              "copy_links": {
                "type": "string"
              },
              "perms": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "archive": {
                "type": "string"
              },
              "dest_port": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "existing_only": {
                "type": "string"
              },
              "rsync_path": {
                "type": "string"
              },
              "verify_host": {
                "type": "string"
              },
              "use_ssh_args": {
                "type": "string"
              },
              "dirs": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "compress": {
                "type": "string"
              },
              "rsync_timeout": {
                "type": "string"
              },
              "rsync_opts": {
                "type": "string"
              },
              "set_remote_user": {
                "type": "string"
              },
              "recursive": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "checksum": {
                "type": "string"
              },
              "times": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "delete": {
                "type": "string"
              }
            }
          },
          "ovirt_nics": {
            "required": [
              "vm",
              "name"
            ],
            "type": "object",
            "description": "Module to manage network interfaces of Virtual Machines in oVirt.",
            "properties": {
              "profile": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "mac_address": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "kibana_plugin": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages Kibana plugins.",
            "properties": {
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "plugin_dir": {
                "type": "string"
              },
              "plugin_bin": {
                "type": "string"
              }
            }
          },
          "zabbix_group": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_url",
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_url"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "host_groups",
                        "host_group"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "host_groups"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "host_group"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create host groups if they do not exist.\nDelete existing host groups if they exist.",
            "properties": {
              "http_login_password": {
                "type": "string"
              },
              "host_groups": {
                "type": "array"
              },
              "url": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "http_login_user": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "host_group": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              }
            }
          },
          "opkg": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages OpenWrt packages",
            "properties": {
              "update_cache": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "debug": {
            "type": "object",
            "description": "This module prints statements during execution and can be useful for debugging variables or expressions without necessarily halting the playbook. Useful for debugging together with the 'when:' directive.",
            "properties": {
              "msg": {
                "type": "string"
              },
              "var": {
                "type": "string"
              },
              "verbosity": {
                "type": "string"
              }
            }
          },
          "puppet": {
            "type": "object",
            "description": "Runs I(puppet) agent or apply in a reliable manner",
            "properties": {
              "logdest": {
                "type": "string"
              },
              "execute": {
                "type": "string"
              },
              "certname": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "puppetmaster": {
                "type": "string"
              },
              "facter_basename": {
                "type": "string"
              },
              "manifest": {
                "type": "string"
              },
              "environment": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "facts": {
                "type": "string"
              }
            }
          },
          "win_dns_client": {
            "required": [
              "adapter_names",
              "ipv4_addresses"
            ],
            "type": "object",
            "description": "The C(win_dns_client) module configures the DNS client on Windows network adapters.",
            "properties": {
              "adapter_names": {
                "type": "string"
              },
              "ipv4_addresses": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_route_table": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "resource_tags"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage route tables for AWS virtual private clouds",
            "properties": {
              "subnets": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "routes": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "lookup": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "route_table_id": {
                "type": "string"
              },
              "resource_tags": {
                "type": "string"
              },
              "propagating_vgw_ids": {
                "type": "string"
              }
            }
          },
          "cloudscale_server": {
            "type": "object",
            "description": "Create, start, stop and delete servers on the cloudscale.ch IaaS service.\nAll operations are performed using the cloudscale.ch public API v1.\nFor details consult the full API documentation: U(https://www.cloudscale.ch/en/api/v1).\nAn valid API token is required for all operations. You can create as many tokens as you like using the cloudscale.ch control panel at U(https://control.cloudscale.ch).",
            "properties": {
              "anti_affinity_with": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "use_public_network": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "api_token": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "bulk_volume_size_gb": {
                "type": "string"
              },
              "volume_size_gb": {
                "type": "string"
              },
              "use_private_network": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "use_ipv6": {
                "type": "string"
              },
              "flavor": {
                "type": "string"
              },
              "ssh_keys": {
                "type": "array"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "win_acl_inheritance": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Change ACL (Access Control List) inheritance and optionally copy inherited ACE's (Access Control Entry) to dedicated ACE's or vice versa.",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "reorganize": {
                "type": "string"
              }
            }
          },
          "nxos_vtp_version": {
            "required": [
              "version"
            ],
            "type": "object",
            "description": "Manages VTP version configuration.",
            "properties": {
              "version": {
                "type": "string"
              }
            }
          },
          "aos_ip_pool": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Ip Pool module let you manage your IP Pool easily. You can create create and delete IP Pool by Name, ID or by using a JSON File. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "subnets": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "proxysql_scheduler": {
            "required": [
              "filename"
            ],
            "type": "object",
            "description": "The M(proxysql_scheduler) module adds or removes schedules using the proxysql admin interface.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "login_port": {
                "type": "string"
              },
              "config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "arg1": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "arg2": {
                "type": "string"
              },
              "arg3": {
                "type": "string"
              },
              "arg4": {
                "type": "string"
              },
              "arg5": {
                "type": "string"
              },
              "filename": {
                "type": "string"
              },
              "force_delete": {
                "type": "string"
              },
              "interval_ms": {
                "type": "string"
              },
              "load_to_runtime": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "active": {
                "type": "string"
              },
              "save_to_disk": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              }
            }
          },
          "homebrew_cask": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "update_homebrew",
                        "update-brew"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg",
                        "package",
                        "cask"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pkg"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "package"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "cask"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "install_options",
                        "options"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages Homebrew casks.",
            "properties": {
              "install_options": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "package": {
                "type": "string"
              },
              "update_homebrew": {
                "type": "string"
              },
              "cask": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "update-brew": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "options": {
                "type": "string"
              }
            }
          },
          "vertica_schema": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "create_roles",
                        "create_role"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "usage_roles",
                        "usage_role"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Adds or removes Vertica database schema and, optionally, roles with schema access privileges.\nA schema will not be removed until all the objects have been dropped.\nIn such a situation, if the module tries to remove the schema it will fail and only remove roles created for the schema if they have no dependencies.",
            "properties": {
              "create_roles": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "usage_roles": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "usage_role": {
                "type": "string"
              },
              "create_role": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "cs_instancegroup": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create and remove instance groups.",
            "properties": {
              "project": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "azure_rm_securitygroup": {
            "required": [
              "resource_group"
            ],
            "type": "object",
            "description": "Create, update or delete a network security group. A security group contains Access Control List (ACL) rules that allow or deny network traffic to subnets or individual network interfaces. A security group is created with a set of default security rules and an empty set of security rules. Shape traffic flow by adding rules to the empty set of security rules.",
            "properties": {
              "resource_group": {
                "type": "string"
              },
              "purge_rules": {
                "type": "string"
              },
              "rules": {
                "type": "string"
              },
              "default_rules": {
                "type": "string"
              },
              "purge_default_rules": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pn_vrouterbgp": {
            "required": [
              "pn_vrouter_name",
              "state"
            ],
            "type": "object",
            "description": "Execute vrouter-bgp-add, vrouter-bgp-remove, vrouter-bgp-modify command.\nEach fabric, cluster, standalone switch, or virtual network (VNET) can provide its tenants with a vRouter service that forwards traffic between networks and implements Layer 4 protocols.",
            "properties": {
              "pn_vrouter_name": {
                "type": "string"
              },
              "pn_soft_reconfig": {
                "type": "string"
              },
              "pn_ebgp": {
                "type": "string"
              },
              "pn_route_reflector": {
                "type": "string"
              },
              "pn_keepalive": {
                "type": "string"
              },
              "pn_multiprotocol": {
                "type": "string"
              },
              "pn_prefix_listout": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_max_prefix": {
                "type": "string"
              },
              "pn_route_mapout": {
                "type": "string"
              },
              "pn_bfd": {
                "type": "string"
              },
              "pn_override_capability": {
                "type": "string"
              },
              "pn_route_mapin": {
                "type": "string"
              },
              "pn_prefix_listin": {
                "type": "string"
              },
              "pn_password": {
                "type": "string"
              },
              "pn_neighbor": {
                "type": "string"
              },
              "pn_default_originate": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_weight": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_remote_as": {
                "type": "string"
              },
              "pn_max_prefix_warn": {
                "type": "string"
              },
              "pn_holdtime": {
                "type": "string"
              },
              "pn_next_hop_self": {
                "type": "string"
              }
            }
          },
          "ec2": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "group",
                        "groups"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "zone",
                        "aws_zone",
                        "ec2_zone"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "key_name",
                        "keypair"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_ids",
                        "instance_id"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "region",
                        "aws_region",
                        "ec2_region"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "network_interfaces",
                        "network_interface"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates or terminates ec2 instances.\nC(state=restarted) was added in 2.2",
            "properties": {
              "kernel": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "instance_initiated_shutdown_behavior": {
                "type": "string"
              },
              "termination_protection": {
                "type": "string"
              },
              "private_ip": {
                "type": "string"
              },
              "spot_type": {
                "type": "string"
              },
              "source_dest_check": {
                "type": "string"
              },
              "spot_wait_timeout": {
                "type": "string"
              },
              "monitoring": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "exact_count": {
                "type": "string"
              },
              "ebs_optimized": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "placement_group": {
                "type": "string"
              },
              "count_tag": {
                "type": "string"
              },
              "ec2_region": {
                "type": "string"
              },
              "network_interface": {
                "type": "string"
              },
              "ramdisk": {
                "type": "string"
              },
              "count": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "spot_launch_group": {
                "type": "string"
              },
              "vpc_subnet_id": {
                "type": "string"
              },
              "instance_ids": {
                "type": "array"
              },
              "spot_price": {
                "type": "string"
              },
              "tenancy": {
                "type": "string"
              },
              "groups": {
                "type": "string"
              },
              "assign_public_ip": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "aws_zone": {
                "type": "string"
              },
              "aws_region": {
                "type": "string"
              },
              "instance_profile_name": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "network_interfaces": {
                "type": "string"
              },
              "keypair": {
                "type": "string"
              },
              "ec2_zone": {
                "type": "string"
              },
              "instance_id": {
                "type": "array"
              },
              "instance_type": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "volumes": {
                "type": "string"
              },
              "instance_tags": {
                "type": "string"
              },
              "group_id": {
                "type": "string"
              }
            }
          },
          "vca_fw": {
            "required": [
              "fw_rules"
            ],
            "type": "object",
            "description": "Adds or removes firewall rules from a gateway in a vca environment",
            "properties": {
              "fw_rules": {
                "type": "string"
              }
            }
          },
          "opendj_backendprop": {
            "required": [
              "name",
              "hostname",
              "value",
              "port",
              "backend"
            ],
            "type": "object",
            "description": "This module will update settings for OpenDJ with the command set-backend-prop.\nIt will check first via de get-backend-prop if configuration needs to be applied.",
            "properties": {
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "passwordfile": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "opendj_bindir": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "backend": {
                "type": "string"
              }
            }
          },
          "cnos_backup": {
            "required": [
              "serverpassword",
              "configType",
              "protocol",
              "serverusername",
              "rcserverip",
              "rcpath"
            ],
            "type": "object",
            "description": "This module allows you to work with switch configurations. It provides a way to back up the running or startup configurations of a switch to a remote server. This is achieved by periodically saving a copy of the startup or running configuration of the network device to a remote server using FTP, SFTP, TFTP, or SCP. The first step is to create a directory from where the remote server can be reached. The next step is to provide the full file path of the location where the configuration will be backed up. Authentication details required by the remote server must be provided as well. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_backup.html)",
            "properties": {
              "serverpassword": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "configType": {
                "type": "string"
              },
              "serverusername": {
                "type": "string"
              },
              "rcserverip": {
                "type": "string"
              },
              "rcpath": {
                "type": "string"
              }
            }
          },
          "os_subnet": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or Remove a subnet to an OpenStack network",
            "properties": {
              "no_gateway_ip": {
                "type": "string"
              },
              "use_default_subnetpool": {
                "type": "string"
              },
              "enable_dhcp": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "dns_nameservers": {
                "type": "array"
              },
              "gateway_ip": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "ipv6_ra_mode": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "allocation_pool_start": {
                "type": "string"
              },
              "host_routes": {
                "type": "string"
              },
              "ip_version": {
                "type": "string"
              },
              "ipv6_address_mode": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "network_name": {
                "type": "string"
              },
              "allocation_pool_end": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "vmware_vm_vss_dvs_migrate": {
            "required": [
              "vm_name",
              "dvportgroup_name"
            ],
            "type": "object",
            "description": "Migrates a virtual machine from a standard vswitch to distributed",
            "properties": {
              "vm_name": {
                "type": "string"
              },
              "dvportgroup_name": {
                "type": "string"
              }
            }
          },
          "cs_loadbalancer_rule_member": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ip_address",
                        "public_ip"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "vms",
                        "vm"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "vms"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "vm"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add and remove load balancer rule members.",
            "properties": {
              "public_ip": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "vm": {
                "type": "array"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "vms": {
                "type": "array"
              }
            }
          },
          "eos_user": {
            "type": "object",
            "description": "This module provides declarative management of the local usernames configured on Arista EOS devices.  It allows playbooks to manage either individual usernames or the collection of usernames in the current running config.  It also supports purging usernames from the configuration that are not explicitly defined.",
            "properties": {
              "username": {
                "type": "string"
              },
              "update_password": {
                "type": "string"
              },
              "users": {
                "type": "string"
              },
              "purge": {
                "description": "Instructs the module to consider the resource definition absolute.  It will remove any previously configured usernames on the device with the exception of the `admin` user which cannot be deleted per EOS constraints.",
                "$ref": "#/definitions/ansible_truth"
              },
              "nopassword": {
                "description": "Defines the username without assigning a password.  This will allow the user to login to the system without being authenticated by a password.",
                "$ref": "#/definitions/ansible_truth"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "privilege": {
                "type": "string"
              },
              "sshkey": {
                "type": "string"
              }
            }
          },
          "azure_rm_deployment": {
            "required": [
              "resource_group_name"
            ],
            "type": "object",
            "description": "Create or destroy Azure Resource Manager template deployments via the Azure SDK for Python. You can find some quick start templates in GitHub here https://github.com/azure/azure-quickstart-templates. For more information on Azue resource manager templates see https://azure.microsoft.com/en-us/documentation/articles/resource-group-template-deploy/.",
            "properties": {
              "resource_group_name": {
                "type": "string"
              },
              "parameters": {
                "type": "string"
              },
              "deployment_name": {
                "type": "string"
              },
              "wait_for_deployment_polling_period": {
                "type": "string"
              },
              "template_link": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "wait_for_deployment_completion": {
                "type": "string"
              },
              "parameters_link": {
                "type": "string"
              },
              "deployment_mode": {
                "type": "string"
              },
              "template": {
                "type": "string"
              }
            }
          },
          "ordnance_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from an Ordnance Virtual router over SSH. This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "eos_system": {
            "type": "object",
            "description": "This module provides declarative management of node system attributes on Arista EOS devices.  It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
            "properties": {
              "lookup_source": {
                "type": "string"
              },
              "domain_search": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "domain_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name_servers": {
                "type": "array"
              }
            }
          },
          "rax_queue": {
            "type": "object",
            "description": "creates / deletes a Rackspace Public Cloud queue.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "packet_sshkey": {
            "type": "object",
            "description": "Create/delete an SSH key in Packet host.\nAPI is documented at U(https://www.packet.net/help/api/#page:ssh-keys,header:ssh-keys-ssh-keys-post).",
            "properties": {
              "auth_token": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "fingerprint": {
                "type": "string"
              },
              "key_file": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "nmcli": {
            "required": [
              "conn_name",
              "state"
            ],
            "type": "object",
            "description": "Manage the network devices. Create, modify, and manage, ethernet, teams, bonds, vlans etc.",
            "properties": {
              "conn_name": {
                "type": "string"
              },
              "ingress": {
                "type": "string"
              },
              "slavepriority": {
                "type": "string"
              },
              "path_cost": {
                "type": "string"
              },
              "vlandev": {
                "type": "string"
              },
              "forwarddelay": {
                "type": "string"
              },
              "primary": {
                "type": "string"
              },
              "hairpin": {
                "type": "string"
              },
              "egress": {
                "type": "string"
              },
              "ageingtime": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              },
              "arp_ip_target": {
                "type": "string"
              },
              "maxage": {
                "type": "string"
              },
              "vlanid": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "gw4": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "gw6": {
                "type": "string"
              },
              "master": {
                "type": "string"
              },
              "flags": {
                "type": "string"
              },
              "ifname": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "miimon": {
                "type": "string"
              },
              "hellotime": {
                "type": "string"
              },
              "downdelay": {
                "type": "string"
              },
              "mac": {
                "type": "string"
              },
              "ip6": {
                "type": "string"
              },
              "ip4": {
                "type": "string"
              },
              "autoconnect": {
                "type": "string"
              },
              "dns6": {
                "type": "string"
              },
              "dns4": {
                "type": "string"
              },
              "arp_interval": {
                "type": "string"
              },
              "stp": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "updelay": {
                "type": "string"
              }
            }
          },
          "logicmonitor": {
            "required": [
              "company",
              "user",
              "password",
              "target",
              "action"
            ],
            "type": "object",
            "description": "LogicMonitor is a hosted, full-stack, infrastructure monitoring platform.\nThis module manages hosts, host groups, and collectors within your LogicMonitor account.",
            "properties": {
              "displayname": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "fullpath": {
                "type": "string"
              },
              "properties": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "groups": {
                "type": "string"
              },
              "duration": {
                "type": "string"
              },
              "alertenable": {
                "type": "string"
              },
              "starttime": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "collector": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "target": {
                "type": "string"
              }
            }
          },
          "avi_role": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure Role object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "uuid": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "privileges": {
                "type": "array"
              },
              "tenant_ref": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_igw": {
            "required": [
              "vpc_id"
            ],
            "type": "object",
            "description": "Manage an AWS VPC Internet gateway",
            "properties": {
              "vpc_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "include": {
            "type": "object",
            "description": "Includes a file with a list of plays or tasks to be executed in the current playbook.\nFiles with a list of plays can only be included at the top level, lists of tasks can only be included where tasks normally run (in play).\nBefore 2.0 all includes were 'static', executed at play compile time.\nStatic includes are not subject to most directives, for example, loops or conditionals, they are applied instead to each inherited task.\nSince 2.0 task includes are dynamic and behave more like real tasks.  This means they can be looped, skipped and use variables from any source. Ansible tries to auto detect this, use the `static` directive (new in 2.1) to bypass autodetection.",
            "properties": {
              "free-form": {
                "type": "string"
              }
            }
          },
          "ovh_ip_loadbalancing_backend": {
            "required": [
              "endpoint",
              "name",
              "application_key",
              "application_secret",
              "consumer_key",
              "backend"
            ],
            "type": "object",
            "description": "Manage OVH (French European hosting provider) LoadBalancing IP backends",
            "properties": {
              "endpoint": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "probe": {
                "type": "string"
              },
              "application_key": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "application_secret": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "consumer_key": {
                "type": "string"
              },
              "backend": {
                "type": "string"
              }
            }
          },
          "azure_rm_resouregroup_facts": {
            "type": "object",
            "description": "Get facts for a specific resource group or all resource groups.",
            "properties": {
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "win_path": {
            "required": [
              "elements"
            ],
            "type": "object",
            "description": "Allows element-based ordering, addition, and removal of Windows path environment variables.",
            "properties": {
              "scope": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "elements": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "proxmox_template": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "src",
                        "path"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "allows you to upload/delete templates in Proxmox VE cluster",
            "properties": {
              "node": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "force": {
                "description": "can be used only with C(state=present), exists template will be overwritten",
                "$ref": "#/definitions/ansible_truth"
              },
              "api_host": {
                "type": "string"
              },
              "api_user": {
                "type": "string"
              },
              "storage": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "content_type": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "validate_certs": {
                "description": "enable / disable https certificate verification",
                "$ref": "#/definitions/ansible_truth"
              },
              "template": {
                "type": "string"
              }
            }
          },
          "s3_sync": {
            "required": [
              "file_root",
              "bucket",
              "mode"
            ],
            "type": "object",
            "description": "The S3 module is great, but it is very slow for a large volume of files- even a dozen will be noticeable. In addition to speed, it handles globbing, inclusions/exclusions, mime types, expiration mapping, recursion, and smart directory mapping.",
            "properties": {
              "file_change_strategy": {
                "type": "string"
              },
              "file_root": {
                "type": "string"
              },
              "permission": {
                "type": "string"
              },
              "bucket": {
                "type": "string"
              },
              "include": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "exclude": {
                "type": "string"
              },
              "mime_map": {
                "type": "string"
              },
              "key_prefix": {
                "type": "string"
              }
            }
          },
          "dellos9_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from a remote device that is running OS9.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module always collects  a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "docker_service": {
            "type": "object",
            "description": "Consumes docker compose to start, shutdown and scale services.\nWorks with compose versions 1 and 2.\nCompose can be read from a docker-compose.yml (or .yaml) file or inline using the C(definition) option.\nSee the examples for more details.\nSupports check mode.",
            "properties": {
              "files": {
                "type": "array"
              },
              "pull": {
                "description": "Use with state I(present) to always pull images prior to starting the application.\nSame as running docker-compose pull.\nWhen a new image is pulled, services using the image will be recreated unless C(recreate) is I(never).",
                "$ref": "#/definitions/ansible_truth"
              },
              "project_name": {
                "type": "string"
              },
              "nocache": {
                "description": "Use with the build option to ignore the cache during the image build process.",
                "$ref": "#/definitions/ansible_truth"
              },
              "project_src": {
                "type": "string"
              },
              "hostname_check": {
                "description": "Whether or not to check the Docker daemon's hostname against the name provided in the client certificate.",
                "$ref": "#/definitions/ansible_truth"
              },
              "recreate": {
                "type": "string"
              },
              "restarted": {
                "description": "Use with state I(present) to restart all containers.",
                "$ref": "#/definitions/ansible_truth"
              },
              "debug": {
                "description": "Include I(actions) in the return values.",
                "$ref": "#/definitions/ansible_truth"
              },
              "state": {
                "type": "string"
              },
              "dependencies": {
                "description": "When C(state) is I(present) specify whether or not to include linked services.",
                "$ref": "#/definitions/ansible_truth"
              },
              "remove_images": {
                "type": "string"
              },
              "scale": {
                "type": "string"
              },
              "services": {
                "type": "string"
              },
              "stopped": {
                "description": "Use with state I(present) to leave the containers in an exited or non-running state.",
                "$ref": "#/definitions/ansible_truth"
              },
              "definition": {
                "type": "string"
              },
              "remove_volumes": {
                "description": "Use with state I(absent) to remove data volumes.",
                "$ref": "#/definitions/ansible_truth"
              },
              "build": {
                "description": "Use with state I(present) to always build images prior to starting the application.\nSame as running docker-compose build with the pull option.\nImages will only be rebuilt if Docker detects a change in the Dockerfile or build directory contents.\nUse the C(nocache) option to ignore the image cache when performing the build.\nIf an existing image is replaced, services using the image will be recreated unless C(recreate) is I(never).",
                "$ref": "#/definitions/ansible_truth"
              }
            }
          },
          "cs_region": {
            "required": [
              "id"
            ],
            "type": "object",
            "description": "Add, update and remove regions.",
            "properties": {
              "state": {
                "type": "string"
              },
              "endpoint": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "portinstall": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage packages for FreeBSD using 'portinstall'.",
            "properties": {
              "state": {
                "type": "string"
              },
              "use_packages": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_vgw_facts": {
            "type": "object",
            "description": "Gather facts about virtual gateways in AWS.",
            "properties": {
              "vpn_gateway_ids": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              }
            }
          },
          "sf_volume_manager": {
            "required": [
              "name",
              "account_id",
              "state"
            ],
            "type": "object",
            "description": "Create, destroy, or update volumes on SolidFire",
            "properties": {
              "qos": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "size_unit": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "volume_id": {
                "type": "string"
              },
              "512emulation": {
                "type": "string"
              },
              "attributes": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "account_id": {
                "type": "string"
              }
            }
          },
          "os_image_facts": {
            "required": [
              "image"
            ],
            "type": "object",
            "description": "Retrieve facts about a image image from OpenStack.",
            "properties": {
              "image": {
                "type": "string"
              }
            }
          },
          "ipadm_addr": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "address",
                        "addr"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create/delete static/dynamic IP addresses on network interfaces on Solaris/illumos systems.\nUp/down static/dynamic IP addresses on network interfaces on Solaris/illumos systems.\nManage IPv6 link-local addresses on network interfaces on Solaris/illumos systems.",
            "properties": {
              "addrtype": {
                "type": "string"
              },
              "temporary": {
                "type": "string"
              },
              "addr": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "addrobj": {
                "type": "string"
              }
            }
          },
          "nxos_vtp_domain": {
            "required": [
              "domain"
            ],
            "type": "object",
            "description": "Manages VTP domain configuration.",
            "properties": {
              "domain": {
                "type": "string"
              }
            }
          },
          "ec2_metric_alarm": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "Can create or delete AWS metric alarms.\nMetrics you wish to alarm on must already exist.",
            "properties": {
              "comparison": {
                "type": "string"
              },
              "alarm_actions": {
                "type": "string"
              },
              "ok_actions": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "evaluation_periods": {
                "type": "string"
              },
              "metric": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "period": {
                "type": "string"
              },
              "dimensions": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "insufficient_data_actions": {
                "type": "string"
              },
              "statistic": {
                "type": "string"
              },
              "threshold": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "docker_container": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "published_ports",
                        "ports"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "exposed_ports",
                        "exposed"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage the life cycle of docker containers.\nSupports check mode. Run with --check and --diff to view config difference and list of actions to be taken.",
            "properties": {
              "tty": {
                "type": "string"
              },
              "dns_servers": {
                "type": "array"
              },
              "links": {
                "type": "array"
              },
              "oom_score_adj": {
                "type": "string"
              },
              "exposed": {
                "type": "array"
              },
              "image": {
                "type": "string"
              },
              "recreate": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "memory_reservation": {
                "type": "string"
              },
              "paused": {
                "type": "string"
              },
              "trust_image_content": {
                "type": "string"
              },
              "cpuset_cpus": {
                "type": "string"
              },
              "stop_timeout": {
                "type": "string"
              },
              "security_opts": {
                "type": "array"
              },
              "force_kill": {
                "type": "string"
              },
              "pid_mode": {
                "type": "string"
              },
              "env_file": {
                "type": "string"
              },
              "networks": {
                "type": "array"
              },
              "cpu_quota": {
                "type": "string"
              },
              "log_driver": {
                "type": "string"
              },
              "cpu_period": {
                "type": "string"
              },
              "keep_volumes": {
                "type": "string"
              },
              "cpuset_mems": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "restart_retries": {
                "type": "string"
              },
              "capabilities": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "cleanup": {
                "type": "string"
              },
              "entrypoint": {
                "type": "string"
              },
              "memory_swap": {
                "type": "string"
              },
              "env": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "volumes_from": {
                "type": "array"
              },
              "blkio_weight": {
                "type": "string"
              },
              "log_options": {
                "type": "string"
              },
              "privileged": {
                "type": "string"
              },
              "exposed_ports": {
                "type": "array"
              },
              "read_only": {
                "type": "string"
              },
              "labels": {
                "type": "string"
              },
              "ipc_mode": {
                "type": "string"
              },
              "oom_killer": {
                "type": "string"
              },
              "shm_size": {
                "type": "string"
              },
              "mac_address": {
                "type": "string"
              },
              "memory_swappiness": {
                "type": "string"
              },
              "kill_signal": {
                "type": "string"
              },
              "network_mode": {
                "type": "string"
              },
              "volume_driver": {
                "type": "string"
              },
              "kernel_memory": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "groups": {
                "type": "array"
              },
              "detach": {
                "type": "string"
              },
              "restart": {
                "type": "string"
              },
              "pull": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "stop_signal": {
                "type": "string"
              },
              "restart_policy": {
                "type": "string"
              },
              "ignore_image": {
                "type": "string"
              },
              "devices": {
                "type": "array"
              },
              "etc_hosts": {
                "type": "string"
              },
              "uts": {
                "type": "string"
              },
              "published_ports": {
                "type": "array"
              },
              "volumes": {
                "type": "array"
              },
              "dns_search_domains": {
                "type": "array"
              },
              "purge_networks": {
                "type": "string"
              },
              "cpu_shares": {
                "type": "string"
              },
              "ports": {
                "type": "array"
              },
              "ulimits": {
                "type": "array"
              },
              "interactive": {
                "type": "string"
              }
            }
          },
          "cnos_factory": {
            "type": "object",
            "description": "This module allows you to reset a switch’s startup configuration. The method provides a way to reset the startup configuration to its factory settings. This is helpful when you want to move the switch to another topology as a new network device. This module uses SSH to manage network device configuration. The results of the operation can be viewed in results directory. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_factory.html)",
            "properties": {}
          },
          "vmware_vsan_cluster": {
            "type": "object",
            "description": "This module can be used to configure VSAN clustering on an ESXi host",
            "properties": {
              "cluster_uuid": {
                "type": "string"
              }
            }
          },
          "ovirt_permissions_facts": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "authz_name",
                        "domain"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "authz_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "domain"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Retrieve facts about one or more oVirt permissions.",
            "properties": {
              "authz_name": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "user_name": {
                "type": "string"
              },
              "group_name": {
                "type": "string"
              }
            }
          },
          "quantum_network": {
            "required": [
              "login_tenant_name",
              "login_password",
              "login_username",
              "name"
            ],
            "type": "object",
            "description": "Add or Remove network from OpenStack.",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "provider_network_type": {
                "type": "string"
              },
              "admin_state_up": {
                "type": "string"
              },
              "router_external": {
                "type": "string"
              },
              "tenant_name": {
                "type": "string"
              },
              "provider_physical_network": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "shared": {
                "type": "string"
              },
              "provider_segmentation_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "dellos10_config": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lines",
                        "commands"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Dell OS10 configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with Dell OS10 configuration sections in a deterministic way.",
            "properties": {
              "src": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "deploy_helper": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "dest"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "The Deploy Helper manages some of the steps common in deploying software. It creates a folder structure, manages a symlink for the current release and cleans up old releases.\nRunning it with the C(state=query) or C(state=present) will return the C(deploy_helper) fact. C(project_path), whatever you set in the path parameter, C(current_path), the path to the symlink that points to the active release, C(releases_path), the path to the folder to keep releases in, C(shared_path), the path to the folder to keep shared resources in, C(unfinished_filename), the file to check for to recognize unfinished builds, C(previous_release), the release the 'current' symlink is pointing to, C(previous_release_path), the full path to the 'current' symlink target, C(new_release), either the 'release' parameter or a generated timestamp, C(new_release_path), the path to the new release folder (not created by the module).",
            "properties": {
              "unfinished_filename": {
                "type": "string"
              },
              "keep_releases": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "current_path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "shared_path": {
                "type": "string"
              },
              "releases_path": {
                "type": "string"
              },
              "clean": {
                "type": "string"
              },
              "release": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "rax_scaling_policy": {
            "required": [
              "name",
              "scaling_group",
              "policy_type"
            ],
            "type": "object",
            "description": "Manipulate Rackspace Cloud Autoscale Scaling Policy",
            "properties": {
              "is_percent": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "scaling_group": {
                "type": "string"
              },
              "cron": {
                "type": "string"
              },
              "desired_capacity": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cooldown": {
                "type": "string"
              },
              "at": {
                "type": "string"
              },
              "policy_type": {
                "type": "string"
              },
              "change": {
                "type": "string"
              }
            }
          },
          "librato_annotation": {
            "required": [
              "links",
              "title",
              "api_key",
              "user"
            ],
            "type": "object",
            "description": "Create an annotation event on the given annotation stream :name. If the annotation stream does not exist, it will be created automatically",
            "properties": {
              "user": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "links": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "start_time": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "end_time": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "gc_storage": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "force",
                        "overwrite"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows users to manage their objects/buckets in Google Cloud Storage.  It allows upload and download operations and can set some canned permissions. It also allows retrieval of URLs for objects for use in playbooks, and retrieval of string contents of objects.  This module requires setting the default project in GCS prior to playbook usage.  See U(https://developers.google.com/storage/docs/reference/v1/apiversion1) for information about setting the default project.",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "permission": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "gs_access_key": {
                "type": "string"
              },
              "object": {
                "type": "string"
              },
              "bucket": {
                "type": "string"
              },
              "headers": {
                "type": "string"
              },
              "gs_secret_key": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "overwrite": {
                "type": "string"
              },
              "expiration": {
                "type": "string"
              }
            }
          },
          "nxos_user": {
            "type": "object",
            "description": "This module provides declarative management of the local usernames configured on Cisco Nexus devices.  It allows playbooks to manage either individual usernames or the collection of usernames in the current running config.  It also supports purging usernames from the configuration that are not explicitly defined.",
            "properties": {
              "update_password": {
                "type": "string"
              },
              "sshkey": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "purge": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "users": {
                "type": "string"
              }
            }
          },
          "sefcontext": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "target",
                        "path"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "target"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "selevel",
                        "serange"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages SELinux file context mapping definitions\nSimilar to the C(semanage fcontext) command",
            "properties": {
              "serange": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "selevel": {
                "type": "string"
              },
              "seuser": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "reload": {
                "type": "string"
              },
              "setype": {
                "type": "string"
              },
              "ftype": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "nxos_aaa_server_host": {
            "required": [
              "server_type",
              "address"
            ],
            "type": "object",
            "description": "Manages AAA server host-specific configuration.",
            "properties": {
              "server_type": {
                "type": "string"
              },
              "encrypt_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_port": {
                "type": "string"
              },
              "tacacs_port": {
                "type": "string"
              },
              "host_timeout": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "acct_port": {
                "type": "string"
              }
            }
          },
          "cs_instance_facts": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Gathering facts from the API of an instance.",
            "properties": {
              "project": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "vmware_dvs_host": {
            "required": [
              "state",
              "vmnics",
              "switch_name",
              "esxi_hostname"
            ],
            "type": "object",
            "description": "Add or remove a host from distributed virtual switch",
            "properties": {
              "state": {
                "type": "string"
              },
              "vmnics": {
                "type": "string"
              },
              "switch_name": {
                "type": "string"
              },
              "esxi_hostname": {
                "type": "string"
              }
            }
          },
          "os_user_group": {
            "required": [
              "group",
              "user"
            ],
            "type": "object",
            "description": "Add and remove users from groups",
            "properties": {
              "state": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              }
            }
          },
          "s3_bucket": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "s3_url",
                        "S3_URL"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage S3 buckets in AWS, Ceph, Walrus and FakeS3",
            "properties": {
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "ceph": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "requester_pays": {
                "type": "string"
              },
              "s3_url": {
                "type": "string"
              },
              "S3_URL": {
                "type": "string"
              },
              "versioning": {
                "type": "string"
              }
            }
          },
          "rabbitmq_policy": {
            "required": [
              "name",
              "tags",
              "pattern"
            ],
            "type": "object",
            "description": "Manage the state of a virtual host in RabbitMQ.",
            "properties": {
              "node": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "vhost": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "apply_to": {
                "type": "string"
              }
            }
          },
          "route53_facts": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "resource_id",
                        "resource_ids"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Gets various details related to Route53 zone, record set or health check details",
            "properties": {
              "start_record_name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "hosted_zone_method": {
                "type": "string"
              },
              "dns_name": {
                "type": "string"
              },
              "health_check_method": {
                "type": "string"
              },
              "max_items": {
                "type": "string"
              },
              "hosted_zone_id": {
                "type": "string"
              },
              "health_check_id": {
                "type": "string"
              },
              "change_id": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "resource_ids": {
                "type": "string"
              },
              "delegation_set_id": {
                "type": "string"
              },
              "next_marker": {
                "type": "string"
              }
            }
          },
          "homebrew_tap": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "tap"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "tap"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Tap external Homebrew repositories.",
            "properties": {
              "url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tap": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ovirt_datacenters": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Module to manage data centers in oVirt",
            "properties": {
              "comment": {
                "type": "string"
              },
              "compatibility_version": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "mac_pool": {
                "type": "string"
              },
              "quota_mode": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "local": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "na_cdot_license": {
            "type": "object",
            "description": "Add or remove licenses on NetApp ONTAP.",
            "properties": {
              "remove_expired": {
                "type": "string"
              },
              "serial_number": {
                "type": "string"
              },
              "licenses": {
                "type": "array"
              },
              "remove_unused": {
                "type": "string"
              }
            }
          },
          "easy_install": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Installs Python libraries, optionally in a I(virtualenv)",
            "properties": {
              "virtualenv": {
                "type": "string"
              },
              "virtualenv_command": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "virtualenv_site_packages": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "yum": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pkg"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "update_cache",
                        "expire-cache"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Installs, upgrade, removes, and lists packages and groups with the I(yum) package manager.",
            "properties": {
              "expire-cache": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "list": {
                "type": "string"
              },
              "disable_gpg_check": {
                "type": "string"
              },
              "conf_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "disablerepo": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "enablerepo": {
                "type": "string"
              },
              "exclude": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "installroot": {
                "type": "string"
              },
              "skip_broken": {
                "type": "string"
              }
            }
          },
          "rax_mon_notification_plan": {
            "required": [
              "label"
            ],
            "type": "object",
            "description": "Create or delete a Rackspace Cloud Monitoring notification plan by associating existing rax_mon_notifications with severity levels. Rackspace monitoring module flow | rax_mon_entity -> rax_mon_check -> rax_mon_notification -> *rax_mon_notification_plan* -> rax_mon_alarm",
            "properties": {
              "ok_state": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "warning_state": {
                "type": "string"
              },
              "critical_state": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          },
          "elasticache": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cache_parameter_group",
                        "parameter_group"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage cache clusters in Amazon Elasticache.\nReturns information about the specified cache cluster.",
            "properties": {
              "engine": {
                "type": "string"
              },
              "cache_port": {
                "type": "string"
              },
              "security_group_ids": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "cache_engine_version": {
                "type": "string"
              },
              "node_type": {
                "type": "string"
              },
              "parameter_group": {
                "type": "string"
              },
              "num_nodes": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cache_security_groups": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "hard_modify": {
                "type": "string"
              },
              "cache_subnet_group": {
                "type": "string"
              },
              "cache_parameter_group": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "lambda": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "zip_file",
                        "src"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "environment_variables",
                        "environment"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Allows for the management of Lambda functions.",
            "properties": {
              "src": {
                "type": "string"
              },
              "vpc_security_group_ids": {
                "type": "array"
              },
              "description": {
                "type": "string"
              },
              "s3_key": {
                "type": "string"
              },
              "zip_file": {
                "type": "string"
              },
              "s3_object_version": {
                "type": "string"
              },
              "environment": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "handler": {
                "type": "string"
              },
              "memory_size": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "environment_variables": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "dead_letter_arn": {
                "type": "string"
              },
              "runtime": {
                "type": "string"
              },
              "s3_bucket": {
                "type": "string"
              },
              "vpc_subnet_ids": {
                "type": "array"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "open_iscsi": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "auto_node_startup",
                        "automatic"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "target",
                        "name",
                        "targetname"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "portal",
                        "ip"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Discover targets on given portal, (dis)connect targets, mark targets to manually or auto start, return device nodes of connected targets.",
            "properties": {
              "auto_node_startup": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "show_nodes": {
                "type": "string"
              },
              "node_auth": {
                "type": "string"
              },
              "automatic": {
                "type": "string"
              },
              "node_pass": {
                "type": "string"
              },
              "discover": {
                "type": "string"
              },
              "portal": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "login": {
                "type": "string"
              },
              "node_user": {
                "type": "string"
              },
              "targetname": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "clc_firewall_policy": {
            "required": [
              "location",
              "source_account_alias"
            ],
            "type": "object",
            "description": "Create or delete or update firewall polices on Centurylink Cloud",
            "properties": {
              "destination_account_alias": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "source_account_alias": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "ports": {
                "type": "string"
              },
              "firewall_policy_id": {
                "type": "string"
              }
            }
          },
          "nxos_acl_interface": {
            "required": [
              "interface",
              "direction",
              "name"
            ],
            "type": "object",
            "description": "Manages applying ACLs to interfaces.",
            "properties": {
              "interface": {
                "type": "string"
              },
              "direction": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "cnos_interface": {
            "required": [
              "interfaceOption",
              "interfaceRange",
              "interfaceArg1"
            ],
            "type": "object",
            "description": "This module allows you to work with interface related configurations. The operators used are overloaded to ensure control over switch interface configurations. Apart from the regular device connection related attributes, there are seven interface arguments that will perform further configurations. They are interfaceArg1, interfaceArg2, interfaceArg3, interfaceArg4, interfaceArg5, interfaceArg6, and interfaceArg7. For more details on how to use these arguments, see [Overloaded Variables]. Interface configurations are taken care at six contexts in a regular CLI. They are 1. Interface Name - Configurations 2. Ethernet Interface - Configurations 3. Loopback Interface Configurations 4. Management Interface Configurations 5. Port Aggregation - Configurations 6. VLAN Configurations This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_interface.html)",
            "properties": {
              "interfaceOption": {
                "type": "string"
              },
              "interfaceRange": {
                "type": "string"
              },
              "interfaceArg4": {
                "type": "string"
              },
              "interfaceArg5": {
                "type": "string"
              },
              "interfaceArg6": {
                "type": "string"
              },
              "interfaceArg7": {
                "type": "string"
              },
              "interfaceArg1": {
                "type": "string"
              },
              "interfaceArg2": {
                "type": "string"
              },
              "interfaceArg3": {
                "type": "string"
              }
            }
          },
          "ec2_eip": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "public_ip",
                        "ip"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "device_id",
                        "instance_id"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module can allocate or release an EIP.\nThis module can associate/disassociate an EIP with instances or network interfaces.",
            "properties": {
              "release_on_disassociation": {
                "type": "string"
              },
              "instance_id": {
                "type": "string"
              },
              "reuse_existing_ip_allowed": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "public_ip": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "in_vpc": {
                "type": "string"
              },
              "device_id": {
                "type": "string"
              }
            }
          },
          "vyos_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from a remote device that is running VyOS.  This module prepends all of the base network fact keys with U(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "asa_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends arbitrary commands to an ASA node and returns the results read from the device. The M(asa_command) module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "waitfor": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "array"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "ipa_host": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ns_os_version",
                        "nsosversion"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ns_hardware_platform",
                        "nshardwareplatform"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ns_host_location",
                        "nshostlocation"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "user_certificate",
                        "usercertificate"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "fqdn",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "fqdn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "mac_address",
                        "macaddress"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify and delete an IPA host using IPA API",
            "properties": {
              "force": {
                "type": "string"
              },
              "usercertificate": {
                "type": "array"
              },
              "nsosversion": {
                "type": "string"
              },
              "ipa_host": {
                "type": "string"
              },
              "ns_hardware_platform": {
                "type": "string"
              },
              "user_certificate": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "mac_address": {
                "type": "array"
              },
              "ipa_pass": {
                "type": "string"
              },
              "nshostlocation": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "nshardwareplatform": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "macaddress": {
                "type": "array"
              },
              "ipa_port": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "ns_host_location": {
                "type": "string"
              },
              "ipa_prot": {
                "type": "string"
              },
              "fqdn": {
                "type": "string"
              },
              "ns_os_version": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "junos_facts": {
            "type": "object",
            "description": "Collects fact information from a remote device running the Junos operating system.  By default, the module will collect basic fact information from the device to be included with the hostvars. Additional fact information can be collected based on the configured set of arguments.",
            "properties": {
              "config_format": {
                "type": "string"
              },
              "config": {
                "type": "string"
              }
            }
          },
          "cnos_vlag": {
            "required": [
              "vlagArg1"
            ],
            "type": "object",
            "description": "This module allows you to work with virtual Link Aggregation Groups (vLAG) related configurations. The operators used are overloaded to ensure control over switch vLAG configurations. Apart from the regular device connection related attributes, there are four vLAG arguments which are overloaded variables that will perform further configurations. They are vlagArg1, vlagArg2, vlagArg3, and vlagArg4. For more details on how to use these arguments, see [Overloaded Variables]. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_vlag.html)",
            "properties": {
              "vlagArg2": {
                "type": "string"
              },
              "vlagArg3": {
                "type": "string"
              },
              "vlagArg1": {
                "type": "string"
              },
              "vlagArg4": {
                "type": "string"
              }
            }
          },
          "azure_rm_networkinterface": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "public_ip_address_name",
                        "public_ip_address",
                        "public_ip_name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "virtual_network_name",
                        "virtual_network"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "security_group_name",
                        "security_group"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "subnet_name",
                        "subnet"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update or delete a network interface. When creating a network interface you must provide the name of an existing virtual network, the name of an existing subnet within the virtual network. A default security group and public IP address will be created automatically, or you can provide the name of an existing security group and public IP address. See the examples below for more details.",
            "properties": {
              "public_ip_address_name": {
                "type": "string"
              },
              "subnet": {
                "type": "string"
              },
              "public_ip_address": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "virtual_network_name": {
                "type": "string"
              },
              "public_ip_allocation_method": {
                "type": "string"
              },
              "private_ip_allocation_method": {
                "type": "string"
              },
              "security_group_name": {
                "type": "string"
              },
              "public_ip": {
                "type": "string"
              },
              "private_ip_address": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "public_ip_name": {
                "type": "string"
              },
              "subnet_name": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "security_group": {
                "type": "string"
              },
              "virtual_network": {
                "type": "string"
              },
              "os_type": {
                "type": "string"
              },
              "open_ports": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "sros_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends arbitrary commands to an SR OS node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use M(sros_config) to configure SR OS devices.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "waitfor": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "array"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "jabber": {
            "required": [
              "to",
              "user",
              "msg",
              "password"
            ],
            "type": "object",
            "description": "Send a message to jabber",
            "properties": {
              "encoding": {
                "type": "string"
              },
              "to": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "iam_mfa_device_facts": {
            "type": "object",
            "description": "List the MFA (Multi-Factor Authentication) devices registered for a user",
            "properties": {
              "user_name": {
                "type": "string"
              }
            }
          },
          "cnos_vlan": {
            "required": [
              "vlanArg1"
            ],
            "type": "object",
            "description": "This module allows you to work with VLAN related configurations. The operators used are overloaded to ensure control over switch VLAN configurations. The first level of VLAN configuration allows to set up the VLAN range, the VLAN tag persistence, a VLAN access map and access map filter. After passing this level, there are five VLAN arguments that will perform further configurations. They are vlanArg1, vlanArg2, vlanArg3, vlanArg4, and vlanArg5. The value of vlanArg1 will determine the way following arguments will be evaluated. For more details on how to use these arguments, see [Overloaded Variables]. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_vlan.html)",
            "properties": {
              "vlanArg5": {
                "type": "string"
              },
              "vlanArg4": {
                "type": "string"
              },
              "vlanArg3": {
                "type": "string"
              },
              "vlanArg2": {
                "type": "string"
              },
              "vlanArg1": {
                "type": "string"
              }
            }
          },
          "sros_config": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lines",
                        "commands"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "defaults",
                        "detail"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Nokia SR OS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with SR OS configuration sections in a deterministic way.",
            "properties": {
              "src": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "defaults": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "iam": {
            "required": [
              "name",
              "iam_type",
              "state"
            ],
            "type": "object",
            "description": "Allows for the management of IAM users, user API keys, groups, roles.",
            "properties": {
              "new_name": {
                "type": "string"
              },
              "update_password": {
                "type": "string"
              },
              "new_path": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "key_count": {
                "type": "string"
              },
              "access_key_state": {
                "type": "string"
              },
              "iam_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "access_key_ids": {
                "type": "string"
              },
              "groups": {
                "type": "string"
              },
              "trust_policy": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "trust_policy_filepath": {
                "type": "string"
              }
            }
          },
          "proxysql_global_variables": {
            "required": [
              "variable"
            ],
            "type": "object",
            "description": "The M(proxysql_global_variables) module gets or sets the proxysql global variables.",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "config_file": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "save_to_disk": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "load_to_runtime": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "variable": {
                "type": "string"
              }
            }
          },
          "vsphere_copy": {
            "required": [
              "src",
              "datacenter",
              "host",
              "path",
              "login",
              "password",
              "datastore"
            ],
            "type": "object",
            "description": "Upload files to a vCenter datastore",
            "properties": {
              "src": {
                "type": "string"
              },
              "datacenter": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "login": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "datastore": {
                "type": "string"
              }
            }
          },
          "os_client_config": {
            "type": "object",
            "description": "Get I(openstack) client config data from clouds.yaml or environment",
            "properties": {
              "clouds": {
                "type": "array"
              }
            }
          },
          "ios_banner": {
            "required": [
              "banner"
            ],
            "type": "object",
            "description": "This will configure both login and motd banners on remote devices running Cisco IOS.  It allows playbooks to add or remote banner text from the active running configuration.",
            "properties": {
              "text": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "banner": {
                "type": "string"
              }
            }
          },
          "ec2_elb_lb": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "Returns information about the load balancer.\nWill be marked changed when called only if state is changed.",
            "properties": {
              "purge_subnets": {
                "type": "string"
              },
              "purge_instance_ids": {
                "type": "string"
              },
              "connection_draining_timeout": {
                "type": "string"
              },
              "access_logs": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "purge_listeners": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              },
              "subnets": {
                "type": "string"
              },
              "health_check": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "instance_ids": {
                "type": "array"
              },
              "idle_timeout": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "cross_az_load_balancing": {
                "type": "string"
              },
              "security_group_ids": {
                "type": "string"
              },
              "purge_zones": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "zones": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "listeners": {
                "type": "array"
              },
              "security_group_names": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "stickiness": {
                "type": "string"
              }
            }
          },
          "dladm_vnic": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "vlan",
                        "vlan_id"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "mac",
                        "macaddr"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create or delete VNICs on Solaris/illumos systems.",
            "properties": {
              "macaddr": {
                "type": "string"
              },
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "vlan": {
                "type": "string"
              },
              "mac": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "vlan_id": {
                "type": "string"
              }
            }
          },
          "nxos_hsrp": {
            "required": [
              "group",
              "interface"
            ],
            "type": "object",
            "description": "Manages HSRP configuration on NX-OS switches.",
            "properties": {
              "auth_type": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "auth_string": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "vip": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              }
            }
          },
          "iosxr_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends arbitrary commands to an IOS XR node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use M(iosxr_config) to configure iosxr devices.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "waitfor": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "array"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "ec2_snapshot": {
            "type": "object",
            "description": "creates an EC2 snapshot from an existing EBS volume",
            "properties": {
              "description": {
                "type": "string"
              },
              "snapshot_tags": {
                "type": "string"
              },
              "snapshot_id": {
                "type": "string"
              },
              "device_name": {
                "type": "string"
              },
              "instance_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "volume_id": {
                "type": "string"
              },
              "last_snapshot_min_age": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "ovirt_clusters_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt clusters.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "stacki_host": {
            "required": [
              "name",
              "stacki_user",
              "stacki_endpoint",
              "stacki_password"
            ],
            "type": "object",
            "description": "Use this module to add or remove hosts to a stacki front-end via API\nU(https://github.com/StackIQ/stacki)",
            "properties": {
              "prim_intf_ip": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "stacki_user": {
                "type": "string"
              },
              "stacki_endpoint": {
                "type": "string"
              },
              "prim_intf": {
                "type": "string"
              },
              "force_install": {
                "type": "string"
              },
              "stacki_password": {
                "type": "string"
              },
              "prim_intf_mac": {
                "type": "string"
              }
            }
          },
          "nxos_udld_interface": {
            "required": [
              "interface",
              "mode"
            ],
            "type": "object",
            "description": "Manages UDLD interface configuration params.",
            "properties": {
              "interface": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              }
            }
          },
          "cloudformation_facts": {
            "required": [
              "stack_name"
            ],
            "type": "object",
            "description": "Gets information about an AWS CloudFormation stack",
            "properties": {
              "stack_template": {
                "type": "string"
              },
              "all_facts": {
                "type": "string"
              },
              "stack_policy": {
                "type": "string"
              },
              "stack_events": {
                "type": "string"
              },
              "stack_name": {
                "type": "string"
              },
              "stack_resources": {
                "type": "string"
              }
            }
          },
          "rax_network": {
            "type": "object",
            "description": "creates / deletes a Rackspace Public Cloud isolated network.",
            "properties": {
              "state": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          },
          "ec2_scaling_policy": {
            "required": [
              "state",
              "name",
              "asg_name"
            ],
            "type": "object",
            "description": "Can create or delete scaling policies for autoscaling groups\nReferenced autoscaling groups must already exist",
            "properties": {
              "name": {
                "type": "string"
              },
              "asg_name": {
                "type": "string"
              },
              "adjustment_type": {
                "type": "string"
              },
              "min_adjustment_step": {
                "type": "string"
              },
              "scaling_adjustment": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cooldown": {
                "type": "string"
              }
            }
          },
          "include_vars": {
            "type": "object",
            "description": "Loads variables from a YAML/JSON files dynamically from within a file or from a directory recursively during task runtime. If loading a directory, the files are sorted alphabetically before being loaded.",
            "properties": {
              "ignore_files": {
                "type": "array"
              },
              "free-form": {
                "type": "string"
              },
              "files_matching": {
                "type": "string"
              },
              "depth": {
                "type": "string"
              },
              "extensions": {
                "type": "array"
              },
              "file": {
                "type": "string"
              },
              "dir": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "netapp_e_snapshot_group": {
            "required": [
              "api_password",
              "name",
              "state",
              "storage_pool_name",
              "api_username",
              "base_volume_name",
              "api_url"
            ],
            "type": "object",
            "description": "Create, update, delete snapshot groups for NetApp E-series storage arrays",
            "properties": {
              "repo_pct": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "rollback_priority": {
                "type": "string"
              },
              "delete_limit": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "storage_pool_name": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "base_volume_name": {
                "type": "string"
              },
              "full_policy": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "warning_threshold": {
                "type": "string"
              }
            }
          },
          "nxos_ntp_options": {
            "type": "object",
            "description": "Manages NTP options, e.g. authoritative server and logging.",
            "properties": {
              "logging": {
                "type": "string"
              },
              "stratrum": {
                "type": "string"
              },
              "master": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "datadog_event": {
            "required": [
              "title",
              "text",
              "app_key",
              "api_key"
            ],
            "type": "object",
            "description": "Allows to post events to DataDog (www.datadoghq.com) service.\nUses http://docs.datadoghq.com/api/#events API.",
            "properties": {
              "date_happened": {
                "type": "string"
              },
              "alert_type": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "text": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "app_key": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "aggregation_key": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "sf_volume_access_group_manager": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "Create, destroy, or update volume access groups on SolidFire",
            "properties": {
              "name": {
                "type": "string"
              },
              "virtual_network_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "volumes": {
                "type": "array"
              },
              "initiators": {
                "type": "array"
              },
              "attributes": {
                "type": "array"
              },
              "virtual_network_tags": {
                "type": "string"
              },
              "volume_access_group_id": {
                "type": "string"
              }
            }
          },
          "logicmonitor_facts": {
            "required": [
              "target",
              "company",
              "user",
              "password"
            ],
            "type": "object",
            "description": "LogicMonitor is a hosted, full-stack, infrastructure monitoring platform.\nThis module collects facts about hosts and host groups within your LogicMonitor account.",
            "properties": {
              "displayname": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "fullpath": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "collector": {
                "type": "string"
              }
            }
          },
          "nxos_vpc": {
            "required": [
              "domain",
              "auto_recovery",
              "peer_gw",
              "state"
            ],
            "type": "object",
            "description": "Manages global VPC configuration",
            "properties": {
              "domain": {
                "type": "string"
              },
              "system_priority": {
                "type": "string"
              },
              "role_priority": {
                "type": "string"
              },
              "auto_recovery": {
                "type": "string"
              },
              "pkl_vrf": {
                "type": "string"
              },
              "delay_restore": {
                "type": "string"
              },
              "peer_gw": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pkl_dest": {
                "type": "string"
              },
              "pkl_src": {
                "type": "string"
              }
            }
          },
          "vmware_vm_shell": {
            "required": [
              "vm_shell",
              "vm_id"
            ],
            "type": "object",
            "description": "Start a program in a VM without the need for network connection",
            "properties": {
              "datacenter": {
                "type": "string"
              },
              "vm_password": {
                "type": "string"
              },
              "vm_shell_cwd": {
                "type": "string"
              },
              "vm_shell_args": {
                "type": "string"
              },
              "vm_username": {
                "type": "string"
              },
              "vm_shell_env": {
                "type": "string"
              },
              "vm_shell": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "vm_id_type": {
                "type": "string"
              },
              "vm_id": {
                "type": "string"
              }
            }
          },
          "nova_keypair": {
            "required": [
              "login_tenant_name",
              "login_password",
              "login_username",
              "name"
            ],
            "type": "object",
            "description": "Add or Remove key pair from nova .",
            "properties": {
              "public_key": {
                "type": "string"
              },
              "region_name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "gcpubsub": {
            "required": [
              "topic"
            ],
            "type": "object",
            "description": "Create and Delete Topics/Subscriptions, Publish and pull messages on PubSub. See U(https://cloud.google.com/pubsub/docs) for an overview.",
            "properties": {
              "pull": {
                "type": "string"
              },
              "ack_deadline": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "publish": {
                "type": "array"
              },
              "topic": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "push_endpoint": {
                "type": "string"
              },
              "subscription": {
                "type": "string"
              }
            }
          },
          "bower": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Manage bower packages with bower",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "production": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "relative_execpath": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "offline": {
                "type": "string"
              }
            }
          },
          "pn_ospfarea": {
            "required": [
              "pn_ospf_area",
              "pn_clipassword",
              "pn_vrouter_name",
              "pn_cliusername",
              "state"
            ],
            "type": "object",
            "description": "Execute vrouter-ospf-add, vrouter-ospf-remove command.\nThis command adds/removes Open Shortest Path First(OSPF) area to/from a virtual router(vRouter) service.",
            "properties": {
              "pn_vrouter_name": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_ospf_area": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_prefix_listin": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_prefix_listout": {
                "type": "string"
              },
              "pn_stub_type": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_quiet": {
                "type": "string"
              }
            }
          },
          "netconf_config": {
            "required": [
              "username",
              "xml",
              "host",
              "password"
            ],
            "type": "object",
            "description": "Netconf is a network management protocol developed and standardized by the IETF. It is documented in RFC 6241.\nThis module allows the user to send a configuration XML file to a netconf device, and detects if there was a configuration change.",
            "properties": {
              "username": {
                "type": "string"
              },
              "xml": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "hostkey_verify": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "solaris_zone": {
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "description": "Create, start, stop and delete Solaris zones. This module doesn't currently allow changing of options for a zone that's already been created.",
            "properties": {
              "install_options": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "create_options": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "root_password": {
                "type": "string"
              },
              "sparse": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "attach_options": {
                "type": "string"
              }
            }
          },
          "nxos_reboot": {
            "type": "object",
            "description": "Reboot a network device.",
            "properties": {
              "confirm": {
                "type": "string"
              }
            }
          },
          "cs_role": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "id",
                        "uuid"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update, delete user roles.",
            "properties": {
              "name": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "role_type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "copy": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "force",
                        "thirsty"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "The C(copy) module copies a file from the local or remote machine to a location on the remote machine. Use the M(fetch) module to copy files from remote locations to the local box. If you need variable interpolation in copied files, use the M(template) module.",
            "properties": {
              "src": {
                "type": "string"
              },
              "directory_mode": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "thirsty": {
                "type": "string"
              },
              "remote_src": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "bigip_sys_global": {
            "type": "object",
            "description": "Manage BIG-IP global settings.",
            "properties": {
              "security_banner": {
                "type": "string"
              },
              "net_reboot": {
                "type": "string"
              },
              "banner_text": {
                "type": "string"
              },
              "console_timeout": {
                "type": "string"
              },
              "quiet_boot": {
                "type": "string"
              },
              "mgmt_dhcp": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "gui_setup": {
                "type": "string"
              },
              "lcd_display": {
                "type": "string"
              }
            }
          },
          "unarchive": {
            "required": [
              "src",
              "dest"
            ],
            "type": "object",
            "description": "The M(unarchive) module unpacks an archive. By default, it will copy the source file from the local system to the target before unpacking - set remote_src=yes to unpack an archive which already exists on the target..",
            "properties": {
              "src": {
                "type": "string"
              },
              "remote_src": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "list_files": {
                "type": "string"
              },
              "keep_newer": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "extra_opts": {
                "type": "string"
              },
              "exclude": {
                "type": "array"
              },
              "copy": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "eos_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from a remote device that is running eos.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "pam_limits": {
            "required": [
              "domain",
              "value",
              "limit_item",
              "limit_type"
            ],
            "type": "object",
            "description": "The M(pam_limits) module modify PAM limits, default in /etc/security/limits.conf. For the full documentation, see man limits.conf(5).",
            "properties": {
              "comment": {
                "type": "string"
              },
              "use_max": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "use_min": {
                "type": "string"
              },
              "limit_item": {
                "type": "string"
              },
              "limit_type": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "osx_say": {
            "required": [
              "msg"
            ],
            "type": "object",
            "description": "makes an OS computer speak!  Amuse your friends, annoy your coworkers!",
            "properties": {
              "msg": {
                "type": "string"
              },
              "voice": {
                "type": "string"
              }
            }
          },
          "jenkins_script": {
            "required": [
              "script"
            ],
            "type": "object",
            "description": "The C(jenkins_script) module takes a script plus a dict of values to use within the script and returns the result of the script being run.",
            "properties": {
              "script": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "args": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "win_template": {
            "required": [
              "dest",
              "src"
            ],
            "type": "object",
            "description": "Templates are processed by the Jinja2 templating language (U(http://jinja.pocoo.org/docs/)) - documentation on the template formatting can be found in the Template Designer Documentation (U(http://jinja.pocoo.org/docs/templates/)).\nSix additional variables can be used in templates: C(ansible_managed) (configurable via the C(defaults) section of C(ansible.cfg)) contains a string which can be used to describe the template name, host, modification time of the template file and the owner uid, C(template_host) contains the node name of the template's machine, C(template_uid) the owner, C(template_path) the absolute path of the template, C(template_fullpath) is the absolute path of the template, and C(template_run_date) is the date that the template was rendered. Note that including a string that uses a date in the template will result in the template being marked 'changed' each time.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "src": {
                "type": "string"
              }
            }
          },
          "cs_configuration": {
            "required": [
              "name",
              "value"
            ],
            "type": "object",
            "description": "Manages global, zone, account, storage and cluster configurations.",
            "properties": {
              "account": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "storage": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              }
            }
          },
          "ini_file": {
            "required": [
              "dest",
              "section"
            ],
            "type": "object",
            "description": "Manage (add, remove, change) individual settings in an INI-style file without having to manage the file as a whole with, say, M(template) or M(assemble). Adds missing sections if they don't exist.\nBefore version 2.0, comments are discarded when the source file is read, and therefore will not show up in the destination file.",
            "properties": {
              "option": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "section": {
                "type": "string"
              },
              "no_extra_spaces": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "others": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "create": {
                "type": "string"
              }
            }
          },
          "vmware_datacenter": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "username",
                        "user",
                        "admin"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "username"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "user"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "admin"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "password",
                        "pass",
                        "pwd"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "password"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pass"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pwd"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage VMware vSphere Datacenters",
            "properties": {
              "username": {
                "type": "string"
              },
              "datacenter_name": {
                "type": "string"
              },
              "admin": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "pwd": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "pass": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "cnos_save": {
            "type": "object",
            "description": "This module allows you to copy the running configuration of a switch over its startup configuration. It is recommended to use this module shortly after any major configuration changes so they persist after a switch restart. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_save.html)",
            "properties": {}
          },
          "xbps": {
            "type": "object",
            "description": "Manage packages with the XBPS package manager.",
            "properties": {
              "update_cache": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "upgrade": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "tower_organization": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower organizations. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "name": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "rax_clb": {
            "type": "object",
            "description": "creates / deletes a Rackspace Public Cloud load balancer.",
            "properties": {
              "protocol": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "algorithm": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "vip_id": {
                "type": "string"
              }
            }
          },
          "ec2_lc_find": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "region",
                        "aws_region",
                        "ec2_region"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "aws_region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ec2_region"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Returns list of matching Launch Configurations for a given name, along with other useful information\nResults can be sorted and sliced\nIt depends on boto\nBased on the work by Tom Bamford (https://github.com/tombamford)",
            "properties": {
              "region": {
                "type": "string"
              },
              "aws_region": {
                "type": "string"
              },
              "sort_order": {
                "type": "string"
              },
              "limit": {
                "type": "string"
              },
              "name_regex": {
                "type": "string"
              },
              "ec2_region": {
                "type": "string"
              }
            }
          },
          "influxdb_database": {
            "required": [
              "database_name",
              "hostname"
            ],
            "type": "object",
            "description": "Manage InfluxDB databases",
            "properties": {
              "username": {
                "type": "string"
              },
              "database_name": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "netscaler": {
            "required": [
              "name",
              "nsc_host",
              "user",
              "password"
            ],
            "type": "object",
            "description": "Manages Citrix NetScaler server and service entities.",
            "properties": {
              "name": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "nsc_protocol": {
                "type": "string"
              },
              "nsc_host": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "cl_interface_policy": {
            "required": [
              "allowed"
            ],
            "type": "object",
            "description": "This module affects the configuration files located in the interfaces folder defined by ifupdown2. Interfaces port and port ranges listed in the \"allowed\" parameter define what interfaces will be available on the switch. If the user runs this module and has an interface configured on the switch, but not found in the \"allowed\" list, this interface will be unconfigured. By default this is `/etc/network/interface.d` For more details go the Configuring Interfaces at U(http://docs.cumulusnetworks.com).",
            "properties": {
              "location": {
                "type": "string"
              },
              "allowed": {
                "type": "array"
              }
            }
          },
          "bigip_monitor_tcp": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "monitor"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "monitor"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP LTM tcp monitors via iControl SOAP API",
            "properties": {
              "interval": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parent": {
                "type": "string"
              },
              "receive": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "send": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "time_until_up": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "parent_partition": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "monitor": {
                "type": "string"
              }
            }
          },
          "junos_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Network devices running the Junos operating system provide a command driven interface both over CLI and RPC.  This module provides an interface to execute commands using these functions and return the results to the Ansible playbook.  In addition, this module can specify a set of conditionals to be evaluated against the returned output, only returning control to the playbook once the entire set of conditionals has been met.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "rpcs": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "waitfor": {
                "type": "string"
              },
              "wait_for": {
                "type": "string"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "bigmon_chain": {
            "required": [
              "controller",
              "name"
            ],
            "type": "object",
            "description": "Create and remove a bigmon inline service chain.",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "controller": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "avi_pkiprofile": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure PKIProfile object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "crls": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "ignore_peer_chain": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "validate_only_leaf_crl": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ca_certs": {
                "type": "array"
              },
              "crl_check": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            }
          },
          "osx_defaults": {
            "required": [
              "key"
            ],
            "type": "object",
            "description": "osx_defaults allows users to read, write, and delete Mac OS X user defaults from Ansible scripts. Mac OS X applications and other programs use the defaults system to record user preferences and other information that must be maintained when the applications aren't running (such as default font for new documents, or the position of an Info panel).",
            "properties": {
              "domain": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "array_add": {
                "type": "string"
              }
            }
          },
          "cs_staticnat": {
            "required": [
              "ip_address"
            ],
            "type": "object",
            "description": "Create, update and remove static NATs.",
            "properties": {
              "vm_guest_ip": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vpc": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "omapi_host": {
            "required": [
              "macaddr",
              "key_name",
              "state",
              "key"
            ],
            "type": "object",
            "description": "Create, update and remove OMAPI hosts into compatible DHCPd servers.",
            "properties": {
              "macaddr": {
                "type": "string"
              },
              "statements": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "ddns": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "aos_device": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Device module let you manage your devices in AOS easily. You can approve devices and define in which state the device should be. Currently only the state I(normal) is supported but the goal is to extend this module with additional state. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "approve": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "dellos6_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from a remote device that is running OS6.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module always collects a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "atomic_host": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "revision",
                        "version"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage the atomic host platform\nRebooting of Atomic host platform should be done outside this module",
            "properties": {
              "version": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "fail": {
            "type": "object",
            "description": "This module fails the progress with a custom message. It can be useful for bailing out when a certain condition is met using C(when).",
            "properties": {
              "msg": {
                "type": "string"
              }
            }
          },
          "lxc_container": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Management of LXC containers",
            "properties": {
              "zfs_root": {
                "type": "string"
              },
              "clone_name": {
                "type": "string"
              },
              "container_config": {
                "type": "array"
              },
              "fs_type": {
                "type": "string"
              },
              "archive": {
                "type": "string"
              },
              "container_log": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "archive_path": {
                "type": "string"
              },
              "container_log_level": {
                "type": "string"
              },
              "template_options": {
                "type": "string"
              },
              "container_command": {
                "type": "string"
              },
              "lxc_path": {
                "type": "string"
              },
              "archive_compression": {
                "type": "string"
              },
              "thinpool": {
                "type": "string"
              },
              "clone_snapshot": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "lv_name": {
                "type": "string"
              },
              "fs_size": {
                "type": "string"
              },
              "backing_store": {
                "type": "string"
              },
              "vg_name": {
                "type": "string"
              },
              "directory": {
                "type": "string"
              }
            }
          },
          "nxos_feature": {
            "required": [
              "feature"
            ],
            "type": "object",
            "description": "Offers ability to enable and disable features in NX-OS.",
            "properties": {
              "state": {
                "type": "string"
              },
              "feature": {
                "type": "string"
              }
            }
          },
          "win_file": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "dest",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates (empty) files, updates file modification stamps of existing files, and can create or remove directories.\nUnlike M(file), does not modify ownership, permissions or manipulate links.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "stackdriver": {
            "required": [
              "key"
            ],
            "type": "object",
            "description": "Send code deploy and annotation events to Stackdriver",
            "properties": {
              "repository": {
                "type": "string"
              },
              "level": {
                "type": "string"
              },
              "annotated_by": {
                "type": "string"
              },
              "deployed_by": {
                "type": "string"
              },
              "deployed_to": {
                "type": "string"
              },
              "instance_id": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "event_epoch": {
                "type": "string"
              },
              "revision_id": {
                "type": "string"
              },
              "event": {
                "type": "string"
              }
            }
          },
          "win_updates": {
            "type": "object",
            "description": "Searches, downloads, and installs Windows updates synchronously by automating the Windows Update client",
            "properties": {
              "log_path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "category_names": {
                "type": "string"
              }
            }
          },
          "wait_for": {
            "type": "object",
            "description": "You can wait for a set amount of time C(timeout), this is the default if nothing is specified.\nWaiting for a port to become available is useful for when services are not immediately available after their init scripts return which is true of certain Java application servers. It is also useful when starting guests with the M(virt) module and needing to pause until they are ready.\nThis module can also be used to wait for a regex match a string to be present in a file.\nIn 1.6 and later, this module can also be used to wait for a file to be available or absent on the filesystem.\nIn 1.8 and later, this module can also be used to wait for active connections to be closed before continuing, useful if a node is being rotated out of a load balancer pool.",
            "properties": {
              "state": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "delay": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "exclude_hosts": {
                "type": "array"
              },
              "search_regex": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "connect_timeout": {
                "type": "string"
              }
            }
          },
          "xattr": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "path"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages filesystem user defined extended attributes, requires that they are enabled on the target filesystem and that the setfattr/getfattr utilities are present.",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              }
            }
          },
          "os_subnets_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more subnets from OpenStack.",
            "properties": {
              "subnet": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              }
            }
          },
          "rax": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "key_name",
                        "keypair"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "creates / deletes a Rackspace Public Cloud instance and optionally waits for it to be 'running'.",
            "properties": {
              "boot_volume_terminate": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "keypair": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "flavor": {
                "type": "string"
              },
              "networks": {
                "type": "string"
              },
              "boot_from_volume": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "exact_count": {
                "type": "string"
              },
              "disk_config": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "boot_volume_size": {
                "type": "string"
              },
              "config_drive": {
                "type": "string"
              },
              "files": {
                "type": "string"
              },
              "auto_increment": {
                "type": "string"
              },
              "count_offset": {
                "type": "string"
              },
              "boot_volume": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "instance_ids": {
                "type": "array"
              },
              "wait": {
                "type": "string"
              },
              "count": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "extra_client_args": {
                "type": "string"
              },
              "extra_create_args": {
                "type": "string"
              }
            }
          },
          "vertica_facts": {
            "type": "object",
            "description": "Gathers Vertica database facts.",
            "properties": {
              "login_user": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              }
            }
          },
          "cs_ip_address": {
            "type": "object",
            "description": "Acquires and associates a public IP to an account or project. Due to API limitations this is not an idempotent call, so be sure to only conditionally call this when C(state=present)",
            "properties": {
              "domain": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "vpc": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "avi_healthmonitor": {
            "required": [
              "name",
              "type"
            ],
            "type": "object",
            "description": "This module is used to configure HealthMonitor object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "monitor_port": {
                "type": "string"
              },
              "https_monitor": {
                "type": "string"
              },
              "receive_timeout": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "dns_monitor": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "failed_checks": {
                "type": "string"
              },
              "tcp_monitor": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "send_interval": {
                "type": "string"
              },
              "udp_monitor": {
                "type": "string"
              },
              "http_monitor": {
                "type": "string"
              },
              "external_monitor": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "successful_checks": {
                "type": "string"
              }
            }
          },
          "maven_artifact": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "username",
                        "aws_secret_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "password",
                        "aws_secret_access_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Downloads an artifact from a maven repository given the maven coordinates provided to the module. Can retrieve\nsnapshots or release versions of the artifact and will resolve the latest available version if one is not\navailable.",
            "properties": {
              "username": {
                "type": "string"
              },
              "aws_secret_key": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "artifact_id": {
                "type": "string"
              },
              "extension": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "aws_secret_access_key": {
                "type": "string"
              },
              "repository_url": {
                "type": "string"
              },
              "group_id": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "classifier": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_net": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "resource_tags"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create or terminate AWS virtual private clouds.  This module has a dependency on python-boto.",
            "properties": {
              "name": {
                "type": "string"
              },
              "dns_support": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "multi_ok": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tenancy": {
                "type": "string"
              },
              "dns_hostnames": {
                "type": "string"
              },
              "resource_tags": {
                "type": "string"
              },
              "cidr_block": {
                "type": "string"
              },
              "dhcp_opts_id": {
                "type": "string"
              }
            }
          },
          "efs": {
            "type": "object",
            "description": "Module allows create, search and destroy Amazon EFS file systems",
            "properties": {
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "array"
              },
              "id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "performance_mode": {
                "type": "string"
              },
              "targets": {
                "type": "array"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "zypper_repository": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "autorefresh",
                        "refresh"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add or remove Zypper repositories on SUSE and openSUSE",
            "properties": {
              "priority": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "auto_import_keys": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "disable_gpg_check": {
                "type": "string"
              },
              "refresh": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "overwrite_multiple": {
                "type": "string"
              },
              "runrefresh": {
                "type": "string"
              },
              "autorefresh": {
                "type": "string"
              }
            }
          },
          "ec2_asg_facts": {
            "type": "object",
            "description": "Gather facts about ec2 Auto Scaling Groups (ASGs) in AWS",
            "properties": {
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "aos_login": {
            "required": [
              "server"
            ],
            "type": "object",
            "description": "Obtain the AOS server session token by providing the required username and password credentials.  Upon successful authentication, this module will return the session-token that is required by all subsequent AOS module usage. On success the module will automatically populate ansible facts with the variable I(aos_session) This module is not idempotent and do not support check mode.",
            "properties": {
              "passwd": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "server": {
                "type": "string"
              }
            }
          },
          "archive": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Packs an archive. It is the opposite of M(unarchive). By default, it assumes the compression source exists on the target. It will not copy the source file from the local system to the target before archiving. Source files can be deleted after archival by specifying I(remove=True).",
            "properties": {
              "dest": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "remove": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          },
          "os_image": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or Remove images from the OpenStack Image Repository",
            "properties": {
              "ramdisk": {
                "type": "string"
              },
              "kernel": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "container_format": {
                "type": "string"
              },
              "min_ram": {
                "type": "string"
              },
              "disk_format": {
                "type": "string"
              },
              "filename": {
                "type": "string"
              },
              "min_disk": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "is_public": {
                "type": "string"
              },
              "properties": {
                "type": "string"
              }
            }
          },
          "docker_network": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "network_name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "network_name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "connected",
                        "containers"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "appends",
                        "incremental"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create/remove Docker networks and connect containers to them.\nPerforms largely the same function as the \"docker network\" CLI subcommand.",
            "properties": {
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "appends": {
                "type": "string"
              },
              "driver": {
                "type": "string"
              },
              "ipam_options": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "driver_options": {
                "type": "string"
              },
              "connected": {
                "type": "array"
              },
              "ipam_driver": {
                "type": "string"
              },
              "network_name": {
                "type": "string"
              },
              "containers": {
                "type": "array"
              },
              "incremental": {
                "type": "string"
              }
            }
          },
          "ovirt_permissions": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "authz_name",
                        "domain"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "authz_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "domain"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage permissions of users/groups in oVirt",
            "properties": {
              "domain": {
                "type": "string"
              },
              "authz_name": {
                "type": "string"
              },
              "object_type": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              },
              "object_name": {
                "type": "string"
              },
              "object_id": {
                "type": "string"
              },
              "group_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "user_name": {
                "type": "string"
              }
            }
          },
          "aws_kms": {
            "required": [
              "mode"
            ],
            "type": "object",
            "description": "Manage role/user access to a KMS key. Not designed for encrypting/decrypting.",
            "properties": {
              "role_arn": {
                "type": "string"
              },
              "grant_types": {
                "type": "array"
              },
              "role_name": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "key_arn": {
                "type": "string"
              },
              "clean_invalid_entries": {
                "description": "If adding/removing a role and invalid grantees are found, remove them. These entries will cause an update to fail in all known cases.\nOnly cleans if changes are being made.",
                "$ref": "#/definitions/ansible_truth"
              },
              "key_alias": {
                "type": "string"
              }
            }
          },
          "add_host": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "hostname",
                        "host"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "hostname"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "host"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "groups",
                        "groupname",
                        "group"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Use variables to create new hosts and groups in inventory for use in later plays of the same playbook. Takes variables so you can define the new hosts more fully.",
            "properties": {
              "group": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "groupname": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "groups": {
                "type": "string"
              }
            }
          },
          "dladm_vlan": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "vlan_id",
                        "vid"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create or delete VLAN interfaces on Solaris/illumos systems.",
            "properties": {
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "vid": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "vlan_id": {
                "type": "string"
              }
            }
          },
          "rhn_register": {
            "type": "object",
            "description": "Manage registration to the Red Hat Network.",
            "properties": {
              "username": {
                "type": "string"
              },
              "systemorgid": {
                "type": "string"
              },
              "enable_eus": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "channels": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "sslcacert": {
                "type": "string"
              },
              "activationkey": {
                "type": "string"
              },
              "profilename": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "elasticsearch_plugin": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages Elasticsearch plugins.",
            "properties": {
              "name": {
                "type": "string"
              },
              "proxy_host": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "proxy_port": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "plugin_dir": {
                "type": "string"
              },
              "plugin_bin": {
                "type": "string"
              }
            }
          },
          "bigip_device_ntp": {
            "type": "object",
            "description": "Manage NTP servers on a BIG-IP",
            "properties": {
              "ntp_servers": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "java_cert": {
            "required": [
              "keystore_pass"
            ],
            "type": "object",
            "description": "This is a wrapper module around keytool. Which can be used to import/remove certificates from a given java keystore.",
            "properties": {
              "keystore_create": {
                "type": "string"
              },
              "cert_alias": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "cert_port": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "keystore_pass": {
                "type": "string"
              },
              "cert_url": {
                "type": "string"
              },
              "cert_path": {
                "type": "string"
              },
              "keystore_path": {
                "type": "string"
              }
            }
          },
          "cisco_spark": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "personal_token",
                        "token"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "personal_token"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "token"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Send a message to a Cisco Spark Room or Individual with options to control the formatting.",
            "properties": {
              "personal_token": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "recipient_id": {
                "type": "string"
              },
              "recipient_type": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "message_type": {
                "type": "string"
              }
            }
          },
          "zpool_facts": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pool",
                        "zpool"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "properties",
                        "props"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Gather facts from ZFS pool properties.",
            "properties": {
              "name": {
                "type": "string"
              },
              "parsable": {
                "description": "Specifies if property values should be displayed in machine friendly format.",
                "$ref": "#/definitions/ansible_truth"
              },
              "props": {
                "type": "string"
              },
              "zpool": {
                "type": "string"
              },
              "properties": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              }
            }
          },
          "proxysql_mysql_users": {
            "required": [
              "username"
            ],
            "type": "object",
            "description": "The M(proxysql_mysql_users) module adds or removes mysql users using the proxysql admin interface.",
            "properties": {
              "username": {
                "type": "string"
              },
              "default_hostgroup": {
                "type": "string"
              },
              "frontend": {
                "type": "string"
              },
              "default_schema": {
                "type": "string"
              },
              "transaction_persistent": {
                "type": "string"
              },
              "login_port": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "use_ssl": {
                "type": "string"
              },
              "backend": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "fast_forward": {
                "type": "string"
              },
              "load_to_runtime": {
                "type": "string"
              },
              "save_to_disk": {
                "type": "string"
              },
              "active": {
                "type": "string"
              },
              "config_file": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "max_connections": {
                "type": "string"
              }
            }
          },
          "ops_config": {
            "type": "object",
            "description": "OpenSwitch configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with ops configuration sections in a deterministic way.",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "ec2_lc": {
            "required": [
              "name",
              "instance_type",
              "state"
            ],
            "type": "object",
            "description": "Can create or delete AWS Autoscaling Configurations\nWorks with the ec2_asg module to manage Autoscaling Groups",
            "properties": {
              "ebs_optimized": {
                "type": "string"
              },
              "spot_price": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "instance_profile_name": {
                "type": "string"
              },
              "instance_type": {
                "type": "string"
              },
              "kernel_id": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "ramdisk_id": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "image_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "volumes": {
                "type": "string"
              },
              "assign_public_ip": {
                "type": "string"
              },
              "instance_monitoring": {
                "type": "string"
              },
              "classic_link_vpc_id": {
                "type": "string"
              },
              "security_groups": {
                "type": "string"
              },
              "classic_link_vpc_security_groups": {
                "type": "string"
              }
            }
          },
          "vyos_config": {
            "type": "object",
            "description": "This module provides configuration file management of VyOS devices.  It provides arguments for managing both the configuration file and state of the active configuration.   All configuration statements are based on `set` and `delete` commands in the device configuration.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "rax_cdb": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cdb_type",
                        "type"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cdb_version",
                        "version"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "creates / deletes or resize a Rackspace Cloud Databases instance and optionally waits for it to be 'running'. The name option needs to be unique since it's used to identify the instance.",
            "properties": {
              "cdb_type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "cdb_version": {
                "type": "string"
              },
              "volume": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "flavor": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "cnos_conditional_template": {
            "required": [
              "flag",
              "commandfile",
              "condition"
            ],
            "type": "object",
            "description": "This module allows you to work with the running configuration of a switch. It provides a way to execute a set of CNOS commands on a switch by evaluating the current running configuration and executing the commands only if the specific settings have not been already configured. The configuration source can be a set of commands or a template written in the Jinja2 templating language. This module functions the same as the cnos_template module. The only exception is that the following inventory variable can be specified [“condition = <flag string>”] When this inventory variable is specified as the variable of a task, the template is executed for the network element that matches the flag string. Usually, templates are used when commands are the same across a group of network devices. When there is a requirement to skip the execution of the template on one or more devices, it is recommended to use this module. This module uses SSH to manage network device configuration. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_conditional_template.html)",
            "properties": {
              "flag": {
                "type": "string"
              },
              "condition": {
                "type": "string"
              },
              "commandfile": {
                "type": "string"
              }
            }
          },
          "netapp_e_facts": {
            "required": [
              "api_password",
              "api_username",
              "ssid",
              "api_url"
            ],
            "type": "object",
            "description": "Return various information about NetApp E-Series storage arrays (eg, configuration, disks)",
            "properties": {
              "api_url": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              }
            }
          },
          "os_project": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "domain_id",
                        "domain"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage OpenStack Projects. Projects can be created, updated or deleted using this module. A project will be updated if I(name) matches an existing project and I(state) is present. The value for I(name) cannot be updated without deleting and re-creating the project.",
            "properties": {
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "domain_id": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "proxysql_replication_hostgroups": {
            "required": [
              "reader_hostgroup",
              "writer_hostgroup"
            ],
            "type": "object",
            "description": "Each row in mysql_replication_hostgroups represent a pair of writer_hostgroup and reader_hostgroup. ProxySQL will monitor the value of read_only for all the servers in specified hostgroups, and based on the value of read_only will assign the server to the writer or reader hostgroups.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "login_port": {
                "type": "string"
              },
              "reader_hostgroup": {
                "type": "string"
              },
              "config_file": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "writer_hostgroup": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "load_to_runtime": {
                "type": "string"
              },
              "save_to_disk": {
                "type": "string"
              }
            }
          },
          "ce_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends an arbitrary command to an HUAWEI CloudEngine node and returns the results read from the device.  The ce_command module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "waitfor": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "string"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "bigip_device_sshd": {
            "type": "object",
            "description": "Manage the SSHD settings of a BIG-IP",
            "properties": {
              "log_level": {
                "type": "string"
              },
              "banner_text": {
                "type": "string"
              },
              "allow": {
                "type": "string"
              },
              "inactivity_timeout": {
                "type": "string"
              },
              "login": {
                "type": "string"
              },
              "banner": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "bigip_vlan": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tagged_interfaces",
                        "tagged_interface"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "untagged_interfaces",
                        "untagged_interface"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage VLANs on a BIG-IP system",
            "properties": {
              "name": {
                "type": "string"
              },
              "untagged_interfaces": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tagged_interface": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "tagged_interfaces": {
                "type": "string"
              },
              "untagged_interface": {
                "type": "string"
              }
            }
          },
          "panos_service": {
            "required": [
              "protocol",
              "service_name",
              "password",
              "ip_address",
              "port"
            ],
            "type": "object",
            "description": "Create a service object. Service objects are fundamental representation of the applications given src/dst ports and protocol",
            "properties": {
              "username": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "service_name": {
                "type": "string"
              },
              "source_port": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "cs_user": {
            "required": [
              "username"
            ],
            "type": "object",
            "description": "Create, update, disable, lock, enable and remove users.",
            "properties": {
              "username": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          },
          "grove": {
            "required": [
              "message",
              "channel_token"
            ],
            "type": "object",
            "description": "The C(grove) module sends a message for a service to a Grove.io channel.",
            "properties": {
              "service": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "icon_url": {
                "type": "string"
              },
              "channel_token": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "vmware_dvswitch": {
            "required": [
              "datacenter_name",
              "uplink_quantity",
              "mtu",
              "switch_name",
              "discovery_proto"
            ],
            "type": "object",
            "description": "Create or remove a distributed vSwitch",
            "properties": {
              "datacenter_name": {
                "type": "string"
              },
              "discovery_proto": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "discovery_operation": {
                "type": "string"
              },
              "switch_name": {
                "type": "string"
              },
              "uplink_quantity": {
                "type": "string"
              }
            }
          },
          "uri": {
            "required": [
              "url"
            ],
            "type": "object",
            "description": "Interacts with HTTP and HTTPS web services and supports Digest, Basic and WSSE HTTP authentication mechanisms.",
            "properties": {
              "body": {
                "type": "string"
              },
              "status_code": {
                "type": "string"
              },
              "headers": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "follow_redirects": {
                "type": "string"
              },
              "force_basic_auth": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "others": {
                "type": "string"
              },
              "body_format": {
                "type": "string"
              },
              "return_content": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "HEADER_": {
                "type": "string"
              }
            }
          },
          "github_hooks": {
            "required": [
              "repo",
              "oauthkey",
              "user",
              "action"
            ],
            "type": "object",
            "description": "Adds service hooks and removes service hooks that have an error status.",
            "properties": {
              "oauthkey": {
                "type": "string"
              },
              "hookurl": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "content_type": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "os_server_actions": {
            "required": [
              "server"
            ],
            "type": "object",
            "description": "Perform server actions on an existing compute instance from OpenStack. This module does not return any data other than changed true/false. When I(action) is 'rebuild', then I(image) parameter is required.",
            "properties": {
              "availability_zone": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "rax_clb_nodes": {
            "required": [
              "load_balancer_id"
            ],
            "type": "object",
            "description": "Adds, modifies and removes nodes from a Rackspace Cloud Load Balancer",
            "properties": {
              "node_id": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "load_balancer_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "condition": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "bigip_gtm_facts": {
            "required": [
              "include"
            ],
            "type": "object",
            "description": "Collect facts from F5 BIG-IP GTM devices.",
            "properties": {
              "filter": {
                "type": "string"
              },
              "include": {
                "type": "string"
              }
            }
          },
          "ovirt_tags_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt tags.",
            "properties": {
              "host": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              }
            }
          },
          "azure_rm_virtualmachineimage_facts": {
            "required": [
              "location"
            ],
            "type": "object",
            "description": "Get facts for virtual machine images.",
            "properties": {
              "sku": {
                "type": "string"
              },
              "publisher": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "offer": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "location": {
                "type": "string"
              }
            }
          },
          "gce_snapshot": {
            "required": [
              "instance_name",
              "project_id",
              "credentials_file",
              "service_account_email"
            ],
            "type": "object",
            "description": "Manages snapshots for GCE instances. This module manages snapshots for the storage volumes of a GCE compute instance. If there are multiple volumes, each snapshot will be prepended with the disk name",
            "properties": {
              "service_account_email": {
                "type": "string"
              },
              "disks": {
                "type": "string"
              },
              "instance_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "snapshot_name": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              }
            }
          },
          "hponcfg": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "src"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "src"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This modules configures the HP iLO interface using hponcfg.",
            "properties": {
              "path": {
                "type": "string"
              },
              "minfw": {
                "type": "string"
              },
              "src": {
                "type": "string"
              }
            }
          },
          "aos_rack_type": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Rack Type module let you manage your Rack Type easily. You can create create and delete Rack Type by Name, ID or by using a JSON File. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "ovirt_snapshots_facts": {
            "required": [
              "vm"
            ],
            "type": "object",
            "description": "Retrieve facts about one or more oVirt virtual machine snapshots.",
            "properties": {
              "snapshot_id": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              }
            }
          },
          "ipinfoio_facts": {
            "type": "object",
            "description": "Gather IP geolocation facts of a host's IP address using ipinfo.io API",
            "properties": {
              "http_agent": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "runit": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Controls runit services on remote hosts using the sv utility.",
            "properties": {
              "state": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "service_src": {
                "type": "string"
              },
              "service_dir": {
                "type": "string"
              }
            }
          },
          "cnos_showrun": {
            "type": "object",
            "description": "This module allows you to view the switch running configuration. It executes the display running-config CLI command on a switch and returns a file containing the current running configuration of the target network device. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_showrun.html)",
            "properties": {}
          },
          "taiga_issue": {
            "required": [
              "project",
              "issue_type",
              "subject"
            ],
            "type": "object",
            "description": "Creates/deletes an issue in a Taiga Project Management Platform (U(https://taiga.io)).\nAn issue is identified by the combination of project, issue subject and issue type.\nThis module implements the creation or deletion of issues (not the update).",
            "properties": {
              "status": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "severity": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "taiga_host": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "attachment": {
                "type": "string"
              },
              "issue_type": {
                "type": "string"
              },
              "attachment_description": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              }
            }
          },
          "bigip_monitor_http": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "monitor"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "monitor"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP LTM monitors via iControl SOAP API",
            "properties": {
              "interval": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parent": {
                "type": "string"
              },
              "receive": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "receive_disable": {
                "type": "string"
              },
              "send": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "time_until_up": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "parent_partition": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "monitor": {
                "type": "string"
              }
            }
          },
          "rax_cbs": {
            "required": [
              "size",
              "volume_type",
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manipulate Rackspace Cloud Block Storage Volumes",
            "properties": {
              "description": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "volume_type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "snapshot_id": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "gce_mig": {
            "required": [
              "name",
              "zone"
            ],
            "type": "object",
            "description": "Create, Update or Destroy a Managed Instance Group (MIG).  See U(https://cloud.google.com/compute/docs/instance-groups) for an overview. Full install/configuration instructions for the gce* modules can be found in the comments of ansible/test/gce_tests.py.",
            "properties": {
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "autoscaling": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "nxos_bgp_neighbor_af": {
            "required": [
              "afi",
              "safi",
              "asn",
              "neighbor"
            ],
            "type": "object",
            "description": "Manages BGP address-family's neighbors configurations on NX-OS switches.",
            "properties": {
              "default_originate": {
                "type": "string"
              },
              "next_hop_self": {
                "type": "string"
              },
              "suppress_inactive": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "soo": {
                "type": "string"
              },
              "additional_paths_receive": {
                "type": "string"
              },
              "route_reflector_client": {
                "type": "string"
              },
              "max_prefix_limit": {
                "type": "string"
              },
              "prefix_list_out": {
                "type": "string"
              },
              "as_override": {
                "type": "string"
              },
              "filter_list_out": {
                "type": "string"
              },
              "additional_paths_send": {
                "type": "string"
              },
              "allowas_in": {
                "type": "string"
              },
              "max_prefix_warning": {
                "type": "string"
              },
              "asn": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "advertise_map_non_exist": {
                "type": "string"
              },
              "default_originate_route_map": {
                "type": "string"
              },
              "safi": {
                "type": "string"
              },
              "filter_list_in": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              },
              "unsuppress_map": {
                "type": "string"
              },
              "max_prefix_threshold": {
                "type": "string"
              },
              "route_map_in": {
                "type": "string"
              },
              "afi": {
                "type": "string"
              },
              "soft_reconfiguration_in": {
                "type": "string"
              },
              "max_prefix_interval": {
                "type": "string"
              },
              "route_map_out": {
                "type": "string"
              },
              "send_community": {
                "type": "string"
              },
              "prefix_list_in": {
                "type": "string"
              },
              "neighbor": {
                "type": "string"
              },
              "next_hop_third_party": {
                "type": "string"
              },
              "advertise_map_exist": {
                "type": "string"
              },
              "allowas_in_max": {
                "type": "string"
              }
            }
          },
          "zfs": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manages ZFS file systems, volumes, clones and snapshots.",
            "properties": {
              "origin": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "key_value": {
                "type": "string"
              }
            }
          },
          "blockinfile": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "dest",
                        "destfile",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "destfile"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "block",
                        "content"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module will insert/update/remove a block of multi-line text surrounded by customizable marker lines.",
            "properties": {
              "name": {
                "type": "string"
              },
              "insertbefore": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "create": {
                "type": "string"
              },
              "destfile": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "insertafter": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "marker": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "block": {
                "type": "string"
              }
            }
          },
          "rocketchat": {
            "required": [
              "domain",
              "token"
            ],
            "type": "object",
            "description": "The C(rocketchat) module sends notifications to Rocket Chat via the Incoming WebHook integration",
            "properties": {
              "username": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "attachments": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "icon_url": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "icon_emoji": {
                "type": "string"
              },
              "link_names": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              }
            }
          },
          "bigip_gtm_wide_ip": {
            "required": [
              "lb_method",
              "wide_ip"
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP GTM wide ip",
            "properties": {
              "lb_method": {
                "type": "string"
              },
              "wide_ip": {
                "type": "string"
              }
            }
          },
          "junos_template": {
            "required": [
              "src"
            ],
            "type": "object",
            "description": "This module will load a candidate configuration from a template file onto a remote device running Junos.  The module will return the differences in configuration if the diff option is specified on the Ansible command line",
            "properties": {
              "comment": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "confirm": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "config_format": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "pause": {
            "type": "object",
            "description": "Pauses playbook execution for a set amount of time, or until a prompt is acknowledged. All parameters are optional. The default behavior is to pause with a prompt.\nYou can use C(ctrl+c) if you wish to advance a pause earlier than it is set to expire or if you need to abort a playbook run entirely. To continue early: press C(ctrl+c) and then C(c). To abort a playbook: press C(ctrl+c) and then C(a).\nThe pause module integrates into async/parallelized playbooks without any special considerations (see also: Rolling Updates). When using pauses with the C(serial) playbook parameter (as in rolling updates) you are only prompted once for the current group of hosts.",
            "properties": {
              "seconds": {
                "type": "string"
              },
              "prompt": {
                "type": "string"
              },
              "minutes": {
                "type": "string"
              }
            }
          },
          "nxos_template": {
            "type": "object",
            "description": "Manages network device configurations over SSH or NXAPI.  This module allows implementers to work with the device running-config.  It provides a way to push a set of commands onto a network device by evaluating the current running-config and only pushing configuration commands that are not already configured.  The config source can be a set of commands or a template.",
            "properties": {
              "src": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "include_defaults": {
                "type": "string"
              }
            }
          },
          "lambda_facts": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "function_name",
                        "function",
                        "name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Gathers various details related to Lambda functions, including aliases, versions and event source mappings. Use module M(lambda) to manage the lambda function itself, M(lambda_alias) to manage function aliases and M(lambda_event) to manage lambda event source mappings.",
            "properties": {
              "function": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "event_source_arn": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "function_name": {
                "type": "string"
              }
            }
          },
          "influxdb_retention_policy": {
            "required": [
              "default",
              "database_name",
              "hostname",
              "policy_name",
              "replication",
              "duration"
            ],
            "type": "object",
            "description": "Manage InfluxDB retention policies",
            "properties": {
              "username": {
                "type": "string"
              },
              "default": {
                "type": "string"
              },
              "database_name": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "policy_name": {
                "type": "string"
              },
              "replication": {
                "type": "string"
              },
              "duration": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "rhevm": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ifaces",
                        "nics",
                        "interfaces"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Allows you to create/remove/update or powermanage virtual machines on a RHEV/oVirt platform.",
            "properties": {
              "vmmem": {
                "type": "string"
              },
              "cd_drive": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "cpu_share": {
                "type": "string"
              },
              "insecure_api": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "vm_ha": {
                "type": "string"
              },
              "nics": {
                "type": "string"
              },
              "ifaces": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "vmhost": {
                "type": "string"
              },
              "boot_order": {
                "type": "string"
              },
              "interfaces": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "datacenter": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "disks": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "osver": {
                "type": "string"
              },
              "vmcpu": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "del_prot": {
                "type": "string"
              },
              "mempol": {
                "type": "string"
              }
            }
          },
          "layman": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Uses Layman to manage an additional repositories for the Portage package manager on Gentoo Linux. Please note that Layman must be installed on a managed node prior using this module.",
            "properties": {
              "list_url": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "tower_team": {
            "required": [
              "name",
              "organization"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower teams. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "name": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              }
            }
          },
          "win_iis_webapppool": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Creates, Removes and configures an IIS Web Application Pool",
            "properties": {
              "attributes": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ipa_group": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cn",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "cn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify and delete group within IPA server",
            "properties": {
              "ipa_port": {
                "type": "string"
              },
              "group": {
                "type": "array"
              },
              "cn": {
                "type": "string"
              },
              "user": {
                "type": "array"
              },
              "ipa_prot": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "gidnumber": {
                "type": "string"
              },
              "ipa_host": {
                "type": "string"
              },
              "external": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "ipa_pass": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "nonposix": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_evpn_vni": {
            "required": [
              "route_distinguisher",
              "vni"
            ],
            "type": "object",
            "description": "Manages Cisco Ethernet Virtual Private Network (EVPN) VXLAN Network Identifier (VNI) configurations of a Nexus device.",
            "properties": {
              "route_target_both": {
                "type": "string"
              },
              "vni": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "route_distinguisher": {
                "type": "string"
              },
              "route_target_import": {
                "type": "string"
              },
              "route_target_export": {
                "type": "string"
              }
            }
          },
          "ipmi_boot": {
            "required": [
              "bootdev",
              "name",
              "user",
              "password"
            ],
            "type": "object",
            "description": "Use this module to manage order of boot devices",
            "properties": {
              "bootdev": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "uefiboot": {
                "description": "If set, request UEFI boot explicitly. Strictly speaking, the spec suggests that if not set, the system should BIOS boot and offers no \"don't care\" option. In practice, this flag not being set does not preclude UEFI boot on any system I've encountered.",
                "$ref": "#/definitions/ansible_truth"
              },
              "persistent": {
                "description": "If set, ask that system firmware uses this device beyond next boot. Be aware many systems do not honor this.",
                "$ref": "#/definitions/ansible_truth"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "ec2_facts": {
            "type": "object",
            "description": "This module fetches data from the metadata servers in ec2 (aws) as per http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html. The module must be called from within the EC2 instance itself.",
            "properties": {
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "bigip_selfip": {
            "required": [
              "name",
              "vlan",
              "netmask"
            ],
            "type": "object",
            "description": "Manage Self-IPs on a BIG-IP system",
            "properties": {
              "name": {
                "type": "string"
              },
              "vlan": {
                "type": "string"
              },
              "netmask": {
                "type": "string"
              },
              "allow_service": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "traffic_group": {
                "type": "string"
              }
            }
          },
          "iptables": {
            "type": "object",
            "description": "Iptables is used to set up, maintain, and inspect the tables of IP packet filter rules in the Linux kernel. This module does not handle the saving and/or loading of rules, but rather only manipulates the current rules that are present in memory. This is the same as the behaviour of the \"iptables\" and \"ip6tables\" command which this module uses internally.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "chain": {
                "type": "string"
              },
              "ip_version": {
                "type": "string"
              },
              "out_interface": {
                "type": "string"
              },
              "limit_burst": {
                "type": "string"
              },
              "ctstate": {
                "type": "string"
              },
              "jump": {
                "type": "string"
              },
              "to_ports": {
                "type": "string"
              },
              "flush": {
                "type": "string"
              },
              "table": {
                "type": "string"
              },
              "icmp_type": {
                "type": "string"
              },
              "to_destination": {
                "type": "string"
              },
              "uid_owner": {
                "type": "string"
              },
              "set_dscp_mark_class": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "set_dscp_mark": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "set_counters": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "goto": {
                "type": "string"
              },
              "fragment": {
                "type": "string"
              },
              "to_source": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "destination_port": {
                "type": "string"
              },
              "reject_with": {
                "type": "string"
              },
              "limit": {
                "type": "string"
              },
              "source_port": {
                "type": "string"
              },
              "in_interface": {
                "type": "string"
              }
            }
          },
          "nxos_snmp_location": {
            "required": [
              "location"
            ],
            "type": "object",
            "description": "Manages SNMP location configuration.",
            "properties": {
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              }
            }
          },
          "rax_scaling_group": {
            "required": [
              "image",
              "min_entities",
              "flavor",
              "max_entities",
              "name",
              "server_name"
            ],
            "type": "object",
            "description": "Manipulate Rackspace Cloud Autoscale Groups",
            "properties": {
              "files": {
                "type": "string"
              },
              "max_entities": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "server_name": {
                "type": "string"
              },
              "loadbalancers": {
                "type": "array"
              },
              "key_name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "disk_config": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "min_entities": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cooldown": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "flavor": {
                "type": "string"
              },
              "config_drive": {
                "type": "string"
              },
              "networks": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "redshift_subnet_group": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "group_name",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "group_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "group_description",
                        "description"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "group_subnets",
                        "subnets"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, modifies, and deletes Redshift cluster subnet groups.",
            "properties": {
              "subnets": {
                "type": "array"
              },
              "description": {
                "type": "string"
              },
              "group_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "group_subnets": {
                "type": "array"
              },
              "group_description": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "rax_mon_entity": {
            "required": [
              "label"
            ],
            "type": "object",
            "description": "Create or delete a Rackspace Cloud Monitoring entity, which represents a device to monitor. Entities associate checks and alarms with a target system and provide a convenient, centralized place to store IP addresses. Rackspace monitoring module flow | *rax_mon_entity* -> rax_mon_check -> rax_mon_notification -> rax_mon_notification_plan -> rax_mon_alarm",
            "properties": {
              "state": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "agent_id": {
                "type": "string"
              },
              "named_ip_addresses": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          },
          "vyos_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "The command module allows running one or more commands on remote devices running VyOS.  This module can also be introspected to validate key parameters before returning successfully.  If the conditional statements are not met in the wait period, the task fails.\nCertain C(show) commands in VyOS produce many lines of output and use a custom pager that can cause this module to hang.  If the value of the environment variable C(ANSIBLE_VYOS_TERMINAL_LENGTH) is not set, the default number of 10000 is used.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "waitfor": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "string"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "newrelic_deployment": {
            "required": [
              "token"
            ],
            "type": "object",
            "description": "Notify newrelic about app deployments (see https://docs.newrelic.com/docs/apm/new-relic-apm/maintenance/deployment-notifications#api)",
            "properties": {
              "application_id": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "appname": {
                "type": "string"
              },
              "changelog": {
                "type": "string"
              },
              "environment": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "app_name": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "zabbix_screen": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_url",
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_url"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows you to create, modify and delete Zabbix screens and associated graph data.",
            "properties": {
              "http_login_password": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "http_login_user": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "screens": {
                "type": "array"
              },
              "timeout": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              }
            }
          },
          "webfaction_db": {
            "required": [
              "name",
              "login_password",
              "type",
              "login_name"
            ],
            "type": "object",
            "description": "Add or remove a database on a Webfaction host. Further documentation at http://github.com/quentinsf/ansible-webfaction.",
            "properties": {
              "name": {
                "type": "string"
              },
              "machine": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "login_name": {
                "type": "string"
              }
            }
          },
          "facter": {
            "type": "object",
            "description": "Runs the I(facter) discovery program (U(https://github.com/puppetlabs/facter)) on the remote system, returning JSON data that can be useful for inventory purposes.",
            "properties": {}
          },
          "pulp_repo": {
            "required": [
              "relative_url",
              "name"
            ],
            "type": "object",
            "description": "Add or remove Pulp repos from a remote host.",
            "properties": {
              "feed": {
                "type": "string"
              },
              "url_password": {
                "type": "string"
              },
              "repo_type": {
                "type": "string"
              },
              "pulp_host": {
                "type": "string"
              },
              "publish_distributor": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relative_url": {
                "type": "string"
              },
              "proxy_host": {
                "type": "string"
              },
              "force_basic_auth": {
                "type": "string"
              },
              "importer_ssl_client_key": {
                "type": "string"
              },
              "importer_ssl_client_cert": {
                "type": "string"
              },
              "proxy_port": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "serve_https": {
                "type": "string"
              },
              "serve_http": {
                "type": "string"
              },
              "url_username": {
                "type": "string"
              },
              "wait_for_completion": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "add_export_distributor": {
                "type": "string"
              },
              "importer_ssl_ca_cert": {
                "type": "string"
              }
            }
          },
          "ovirt_auth": {
            "required": [
              "username",
              "url",
              "password"
            ],
            "type": "object",
            "description": "This module authenticates to oVirt engine and creates SSO token, which should be later used in all other oVirt modules, so all modules don't need to perform login and logout. This module returns an Ansible fact called I(ovirt_auth). Every module can use this fact as C(auth) parameter, to perform authentication.",
            "properties": {
              "username": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "insecure": {
                "type": "string"
              },
              "kerberos": {
                "type": "string"
              },
              "compress": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ca_file": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "twilio": {
            "required": [
              "from_number",
              "msg",
              "auth_token",
              "to_number",
              "account_sid"
            ],
            "type": "object",
            "description": "Sends a text message to a phone number through the Twilio messaging API.",
            "properties": {
              "auth_token": {
                "type": "string"
              },
              "to_number": {
                "type": "string"
              },
              "account_sid": {
                "type": "string"
              },
              "from_number": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "media_url": {
                "type": "string"
              }
            }
          },
          "nxos_overlay_global": {
            "required": [
              "anycast_gateway_mac"
            ],
            "type": "object",
            "description": "Configures anycast gateway MAC of the switch.",
            "properties": {
              "anycast_gateway_mac": {
                "type": "string"
              }
            }
          },
          "gem": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "repository",
                        "source"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage installation and uninstallation of Ruby gems.",
            "properties": {
              "include_dependencies": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "repository": {
                "type": "string"
              },
              "build_flags": {
                "type": "string"
              },
              "include_doc": {
                "type": "string"
              },
              "user_install": {
                "type": "string"
              },
              "pre_release": {
                "type": "string"
              },
              "env_shebang": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "gem_source": {
                "type": "string"
              }
            }
          },
          "gce_eip": {
            "required": [
              "region",
              "name"
            ],
            "type": "object",
            "description": "Create (reserve) or Destroy (release) Regional or Global IP Addresses. See U(https://cloud.google.com/compute/docs/configure-instance-ip-addresses#reserve_new_static) for more on reserving static addresses.",
            "properties": {
              "region": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "bigip_virtual_server": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "destination",
                        "address",
                        "ip"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "destination"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ip"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "vs"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "vs"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP LTM virtual servers via iControl SOAP API",
            "properties": {
              "partition": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "default_persistence_profile": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "all_profiles": {
                "type": "array"
              },
              "all_rules": {
                "type": "array"
              },
              "enabled_vlans": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "vs": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "snat": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "quantum_router": {
            "required": [
              "login_tenant_name",
              "login_password",
              "login_username",
              "name"
            ],
            "type": "object",
            "description": "Create or Delete routers from OpenStack",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "admin_state_up": {
                "type": "string"
              },
              "tenant_name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pagerduty": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "service",
                        "services"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module will let you create PagerDuty maintenance windows",
            "properties": {
              "name": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "passwd": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "hours": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "services": {
                "type": "string"
              },
              "requester_id": {
                "type": "string"
              },
              "minutes": {
                "type": "string"
              },
              "desc": {
                "type": "string"
              }
            }
          },
          "ipadm_prop": {
            "required": [
              "protocol",
              "property"
            ],
            "type": "object",
            "description": "Modify protocol properties on Solaris/illumos systems.",
            "properties": {
              "temporary": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "property": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "pkgng": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage binary packages for FreeBSD using 'pkgng' which is available in versions after 9.0.",
            "properties": {
              "chroot": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "cached": {
                "type": "string"
              },
              "pkgsite": {
                "type": "string"
              },
              "rootdir": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "autoremove": {
                "type": "string"
              },
              "annotation": {
                "type": "string"
              }
            }
          },
          "gcpubsub_facts": {
            "required": [
              "view"
            ],
            "type": "object",
            "description": "List Topics/Subscriptions from Google PubSub.  Use the gcpubsub module for topic/subscription management. See U(https://cloud.google.com/pubsub/docs) for an overview.",
            "properties": {
              "topic": {
                "type": "string"
              },
              "state": {
                "type": "array"
              },
              "view": {
                "type": "string"
              }
            }
          },
          "patch": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "src",
                        "patchfile"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "src"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "patchfile"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "dest",
                        "originalfile"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Apply patch files using the GNU patch tool.",
            "properties": {
              "src": {
                "type": "string"
              },
              "basedir": {
                "type": "string"
              },
              "patchfile": {
                "type": "string"
              },
              "remote_src": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "strip": {
                "type": "string"
              },
              "binary": {
                "type": "string"
              },
              "originalfile": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "os_networks_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more networks from OpenStack.",
            "properties": {
              "name": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              }
            }
          },
          "letsencrypt": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "dest",
                        "cert"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "cert"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "csr",
                        "src"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "csr"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "src"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create and renew SSL certificates with Let's Encrypt. Let’s Encrypt is a free, automated, and open certificate authority (CA), run for the public’s benefit. For details see U(https://letsencrypt.org). The current implementation supports the http-01, tls-sni-02 and dns-01 challenges.\nTo use this module, it has to be executed at least twice. Either as two different tasks in the same run or during multiple runs.\nBetween these two tasks you have to fulfill the required steps for the chosen challenge by whatever means necessary. For http-01 that means creating the necessary challenge file on the destination webserver. For dns-01 the necessary dns record has to be created. tls-sni-02 requires you to create a SSL certificate with the appropriate subjectAlternativeNames. It is I(not) the responsibility of this module to perform these steps.\nFor details on how to fulfill these challenges, you might have to read through U(https://tools.ietf.org/html/draft-ietf-acme-acme-02#section-7)\nAlthough the defaults are chosen so that the module can be used with the Let's Encrypt CA, the module can be used with any service using the ACME protocol.",
            "properties": {
              "acme_directory": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "account_email": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "remaining_days": {
                "type": "string"
              },
              "challenge": {
                "type": "string"
              },
              "agreement": {
                "type": "string"
              },
              "account_key": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "csr": {
                "type": "string"
              }
            }
          },
          "azure_rm_storageblob": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "src",
                        "source"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "dest",
                        "destination"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "blob",
                        "blob_name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "container",
                        "container_name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "container"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "container_name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "storage_account_name",
                        "account_name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "storage_account_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "account_name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update and delete blob containers and blob objects. Use to upload a file and store it as a blob object, or download a blob object to a file.",
            "properties": {
              "src": {
                "type": "string"
              },
              "container_name": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "content_disposition": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "cache_control": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "container": {
                "type": "string"
              },
              "content_language": {
                "type": "string"
              },
              "blob": {
                "type": "string"
              },
              "content_type": {
                "type": "string"
              },
              "public_access": {
                "type": "string"
              },
              "content_md5": {
                "type": "string"
              },
              "storage_account_name": {
                "type": "string"
              },
              "blob_name": {
                "type": "string"
              },
              "account_name": {
                "type": "string"
              },
              "content_encoding": {
                "type": "string"
              }
            }
          },
          "nexmo": {
            "required": [
              "src",
              "dest",
              "api_secret",
              "api_key",
              "msg"
            ],
            "type": "object",
            "description": "Send a SMS message via nexmo",
            "properties": {
              "src": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "api_secret": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "dimensiondata_network": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, and delete MCP 1.0 & 2.0 networks",
            "properties": {
              "service_plan": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "debconf": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "value",
                        "answer"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "question",
                        "setting",
                        "selection"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pkg"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Configure a .deb package using debconf-set-selections. Or just query existing selections.",
            "properties": {
              "selection": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "question": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "vtype": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "unseen": {
                "type": "string"
              },
              "answer": {
                "type": "string"
              },
              "setting": {
                "type": "string"
              }
            }
          },
          "panos_pg": {
            "required": [
              "pg_name",
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "Create a security profile group",
            "properties": {
              "username": {
                "type": "string"
              },
              "wildfire": {
                "type": "string"
              },
              "data_filtering": {
                "type": "string"
              },
              "url_filtering": {
                "type": "string"
              },
              "pg_name": {
                "type": "string"
              },
              "vulnerability": {
                "type": "string"
              },
              "spyware": {
                "type": "string"
              },
              "file_blocking": {
                "type": "string"
              },
              "virus": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "a10_service_group": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "service_group",
                        "service",
                        "pool",
                        "group"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "service_group"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "service"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pool"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "group"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "service_group_protocol",
                        "proto",
                        "protocol"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "service_group_method",
                        "method"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage SLB (Server Load Balancing) service-group objects on A10 Networks devices via aXAPIv2.",
            "properties": {
              "service_group": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "proto": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "servers": {
                "type": "string"
              },
              "service_group_protocol": {
                "type": "string"
              },
              "service_group_method": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              }
            }
          },
          "dellos9_config": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lines",
                        "commands"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "OS9 configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with OS9 configuration sections in a deterministic way.",
            "properties": {
              "src": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "ovirt_networks_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt networks.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "panos_admpwd": {
            "required": [
              "newpassword",
              "key_filename",
              "ip_address"
            ],
            "type": "object",
            "description": "Change the admin password of PAN-OS via SSH using a SSH key for authentication.\nUseful for AWS instances where the first login should be done via SSH.",
            "properties": {
              "username": {
                "type": "string"
              },
              "newpassword": {
                "type": "string"
              },
              "key_filename": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "cl_bond": {
            "required": [
              "name",
              "slaves"
            ],
            "type": "object",
            "description": "Configures a bond interface on Cumulus Linux To configure a bridge port use the cl_bridge module. To configure any other type of interface use the cl_interface module. Follow the guidelines for bonding found in the Cumulus User Guide at U(http://docs.cumulusnetworks.com).",
            "properties": {
              "clag_id": {
                "type": "string"
              },
              "lacp_rate": {
                "type": "string"
              },
              "xmit_hash_policy": {
                "type": "string"
              },
              "mstpctl_portadminedge": {
                "type": "string"
              },
              "min_links": {
                "type": "string"
              },
              "alias_name": {
                "type": "string"
              },
              "mstpctl_bpduguard": {
                "type": "string"
              },
              "ipv4": {
                "type": "array"
              },
              "ipv6": {
                "type": "array"
              },
              "vids": {
                "type": "string"
              },
              "mstpctl_portnetwork": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "miimon": {
                "type": "string"
              },
              "virtual_mac": {
                "type": "string"
              },
              "lacp_bypass_all_active": {
                "type": "string"
              },
              "lacp_bypass_period": {
                "type": "string"
              },
              "lacp_bypass_allow": {
                "type": "string"
              },
              "lacp_bypass_priority": {
                "type": "array"
              },
              "addr_method": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "virtual_ip": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              },
              "pvid": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "slaves": {
                "type": "string"
              }
            }
          },
          "tower_job_template": {
            "required": [
              "job_type",
              "playbook",
              "name",
              "project"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower job templates. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "network_credential": {
                "type": "string"
              },
              "ask_inventory": {
                "type": "string"
              },
              "job_type": {
                "type": "string"
              },
              "ask_job_type": {
                "type": "string"
              },
              "host_config_key": {
                "type": "string"
              },
              "skip_tags": {
                "type": "string"
              },
              "playbook": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "job_tags": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "inventory": {
                "type": "string"
              },
              "limit": {
                "type": "string"
              },
              "forks": {
                "type": "string"
              },
              "cloud_credential": {
                "type": "string"
              },
              "become_enabled": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "machine_credential": {
                "type": "string"
              },
              "ask_credential": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "verbosity": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "ask_extra_vars": {
                "type": "string"
              },
              "extra_vars_path": {
                "type": "string"
              },
              "ask_tags": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              }
            }
          },
          "tower_label": {
            "required": [
              "name",
              "organization"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower labels. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "name": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              }
            }
          },
          "nxos_vxlan_vtep_vni": {
            "required": [
              "vni",
              "interface"
            ],
            "type": "object",
            "description": "Creates a Virtual Network Identifier member (VNI) for an NVE overlay interface.",
            "properties": {
              "save": {
                "type": "string"
              },
              "assoc_vrf": {
                "type": "string"
              },
              "include_defaults": {
                "type": "string"
              },
              "vni": {
                "type": "string"
              },
              "multicast_group": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "peer_list": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "ingress_replication": {
                "type": "string"
              },
              "suppress_arp": {
                "type": "string"
              },
              "config": {
                "type": "string"
              }
            }
          },
          "clc_loadbalancer": {
            "required": [
              "name",
              "alias",
              "location"
            ],
            "type": "object",
            "description": "An Ansible module to Create, Delete shared loadbalancers in CenturyLink Cloud.",
            "properties": {
              "status": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "nodes": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "persistence": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "include_role": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Loads and executes a role as a task, this frees roles from the `role:` directive and allows them to be treated more as tasks.",
            "properties": {
              "name": {
                "type": "string"
              },
              "private": {
                "type": "string"
              },
              "allow_duplicates": {
                "type": "string"
              },
              "tasks_from": {
                "type": "string"
              },
              "vars_from": {
                "type": "string"
              },
              "defaults_from": {
                "type": "string"
              }
            }
          },
          "na_cdot_user": {
            "required": [
              "vserver",
              "application",
              "state",
              "name",
              "authentication_method"
            ],
            "type": "object",
            "description": "Create or destroy users.",
            "properties": {
              "name": {
                "type": "string"
              },
              "authentication_method": {
                "type": "string"
              },
              "vserver": {
                "type": "string"
              },
              "application": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role_name": {
                "type": "string"
              },
              "set_password": {
                "type": "string"
              }
            }
          },
          "nxos_gir": {
            "required": [
              "state"
            ],
            "type": "object",
            "description": "Trigger a graceful removal or insertion (GIR) of the switch.",
            "properties": {
              "system_mode_maintenance_dont_generate_profile": {
                "type": "string"
              },
              "system_mode_maintenance_shutdown": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "system_mode_maintenance_timeout": {
                "type": "string"
              },
              "system_mode_maintenance": {
                "type": "string"
              },
              "system_mode_maintenance_on_reload_reset_reason": {
                "type": "string"
              }
            }
          },
          "gce_img": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module can create and delete GCE private images from gzipped compressed tarball containing raw disk data or from existing detached disks in any zone. U(https://cloud.google.com/compute/docs/images)",
            "properties": {
              "name": {
                "type": "string"
              },
              "family": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "rax_clb_ssl": {
            "required": [
              "loadbalancer"
            ],
            "type": "object",
            "description": "Set up, reconfigure, or remove SSL termination for an existing load balancer.",
            "properties": {
              "private_key": {
                "type": "string"
              },
              "certificate": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "https_redirect": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "intermediate_certificate": {
                "type": "string"
              },
              "secure_traffic_only": {
                "type": "string"
              },
              "secure_port": {
                "type": "string"
              },
              "loadbalancer": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "pingdom": {
            "required": [
              "checkid",
              "passwd",
              "state",
              "uid",
              "key"
            ],
            "type": "object",
            "description": "This module will let you pause/unpause Pingdom alerts",
            "properties": {
              "checkid": {
                "type": "string"
              },
              "passwd": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "uid": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "hpilo_facts": {
            "required": [
              "host"
            ],
            "type": "object",
            "description": "This module gathers facts for a specific system using its HP iLO interface. These facts include hardware and network related information useful for provisioning (e.g. macaddress, uuid).\nThis module requires the hpilo python module.",
            "properties": {
              "host": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "login": {
                "type": "string"
              }
            }
          },
          "ec2_customer_gateway": {
            "required": [
              "ip_address",
              "name"
            ],
            "type": "object",
            "description": "Manage an AWS customer gateway",
            "properties": {
              "state": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "bgp_asn": {
                "type": "string"
              }
            }
          },
          "os_project_facts": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Retrieve facts about a one or more OpenStack projects",
            "properties": {
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              }
            }
          },
          "udm_share": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_name",
                        "sambaName"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_hide_files",
                        "sambaHideFiles"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_blocking_locks",
                        "sambaBlockingLocks"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_directory_mode",
                        "sambaDirectoryMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_dos_filemode",
                        "sambaDosFilemode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_postexec",
                        "sambaPostexec"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_fake_oplocks",
                        "sambaFakeOplocks"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_strict_locking",
                        "sambaStrictLocking"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_public",
                        "sambaPublic"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_force_directory_security_mode",
                        "sambaForceDirectorySecurityMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_writeable",
                        "sambaWriteable"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_nt_acl_support",
                        "sambaNtAclSupport"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_write_list",
                        "sambaWriteList"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_preexec",
                        "sambaPreexec"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_browseable",
                        "sambaBrowseable"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_inherit_acls",
                        "sambaInheritAcls"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_msdfs_root",
                        "sambaMSDFSRoot"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_valid_users",
                        "sambaValidUsers"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_force_create_mode",
                        "sambaForceCreateMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_directory_security_mode",
                        "sambaDirectorySecurityMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_force_group",
                        "sambaForceGroup"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_vfs_objects",
                        "sambaVFSObjects"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_force_directory_mode",
                        "sambaForceDirectoryMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_locking",
                        "sambaLocking"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_security_mode",
                        "sambaSecurityMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_inherit_owner",
                        "sambaInheritOwner"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_csc_policy",
                        "sambaCscPolicy"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "nfs_custom_settings",
                        "nfsCustomSettings"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_force_user",
                        "sambaForceUser"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_invalid_users",
                        "sambaInvalidUsers"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_create_mode",
                        "sambaCreateMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_force_security_mode",
                        "sambaForceSecurityMode"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_level_2_oplocks",
                        "sambaLevel2Oplocks"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_custom_settings",
                        "sambaCustomSettings"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_hide_unreadable",
                        "sambaHideUnreadable"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_block_size",
                        "sambaBlockSize"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_oplocks",
                        "sambaOplocks"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_hosts_allow",
                        "sambaHostsAllow"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_inherit_permissions",
                        "sambaInheritPermissions"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "samba_hosts_deny",
                        "sambaHostsDeny"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows to manage samba shares on a univention corporate server (UCS). It uses the python API of the UCS to create a new object or edit it.",
            "properties": {
              "samba_hide_files": {
                "type": "string"
              },
              "samba_dos_filemode": {
                "type": "string"
              },
              "sambaCreateMode": {
                "type": "string"
              },
              "samba_force_directory_security_mode": {
                "type": "string"
              },
              "sambaForceCreateMode": {
                "type": "string"
              },
              "samba_write_list": {
                "type": "string"
              },
              "samba_inherit_acls": {
                "type": "string"
              },
              "samba_msdfs_root": {
                "type": "string"
              },
              "sambaBlockSize": {
                "type": "string"
              },
              "samba_directory_security_mode": {
                "type": "string"
              },
              "samba_force_directory_mode": {
                "type": "string"
              },
              "sambaMSDFSRoot": {
                "type": "string"
              },
              "nfsCustomSettings": {
                "type": "string"
              },
              "sambaBlockingLocks": {
                "type": "string"
              },
              "samba_force_security_mode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "sambaHostsAllow": {
                "type": "string"
              },
              "samba_hide_unreadable": {
                "type": "string"
              },
              "samba_postexec": {
                "type": "string"
              },
              "samba_oplocks": {
                "type": "string"
              },
              "samba_hosts_deny": {
                "type": "string"
              },
              "sambaCscPolicy": {
                "type": "string"
              },
              "sambaFakeOplocks": {
                "type": "string"
              },
              "samba_name": {
                "type": "string"
              },
              "sambaNtAclSupport": {
                "type": "string"
              },
              "sync": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "sambaInheritOwner": {
                "type": "string"
              },
              "sambaPostexec": {
                "type": "string"
              },
              "sambaHideFiles": {
                "type": "string"
              },
              "samba_fake_oplocks": {
                "type": "string"
              },
              "samba_preexec": {
                "type": "string"
              },
              "samba_browseable": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "sambaPreexec": {
                "type": "string"
              },
              "sambaForceGroup": {
                "type": "string"
              },
              "sambaInheritPermissions": {
                "type": "string"
              },
              "samba_locking": {
                "type": "string"
              },
              "samba_security_mode": {
                "type": "string"
              },
              "samba_inherit_owner": {
                "type": "string"
              },
              "nfs_hosts": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "nfs_custom_settings": {
                "type": "string"
              },
              "sambaHostsDeny": {
                "type": "string"
              },
              "sambaInvalidUsers": {
                "type": "string"
              },
              "subtree_checking": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "directorymode": {
                "type": "string"
              },
              "ou": {
                "type": "string"
              },
              "sambaForceDirectorySecurityMode": {
                "type": "string"
              },
              "sambaLevel2Oplocks": {
                "type": "string"
              },
              "sambaDirectorySecurityMode": {
                "type": "string"
              },
              "samba_custom_settings": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "sambaName": {
                "type": "string"
              },
              "sambaValidUsers": {
                "type": "string"
              },
              "samba_strict_locking": {
                "type": "string"
              },
              "samba_public": {
                "type": "string"
              },
              "samba_writeable": {
                "type": "string"
              },
              "samba_valid_users": {
                "type": "string"
              },
              "root_squash": {
                "type": "string"
              },
              "sambaHideUnreadable": {
                "type": "string"
              },
              "writeable": {
                "type": "string"
              },
              "sambaSecurityMode": {
                "type": "string"
              },
              "sambaForceSecurityMode": {
                "type": "string"
              },
              "sambaStrictLocking": {
                "type": "string"
              },
              "sambaDirectoryMode": {
                "type": "string"
              },
              "samba_force_user": {
                "type": "string"
              },
              "samba_invalid_users": {
                "type": "string"
              },
              "samba_create_mode": {
                "type": "string"
              },
              "samba_level_2_oplocks": {
                "type": "string"
              },
              "samba_inherit_permissions": {
                "type": "string"
              },
              "samba_directory_mode": {
                "type": "string"
              },
              "sambaForceDirectoryMode": {
                "type": "string"
              },
              "sambaCustomSettings": {
                "type": "string"
              },
              "sambaBrowseable": {
                "type": "string"
              },
              "samba_nt_acl_support": {
                "type": "string"
              },
              "sambaDosFilemode": {
                "type": "string"
              },
              "samba_block_size": {
                "type": "string"
              },
              "sambaInheritAcls": {
                "type": "string"
              },
              "samba_force_create_mode": {
                "type": "string"
              },
              "samba_force_group": {
                "type": "string"
              },
              "samba_vfs_objects": {
                "type": "string"
              },
              "sambaWriteList": {
                "type": "string"
              },
              "sambaVFSObjects": {
                "type": "string"
              },
              "samba_csc_policy": {
                "type": "string"
              },
              "sambaForceUser": {
                "type": "string"
              },
              "sambaOplocks": {
                "type": "string"
              },
              "sambaWriteable": {
                "type": "string"
              },
              "sambaLocking": {
                "type": "string"
              },
              "samba_blocking_locks": {
                "type": "string"
              },
              "sambaPublic": {
                "type": "string"
              },
              "samba_hosts_allow": {
                "type": "string"
              }
            }
          },
          "aos_logical_device_map": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Logical Device Map module let you manage your Logical Device Map easily. You can create create and delete Logical Device Map by Name, ID or by using a JSON File. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "dnsimple": {
            "type": "object",
            "description": "Manages domains and records via the DNSimple API, see the docs: U(http://developer.dnsimple.com/)",
            "properties": {
              "solo": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "account_email": {
                "type": "string"
              },
              "record_ids": {
                "type": "array"
              },
              "value": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "record": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "account_api_token": {
                "type": "string"
              }
            }
          },
          "openssl_privatekey": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "This module allows one to (re)generate OpenSSL private keys. It uses the pyOpenSSL python library to interact with openssl. One can generate either RSA or DSA private keys. Keys are generated in PEM format.",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "ovirt_groups_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt groups.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "lvg": {
            "required": [
              "vg"
            ],
            "type": "object",
            "description": "This module creates, removes or resizes volume groups.",
            "properties": {
              "vg_options": {
                "type": "string"
              },
              "pvs": {
                "type": "array"
              },
              "force": {
                "type": "string"
              },
              "vg": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pesize": {
                "type": "string"
              }
            }
          },
          "azure_rm_resourcegroup_facts": {
            "type": "object",
            "description": "Get facts for a specific resource group or all resource groups.",
            "properties": {
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "svr4pkg": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manages SVR4 packages on Solaris 10 and 11.\nThese were the native packages on Solaris <= 10 and are available as a legacy feature in Solaris 11.\nNote that this is a very basic packaging system. It will not enforce dependencies on install or remove.",
            "properties": {
              "category": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "proxy": {
                "type": "string"
              },
              "response_file": {
                "type": "string"
              }
            }
          },
          "slack": {
            "required": [
              "token"
            ],
            "type": "object",
            "description": "The M(slack) module sends notifications to U(http://slack.com) via the Incoming WebHook integration",
            "properties": {
              "username": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "attachments": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "icon_url": {
                "type": "string"
              },
              "parse": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "icon_emoji": {
                "type": "string"
              },
              "link_names": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              }
            }
          },
          "win_user": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages local Windows user accounts",
            "properties": {
              "update_password": {
                "type": "string"
              },
              "password_never_expires": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "groups_action": {
                "type": "string"
              },
              "password_expired": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "groups": {
                "type": "string"
              },
              "account_disabled": {
                "type": "string"
              },
              "fullname": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "account_locked": {
                "type": "string"
              },
              "user_cannot_change_password": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "ops_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends arbitrary commands to an OpenSwitch node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "waitfor": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "array"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "nxos_bgp_neighbor": {
            "required": [
              "asn",
              "neighbor"
            ],
            "type": "object",
            "description": "Manages BGP neighbors configurations on NX-OS switches.",
            "properties": {
              "pwd_type": {
                "type": "string"
              },
              "dynamic_capability": {
                "type": "string"
              },
              "shutdown": {
                "type": "string"
              },
              "low_memory_exempt": {
                "type": "string"
              },
              "remove_private_as": {
                "type": "string"
              },
              "suppress_4_byte_as": {
                "type": "string"
              },
              "connected_check": {
                "type": "string"
              },
              "remote_as": {
                "type": "string"
              },
              "ebgp_multihop": {
                "type": "string"
              },
              "maximum_peers": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "timers_holdtime": {
                "type": "string"
              },
              "update_source": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "local_as": {
                "type": "string"
              },
              "timers_keepalive": {
                "type": "string"
              },
              "pwd": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              },
              "log_neighbor_changes": {
                "type": "string"
              },
              "asn": {
                "type": "string"
              },
              "transport_passive_only": {
                "type": "string"
              },
              "capability_negotiation": {
                "type": "string"
              },
              "neighbor": {
                "type": "string"
              }
            }
          },
          "irc": {
            "required": [
              "msg",
              "channel"
            ],
            "type": "object",
            "description": "Send a message to an IRC channel. This is a very simplistic implementation.",
            "properties": {
              "style": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "nick": {
                "type": "string"
              },
              "passwd": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "topic": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "part": {
                "type": "string"
              },
              "nick_to": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "use_ssl": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              }
            }
          },
          "vmware_vmkernel": {
            "required": [
              "portgroup_name",
              "vland_id",
              "subnet_mask",
              "vswitch_name",
              "ip_address"
            ],
            "type": "object",
            "description": "Create a VMware VMkernel Interface",
            "properties": {
              "portgroup_name": {
                "type": "string"
              },
              "vland_id": {
                "type": "string"
              },
              "enable_vmotion": {
                "type": "string"
              },
              "vswitch_name": {
                "type": "string"
              },
              "enable_mgmt": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              },
              "subnet_mask": {
                "type": "string"
              },
              "enable_vsan": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "enable_ft": {
                "type": "string"
              }
            }
          },
          "ovirt_networks": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Module to manage logical networks in oVirt",
            "properties": {
              "comment": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vm_network": {
                "type": "string"
              },
              "data_center": {
                "type": "string"
              },
              "clusters": {
                "type": "array"
              },
              "vlan_tag": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "gluster_volume": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "bricks",
                        "brick"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, remove, start, stop and tune GlusterFS volumes",
            "properties": {
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "replicas": {
                "type": "string"
              },
              "bricks": {
                "type": "string"
              },
              "disperses": {
                "type": "string"
              },
              "quota": {
                "type": "string"
              },
              "stripes": {
                "type": "string"
              },
              "cluster": {
                "type": "array"
              },
              "host": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "start_on_create": {
                "type": "string"
              },
              "redundancies": {
                "type": "string"
              },
              "directory": {
                "type": "string"
              },
              "brick": {
                "type": "string"
              },
              "rebalance": {
                "type": "string"
              },
              "options": {
                "type": "string"
              },
              "transport": {
                "type": "string"
              }
            }
          },
          "ovirt_affinity_labels_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt affinity labels.",
            "properties": {
              "host": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              }
            }
          },
          "os_network": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove network from OpenStack.",
            "properties": {
              "name": {
                "type": "string"
              },
              "provider_network_type": {
                "type": "string"
              },
              "admin_state_up": {
                "type": "string"
              },
              "provider_physical_network": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "provider_segmentation_id": {
                "type": "string"
              },
              "external": {
                "type": "string"
              },
              "shared": {
                "type": "string"
              }
            }
          },
          "bigip_device_dns": {
            "type": "object",
            "description": "Manage BIG-IP device DNS settings",
            "properties": {
              "search": {
                "type": "string"
              },
              "cache": {
                "type": "string"
              },
              "ip_version": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "forwarders": {
                "type": "string"
              },
              "name_servers": {
                "type": "string"
              }
            }
          },
          "ec2_vol": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "zone",
                        "aws_zone",
                        "ec2_zone"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "creates an EBS volume and optionally attaches it to an instance.  If both an instance ID and a device name is given and the instance has a device at the device name, then no volume is created and no attachment is made.  This module has a dependency on python-boto.",
            "properties": {
              "aws_zone": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "volume_size": {
                "type": "string"
              },
              "encrypted": {
                "type": "string"
              },
              "delete_on_termination": {
                "type": "string"
              },
              "volume_type": {
                "type": "string"
              },
              "ec2_zone": {
                "type": "string"
              },
              "instance": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "iops": {
                "type": "string"
              },
              "snapshot": {
                "type": "string"
              },
              "device_name": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "clc_modify_server": {
            "required": [
              "server_ids"
            ],
            "type": "object",
            "description": "An Ansible module to modify servers in CenturyLink Cloud.",
            "properties": {
              "alert_policy_name": {
                "type": "string"
              },
              "anti_affinity_policy_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "anti_affinity_policy_id": {
                "type": "string"
              },
              "alert_policy_id": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "server_ids": {
                "type": "string"
              },
              "cpu": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "cnos_reload": {
            "type": "object",
            "description": "This module allows you to restart the switch using the current startup configuration. The module is usually invoked after the running configuration has been saved over the startup configuration. This module uses SSH to manage network device configuration. The results of the operation can be viewed in results directory. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_reload.html)",
            "properties": {}
          },
          "ipa_hbacrule": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cn",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "cn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify or delete an IPA HBAC rule using IPA API.",
            "properties": {
              "cn": {
                "type": "string"
              },
              "ipa_host": {
                "type": "string"
              },
              "usergroup": {
                "type": "array"
              },
              "servicegroup": {
                "type": "array"
              },
              "service": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "ipa_pass": {
                "type": "string"
              },
              "sourcehostcategory": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "servicecategory": {
                "type": "string"
              },
              "hostcategory": {
                "type": "string"
              },
              "user": {
                "type": "array"
              },
              "ipa_port": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "ipa_prot": {
                "type": "string"
              },
              "host": {
                "type": "array"
              },
              "hostgroup": {
                "type": "array"
              },
              "usercategory": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "sourcehostgroup": {
                "type": "array"
              },
              "sourcehost": {
                "type": "array"
              }
            }
          },
          "profitbricks": {
            "required": [
              "image",
              "name"
            ],
            "type": "object",
            "description": "Create, destroy, update, start, stop, and reboot a ProfitBricks virtual machine. When the virtual machine is created it can optionally wait for it to be 'running' before returning. This module has a dependency on profitbricks >= 1.0.0",
            "properties": {
              "image": {
                "type": "string"
              },
              "ram": {
                "type": "string"
              },
              "subscription_password": {
                "type": "string"
              },
              "ssh_keys": {
                "type": "string"
              },
              "subscription_user": {
                "type": "string"
              },
              "volume_size": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "assign_public_ip": {
                "type": "string"
              },
              "auto_increment": {
                "type": "string"
              },
              "lan": {
                "type": "string"
              },
              "image_password": {
                "type": "string"
              },
              "bus": {
                "type": "string"
              },
              "instance_ids": {
                "type": "array"
              },
              "wait_timeout": {
                "type": "string"
              },
              "cpu_family": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "count": {
                "type": "string"
              },
              "datacenter": {
                "type": "string"
              },
              "remove_boot_volume": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "cores": {
                "type": "string"
              }
            }
          },
          "netapp_e_host": {
            "required": [
              "ssid",
              "api_password",
              "api_username",
              "api_url",
              "host_type_index",
              "name"
            ],
            "type": "object",
            "description": "Create, update, remove hosts on NetApp E-series storage arrays",
            "properties": {
              "group": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "host_type_index": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "ports": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              }
            }
          },
          "os_server_group": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove server groups from OpenStack.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "policies": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              }
            }
          },
          "ovirt_users": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "authz_name",
                        "domain"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "authz_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "domain"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage users in oVirt.",
            "properties": {
              "state": {
                "type": "string"
              },
              "authz_name": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "homebrew": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "install_options",
                        "options"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg",
                        "package",
                        "formula"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "update_homebrew",
                        "update-brew"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "upgrade_all",
                        "upgrade"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages Homebrew packages",
            "properties": {
              "install_options": {
                "type": "string"
              },
              "upgrade": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "package": {
                "type": "string"
              },
              "update_homebrew": {
                "type": "string"
              },
              "upgrade_all": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "update-brew": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "formula": {
                "type": "string"
              },
              "options": {
                "type": "string"
              }
            }
          },
          "modprobe": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove kernel modules.",
            "properties": {
              "state": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "postgresql_user": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove PostgreSQL users (roles) from a remote host and, optionally, grant the users access to an existing database or tables.\nThe fundamental function of the module is to create, or delete, roles from a PostgreSQL cluster. Privilege assignment, or removal, is an optional step, which works on one database at a time. This allows for the module to be called several times in the same module to modify the permissions on different databases, or to grant permissions to already existing users.\nA user cannot be removed until all the privileges have been stripped from the user. In such situation, if the module tries to remove the user it will fail. To avoid this from happening the fail_on_user option signals the module to try to remove the user, but if not possible keep going; the module will report if changes happened and separately if the user was removed or not.",
            "properties": {
              "name": {
                "type": "string"
              },
              "no_password_changes": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "expires": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "role_attr_flags": {
                "type": "string"
              },
              "login_unix_socket": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "encrypted": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "fail_on_user": {
                "type": "string"
              },
              "priv": {
                "type": "string"
              }
            }
          },
          "rax_facts": {
            "type": "object",
            "description": "Gather facts for Rackspace Cloud Servers.",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          },
          "dladm_iptun": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "tunnel",
                        "link"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "tunnel"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "link"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "local_address",
                        "local"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "remote_address",
                        "remote"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage IP tunnel interfaces on Solaris/illumos systems.",
            "properties": {
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "tunnel": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "remote_address": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "local_address": {
                "type": "string"
              },
              "local": {
                "type": "string"
              },
              "remote": {
                "type": "string"
              }
            }
          },
          "na_cdot_volume": {
            "required": [
              "name",
              "vserver",
              "state"
            ],
            "type": "object",
            "description": "Create or destroy volumes on NetApp cDOT",
            "properties": {
              "name": {
                "type": "string"
              },
              "size_unit": {
                "type": "string"
              },
              "vserver": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "online": {
                "type": "string"
              },
              "infinite": {
                "type": "string"
              },
              "aggregate_name": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "profitbricks_volume": {
            "required": [
              "image",
              "datacenter",
              "name"
            ],
            "type": "object",
            "description": "Allows you to create or remove a volume from a ProfitBricks datacenter. This module has a dependency on profitbricks >= 1.0.0",
            "properties": {
              "count": {
                "type": "string"
              },
              "datacenter": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "subscription_user": {
                "type": "string"
              },
              "image_password": {
                "type": "string"
              },
              "licence_type": {
                "type": "string"
              },
              "bus": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "instance_ids": {
                "type": "array"
              },
              "subscription_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "auto_increment": {
                "type": "string"
              },
              "disk_type": {
                "type": "string"
              },
              "ssh_keys": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "eos_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends an arbitrary set of commands to an EOS node and returns the results read from the device.  This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "waitfor": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "string"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "vyos_system": {
            "type": "object",
            "description": "Runs one or more commands on remote devices running VyOS. This module can also be introspected to validate key parameters before returning successfully.",
            "properties": {
              "domain_search": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "domain_name": {
                "type": "string"
              },
              "name_server": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "junos_package": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "src",
                        "package"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "src"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "package"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module can install new and updated packages on remote devices running Junos.  The module will compare the specified package with the one running on the remote device and install the specified version if there is a mismatch",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "package": {
                "type": "string"
              },
              "no_copy": {
                "type": "string"
              },
              "reboot": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          },
          "cs_affinitygroup": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create and remove affinity groups.",
            "properties": {
              "account": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "affinty_type": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "bigip_pool": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pool"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pool"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "host",
                        "address"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP LTM pools via iControl SOAP API",
            "properties": {
              "monitors": {
                "type": "string"
              },
              "lb_method": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "slow_ramp_time": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "service_down_action": {
                "type": "string"
              },
              "reselect_tries": {
                "type": "string"
              },
              "monitor_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "quorum": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "tempfile": {
            "type": "object",
            "description": "The C(tempfile) module creates temporary files and directories. C(mktemp) command takes different parameters on various systems, this module helps to avoid troubles related to that. Files/directories created by module are accessible only by creator. In case you need to make them world-accessible you need to use M(file) module.",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              },
              "suffix": {
                "type": "string"
              }
            }
          },
          "panos_restart": {
            "required": [
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "Restart a device",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "cs_network": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, restart and delete networks.",
            "properties": {
              "domain": {
                "type": "string"
              },
              "end_ipv6": {
                "type": "string"
              },
              "gateway": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "start_ipv6": {
                "type": "string"
              },
              "cidr_ipv6": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "end_ip": {
                "type": "string"
              },
              "vlan": {
                "type": "string"
              },
              "clean_up": {
                "type": "string"
              },
              "netmask": {
                "type": "string"
              },
              "network_offering": {
                "type": "string"
              },
              "vpc": {
                "type": "string"
              },
              "start_ip": {
                "type": "string"
              },
              "gateway_ipv6": {
                "type": "string"
              },
              "display_text": {
                "type": "string"
              },
              "isolated_pvlan": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "network_domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "acl_type": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_nat_gateway": {
            "type": "object",
            "description": "Ensure the state of AWS VPC NAT Gateways based on their id, allocation and subnet ids.",
            "properties": {
              "client_token": {
                "type": "string"
              },
              "nat_gateway_id": {
                "type": "string"
              },
              "allocation_id": {
                "type": "string"
              },
              "subnet_id": {
                "type": "string"
              },
              "if_exist_do_not_create": {
                "type": "string"
              },
              "eip_address": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "release_eip": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "rabbitmq_queue": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module uses rabbitMQ Rest API to create/delete queues",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "dead_letter_exchange": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "message_ttl": {
                "type": "string"
              },
              "vhost": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "max_length": {
                "type": "string"
              },
              "arguments": {
                "type": "string"
              },
              "auto_delete": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "auto_expires": {
                "type": "string"
              },
              "dead_letter_routing_key": {
                "type": "string"
              },
              "durable": {
                "type": "string"
              }
            }
          },
          "rax_dns": {
            "type": "object",
            "description": "Manage domains on Rackspace Cloud DNS",
            "properties": {
              "comment": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "slackpkg": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage binary packages for Slackware using 'slackpkg' which is available in versions after 12.2.",
            "properties": {
              "state": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "rabbitmq_vhost": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tracing",
                        "trace"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "vhost"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "vhost"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage the state of a virtual host in RabbitMQ",
            "properties": {
              "node": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "trace": {
                "type": "string"
              },
              "tracing": {
                "type": "string"
              },
              "vhost": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "nxos_vpc_interface": {
            "required": [
              "state",
              "portchannel"
            ],
            "type": "object",
            "description": "Manages interface VPC configuration",
            "properties": {
              "peer_link": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "portchannel": {
                "type": "string"
              },
              "vpc": {
                "type": "string"
              }
            }
          },
          "elasticache_snapshot": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage cache snapshots in Amazon Elasticache.\nReturns information about the specified snapshot.",
            "properties": {
              "replication_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "bucket": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cluster_id": {
                "type": "string"
              },
              "target": {
                "type": "string"
              }
            }
          },
          "os_ironic_node": {
            "type": "object",
            "description": "Deploy to nodes controlled by Ironic.",
            "properties": {
              "timeout": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "power": {
                "type": "string"
              },
              "deploy": {
                "type": "string"
              },
              "ironic_url": {
                "type": "string"
              },
              "maintenance_reason": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "maintenance": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "instance_info": {
                "type": "string"
              },
              "config_drive": {
                "type": "string"
              }
            }
          },
          "ios_command": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "wait_for",
                        "waitfor"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sends arbitrary commands to an ios node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use M(ios_config) to configure IOS devices.",
            "properties": {
              "retries": {
                "type": "string"
              },
              "commands": {
                "type": "array"
              },
              "waitfor": {
                "type": "array"
              },
              "interval": {
                "type": "string"
              },
              "wait_for": {
                "type": "array"
              },
              "match": {
                "type": "string"
              }
            }
          },
          "postgresql_ext": {
            "required": [
              "name",
              "db"
            ],
            "type": "object",
            "description": "Add or remove PostgreSQL extensions from a database.",
            "properties": {
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "capabilities": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "capability",
                        "cap"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "capability"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "cap"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module manipulates files privileges using the Linux capabilities(7) system.",
            "properties": {
              "capability": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cap": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_net_facts": {
            "type": "object",
            "description": "Gather facts about ec2 VPCs in AWS",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "virt_net": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "network"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "network"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage I(libvirt) networks.",
            "properties": {
              "xml": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "uri": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "autostart": {
                "type": "string"
              },
              "network": {
                "type": "string"
              }
            }
          },
          "asa_config": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lines",
                        "commands"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Cisco ASA configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with ASA configuration sections in a deterministic way.",
            "properties": {
              "src": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "passwords": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "defaults": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "pamd": {
            "required": [
              "control",
              "name",
              "module_path",
              "type"
            ],
            "type": "object",
            "description": "Edit PAM service's type, control, module path and module arguments. In order for a PAM rule to be modified, the type, control and module_path must match an existing rule.  See man(5) pam.d for details.",
            "properties": {
              "control": {
                "type": "string"
              },
              "new_module_path": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "new_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "new_control": {
                "type": "string"
              },
              "module_path": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "module_arguments": {
                "type": "string"
              }
            }
          },
          "digital_ocean": {
            "type": "object",
            "description": "Create/delete a droplet in DigitalOcean and optionally wait for it to be 'running', or deploy an SSH key.",
            "properties": {
              "unique_name": {
                "type": "string"
              },
              "virtio": {
                "type": "string"
              },
              "region_id": {
                "type": "string"
              },
              "size_id": {
                "type": "string"
              },
              "ipv6": {
                "type": "string"
              },
              "backups_enabled": {
                "type": "string"
              },
              "user_data": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "image_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "ssh_key_ids": {
                "type": "string"
              },
              "api_token": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "private_networking": {
                "type": "string"
              },
              "ssh_pub_key": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "cs_securitygroup_rule": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "start_port",
                        "port"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add and remove security group rules.",
            "properties": {
              "icmp_code": {
                "type": "string"
              },
              "start_port": {
                "type": "string"
              },
              "user_security_group": {
                "type": "string"
              },
              "end_port": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "security_group": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "icmp_type": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "rabbitmq_user": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "user",
                        "username",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "user"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "username"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add or remove users to RabbitMQ and assign permissions",
            "properties": {
              "node": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "write_priv": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "read_priv": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "configure_priv": {
                "type": "string"
              },
              "vhost": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "permissions": {
                "type": "string"
              }
            }
          },
          "cnos_bgp": {
            "required": [
              "asNum",
              "bgpArg1"
            ],
            "type": "object",
            "description": "This module allows you to work with Border Gateway Protocol (BGP) related configurations. The operators used are overloaded to ensure control over switch BGP configurations. This module is invoked using method with asNumber as one of its arguments. The first level of the BGP configuration allows to set up an AS number, with the following attributes going into various configuration operations under the context of BGP. After passing this level, there are eight BGP arguments that will perform further configurations. They are bgpArg1, bgpArg2, bgpArg3, bgpArg4, bgpArg5, bgpArg6, bgpArg7, and bgpArg8. For more details on how to use these arguments, see [Overloaded Variables]. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_bgp.html)",
            "properties": {
              "bgpArg8": {
                "type": "string"
              },
              "asNum": {
                "type": "string"
              },
              "bgpArg4": {
                "type": "string"
              },
              "bgpArg5": {
                "type": "string"
              },
              "bgpArg6": {
                "type": "string"
              },
              "bgpArg7": {
                "type": "string"
              },
              "bgpArg1": {
                "type": "string"
              },
              "bgpArg2": {
                "type": "string"
              },
              "bgpArg3": {
                "type": "string"
              }
            }
          },
          "pkgutil": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manages CSW packages (SVR4 format) on Solaris 10 and 11.\nThese were the native packages on Solaris <= 10 and are available as a legacy feature in Solaris 11.\nPkgutil is an advanced packaging system, which resolves dependency on installation. It is designed for CSW packages.",
            "properties": {
              "state": {
                "type": "string"
              },
              "site": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "update_catalog": {
                "type": "string"
              }
            }
          },
          "win_copy": {
            "required": [
              "dest"
            ],
            "type": "object",
            "description": "The M(win_copy) module copies a file on the local box to remote windows locations.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "src": {
                "type": "string"
              }
            }
          },
          "nxos_nxapi": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "http",
                        "enable_http"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "https",
                        "enable_https"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "sandbox",
                        "enable_sandbox"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Configures the NXAPI feature on devices running Cisco NXOS.  The NXAPI feature is absent from the configuration by default.  Since this module manages the NXAPI feature it only supports the use of the C(Cli) transport.",
            "properties": {
              "http_port": {
                "type": "string"
              },
              "http": {
                "type": "string"
              },
              "https_port": {
                "type": "string"
              },
              "enable_sandbox": {
                "type": "string"
              },
              "sandbox": {
                "type": "string"
              },
              "enable_https": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "https": {
                "type": "string"
              },
              "enable_http": {
                "type": "string"
              }
            }
          },
          "fortios_ipv4_policy": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "service",
                        "services"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "policy_action",
                        "action"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module provides management of firewall IPv4 policies on FortiOS devices.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "application_list": {
                "type": "string"
              },
              "service_negate": {
                "type": "string"
              },
              "av_profile": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "fixedport": {
                "type": "string"
              },
              "src_addr": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "poolname": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "nat": {
                "type": "string"
              },
              "src_addr_negate": {
                "type": "string"
              },
              "schedule": {
                "type": "string"
              },
              "src_intf": {
                "type": "string"
              },
              "dst_addr_negate": {
                "type": "string"
              },
              "services": {
                "type": "string"
              },
              "webfilter_profile": {
                "type": "string"
              },
              "policy_action": {
                "type": "string"
              },
              "dst_intf": {
                "type": "string"
              },
              "ips_sensor": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "dst_addr": {
                "type": "string"
              }
            }
          },
          "win_regmerge": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Wraps the reg.exe command to import the contents of a registry file.\nSuitable for use with registry files created using M(win_template).\nWindows registry files have a specific format and must be constructed correctly with carriage return and line feed line endings otherwise they will not be merged.\nExported registry files often start with a Byte Order Mark which must be removed if the file is to templated using M(win_template).\nRegistry file format is described at U(https://support.microsoft.com/en-us/kb/310516)\nSee also M(win_template), M(win_regedit)",
            "properties": {
              "path": {
                "type": "string"
              },
              "compare_key": {
                "type": "string"
              }
            }
          },
          "mqtt": {
            "required": [
              "topic",
              "payload"
            ],
            "type": "object",
            "description": "Publish a message on an MQTT topic.",
            "properties": {
              "username": {
                "type": "string"
              },
              "qos": {
                "type": "string"
              },
              "payload": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "topic": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "retain": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "boundary_meter": {
            "required": [
              "apikey",
              "apiid",
              "name"
            ],
            "type": "object",
            "description": "This module manages boundary meters",
            "properties": {
              "state": {
                "type": "string"
              },
              "apikey": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "apiid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "os_port_facts": {
            "type": "object",
            "description": "Retrieve facts about ports from OpenStack.",
            "properties": {
              "port": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              }
            }
          },
          "sensu_subscription": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage which I(sensu channels) a machine should subscribe to",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "apt_key": {
            "type": "object",
            "description": "Add or remove an I(apt) key, optionally downloading it",
            "properties": {
              "keyserver": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "keyring": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "file": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "nxos_system": {
            "type": "object",
            "description": "This module provides declarative management of node system attributes on Cisco NXOS devices.  It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
            "properties": {
              "domain_search": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "system_mtu": {
                "type": "string"
              },
              "domain_name": {
                "type": "string"
              },
              "name_servers": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "domain_lookup": {
                "type": "string"
              }
            }
          },
          "sf_check_connections": {
            "type": "object",
            "description": "Used to test the management connection to the cluster.\nThe test pings the MVIP and SVIP, and executes a simple API method to verify connectivity.",
            "properties": {
              "svip": {
                "type": "string"
              },
              "skip": {
                "type": "string"
              },
              "mvip": {
                "type": "string"
              }
            }
          },
          "ec2_elb_facts": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "names",
                        "elb_ids",
                        "ec2_elbs"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Gather facts about EC2 Elastic Load Balancers in AWS",
            "properties": {
              "elb_ids": {
                "type": "array"
              },
              "names": {
                "type": "array"
              },
              "ec2_elbs": {
                "type": "array"
              }
            }
          },
          "imgadm": {
            "required": [
              "state"
            ],
            "type": "object",
            "description": "Manage SmartOS virtual machine images through imgadm(1M)",
            "properties": {
              "force": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              }
            }
          },
          "cs_resourcelimit": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "limit",
                        "max"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "resource_type",
                        "type"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "resource_type"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage limits of resources for domains, accounts and projects.",
            "properties": {
              "domain": {
                "type": "string"
              },
              "max": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "limit": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "resource_type": {
                "type": "string"
              }
            }
          },
          "zypper": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "pkg"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "update_cache",
                        "refresh"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage packages on SUSE and openSUSE using the zypper and rpm tools.",
            "properties": {
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "disable_gpg_check": {
                "type": "string"
              },
              "refresh": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "oldpackage": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "disable_recommends": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "assert": {
            "required": [
              "that"
            ],
            "type": "object",
            "description": "This module asserts that given expressions are true with an optional custom message.",
            "properties": {
              "msg": {
                "type": "string"
              },
              "that": {
                "type": "string"
              }
            }
          },
          "ldap_entry": {
            "required": [
              "dn"
            ],
            "type": "object",
            "description": "Add or remove LDAP entries. This module only asserts the existence or non-existence of an LDAP entry, not its attributes. To assert the attribute values of an entry, see M(ldap_attr).",
            "properties": {
              "dn": {
                "type": "string"
              },
              "objectClass": {
                "type": "string"
              },
              "start_tls": {
                "type": "string"
              },
              "bind_dn": {
                "type": "string"
              },
              "server_uri": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "params": {
                "type": "array"
              },
              "bind_pw": {
                "type": "string"
              },
              "attributes": {
                "type": "string"
              }
            }
          },
          "ovirt_quotas": {
            "required": [
              "data_center",
              "name"
            ],
            "type": "object",
            "description": "Module to manage datacenter quotas in oVirt",
            "properties": {
              "description": {
                "type": "string"
              },
              "cluster_grace": {
                "type": "string"
              },
              "data_center": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "storage_grace": {
                "type": "string"
              },
              "storage_threshold": {
                "type": "string"
              },
              "cluster_threshold": {
                "type": "string"
              },
              "clusters": {
                "type": "array"
              },
              "storages": {
                "type": "array"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "mail": {
            "required": [
              "subject"
            ],
            "type": "object",
            "description": "This module is useful for sending emails from playbooks.\nOne may wonder why automate sending emails?  In complex environments there are from time to time processes that cannot be automated, either because you lack the authority to make it so, or because not everyone agrees to a common approach.\nIf you cannot automate a specific step, but the step is non-blocking, sending out an email to the responsible party to make him perform his part of the bargain is an elegant way to put the responsibility in someone else's lap.\nOf course sending out a mail can be equally useful as a way to notify one or more people in a team that a specific action has been (successfully) taken.",
            "properties": {
              "body": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "from": {
                "type": "string"
              },
              "to": {
                "type": "string"
              },
              "cc": {
                "type": "string"
              },
              "charset": {
                "type": "string"
              },
              "bcc": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "headers": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "subtype": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "attach": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              }
            }
          },
          "ec2_lc_facts": {
            "type": "object",
            "description": "Gather facts about AWS Autoscaling Launch Configurations",
            "properties": {
              "sort": {
                "type": "string"
              },
              "sort_end": {
                "type": "string"
              },
              "sort_order": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "sort_start": {
                "type": "string"
              }
            }
          },
          "junos_user": {
            "type": "object",
            "description": "This module manages locally configured user accounts on remote network devices running the JUNOS operating system.  It provides a set of arguments for creating, removing and updating locally defined accounts",
            "properties": {
              "sshkey": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "purge": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "users": {
                "type": "string"
              }
            }
          },
          "ovirt_storage_domains": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "domain_function",
                        "type"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage storage domains in oVirt",
            "properties": {
              "comment": {
                "type": "string"
              },
              "domain_function": {
                "type": "string"
              },
              "fcp": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "iscsi": {
                "type": "string"
              },
              "posixfs": {
                "type": "string"
              },
              "glusterfs": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "nfs": {
                "type": "string"
              },
              "data_center": {
                "type": "string"
              },
              "destroy": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "apache2_module": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Enables or disables a specified module of the Apache2 webserver.",
            "properties": {
              "state": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "mount": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module controls active and configured mount points in C(/etc/fstab).",
            "properties": {
              "src": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dump": {
                "type": "string"
              },
              "boot": {
                "type": "string"
              },
              "fstab": {
                "type": "string"
              },
              "passno": {
                "type": "string"
              },
              "fstype": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "opts": {
                "type": "string"
              }
            }
          },
          "apache2_mod_proxy": {
            "required": [
              "balancer_vhost"
            ],
            "type": "object",
            "description": "Set and/or get members' attributes of an Apache httpd 2.4 mod_proxy balancer pool, using HTTP POST and GET requests. The httpd mod_proxy balancer-member status page has to be enabled and accessible, as this module relies on parsing this page. This module supports ansible check_mode, and requires BeautifulSoup python module.",
            "properties": {
              "tls": {
                "type": "string"
              },
              "balancer_vhost": {
                "type": "string"
              },
              "balancer_url_suffix": {
                "type": "string"
              },
              "member_host": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "avi_analyticsprofile": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure AnalyticsProfile object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "hs_event_throttle_window": {
                "type": "string"
              },
              "disable_se_analytics": {
                "type": "string"
              },
              "apdex_server_rtt_tolerated_factor": {
                "type": "string"
              },
              "hs_security_nonpfs_penalty": {
                "type": "string"
              },
              "hs_security_tls12_score": {
                "type": "string"
              },
              "exclude_server_tcp_reset_as_error": {
                "type": "string"
              },
              "hs_min_dos_rate": {
                "type": "string"
              },
              "exclude_no_dns_record_as_error": {
                "type": "string"
              },
              "conn_server_lossy_zero_win_size_event_threshold": {
                "type": "string"
              },
              "hs_max_resources_penalty": {
                "type": "string"
              },
              "conn_lossy_total_rexmt_threshold": {
                "type": "string"
              },
              "hs_security_certscore_le07d": {
                "type": "string"
              },
              "hs_pscore_traffic_threshold_l4_client": {
                "type": "string"
              },
              "hs_security_ssl30_score": {
                "type": "string"
              },
              "hs_security_weak_signature_algo_penalty": {
                "type": "string"
              },
              "exclude_no_valid_gs_member_as_error": {
                "type": "string"
              },
              "apdex_server_response_threshold": {
                "type": "string"
              },
              "hs_security_cipherscore_ge128b": {
                "type": "string"
              },
              "resp_code_block": {
                "type": "string"
              },
              "hs_performance_boost": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "exclude_invalid_dns_domain_as_error": {
                "type": "string"
              },
              "exclude_http_error_codes": {
                "type": "array"
              },
              "hs_max_anomaly_penalty": {
                "type": "string"
              },
              "hs_security_tls11_score": {
                "type": "string"
              },
              "exclude_gs_down_as_error": {
                "type": "string"
              },
              "apdex_server_response_tolerated_factor": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "disable_server_analytics": {
                "type": "string"
              },
              "conn_server_lossy_ooo_threshold": {
                "type": "string"
              },
              "exclude_client_close_before_request_as_error": {
                "type": "string"
              },
              "exclude_persistence_change_as_error": {
                "type": "string"
              },
              "hs_security_hsts_penalty": {
                "type": "string"
              },
              "hs_security_selfsignedcert_penalty": {
                "type": "string"
              },
              "conn_server_lossy_total_rexmt_threshold": {
                "type": "string"
              },
              "conn_lossy_timeo_rexmt_threshold": {
                "type": "string"
              },
              "apdex_rtt_tolerated_factor": {
                "type": "string"
              },
              "hs_security_certscore_gt30d": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "client_log_config": {
                "type": "string"
              },
              "apdex_rum_tolerated_factor": {
                "type": "string"
              },
              "hs_security_cipherscore_eq000b": {
                "type": "string"
              },
              "hs_security_certscore_le30d": {
                "type": "string"
              },
              "hs_pscore_traffic_threshold_l4_server": {
                "type": "string"
              },
              "exclude_syn_retransmit_as_error": {
                "type": "string"
              },
              "ranges": {
                "type": "array"
              },
              "apdex_server_rtt_threshold": {
                "type": "string"
              },
              "exclude_server_dns_error_as_error": {
                "type": "string"
              },
              "hs_security_encalgo_score_rc4": {
                "type": "string"
              },
              "conn_server_lossy_timeo_rexmt_threshold": {
                "type": "string"
              },
              "conn_lossy_zero_win_size_event_threshold": {
                "type": "string"
              },
              "apdex_rum_threshold": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "hs_security_chain_invalidity_penalty": {
                "type": "string"
              },
              "apdex_rtt_threshold": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "apdex_response_tolerated_factor": {
                "type": "string"
              },
              "exclude_tcp_reset_as_error": {
                "type": "string"
              },
              "hs_max_security_penalty": {
                "type": "string"
              },
              "exclude_invalid_dns_query_as_error": {
                "type": "string"
              },
              "conn_lossy_ooo_threshold": {
                "type": "string"
              },
              "hs_security_cipherscore_lt128b": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "hs_security_tls10_score": {
                "type": "string"
              },
              "hs_security_certscore_expired": {
                "type": "string"
              },
              "apdex_response_threshold": {
                "type": "string"
              },
              "hs_security_encalgo_score_none": {
                "type": "string"
              },
              "exclude_unsupported_dns_query_as_error": {
                "type": "string"
              }
            }
          },
          "iosxr_system": {
            "type": "object",
            "description": "This module provides declarative management of node system attributes on Cisco IOS XR devices.  It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
            "properties": {
              "lookup_source": {
                "type": "string"
              },
              "domain_search": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "domain_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name_servers": {
                "type": "string"
              },
              "lookup_enabled": {
                "description": "Provides administrative control for enabling or disabling DNS lookups.  When this argument is set to True, lookups are performed and when it is set to False, lookups are not performed.",
                "$ref": "#/definitions/ansible_truth"
              }
            }
          },
          "authorized_key": {
            "required": [
              "user",
              "key"
            ],
            "type": "object",
            "description": "Adds or removes SSH authorized keys for particular user accounts",
            "properties": {
              "exclusive": {
                "type": "string"
              },
              "key_options": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "manage_dir": {
                "type": "string"
              }
            }
          },
          "vmware_guest_facts": {
            "required": [
              "datacenter",
              "name"
            ],
            "type": "object",
            "description": "Gather facts about a single Virtual Machine on a VMware ESX cluster",
            "properties": {
              "datacenter": {
                "type": "string"
              },
              "folder": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "name_match": {
                "type": "string"
              }
            }
          },
          "openssl_publickey": {
            "required": [
              "path",
              "privatekey_path"
            ],
            "type": "object",
            "description": "This module allows one to (re)generate OpenSSL public keys from their private keys. It uses the pyOpenSSL python library to interact with openssl. Keys are generated in PEM format. This module works only if the version of PyOpenSSL is recent enough (> 16.0.0)",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "privatekey_path": {
                "type": "string"
              }
            }
          },
          "vmware_dns_config": {
            "required": [
              "change_hostname_to",
              "dns_servers",
              "domainname"
            ],
            "type": "object",
            "description": "Manage VMware ESXi DNS Configuration",
            "properties": {
              "change_hostname_to": {
                "type": "string"
              },
              "dns_servers": {
                "type": "string"
              },
              "domainname": {
                "type": "string"
              }
            }
          },
          "nxos_ospf_vrf": {
            "required": [
              "ospf"
            ],
            "type": "object",
            "description": "Manages a VRF for an OSPF router.",
            "properties": {
              "router_id": {
                "type": "string"
              },
              "timer_throttle_lsa_max": {
                "type": "string"
              },
              "timer_throttle_spf_max": {
                "type": "string"
              },
              "timer_throttle_lsa_hold": {
                "type": "string"
              },
              "default_metric": {
                "type": "string"
              },
              "log_adjacency": {
                "type": "string"
              },
              "timer_throttle_lsa_start": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              },
              "auto_cost": {
                "type": "string"
              },
              "timer_throttle_spf_start": {
                "type": "string"
              },
              "ospf": {
                "type": "string"
              },
              "timer_throttle_spf_hold": {
                "type": "string"
              }
            }
          },
          "packet_device": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "hostnames",
                        "name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "create, destroy, update, start, stop, and reboot a Packet Host machine. When the machine is created it can optionally wait for it to have an IP address before returning. This module has a dependency on packet >= 1.0.\nAPI is documented at U(https://www.packet.net/help/api/#page:devices,header:devices-devices-post).",
            "properties": {
              "count": {
                "type": "string"
              },
              "operating_system": {
                "type": "string"
              },
              "features": {
                "type": "string"
              },
              "facility": {
                "type": "string"
              },
              "lock": {
                "type": "string"
              },
              "auth_token": {
                "type": "string"
              },
              "count_offset": {
                "type": "string"
              },
              "wait": {
                "description": "Whether to wait for the instance to be assigned IP address before returning.",
                "$ref": "#/definitions/ansible_truth"
              },
              "user_data": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hostnames": {
                "type": "string"
              },
              "plan": {
                "type": "string"
              },
              "device_ids": {
                "type": "array"
              },
              "wait_timeout": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "cl_bridge": {
            "required": [
              "name",
              "ports"
            ],
            "type": "object",
            "description": "Configures a bridge interface on Cumulus Linux To configure a bond port use the cl_bond module. To configure any other type of interface use the cl_interface module. Follow the guidelines for bridging found in the Cumulus User Guide at U(http://docs.cumulusnetworks.com)",
            "properties": {
              "addr_method": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "vlan_aware": {
                "type": "string"
              },
              "mstpctl_treeprio": {
                "type": "string"
              },
              "virtual_mac": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              },
              "pvid": {
                "type": "string"
              },
              "ipv4": {
                "type": "array"
              },
              "stp": {
                "type": "string"
              },
              "virtual_ip": {
                "type": "string"
              },
              "ipv6": {
                "type": "array"
              },
              "vids": {
                "type": "string"
              },
              "alias_name": {
                "type": "string"
              },
              "ports": {
                "type": "array"
              },
              "location": {
                "type": "string"
              }
            }
          },
          "flowdock": {
            "required": [
              "type",
              "token",
              "msg"
            ],
            "type": "object",
            "description": "Send a message to a flowdock team inbox or chat using the push API (see https://www.flowdock.com/api/team-inbox and https://www.flowdock.com/api/chat)",
            "properties": {
              "from_name": {
                "type": "string"
              },
              "from_address": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "external_user_name": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              },
              "reply_to": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              }
            }
          },
          "bigip_routedomain": {
            "required": [
              "id"
            ],
            "type": "object",
            "description": "Manage route domains on a BIG-IP",
            "properties": {
              "flow_eviction_policy": {
                "type": "string"
              },
              "service_policy": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "parent": {
                "type": "string"
              },
              "connection_limit": {
                "type": "string"
              },
              "strict": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "routing_protocol": {
                "type": "string"
              },
              "bwc_policy": {
                "type": "string"
              },
              "vlans": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "locale_gen": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages locales by editing /etc/locale.gen and invoking locale-gen.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "cs_domain": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Create, update and remove domains.",
            "properties": {
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "network_domain": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "clean_up": {
                "type": "string"
              }
            }
          },
          "win_msi": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Installs or uninstalls a Windows MSI file that is already located on the target server",
            "properties": {
              "extra_args": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "find": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "paths",
                        "name",
                        "path"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "paths"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "patterns",
                        "pattern"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Return a list files based on specific criteria. Multiple criteria are AND'd together.",
            "properties": {
              "paths": {
                "type": "array"
              },
              "name": {
                "type": "array"
              },
              "file_type": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "age": {
                "type": "string"
              },
              "contains": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "age_stamp": {
                "type": "string"
              },
              "patterns": {
                "type": "string"
              },
              "get_checksum": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "use_regex": {
                "type": "string"
              },
              "path": {
                "type": "array"
              },
              "hidden": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "rax_cdb_database": {
            "type": "object",
            "description": "create / delete a database in the Cloud Databases.",
            "properties": {
              "cdb_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "character_set": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "collate": {
                "type": "string"
              }
            }
          },
          "cronvar": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Use this module to manage crontab variables. This module allows you to create, update, or delete cron variable definitions.",
            "properties": {
              "name": {
                "type": "string"
              },
              "insertbefore": {
                "type": "string"
              },
              "cron_file": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "insertafter": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "virt": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manages virtual machines supported by I(libvirt).",
            "properties": {
              "xml": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "uri": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "autostart": {
                "type": "string"
              }
            }
          },
          "cloudwatchevent_rule": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module creates and manages CloudWatch event rules and targets.",
            "properties": {
              "role_arn": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "event_pattern": {
                "type": "string"
              },
              "schedule_expression": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "targets": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "win_msg": {
            "type": "object",
            "description": "Wraps the msg.exe command in order to send messages to Windows hosts.",
            "properties": {
              "msg": {
                "type": "string"
              },
              "to": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "display_seconds": {
                "type": "string"
              }
            }
          },
          "pagerduty_alert": {
            "required": [
              "name",
              "state",
              "service_key",
              "api_key"
            ],
            "type": "object",
            "description": "This module will let you trigger, acknowledge or resolve a PagerDuty incident by sending events",
            "properties": {
              "client_url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "incident_key": {
                "type": "string"
              },
              "client": {
                "type": "string"
              },
              "service_key": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "desc": {
                "type": "string"
              }
            }
          },
          "github_key": {
            "required": [
              "token",
              "name"
            ],
            "type": "object",
            "description": "Creates, removes, or updates GitHub access keys.",
            "properties": {
              "force": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "pubkey": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "cs_template": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Register a template from URL, create a template from a ROOT volume of a stopped VM or its snapshot, extract and delete templates.",
            "properties": {
              "is_featured": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "is_extractable": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "password_enabled": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "sshkey_enabled": {
                "type": "string"
              },
              "is_dynamically_scalable": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "template_filter": {
                "type": "string"
              },
              "is_ready": {
                "type": "string"
              },
              "details": {
                "type": "string"
              },
              "is_routing": {
                "type": "string"
              },
              "template_tag": {
                "type": "string"
              },
              "bits": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "is_public": {
                "type": "string"
              },
              "requires_hvm": {
                "type": "string"
              },
              "display_text": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "checksum": {
                "type": "string"
              },
              "cross_zones": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "snapshot": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "hypervisor": {
                "type": "string"
              },
              "os_type": {
                "type": "string"
              }
            }
          },
          "profitbricks_volume_attachments": {
            "required": [
              "datacenter",
              "server",
              "volume"
            ],
            "type": "object",
            "description": "Allows you to attach or detach a volume from a ProfitBricks server. This module has a dependency on profitbricks >= 1.0.0",
            "properties": {
              "datacenter": {
                "type": "string"
              },
              "subscription_user": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "volume": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "subscription_password": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "os_auth": {
            "type": "object",
            "description": "Retrieve an auth token from an OpenStack Cloud",
            "properties": {}
          },
          "aos_external_router": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS External Router module let you manage your External Router easily. You can create create and delete External Router by Name, ID or by using a JSON File. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "name": {
                "type": "string"
              },
              "loopback": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "asn": {
                "type": "string"
              }
            }
          },
          "cs_vpc": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "tag"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update and delete VPCs.",
            "properties": {
              "display_text": {
                "type": "string"
              },
              "vpc_offering": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "tags": {
                "type": "array"
              },
              "domain": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tag": {
                "type": "array"
              },
              "account": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "network_domain": {
                "type": "string"
              }
            }
          },
          "mongodb_parameter": {
            "required": [
              "database",
              "param",
              "value"
            ],
            "type": "object",
            "description": "Change an administrative parameter on a MongoDB server.",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "param": {
                "type": "string"
              },
              "ssl": {
                "type": "string"
              },
              "param_type": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "login_database": {
                "type": "string"
              },
              "replica_set": {
                "type": "string"
              }
            }
          },
          "rollbar_deployment": {
            "required": [
              "environment",
              "token",
              "revision"
            ],
            "type": "object",
            "description": "Notify Rollbar about app deployments (see https://rollbar.com/docs/deploys_other/)",
            "properties": {
              "comment": {
                "type": "string"
              },
              "rollbar_user": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "environment": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "ovirt_users_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt users.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "znode": {
            "required": [
              "hosts",
              "name"
            ],
            "type": "object",
            "description": "Create, delete, retrieve, and update znodes using ZooKeeper.",
            "properties": {
              "name": {
                "type": "string"
              },
              "recursive": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hosts": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "op": {
                "type": "string"
              }
            }
          },
          "avi_sslkeyandcertificate": {
            "required": [
              "name",
              "certificate"
            ],
            "type": "object",
            "description": "This module is used to configure SSLKeyAndCertificate object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "status": {
                "type": "string"
              },
              "enckey_base64": {
                "type": "string"
              },
              "certificate_management_profile_ref": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dynamic_params": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "enckey_name": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "ca_certs": {
                "type": "string"
              },
              "hardwaresecuritymodulegroup_ref": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "key_params": {
                "type": "string"
              },
              "certificate": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            }
          },
          "make": {
            "required": [
              "chdir"
            ],
            "type": "object",
            "description": "Run targets in a Makefile.",
            "properties": {
              "chdir": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "target": {
                "type": "string"
              }
            }
          },
          "profitbricks_datacenter": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This is a simple module that supports creating or removing vDCs. A vDC is required before you can create servers. This module has a dependency on profitbricks >= 1.0.0",
            "properties": {
              "name": {
                "type": "string"
              },
              "subscription_user": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "subscription_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "avi_poolgroup": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure PoolGroup object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "priority_labels_ref": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "cloud_ref": {
                "type": "string"
              },
              "min_servers": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cloud_config_cksum": {
                "type": "string"
              },
              "members": {
                "type": "array"
              },
              "fail_action": {
                "type": "string"
              },
              "deployment_policy_ref": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "panos_dag": {
            "required": [
              "dag_name",
              "password",
              "ip_address",
              "dag_filter"
            ],
            "type": "object",
            "description": "Create a dynamic address group object in the firewall used for policy rules",
            "properties": {
              "username": {
                "type": "string"
              },
              "dag_name": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "dag_filter": {
                "type": "string"
              }
            }
          },
          "vertica_configuration": {
            "required": [
              "name",
              "value"
            ],
            "type": "object",
            "description": "Updates Vertica configuration parameters.",
            "properties": {
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "vmware_portgroup": {
            "required": [
              "portgroup_name",
              "switch_name",
              "vlan_id"
            ],
            "type": "object",
            "description": "Create a VMware portgroup",
            "properties": {
              "network_policy": {
                "type": "string"
              },
              "portgroup_name": {
                "type": "string"
              },
              "switch_name": {
                "type": "string"
              },
              "vlan_id": {
                "type": "string"
              }
            }
          },
          "nclu": {
            "type": "object",
            "description": "Interface to the Network Command Line Utility, developed to make it easier to configure operating systems running ifupdown2 and Quagga, such as Cumulus Linux. Command documentation is available at U(https://docs.cumulusnetworks.com/display/DOCS/Network+Command+Line+Utility)",
            "properties": {
              "commands": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "abort": {
                "type": "string"
              },
              "atomic": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              }
            }
          },
          "docker_image": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "build_path"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Build, load or pull an image, making the image available for creating containers. Also supports tagging an image into a repository and archiving an image to a .tar file.",
            "properties": {
              "archive_path": {
                "type": "string"
              },
              "build_path": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "repository": {
                "type": "string"
              },
              "pull": {
                "type": "string"
              },
              "container_limits": {
                "type": "string"
              },
              "dockerfile": {
                "type": "string"
              },
              "nocache": {
                "type": "string"
              },
              "load_path": {
                "type": "string"
              },
              "use_tls": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "buildargs": {
                "type": "string"
              },
              "rm": {
                "type": "string"
              },
              "push": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "http_timeout": {
                "type": "string"
              }
            }
          },
          "nxos_igmp_interface": {
            "required": [
              "interface"
            ],
            "type": "object",
            "description": "Manages IGMP interface configuration settings.",
            "properties": {
              "startup_query_interval": {
                "type": "string"
              },
              "report_llg": {
                "type": "string"
              },
              "last_member_qrt": {
                "type": "string"
              },
              "group_timeout": {
                "type": "string"
              },
              "robustness": {
                "type": "string"
              },
              "startup_query_count": {
                "type": "string"
              },
              "oif_routemap": {
                "type": "string"
              },
              "immediate_leave": {
                "type": "string"
              },
              "oif_source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "oif_prefix": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "querier_timeout": {
                "type": "string"
              },
              "last_member_query_count": {
                "type": "string"
              },
              "query_interval": {
                "type": "string"
              },
              "restart": {
                "type": "string"
              },
              "query_mrt": {
                "type": "string"
              }
            }
          },
          "vmware_guest_snapshot": {
            "required": [
              "datacenter",
              "name",
              "state"
            ],
            "type": "object",
            "description": "Create virtual machines snapshots",
            "properties": {
              "datacenter": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "snapshot_name": {
                "type": "string"
              },
              "name_match": {
                "type": "string"
              },
              "folder": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "clc_group": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create or delete Server Groups at Centurylink Centurylink Cloud",
            "properties": {
              "description": {
                "type": "string"
              },
              "parent": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "udm_dns_record": {
            "required": [
              "type",
              "name",
              "zone"
            ],
            "type": "object",
            "description": "This module allows to manage dns records on a univention corporate server (UCS). It uses the python API of the UCS to create a new object or edit it.",
            "properties": {
              "data": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              }
            }
          },
          "panos_address": {
            "required": [
              "address_name",
              "address",
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "Create address service object of different types [IP Range, FQDN, or IP Netmask].",
            "properties": {
              "username": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "address_name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "avi_networkprofile": {
            "required": [
              "profile",
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure NetworkProfile object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "profile": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ohai": {
            "type": "object",
            "description": "Similar to the M(facter) module, this runs the I(Ohai) discovery program (U(http://wiki.opscode.com/display/chef/Ohai)) on the remote host and returns JSON inventory data. I(Ohai) data is a bit more verbose and nested than I(facter).",
            "properties": {}
          },
          "na_cdot_svm": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Create or destroy svm on NetApp cDOT",
            "properties": {
              "root_volume_security_style": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "root_volume_aggregate": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "root_volume": {
                "type": "string"
              }
            }
          },
          "azure_rm_securitygroup_facts": {
            "required": [
              "resource_group"
            ],
            "type": "object",
            "description": "Get facts for a specific security group or all security groups within a resource group.",
            "properties": {
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "user": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "user"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage user accounts and user attributes.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "ssh_key_bits": {
                "type": "string"
              },
              "update_password": {
                "type": "string"
              },
              "non_unique": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "ssh_key_type": {
                "type": "string"
              },
              "ssh_key_passphrase": {
                "type": "string"
              },
              "home": {
                "type": "string"
              },
              "skeleton": {
                "type": "string"
              },
              "append": {
                "type": "string"
              },
              "uid": {
                "type": "string"
              },
              "ssh_key_comment": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "system": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "shell": {
                "type": "string"
              },
              "expires": {
                "type": "string"
              },
              "ssh_key_file": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "groups": {
                "type": "string"
              },
              "move_home": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "seuser": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "createhome": {
                "type": "string"
              },
              "remove": {
                "type": "string"
              },
              "login_class": {
                "type": "string"
              },
              "generate_ssh_key": {
                "type": "string"
              }
            }
          },
          "quantum_router_gateway": {
            "required": [
              "router_name",
              "login_tenant_name",
              "login_password",
              "login_username",
              "network_name"
            ],
            "type": "object",
            "description": "Creates/Removes a gateway interface from the router, used to associate a external network with a router to route external traffic.",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "network_name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "router_name": {
                "type": "string"
              }
            }
          },
          "ovirt_hosts_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt hosts.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "gcdns_zone": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "zone",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "zone"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates or removes managed zones in Google Cloud DNS.",
            "properties": {
              "description": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pn_vrouterif": {
            "required": [
              "pn_vrouter_name",
              "state"
            ],
            "type": "object",
            "description": "Execute vrouter-interface-add, vrouter-interface-remove, vrouter-interface-modify command.\nYou configure interfaces to vRouter services on a fabric, cluster, standalone switch or virtual network(VNET).",
            "properties": {
              "pn_nic_enable": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_exclusive": {
                "type": "string"
              },
              "pn_nic_str": {
                "type": "string"
              },
              "pn_vrouter_name": {
                "type": "string"
              },
              "pn_vrrp_adv_int": {
                "type": "string"
              },
              "pn_vrrp_priority": {
                "type": "string"
              },
              "pn_alias": {
                "type": "string"
              },
              "pn_secondary_macs": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_interface_ip": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_vrrp_id": {
                "type": "string"
              },
              "pn_vlan": {
                "type": "string"
              },
              "pn_interface": {
                "type": "string"
              },
              "pn_l3port": {
                "type": "string"
              },
              "pn_vxlan": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_assignment": {
                "type": "string"
              }
            }
          },
          "panos_commit": {
            "required": [
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "PanOS module that will commit firewall's candidate configuration on\nthe device. The new configuration will become active immediately.",
            "properties": {
              "username": {
                "type": "string"
              },
              "interval": {
                "type": "string"
              },
              "sync": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "webfaction_site": {
            "required": [
              "name",
              "host",
              "login_password",
              "login_name"
            ],
            "type": "object",
            "description": "Add or remove a website on a Webfaction host.  Further documentation at http://github.com/quentinsf/ansible-webfaction.",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "subdomains": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "https": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_name": {
                "type": "string"
              },
              "site_apps": {
                "type": "string"
              }
            }
          },
          "ipadm_ifprop": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "interface",
                        "nic"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "interface"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "nic"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "property",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "property"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Modify IP interface properties on Solaris/illumos systems.",
            "properties": {
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "nic": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "property": {
                "type": "string"
              }
            }
          },
          "win_reg_stat": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "key"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "key"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "entry",
                        "value",
                        "property"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Like M(win_file), M(win_reg_stat) will return whether the key/property exists.\nIt also returns the sub keys and properties of the key specified.\nIf specifying a property name through I(property), it will return the information specific for that property.",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "entry": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "property": {
                "type": "string"
              }
            }
          },
          "rabbitmq_exchange": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "exchange_type",
                        "type"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module uses rabbitMQ Rest API to create/delete exchanges",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "exchange_type": {
                "type": "string"
              },
              "vhost": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "internal": {
                "type": "string"
              },
              "arguments": {
                "type": "string"
              },
              "auto_delete": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "durable": {
                "type": "string"
              }
            }
          },
          "bigip_node": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "host",
                        "address",
                        "ip"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "host"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ip"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP LTM nodes via iControl SOAP API",
            "properties": {
              "ip": {
                "type": "string"
              },
              "session_state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "monitor_state": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "monitors": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "monitor_type": {
                "type": "string"
              },
              "quorum": {
                "type": "string"
              }
            }
          },
          "mysql_replication": {
            "type": "object",
            "description": "Manages MySQL server replication, slave, master status get and change master host.",
            "properties": {
              "master_ssl_cert": {
                "type": "string"
              },
              "master_auto_position": {
                "type": "string"
              },
              "master_log_pos": {
                "type": "string"
              },
              "master_password": {
                "type": "string"
              },
              "master_host": {
                "type": "string"
              },
              "master_ssl": {
                "type": "string"
              },
              "master_ssl_capath": {
                "type": "string"
              },
              "master_ssl_ca": {
                "type": "string"
              },
              "master_ssl_key": {
                "type": "string"
              },
              "master_connect_retry": {
                "type": "string"
              },
              "master_user": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              },
              "master_port": {
                "type": "string"
              },
              "master_log_file": {
                "type": "string"
              },
              "master_ssl_cipher": {
                "type": "string"
              },
              "relay_log_pos": {
                "type": "string"
              },
              "relay_log_file": {
                "type": "string"
              }
            }
          },
          "avi_certificatemanagementprofile": {
            "required": [
              "name",
              "script_path"
            ],
            "type": "object",
            "description": "This module is used to configure CertificateManagementProfile object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "script_path": {
                "type": "string"
              },
              "script_params": {
                "type": "array"
              },
              "uuid": {
                "type": "string"
              }
            }
          },
          "pkg5": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "accept_licenses",
                        "accept_licences",
                        "accept"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "IPS packages are the native packages in Solaris 11 and higher.",
            "properties": {
              "accept_licenses": {
                "type": "string"
              },
              "accept_licences": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "accept": {
                "type": "string"
              }
            }
          },
          "rax_files": {
            "required": [
              "container"
            ],
            "type": "object",
            "description": "Manipulate Rackspace Cloud Files Containers",
            "properties": {
              "web_index": {
                "type": "string"
              },
              "container": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "private": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "clear_meta": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "web_error": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "public": {
                "type": "string"
              }
            }
          },
          "netapp_e_snapshot_images": {
            "required": [
              "state",
              "api_url",
              "snapshot_group",
              "api_username",
              "api_password"
            ],
            "type": "object",
            "description": "Create and delete snapshots images on snapshot groups for NetApp E-series storage arrays.\nOnly the oldest snapshot image can be deleted so consistency is preserved.\nRelated: Snapshot volumes are created from snapshot images.",
            "properties": {
              "api_url": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "snapshot_group": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "filesystem": {
            "required": [
              "dev",
              "fstype"
            ],
            "type": "object",
            "description": "This module creates file system.",
            "properties": {
              "resizefs": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "opts": {
                "type": "array"
              },
              "dev": {
                "type": "string"
              },
              "fstype": {
                "type": "string"
              }
            }
          },
          "docker": {
            "required": [
              "image"
            ],
            "type": "object",
            "description": "This is the original Ansible module for managing the Docker container life cycle.\nNOTE: Additional and newer modules are available. For the latest on orchestrating containers with Ansible visit our Getting Started with Docker Guide at https://github.com/ansible/ansible/blob/devel/docsite/rst/guide_docker.rst.",
            "properties": {
              "publish_all_ports": {
                "type": "string"
              },
              "tty": {
                "type": "string"
              },
              "cap_add": {
                "type": "string"
              },
              "insecure_registry": {
                "type": "string"
              },
              "links": {
                "type": "array"
              },
              "docker_user": {
                "type": "string"
              },
              "lxc_conf": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "labels": {
                "type": "string"
              },
              "pid": {
                "type": "string"
              },
              "docker_api_version": {
                "type": "string"
              },
              "stop_timeout": {
                "type": "string"
              },
              "tls_client_key": {
                "type": "string"
              },
              "env_file": {
                "type": "string"
              },
              "read_only": {
                "type": "string"
              },
              "tls_ca_cert": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "detach": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "docker_url": {
                "type": "string"
              },
              "use_tls": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tls_client_cert": {
                "type": "string"
              },
              "entrypoint": {
                "type": "string"
              },
              "env": {
                "type": "string"
              },
              "volumes_from": {
                "type": "array"
              },
              "net": {
                "type": "string"
              },
              "privileged": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "memory_limit": {
                "type": "string"
              },
              "extra_hosts": {
                "type": "string"
              },
              "log_driver": {
                "type": "string"
              },
              "expose": {
                "type": "array"
              },
              "stdin_open": {
                "type": "string"
              },
              "tls_hostname": {
                "type": "string"
              },
              "domainname": {
                "type": "string"
              },
              "registry": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "cpu_set": {
                "type": "string"
              },
              "pull": {
                "type": "string"
              },
              "dns": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "signal": {
                "type": "string"
              },
              "log_opt": {
                "type": "string"
              },
              "restart_policy": {
                "type": "string"
              },
              "count": {
                "type": "string"
              },
              "devices": {
                "type": "array"
              },
              "email": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "restart_policy_retry": {
                "type": "string"
              },
              "volumes": {
                "type": "array"
              },
              "cap_drop": {
                "type": "string"
              },
              "ports": {
                "type": "array"
              },
              "ulimits": {
                "type": "string"
              },
              "cpu_shares": {
                "type": "string"
              }
            }
          },
          "win_lineinfile": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "dest",
                        "destfile",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "destfile"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module will search a file for a line, and ensure that it is present or absent.\nThis is primarily useful when you want to change a single line in a file only.",
            "properties": {
              "name": {
                "type": "string"
              },
              "insertbefore": {
                "type": "string"
              },
              "encoding": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "create": {
                "type": "string"
              },
              "newline": {
                "type": "string"
              },
              "destfile": {
                "type": "string"
              },
              "backrefs": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "regexp": {
                "type": "string"
              },
              "insertafter": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "line": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "validate": {
                "type": "string"
              }
            }
          },
          "pn_vlan": {
            "required": [
              "pn_vlanid",
              "state"
            ],
            "type": "object",
            "description": "Execute vlan-create or vlan-delete command.\nVLANs are used to isolate network traffic at Layer 2.The VLAN identifiers 0 and 4095 are reserved and cannot be used per the IEEE 802.1Q standard. The range of configurable VLAN identifiers is 2 through 4092.",
            "properties": {
              "pn_scope": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_vlanid": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_ports": {
                "type": "string"
              },
              "pn_untagged_ports": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_stats": {
                "type": "string"
              },
              "pn_description": {
                "type": "string"
              }
            }
          },
          "quantum_floating_ip_associate": {
            "required": [
              "instance_name",
              "login_tenant_name",
              "login_password",
              "login_username",
              "ip_address"
            ],
            "type": "object",
            "description": "Associates or disassociates a specific floating IP with a particular instance",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "instance_name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "proxmox": {
            "required": [
              "api_host",
              "api_user"
            ],
            "type": "object",
            "description": "allows you to create/delete/stop instances in Proxmox VE cluster\nStarting in Ansible 2.1, it automatically detects containerization type (lxc for PVE 4, openvz for older)",
            "properties": {
              "force": {
                "description": "forcing operations\ncan be used only with states C(present), C(stopped), C(restarted)\nwith C(state=present) force option allow to overwrite existing container\nwith states C(stopped) , C(restarted) allow to force stop instance",
                "$ref": "#/definitions/ansible_truth"
              },
              "cpus": {
                "type": "string"
              },
              "ostemplate": {
                "type": "string"
              },
              "unprivileged": {
                "type": "string"
              },
              "disk": {
                "type": "string"
              },
              "searchdomain": {
                "type": "string"
              },
              "api_user": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "storage": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "swap": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "pubkey": {
                "type": "string"
              },
              "node": {
                "type": "string"
              },
              "cpuunits": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "netif": {
                "type": "string"
              },
              "api_host": {
                "type": "string"
              },
              "vmid": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "mounts": {
                "type": "string"
              },
              "nameserver": {
                "type": "string"
              },
              "validate_certs": {
                "description": "enable / disable https certificate verification",
                "$ref": "#/definitions/ansible_truth"
              },
              "onboot": {
                "type": "string"
              }
            }
          },
          "statusio_maintenance": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "components",
                        "component"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "containers",
                        "container"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates a maintenance window for status.io\nDeletes a maintenance window for status.io",
            "properties": {
              "maintenance_notify_72_hr": {
                "type": "string"
              },
              "maintenance_notify_1_hr": {
                "type": "string"
              },
              "container": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "maintenance_notify_now": {
                "type": "string"
              },
              "start_time": {
                "type": "string"
              },
              "component": {
                "type": "string"
              },
              "api_id": {
                "type": "string"
              },
              "automation": {
                "type": "string"
              },
              "maintenance_notify_24_hr": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "all_infrastructure_affected": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "components": {
                "type": "string"
              },
              "statuspage": {
                "type": "string"
              },
              "maintenance_id": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "minutes": {
                "type": "string"
              },
              "start_date": {
                "type": "string"
              },
              "containers": {
                "type": "string"
              },
              "desc": {
                "type": "string"
              }
            }
          },
          "telegram": {
            "required": [
              "msg",
              "token",
              "chat_id"
            ],
            "type": "object",
            "description": "Send notifications via telegram bot, to a verified group or user",
            "properties": {
              "msg": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "chat_id": {
                "type": "string"
              }
            }
          },
          "django_manage": {
            "required": [
              "app_path",
              "command"
            ],
            "type": "object",
            "description": "Manages a Django application using the I(manage.py) application frontend to I(django-admin). With the I(virtualenv) parameter, all management commands will be executed by the given I(virtualenv) installation.",
            "properties": {
              "virtualenv": {
                "type": "string"
              },
              "app_path": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "pythonpath": {
                "type": "string"
              },
              "settings": {
                "type": "string"
              },
              "apps": {
                "type": "string"
              },
              "cache_table": {
                "type": "string"
              },
              "merge": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "skip": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "fixtures": {
                "type": "string"
              },
              "failfast": {
                "type": "string"
              }
            }
          },
          "dladm_etherstub": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create or delete etherstubs on Solaris/illumos systems.",
            "properties": {
              "state": {
                "type": "string"
              },
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pn_vrouter": {
            "required": [
              "pn_name",
              "state"
            ],
            "type": "object",
            "description": "Execute vrouter-create, vrouter-delete, vrouter-modify command.\nEach fabric, cluster, standalone switch, or virtual network (VNET) can provide its tenants with a virtual router (vRouter) service that forwards traffic between networks and implements Layer 3 protocols.\nC(vrouter-create) creates a new vRouter service.\nC(vrouter-delete) deletes a vRouter service.\nC(vrouter-modify) modifies a vRouter service.",
            "properties": {
              "pn_ospf_redistribute": {
                "type": "string"
              },
              "pn_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_bgp_redistribute": {
                "type": "string"
              },
              "pn_router_type": {
                "type": "string"
              },
              "pn_hw_vrrp_id": {
                "type": "string"
              },
              "pn_vnet": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_rip_redistribute": {
                "type": "string"
              },
              "pn_bgp_options": {
                "type": "string"
              },
              "pn_router_id": {
                "type": "string"
              },
              "pn_bgp_max_paths": {
                "type": "string"
              },
              "pn_service_state": {
                "type": "string"
              },
              "pn_service_type": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_ospf_options": {
                "type": "string"
              },
              "pn_bgp_as": {
                "type": "string"
              }
            }
          },
          "rabbitmq_binding": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "src",
                        "source"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "src"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "source"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "destination",
                        "dst",
                        "dest"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "destination"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dst"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "destination_type",
                        "type",
                        "dest_type"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "destination_type"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest_type"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module uses rabbitMQ Rest API to create/delete bindings",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dest_type": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "routing_key": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "arguments": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "destination_type": {
                "type": "string"
              },
              "vhost": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "dst": {
                "type": "string"
              }
            }
          },
          "ec2_asg": {
            "required": [
              "launch_config_name",
              "name"
            ],
            "type": "object",
            "description": "Can create or delete AWS Autoscaling Groups\nWorks with the ec2_lc module to manage Launch Configurations",
            "properties": {
              "default_cooldown": {
                "type": "string"
              },
              "health_check_period": {
                "type": "string"
              },
              "lc_check": {
                "type": "string"
              },
              "availability_zones": {
                "type": "array"
              },
              "replace_batch_size": {
                "type": "string"
              },
              "suspend_processes": {
                "type": "string"
              },
              "replace_instances": {
                "type": "array"
              },
              "desired_capacity": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "health_check_type": {
                "type": "string"
              },
              "launch_config_name": {
                "type": "string"
              },
              "placement_group": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "min_size": {
                "type": "string"
              },
              "vpc_zone_identifier": {
                "type": "array"
              },
              "load_balancers": {
                "type": "array"
              },
              "max_size": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "replace_all_instances": {
                "type": "string"
              },
              "termination_policies": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "notification_topic": {
                "type": "string"
              },
              "notification_types": {
                "type": "string"
              },
              "wait_for_instances": {
                "type": "string"
              }
            }
          },
          "route53_health_check": {
            "required": [
              "request_interval",
              "type",
              "state",
              "failure_threshold"
            ],
            "type": "object",
            "description": "Creates and deletes DNS Health checks in Amazons Route53 service\nOnly the port, resource_path, string_match and request_interval are considered when updating existing health-checks.",
            "properties": {
              "request_interval": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "fqdn": {
                "type": "string"
              },
              "string_match": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "resource_path": {
                "type": "string"
              },
              "failure_threshold": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "netapp_e_auth": {
            "required": [
              "new_password"
            ],
            "type": "object",
            "description": "Sets or updates the password for a storage array.  When the password is updated on the storage array, it must be updated on the SANtricity Web Services proxy. Note, all storage arrays do not have a Monitor or RO role.",
            "properties": {
              "ssid": {
                "type": "string"
              },
              "new_password": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "current_password": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "set_admin": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "proxmox_kvm": {
            "required": [
              "api_host",
              "api_user"
            ],
            "type": "object",
            "description": "Allows you to create/delete/stop Qemu(KVM) Virtual Machines in Proxmox VE cluster.",
            "properties": {
              "storage": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "revert": {
                "type": "string"
              },
              "numa": {
                "type": "string"
              },
              "scsihw": {
                "type": "string"
              },
              "startup": {
                "type": "string"
              },
              "migrate_speed": {
                "type": "string"
              },
              "freeze": {
                "type": "string"
              },
              "full": {
                "type": "string"
              },
              "keyboard": {
                "type": "string"
              },
              "watchdog": {
                "type": "string"
              },
              "serial": {
                "type": "string"
              },
              "sockets": {
                "type": "string"
              },
              "digest": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "startdate": {
                "type": "string"
              },
              "tablet": {
                "type": "string"
              },
              "bios": {
                "type": "string"
              },
              "cpu": {
                "type": "string"
              },
              "balloon": {
                "type": "string"
              },
              "cpuunits": {
                "type": "string"
              },
              "boot": {
                "type": "string"
              },
              "vga": {
                "type": "string"
              },
              "shares": {
                "type": "string"
              },
              "machine": {
                "type": "string"
              },
              "hostpci": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "autostart": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "net": {
                "type": "string"
              },
              "api_host": {
                "type": "string"
              },
              "migrate_downtime": {
                "type": "string"
              },
              "localtime": {
                "type": "string"
              },
              "node": {
                "type": "string"
              },
              "agent": {
                "type": "string"
              },
              "virtio": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "clone": {
                "type": "string"
              },
              "args": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "snapname": {
                "type": "string"
              },
              "tdf": {
                "type": "string"
              },
              "kvm": {
                "type": "string"
              },
              "sata": {
                "type": "string"
              },
              "protection": {
                "type": "string"
              },
              "reboot": {
                "type": "string"
              },
              "hotplug": {
                "type": "string"
              },
              "api_user": {
                "type": "string"
              },
              "parallel": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "lock": {
                "type": "string"
              },
              "ide": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "vmid": {
                "type": "string"
              },
              "hugepages": {
                "type": "string"
              },
              "bootdisk": {
                "type": "string"
              },
              "ostype": {
                "type": "string"
              },
              "acpi": {
                "type": "string"
              },
              "vcpus": {
                "type": "string"
              },
              "newid": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "smbios": {
                "type": "string"
              },
              "skiplock": {
                "type": "string"
              },
              "cores": {
                "type": "string"
              },
              "scsi": {
                "type": "string"
              },
              "cpulimit": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "onboot": {
                "type": "string"
              },
              "delete": {
                "type": "string"
              }
            }
          },
          "os_keystone_domain": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, or delete OpenStack Identity domains. If a domain with the supplied name already exists, it will be updated with the new description and enabled attributes.",
            "properties": {
              "state": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "dynamodb_table": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create or delete AWS Dynamo DB tables.\nCan update the provisioned throughput on existing tables.\nReturns the status of the specified table.",
            "properties": {
              "read_capacity": {
                "type": "string"
              },
              "hash_key_name": {
                "type": "string"
              },
              "range_key_type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "write_capacity": {
                "type": "string"
              },
              "indexes": {
                "type": "array"
              },
              "range_key_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hash_key_type": {
                "type": "string"
              }
            }
          },
          "route53": {
            "required": [
              "zone",
              "record",
              "command",
              "type"
            ],
            "type": "object",
            "description": "Creates and deletes DNS records in Amazons Route53 service",
            "properties": {
              "health_check": {
                "type": "string"
              },
              "alias_hosted_zone_id": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "retry_interval": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "hosted_zone_id": {
                "type": "string"
              },
              "record": {
                "type": "string"
              },
              "private_zone": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "alias_evaluate_target_health": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "identifier": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "failover": {
                "type": "string"
              },
              "overwrite": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "ovirt": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_mem",
                        "vmmem"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_cores",
                        "vmcores"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_cpus",
                        "vmcpus"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_hostname",
                        "hostname"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_disksize",
                        "vm_disksize"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_nic",
                        "vmnic"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_network",
                        "vmnetwork"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_type",
                        "vmtype"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_os",
                        "vmos"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_ip",
                        "ip"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_dns",
                        "dns"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_name",
                        "vmname"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "instance_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "vmname"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_netmask",
                        "netmask"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_key",
                        "key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_domain",
                        "domain"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "instance_rootpw",
                        "rootpw"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module only supports oVirt/RHEV version 3. A newer module M(ovirt_vms) supports oVirt/RHV version 4.\nAllows you to create new instances, either from scratch or an image, in addition to deleting or stopping instances on the oVirt/RHEV platform.",
            "properties": {
              "vmcores": {
                "type": "string"
              },
              "instance_mem": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "vmnic": {
                "type": "string"
              },
              "vmmem": {
                "type": "string"
              },
              "instance_cpus": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "vmtype": {
                "type": "string"
              },
              "instance_nic": {
                "type": "string"
              },
              "vmnetwork": {
                "type": "string"
              },
              "vmname": {
                "type": "string"
              },
              "vm_disksize": {
                "type": "string"
              },
              "instance_cores": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "vmos": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "instance_netmask": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "instance_key": {
                "type": "string"
              },
              "dns": {
                "type": "string"
              },
              "instance_domain": {
                "type": "string"
              },
              "rootpw": {
                "type": "string"
              },
              "instance_rootpw": {
                "type": "string"
              },
              "vmcpus": {
                "type": "string"
              },
              "instance_hostname": {
                "type": "string"
              },
              "netmask": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "instance_network": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "sdomain": {
                "type": "string"
              },
              "instance_os": {
                "type": "string"
              },
              "instance_ip": {
                "type": "string"
              },
              "instance_disksize": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "disk_alloc": {
                "type": "string"
              },
              "instance_dns": {
                "type": "string"
              },
              "instance_name": {
                "type": "string"
              },
              "instance_type": {
                "type": "string"
              },
              "resource_type": {
                "type": "string"
              },
              "disk_int": {
                "type": "string"
              }
            }
          },
          "nxos_vrf_af": {
            "required": [
              "afi",
              "vrf",
              "safi"
            ],
            "type": "object",
            "description": "Manages VRF AF",
            "properties": {
              "state": {
                "type": "string"
              },
              "safi": {
                "type": "string"
              },
              "route_target_both_auto_evpn": {
                "type": "string"
              },
              "afi": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              }
            }
          },
          "nsupdate": {
            "required": [
              "zone",
              "server",
              "record"
            ],
            "type": "object",
            "description": "Create, update and remove DNS records using DDNS updates\nDDNS works well with both bind and Microsoft DNS (see https://technet.microsoft.com/en-us/library/cc961412.aspx)",
            "properties": {
              "key_algorithm": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "record": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "key_secret": {
                "type": "string"
              }
            }
          },
          "netapp_e_amg": {
            "required": [
              "ssid",
              "secondaryArrayId",
              "api_password",
              "name",
              "state",
              "api_username",
              "api_url"
            ],
            "type": "object",
            "description": "Allows for the creation, removal and updating of Asynchronous Mirror Groups for NetApp E-series storage arrays",
            "properties": {
              "ssid": {
                "type": "string"
              },
              "syncIntervalMinutes": {
                "type": "string"
              },
              "recoveryWarnThresholdMinutes": {
                "type": "string"
              },
              "secondaryArrayId": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "repoUtilizationWarnThreshold": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "interfaceType": {
                "type": "string"
              },
              "manualSync": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "syncWarnThresholdMinutes": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "redhat_subscription": {
            "type": "object",
            "description": "Manage registration and subscription to the Red Hat Subscription Management entitlement platform using the C(subscription-manager) command",
            "properties": {
              "username": {
                "type": "string"
              },
              "server_hostname": {
                "type": "string"
              },
              "consumer_name": {
                "type": "string"
              },
              "consumer_type": {
                "type": "string"
              },
              "org_id": {
                "type": "string"
              },
              "consumer_id": {
                "type": "string"
              },
              "environment": {
                "type": "string"
              },
              "force_register": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "activationkey": {
                "type": "string"
              },
              "server_insecure": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "rhsm_baseurl": {
                "type": "string"
              },
              "autosubscribe": {
                "type": "string"
              }
            }
          },
          "gconftool2": {
            "required": [
              "state",
              "key"
            ],
            "type": "object",
            "description": "This module allows for the manipulation of GNOME 2 Configuration via gconftool-2.  Please see the gconftool-2(1) man pages for more details.",
            "properties": {
              "direct": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "config_source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "value_type": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "pn_vrouterlbif": {
            "required": [
              "pn_interface_ip",
              "state",
              "pn_vrouter_name"
            ],
            "type": "object",
            "description": "Execute vrouter-loopback-interface-add, vrouter-loopback-interface-remove commands.\nEach fabric, cluster, standalone switch, or virtual network (VNET) can provide its tenants with a virtual router (vRouter) service that forwards traffic between networks and implements Layer 3 protocols.",
            "properties": {
              "pn_vrouter_name": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_interface_ip": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_index": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              }
            }
          },
          "panos_nat_policy": {
            "required": [
              "rule_name",
              "password",
              "ip_address",
              "to_zone",
              "from_zone"
            ],
            "type": "object",
            "description": "Create a policy nat rule. Keep in mind that we can either end up configuring source NAT, destination NAT, or both. Instead of splitting it into two we will make a fair attempt to determine which one the user wants.",
            "properties": {
              "username": {
                "type": "string"
              },
              "dnat_address": {
                "type": "string"
              },
              "snat_bidirectional": {
                "type": "string"
              },
              "to_zone": {
                "type": "string"
              },
              "snat_type": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "source": {
                "type": "array"
              },
              "from_zone": {
                "type": "array"
              },
              "destination": {
                "type": "array"
              },
              "dnat_port": {
                "type": "string"
              },
              "snat_interface_address": {
                "type": "string"
              },
              "rule_name": {
                "type": "string"
              },
              "override": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "snat_address": {
                "type": "string"
              },
              "snat_interface": {
                "type": "string"
              }
            }
          },
          "hall": {
            "required": [
              "msg",
              "room_token",
              "title"
            ],
            "type": "object",
            "description": "The M(hall) module connects to the U(https://hall.com) messaging API and allows you to deliver notication messages to rooms.",
            "properties": {
              "msg": {
                "type": "string"
              },
              "room_token": {
                "type": "string"
              },
              "picture": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            }
          },
          "subversion": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "repo",
                        "name",
                        "repository"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "repo"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "repository"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "revision",
                        "version"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Deploy given repository URL / revision to dest. If dest exists, update to the specified revision, otherwise perform a checkout.",
            "properties": {
              "username": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "repository": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "switch": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "export": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "checkout": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "ovirt_datacenters_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt datacenters.",
            "properties": {
              "pattern": {
                "type": "string"
              }
            }
          },
          "group_by": {
            "required": [
              "key"
            ],
            "type": "object",
            "description": "Use facts to create ad-hoc groups that can be used later in a playbook.",
            "properties": {
              "key": {
                "type": "string"
              }
            }
          },
          "rax_mon_notification": {
            "required": [
              "notification_type",
              "details",
              "label"
            ],
            "type": "object",
            "description": "Create or delete a Rackspace Cloud Monitoring notification that specifies a channel that can be used to communicate alarms, such as email, webhooks, or PagerDuty. Rackspace monitoring module flow | rax_mon_entity -> rax_mon_check -> *rax_mon_notification* -> rax_mon_notification_plan -> rax_mon_alarm",
            "properties": {
              "notification_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "details": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            }
          },
          "gitlab_group": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "validate_certs",
                        "verify_ssl"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "When the group does not exists in Gitlab, it will be created.\nWhen the group does exists and state=absent, the group will be deleted.",
            "properties": {
              "verify_ssl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_token": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "junos_config": {
            "type": "object",
            "description": "This module provides an implementation for working with the active configuration running on Juniper JUNOS devices.  It provides a set of arguments for loading configuration, performing rollback operations and zeroing the active configuration on the device.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "rollback": {
                "type": "string"
              },
              "confirm": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "zeroize": {
                "type": "string"
              },
              "src_format": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "uptimerobot": {
            "required": [
              "monitorid",
              "state",
              "apikey"
            ],
            "type": "object",
            "description": "This module will let you start and pause Uptime Robot Monitoring",
            "properties": {
              "monitorid": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "apikey": {
                "type": "string"
              }
            }
          },
          "lxd_profile": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Management of LXD profiles",
            "properties": {
              "new_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "trust_password": {
                "type": "string"
              },
              "cert_file": {
                "type": "string"
              },
              "devices": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "key_file": {
                "type": "string"
              },
              "config": {
                "type": "string"
              }
            }
          },
          "avi_sslprofile": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure SSLProfile object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "ssl_session_timeout": {
                "type": "string"
              },
              "accepted_ciphers": {
                "type": "string"
              },
              "prefer_client_cipher_ordering": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "tags": {
                "type": "array"
              },
              "url": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "accepted_versions": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "enable_ssl_session_reuse": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cipher_enums": {
                "type": "string"
              },
              "send_close_notify": {
                "type": "string"
              },
              "dhparam": {
                "type": "string"
              },
              "ssl_rating": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ovirt_external_providers": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tenant_name",
                        "tenant"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "authentication_url",
                        "auth_url"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage external providers in oVirt",
            "properties": {
              "username": {
                "type": "string"
              },
              "read_only": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "authentication_url": {
                "type": "string"
              },
              "data_center": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "network_type": {
                "type": "string"
              },
              "tenant": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "mattermost": {
            "required": [
              "url",
              "text",
              "api_key"
            ],
            "type": "object",
            "description": "Sends notifications to U(http://your.mattermost.url) via the Incoming WebHook integration.",
            "properties": {
              "username": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "icon_url": {
                "type": "string"
              },
              "text": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              }
            }
          },
          "nxos_evpn_global": {
            "required": [
              "nv_overlay_evpn"
            ],
            "type": "object",
            "description": "Handles the EVPN control plane for VXLAN.",
            "properties": {
              "nv_overlay_evpn": {
                "type": "string"
              }
            }
          },
          "os_server": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "boot_volume",
                        "root_volume"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "auto_ip",
                        "auto_floating_ip",
                        "public_ip"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create or Remove compute instances from OpenStack.",
            "properties": {
              "image": {
                "type": "string"
              },
              "image_exclude": {
                "type": "string"
              },
              "flavor_include": {
                "type": "string"
              },
              "public_ip": {
                "type": "string"
              },
              "meta": {
                "type": "string"
              },
              "flavor": {
                "type": "string"
              },
              "security_groups": {
                "type": "string"
              },
              "scheduler_hints": {
                "type": "string"
              },
              "boot_from_volume": {
                "type": "string"
              },
              "userdata": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "nics": {
                "type": "string"
              },
              "floating_ips": {
                "type": "array"
              },
              "flavor_ram": {
                "type": "string"
              },
              "volume_size": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auto_ip": {
                "type": "string"
              },
              "root_volume": {
                "type": "string"
              },
              "config_drive": {
                "type": "string"
              },
              "terminate_volume": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "boot_volume": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "auto_floating_ip": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "delete_fip": {
                "type": "string"
              },
              "volumes": {
                "type": "string"
              },
              "floating_ip_pools": {
                "type": "string"
              },
              "reuse_ips": {
                "type": "string"
              }
            }
          },
          "rax_keypair": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create a keypair for use with Rackspace Cloud Servers",
            "properties": {
              "public_key": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "rax_mon_check": {
            "required": [
              "entity_id",
              "check_type",
              "label"
            ],
            "type": "object",
            "description": "Create or delete a Rackspace Cloud Monitoring check associated with an existing rax_mon_entity. A check is a specific test or measurement that is performed, possibly from different monitoring zones, on the systems you monitor. Rackspace monitoring module flow | rax_mon_entity -> *rax_mon_check* -> rax_mon_notification -> rax_mon_notification_plan -> rax_mon_alarm",
            "properties": {
              "entity_id": {
                "type": "string"
              },
              "check_type": {
                "type": "string"
              },
              "target_alias": {
                "type": "string"
              },
              "target_hostname": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "disabled": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "period": {
                "type": "string"
              },
              "details": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "monitoring_zones_poll": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              }
            }
          },
          "nxos_pim": {
            "required": [
              "ssm_range"
            ],
            "type": "object",
            "description": "Manages configuration of a Protocol Independent Multicast (PIM) instance.",
            "properties": {
              "ssm_range": {
                "type": "string"
              }
            }
          },
          "ops_template": {
            "required": [
              "src"
            ],
            "type": "object",
            "description": "The OpenSwitch platform provides a library for pushing JSON structured configuration files into the current running-config.  This module will read the current configuration from OpenSwitch and compare it against a provided candidate configuration. If there are changes, the candidate configuration is merged with the current configuration and pushed into OpenSwitch",
            "properties": {
              "src": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "tower_host": {
            "required": [
              "name",
              "inventory"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower hosts. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "name": {
                "type": "string"
              },
              "variables": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "inventory": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "win_environment": {
            "required": [
              "name",
              "level"
            ],
            "type": "object",
            "description": "Uses .net Environment to set or remove environment variables and can set at User, Machine or Process level.\nUser level environment variables will be set, but not available until the user has logged off and on again.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "level": {
                "type": "string"
              }
            }
          },
          "kinesis_stream": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "resource_tags"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create or Delete a Kinesis Stream.\nUpdate the retention period of a Kinesis Stream.\nUpdate Tags on a Kinesis Stream.",
            "properties": {
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "shards": {
                "type": "string"
              },
              "retention_period": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "resource_tags": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "nxos_smu": {
            "required": [
              "pkg"
            ],
            "type": "object",
            "description": "Perform software maintenance upgrades (SMUs) on Cisco NX-OS devices.",
            "properties": {
              "pkg": {
                "type": "string"
              },
              "file_system": {
                "type": "string"
              }
            }
          },
          "os_ironic_inspect": {
            "type": "object",
            "description": "Requests Ironic to set a node into inspect state in order to collect metadata regarding the node. This command may be out of band or in-band depending on the ironic driver configuration. This is only possible on nodes in 'manageable' and 'available' state.",
            "properties": {
              "mac": {
                "type": "string"
              },
              "ironic_url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            }
          },
          "cloudformation": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "region",
                        "aws_region",
                        "ec2_region"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "aws_region"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "ec2_region"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Launches an AWS CloudFormation stack and waits for it complete.",
            "properties": {
              "disable_rollback": {
                "type": "string"
              },
              "notification_arns": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "stack_name": {
                "type": "string"
              },
              "stack_policy": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "template_format": {
                "type": "string"
              },
              "aws_region": {
                "type": "string"
              },
              "template_parameters": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "template_url": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "ec2_region": {
                "type": "string"
              }
            }
          },
          "sqs_queue": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create or delete AWS SQS queues.\nUpdate attributes on existing queues.",
            "properties": {
              "message_retention_period": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "delivery_delay": {
                "type": "string"
              },
              "default_visibility_timeout": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "maximum_message_size": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "redrive_policy": {
                "type": "string"
              },
              "receive_message_wait_time": {
                "type": "string"
              }
            }
          },
          "nxos_snmp_contact": {
            "required": [
              "state",
              "contact"
            ],
            "type": "object",
            "description": "Manages SNMP contact information.",
            "properties": {
              "state": {
                "type": "string"
              },
              "contact": {
                "type": "string"
              }
            }
          },
          "honeybadger_deployment": {
            "required": [
              "environment",
              "token"
            ],
            "type": "object",
            "description": "Notify Honeybadger.io about app deployments (see http://docs.honeybadger.io/article/188-deployment-tracking)",
            "properties": {
              "environment": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "fortios_config": {
            "type": "object",
            "description": "This module provides management of FortiOS Devices configuration.",
            "properties": {
              "filter": {
                "type": "string"
              },
              "src": {
                "type": "string"
              }
            }
          },
          "s3_lifecycle": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage s3 bucket lifecycle rules in AWS",
            "properties": {
              "status": {
                "type": "string"
              },
              "transition_days": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "expiration_date": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              },
              "storage_class": {
                "type": "string"
              },
              "expiration_days": {
                "type": "string"
              },
              "rule_id": {
                "type": "string"
              },
              "transition_date": {
                "type": "string"
              }
            }
          },
          "nxos_vlan": {
            "type": "object",
            "description": "Manages VLAN configurations on NX-OS switches.",
            "properties": {
              "vlan_state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "mapped_vni": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "admin_state": {
                "type": "string"
              },
              "vlan_range": {
                "type": "string"
              },
              "vlan_id": {
                "type": "string"
              }
            }
          },
          "os_port": {
            "required": [
              "network"
            ],
            "type": "object",
            "description": "Add, Update or Remove ports from an OpenStack cloud. A I(state) of 'present' will ensure the port is created or updated if required.",
            "properties": {
              "name": {
                "type": "string"
              },
              "allowed_address_pairs": {
                "type": "string"
              },
              "admin_state_up": {
                "type": "string"
              },
              "extra_dhcp_opts": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "device_owner": {
                "type": "string"
              },
              "no_security_groups": {
                "type": "string"
              },
              "mac_address": {
                "type": "string"
              },
              "device_id": {
                "type": "string"
              },
              "fixed_ips": {
                "type": "string"
              },
              "security_groups": {
                "type": "string"
              },
              "network": {
                "type": "string"
              }
            }
          },
          "dellos6_config": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lines",
                        "commands"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Dell OS6 configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with Dell OS6 configuration sections in a deterministic way.",
            "properties": {
              "src": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "seport": {
            "required": [
              "setype",
              "proto",
              "state",
              "ports"
            ],
            "type": "object",
            "description": "Manages SELinux network port type definitions.",
            "properties": {
              "ports": {
                "type": "string"
              },
              "reload": {
                "type": "string"
              },
              "setype": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "proto": {
                "type": "string"
              }
            }
          },
          "ovirt_affinity_labels": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module manage affinity labels in oVirt. It can also manage assignments of those labels to hosts and VMs.",
            "properties": {
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hosts": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "vms": {
                "type": "array"
              }
            }
          },
          "nxos_vrf_interface": {
            "required": [
              "interface",
              "vrf"
            ],
            "type": "object",
            "description": "Manages interface specific VRF configuration.",
            "properties": {
              "interface": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              }
            }
          },
          "os_security_group": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or Remove security groups from an OpenStack cloud.",
            "properties": {
              "state": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_ospf": {
            "required": [
              "ospf"
            ],
            "type": "object",
            "description": "Manages configuration of an ospf instance.",
            "properties": {
              "state": {
                "type": "string"
              },
              "ospf": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_dhcp_options": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "resource_tags"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module removes, or creates DHCP option sets, and can associate them to a VPC. Optionally, a new DHCP Options set can be created that converges a VPC's existing DHCP option set with values provided. When dhcp_options_id is provided, the module will 1. remove (with state='absent') 2. ensure tags are applied (if state='present' and tags are provided 3. attach it to a VPC (if state='present' and a vpc_id is provided. If any of the optional values are missing, they will either be treated as a no-op (i.e., inherit what already exists for the VPC) To remove existing options while inheriting, supply an empty value (e.g. set ntp_servers to [] if you want to remove them from the VPC's options) Most of the options should be self-explanatory.",
            "properties": {
              "dns_servers": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "ntp_servers": {
                "type": "array"
              },
              "domain_name": {
                "type": "string"
              },
              "delete_old": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "netbios_node_type": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "resource_tags": {
                "type": "string"
              },
              "inherit_existing": {
                "type": "string"
              },
              "dhcp_options_id": {
                "type": "string"
              },
              "netbios_name_servers": {
                "type": "array"
              }
            }
          },
          "bigpanda": {
            "required": [
              "component",
              "token",
              "state",
              "version"
            ],
            "type": "object",
            "description": "Notify BigPanda when deployments start and end (successfully or not). Returns a deployment object containing all the parameters for future module calls.",
            "properties": {
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "component": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "hosts": {
                "type": "string"
              },
              "env": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "iosxr_config": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lines",
                        "commands"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Cisco IOS XR configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with IOS XR configuration sections in a deterministic way.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "nxos_snmp_traps": {
            "required": [
              "group"
            ],
            "type": "object",
            "description": "Manages SNMP traps configurations.",
            "properties": {
              "state": {
                "type": "string"
              },
              "group": {
                "type": "string"
              }
            }
          },
          "sensu_check": {
            "required": [
              "name",
              "command"
            ],
            "type": "object",
            "description": "Manage the checks that should be run on a machine by I(Sensu).\nMost options do not have a default and will not be added to the check definition unless specified.\nAll defaults except I(path), I(state), I(backup) and I(metric) are not managed by this module,\nthey are simply specified for your convenience.",
            "properties": {
              "interval": {
                "type": "string"
              },
              "metric": {
                "type": "string"
              },
              "subdue_begin": {
                "type": "string"
              },
              "occurrences": {
                "type": "string"
              },
              "low_flap_threshold": {
                "type": "string"
              },
              "publish": {
                "type": "string"
              },
              "custom": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "subdue_end": {
                "type": "string"
              },
              "handle": {
                "type": "string"
              },
              "dependencies": {
                "type": "string"
              },
              "subscribers": {
                "type": "array"
              },
              "aggregate": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "standalone": {
                "type": "string"
              },
              "handlers": {
                "type": "array"
              },
              "refresh": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "high_flap_threshold": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "ipa_hostgroup": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cn",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "cn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify and delete an IPA host-group using IPA API",
            "properties": {
              "ipa_port": {
                "type": "string"
              },
              "cn": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "ipa_prot": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "hostgroup": {
                "type": "array"
              },
              "host": {
                "type": "array"
              },
              "ipa_host": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "ipa_pass": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "typetalk": {
            "required": [
              "topic",
              "client_secret",
              "client_id",
              "msg"
            ],
            "type": "object",
            "description": "Send a message to typetalk using typetalk API ( http://developers.typetalk.in/ )",
            "properties": {
              "topic": {
                "type": "string"
              },
              "client_secret": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "msg": {
                "type": "string"
              }
            }
          },
          "os_user_role": {
            "required": [
              "role"
            ],
            "type": "object",
            "description": "Grant and revoke roles in either project or domain context for OpenStack Identity Users.",
            "properties": {
              "domain": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "user": {
                "type": "string"
              }
            }
          },
          "iam_cert": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_secret_key",
                        "ec2_secret_key",
                        "secret_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "aws_access_key",
                        "ec2_access_key",
                        "access_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Allows for the management of server certificates",
            "properties": {
              "new_name": {
                "type": "string"
              },
              "aws_secret_key": {
                "type": "string"
              },
              "dup_ok": {
                "type": "string"
              },
              "new_path": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "aws_access_key": {
                "type": "string"
              },
              "cert": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "ec2_access_key": {
                "type": "string"
              },
              "access_key": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "secret_key": {
                "type": "string"
              },
              "ec2_secret_key": {
                "type": "string"
              },
              "cert_chain": {
                "type": "string"
              }
            }
          },
          "selinux_permissive": {
            "required": [
              "domain",
              "permissive"
            ],
            "type": "object",
            "description": "Add and remove domain from the list of permissive domain.",
            "properties": {
              "domain": {
                "type": "string"
              },
              "store": {
                "type": "string"
              },
              "no_reload": {
                "type": "string"
              },
              "permissive": {
                "type": "string"
              }
            }
          },
          "win_timezone": {
            "required": [
              "timezone"
            ],
            "type": "object",
            "description": "Sets machine time to the specified timezone, the module will check if the provided timezone is supported on the machine.",
            "properties": {
              "timezone": {
                "type": "string"
              }
            }
          },
          "quantum_floating_ip": {
            "required": [
              "login_password",
              "instance_name",
              "login_tenant_name",
              "login_username",
              "network_name"
            ],
            "type": "object",
            "description": "Add or Remove a floating IP to an instance",
            "properties": {
              "region_name": {
                "type": "string"
              },
              "internal_network_name": {
                "type": "string"
              },
              "instance_name": {
                "type": "string"
              },
              "login_tenant_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth_url": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "login_username": {
                "type": "string"
              },
              "network_name": {
                "type": "string"
              }
            }
          },
          "win_get_url": {
            "required": [
              "url",
              "dest"
            ],
            "type": "object",
            "description": "Fetches a file from a URL and saves to locally",
            "properties": {
              "username": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "skip_certificate_validation": {
                "type": "string"
              },
              "proxy_url": {
                "type": "string"
              },
              "proxy_password": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "proxy_username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "foreman": {
            "required": [
              "username",
              "password",
              "params",
              "server_url",
              "entity"
            ],
            "type": "object",
            "description": "Allows the management of Foreman resources inside your Foreman server",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "entity": {
                "type": "string"
              }
            }
          },
          "aos_blueprint_virtnet": {
            "required": [
              "blueprint",
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Blueprint Virtual Network module let you manage your Virtual Network easily. You can create access, define and delete Virtual Network by name or by using a JSON / Yaml file. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "blueprint": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "win_share": {
            "required": [
              "name",
              "path"
            ],
            "type": "object",
            "description": "Add, modify or remove Windows share and set share permissions.",
            "properties": {
              "deny": {
                "type": "string"
              },
              "full": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "read": {
                "type": "string"
              },
              "list": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "change": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "ec2_key": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "maintains ec2 key pairs. This module has a dependency on python-boto >= 2.5",
            "properties": {
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "key_material": {
                "type": "string"
              }
            }
          },
          "nxos_bgp": {
            "required": [
              "asn"
            ],
            "type": "object",
            "description": "Manages BGP configurations on NX-OS switches.",
            "properties": {
              "neighbor_down_fib_accelerate": {
                "type": "string"
              },
              "confederation_peers": {
                "type": "string"
              },
              "confederation_id": {
                "type": "string"
              },
              "graceful_restart_helper": {
                "type": "string"
              },
              "bestpath_always_compare_med": {
                "type": "string"
              },
              "cluster_id": {
                "type": "string"
              },
              "shutdown": {
                "type": "string"
              },
              "timer_bgp_hold": {
                "type": "string"
              },
              "bestpath_aspath_multipath_relax": {
                "type": "string"
              },
              "graceful_restart_timers_stalepath_time": {
                "type": "string"
              },
              "maxas_limit": {
                "type": "string"
              },
              "bestpath_med_confed": {
                "type": "string"
              },
              "isolate": {
                "type": "string"
              },
              "timer_bgp_keepalive": {
                "type": "string"
              },
              "bestpath_cost_community_ignore": {
                "type": "string"
              },
              "fast_external_fallover": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "disable_policy_batching": {
                "type": "string"
              },
              "suppress_fib_pending": {
                "type": "string"
              },
              "bestpath_med_missing_as_worst": {
                "type": "string"
              },
              "router_id": {
                "type": "string"
              },
              "timer_bestpath_limit": {
                "type": "string"
              },
              "local_as": {
                "type": "string"
              },
              "event_history_periodic": {
                "type": "string"
              },
              "timer_bestpath_limit_always": {
                "type": "string"
              },
              "disable_policy_batching_ipv4_prefix_list": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              },
              "event_history_cli": {
                "type": "string"
              },
              "log_neighbor_changes": {
                "type": "string"
              },
              "event_history_events": {
                "type": "string"
              },
              "asn": {
                "type": "string"
              },
              "disable_policy_batching_ipv6_prefix_list": {
                "type": "string"
              },
              "event_history_detail": {
                "type": "string"
              },
              "graceful_restart": {
                "type": "string"
              },
              "flush_routes": {
                "type": "string"
              },
              "enforce_first_as": {
                "type": "string"
              },
              "bestpath_med_non_deterministic": {
                "type": "string"
              },
              "reconnect_interval": {
                "type": "string"
              },
              "graceful_restart_timers_restart": {
                "type": "string"
              },
              "bestpath_compare_routerid": {
                "type": "string"
              }
            }
          },
          "ipify_facts": {
            "type": "object",
            "description": "If behind NAT and need to know the public IP of your internet gateway.",
            "properties": {
              "api_url": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "service": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "arguments",
                        "args"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Controls services on remote hosts. Supported init systems include BSD init, OpenRC, SysV, Solaris SMF, systemd, upstart.",
            "properties": {
              "use": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "args": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "sleep": {
                "type": "string"
              },
              "arguments": {
                "type": "string"
              },
              "runlevel": {
                "type": "string"
              }
            }
          },
          "accelerate": {
            "type": "object",
            "description": "This modules launches an ephemeral I(accelerate) daemon on the remote node which Ansible can use to communicate with nodes at high speed.\nThe daemon listens on a configurable port for a configurable amount of time.\nFireball mode is AES encrypted",
            "properties": {
              "ipv6": {
                "type": "string"
              },
              "minutes": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "multi_key": {
                "type": "string"
              }
            }
          },
          "aos_logical_device": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Logical Device module let you manage your Logical Devices easily. You can create create and delete Logical Device by Name, ID or by using a JSON File. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "proxysql_manage_config": {
            "required": [
              "direction",
              "config_settings",
              "action",
              "config_layer"
            ],
            "type": "object",
            "description": "The M(proxysql_global_variables) module writes the proxysql configuration settings between layers. Currently this module will always report a changed state, so should typically be used with WHEN however this will change in a future version when the CHECKSUM table commands are available for all tables in proxysql.",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "direction": {
                "type": "string"
              },
              "config_file": {
                "type": "string"
              },
              "config_settings": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "config_layer": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "action": {
                "type": "string"
              }
            }
          },
          "cpanm": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "system_lib",
                        "use_sudo"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage Perl library dependencies.",
            "properties": {
              "executable": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "installdeps": {
                "type": "string"
              },
              "system_lib": {
                "type": "string"
              },
              "use_sudo": {
                "type": "string"
              },
              "mirror_only": {
                "type": "string"
              },
              "from_path": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "mirror": {
                "type": "string"
              },
              "locallib": {
                "type": "string"
              },
              "notest": {
                "type": "string"
              }
            }
          },
          "os_router": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create or Delete routers from OpenStack. Although Neutron allows routers to share the same name, this module enforces name uniqueness to be more user friendly.",
            "properties": {
              "enable_snat": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "interfaces": {
                "type": "array"
              },
              "admin_state_up": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "external_fixed_ips": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "openvswitch_bridge": {
            "required": [
              "bridge"
            ],
            "type": "object",
            "description": "Manage Open vSwitch bridges",
            "properties": {
              "bridge": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "fail_mode": {
                "type": "string"
              },
              "external_ids": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "ec2_eni": {
            "required": [
              "subnet_id"
            ],
            "type": "object",
            "description": "Create and optionally attach an Elastic Network Interface (ENI) to an instance. If an ENI ID or private_ip is       provided, the existing ENI (if any) will be modified. The 'attached' parameter controls the attachment status       of the network interface.",
            "properties": {
              "secondary_private_ip_addresses": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "subnet_id": {
                "type": "string"
              },
              "device_index": {
                "type": "string"
              },
              "attached": {
                "type": "string"
              },
              "force_detach": {
                "type": "string"
              },
              "instance_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "source_dest_check": {
                "type": "string"
              },
              "private_ip_address": {
                "type": "string"
              },
              "secondary_private_ip_address_count": {
                "type": "string"
              },
              "eni_id": {
                "type": "string"
              },
              "delete_on_termination": {
                "type": "string"
              },
              "security_groups": {
                "type": "array"
              }
            }
          },
          "digital_ocean_domain": {
            "type": "object",
            "description": "Create/delete a DNS record in DigitalOcean.",
            "properties": {
              "ip": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "api_token": {
                "type": "string"
              }
            }
          },
          "flowadm": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "flow"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "flow"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create/modify/remove networking bandwidth and associated resources for a type of traffic on a particular link.",
            "properties": {
              "dsfield": {
                "type": "string"
              },
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "maxbw": {
                "type": "string"
              },
              "local_port": {
                "type": "string"
              },
              "local_ip": {
                "type": "string"
              },
              "flow": {
                "type": "string"
              },
              "remove_ip": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "transport": {
                "type": "string"
              }
            }
          },
          "ovirt_vms": {
            "type": "object",
            "description": "This module manages whole lifecycle of the Virtual Machine(VM) in oVirt. Since VM can hold many states in oVirt, this see notes to see how the states of the VM are handled.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "disks": {
                "type": "array"
              },
              "force": {
                "type": "string"
              },
              "cloud_init_nics": {
                "type": "array"
              },
              "template_version": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "cpu_sockets": {
                "type": "string"
              },
              "high_availability": {
                "type": "string"
              },
              "instance_type": {
                "type": "string"
              },
              "nics": {
                "type": "array"
              },
              "sysprep": {
                "type": "string"
              },
              "cpu_cores": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "delete_protected": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "cd_iso": {
                "type": "string"
              },
              "clone_permissions": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "initrd_path": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "clone": {
                "type": "string"
              },
              "boot_devices": {
                "type": "array"
              },
              "template": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "serial_policy": {
                "type": "string"
              },
              "use_latest_template_version": {
                "type": "string"
              },
              "stateless": {
                "type": "string"
              },
              "operating_system": {
                "type": "string"
              },
              "serial_policy_value": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "kernel_path": {
                "type": "string"
              },
              "cloud_init": {
                "type": "string"
              },
              "memory_guaranteed": {
                "type": "string"
              },
              "kernel_params": {
                "type": "string"
              },
              "cpu_shares": {
                "type": "string"
              }
            }
          },
          "redis": {
            "required": [
              "command"
            ],
            "type": "object",
            "description": "Unified utility to interact with redis instances. 'slave' sets a redis instance in slave or master mode. 'flush' flushes all the instance or a specified db. 'config' (new in 1.6), ensures a configuration setting on an instance.",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "flush_mode": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "master_host": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "master_port": {
                "type": "string"
              },
              "slave_mode": {
                "type": "string"
              }
            }
          },
          "cnos_conditional_command": {
            "required": [
              "flag",
              "clicommand",
              "condition"
            ],
            "type": "object",
            "description": "This module allows you to modify the running configuration of a switch. It provides a way to execute a single CNOS command on a network device by evaluating the current running configuration and executing the command only if the specific settings have not been already configured. The CNOS command is passed as an argument of the method. This module functions the same as the cnos_command module. The only exception is that the following inventory variable can be specified [“condition = <flag string>”] When this inventory variable is specified as the variable of a task, the command is executed for the network element that matches the flag string. Usually, commands are executed across a group of network devices. When there is a requirement to skip the execution of the command on one or more devices, it is recommended to use this module. This module uses SSH to manage network device configuration. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_conditional_command.html)",
            "properties": {
              "flag": {
                "type": "string"
              },
              "clicommand": {
                "type": "string"
              },
              "condition": {
                "type": "string"
              }
            }
          },
          "panos_mgtconfig": {
            "required": [
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "Configure management settings of device",
            "properties": {
              "username": {
                "type": "string"
              },
              "panorama_primary": {
                "type": "string"
              },
              "dns_server_secondary": {
                "type": "string"
              },
              "dns_server_primary": {
                "type": "string"
              },
              "panorama_secondary": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "campfire": {
            "required": [
              "msg",
              "token",
              "subscription",
              "room"
            ],
            "type": "object",
            "description": "Send a message to Campfire.\nMessages with newlines will result in a \"Paste\" message being sent.",
            "properties": {
              "msg": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "room": {
                "type": "string"
              },
              "notify": {
                "type": "string"
              },
              "subscription": {
                "type": "string"
              }
            }
          },
          "tower_job_list": {
            "type": "object",
            "description": "List Ansible Tower jobs. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "status": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "page": {
                "type": "string"
              },
              "all_pages": {
                "type": "string"
              }
            }
          },
          "ipa_sudocmd": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "sudocmd",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "sudocmd"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify or delete sudo command within FreeIPA server using FreeIPA API.",
            "properties": {
              "ipa_port": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "ipa_prot": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ipa_host": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "ipa_pass": {
                "type": "string"
              },
              "sudocmd": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_static_route": {
            "required": [
              "prefix",
              "state",
              "next_hop"
            ],
            "type": "object",
            "description": "Manages static route configuration",
            "properties": {
              "next_hop": {
                "type": "string"
              },
              "pref": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "route_name": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              }
            }
          },
          "infini_fs": {
            "required": [
              "name",
              "pool"
            ],
            "type": "object",
            "description": "This module creates, deletes or modifies filesystems on Infinibox.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pool": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "ipa_sudorule": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cn",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "cn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify or delete sudo rule within IPA server using IPA API.",
            "properties": {
              "ipa_port": {
                "type": "string"
              },
              "cn": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "cmd": {
                "type": "array"
              },
              "ipa_prot": {
                "type": "string"
              },
              "host": {
                "type": "array"
              },
              "hostgroup": {
                "type": "array"
              },
              "usercategory": {
                "type": "string"
              },
              "hostcategory": {
                "type": "string"
              },
              "ipa_host": {
                "type": "string"
              },
              "user": {
                "type": "array"
              },
              "ipa_user": {
                "type": "string"
              },
              "usergroup": {
                "type": "array"
              },
              "ipa_pass": {
                "type": "string"
              },
              "cmdcategory": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "azure_rm_storageaccount": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "account_type",
                        "type"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update or delete a storage account.",
            "properties": {
              "kind": {
                "type": "string"
              },
              "account_type": {
                "type": "string"
              },
              "custom_domain": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "os_stack": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or Remove a Stack to an OpenStack Heat",
            "properties": {
              "rollback": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parameters": {
                "type": "string"
              },
              "environment": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "template": {
                "type": "string"
              }
            }
          },
          "atomic_image": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage the container images on the atomic host platform\nAllows to execute the commands on the container images",
            "properties": {
              "started": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "mssql_db": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "db"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "db"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add or remove MSSQL databases from a remote host.",
            "properties": {
              "autocommit": {
                "type": "string"
              },
              "login_port": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "target": {
                "type": "string"
              }
            }
          },
          "bigip_sys_db": {
            "required": [
              "key"
            ],
            "type": "object",
            "description": "Manage BIG-IP system database variables",
            "properties": {
              "state": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "cl_interface": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Configures a front panel, sub-interface, SVI, management or loopback port on a Cumulus Linux switch. For bridge ports use the cl_bridge module. For bond ports use the cl_bond module. When configuring bridge related features like the \"vid\" option, please follow the guidelines for configuring \"vlan aware\" bridging. For more details review the Layer2 Interface Guide at U(http://docs.cumulusnetworks.com)",
            "properties": {
              "clagd_sys_mac": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "clagd_enable": {
                "type": "string"
              },
              "mstpctl_portnetwork": {
                "type": "string"
              },
              "speed": {
                "type": "string"
              },
              "clagd_peer_ip": {
                "type": "string"
              },
              "clagd_priority": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "mstpctl_portadminedge": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              },
              "pvid": {
                "type": "string"
              },
              "virtual_mac": {
                "type": "string"
              },
              "ipv6": {
                "type": "array"
              },
              "vids": {
                "type": "string"
              },
              "addr_method": {
                "type": "string"
              },
              "mstpctl_bpduguard": {
                "type": "string"
              },
              "alias_name": {
                "type": "string"
              },
              "ipv4": {
                "type": "array"
              },
              "virtual_ip": {
                "type": "string"
              }
            }
          },
          "bigip_hostname": {
            "required": [
              "hostname"
            ],
            "type": "object",
            "description": "Manage the hostname of a BIG-IP.",
            "properties": {
              "hostname": {
                "type": "string"
              }
            }
          },
          "vertica_user": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "roles",
                        "role"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Adds or removes Vertica database user and, optionally, assigns roles.\nA user will not be removed until all the dependencies have been dropped.\nIn such a situation, if the module tries to remove the user it will fail and only remove roles granted to the user.",
            "properties": {
              "profile": {
                "type": "string"
              },
              "resource_pool": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roles": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "ldap": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "expired": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "os_nova_flavor": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove flavors from OpenStack.",
            "properties": {
              "flavorid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "ram": {
                "type": "string"
              },
              "ephemeral": {
                "type": "string"
              },
              "vcpus": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "extra_specs": {
                "type": "string"
              },
              "swap": {
                "type": "string"
              },
              "rxtx_factor": {
                "type": "string"
              },
              "is_public": {
                "type": "string"
              },
              "disk": {
                "type": "string"
              }
            }
          },
          "udm_dns_zone": {
            "required": [
              "zone",
              "type"
            ],
            "type": "object",
            "description": "This module allows to manage dns zones on a univention corporate server (UCS). It uses the python API of the UCS to create a new object or edit it.",
            "properties": {
              "retry": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "interfaces": {
                "type": "array"
              },
              "refresh": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "contact": {
                "type": "string"
              },
              "expire": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "nameserver": {
                "type": "array"
              },
              "type": {
                "type": "string"
              },
              "mx": {
                "type": "array"
              }
            }
          },
          "assemble": {
            "required": [
              "src",
              "dest"
            ],
            "type": "object",
            "description": "Assembles a configuration file from fragments. Often a particular program will take a single configuration file and does not support a C(conf.d) style structure where it is easy to build up the configuration from multiple sources. M(assemble) will take a directory of files that can be local or have already been transferred to the system, and concatenate them together to produce a destination file. Files are assembled in string sorting order. Puppet calls this idea I(fragments).",
            "properties": {
              "ignore_hidden": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "remote_src": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "delimiter": {
                "type": "string"
              },
              "regexp": {
                "type": "string"
              },
              "validate": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "ipadm_if": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, delete, enable or disable IP interfaces on Solaris/illumos systems.",
            "properties": {
              "state": {
                "type": "string"
              },
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "netapp_e_hostgroup": {
            "required": [
              "ssid",
              "api_password",
              "state",
              "api_username",
              "api_url"
            ],
            "type": "object",
            "description": "Create, update or destroy host groups on a NetApp E-Series storage array.",
            "properties": {
              "new_name": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "hosts:": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              }
            }
          },
          "nxos_file_copy": {
            "required": [
              "local_file"
            ],
            "type": "object",
            "description": "Copy a file to the flash (or bootflash) remote network device on NXOS devices.",
            "properties": {
              "remote_file": {
                "type": "string"
              },
              "local_file": {
                "type": "string"
              },
              "file_system": {
                "type": "string"
              }
            }
          },
          "os_security_group_rule": {
            "required": [
              "security_group"
            ],
            "type": "object",
            "description": "Add or Remove rule from an existing security group",
            "properties": {
              "direction": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "remote_ip_prefix": {
                "type": "string"
              },
              "port_range_max": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "port_range_min": {
                "type": "string"
              },
              "ethertype": {
                "type": "string"
              },
              "security_group": {
                "type": "string"
              },
              "remote_group": {
                "type": "string"
              }
            }
          },
          "ufw": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "to_ip",
                        "to",
                        "dest"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "to_port",
                        "port"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "from_ip",
                        "from",
                        "src"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "interface",
                        "if"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "app"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "policy",
                        "default"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage firewall with UFW.",
            "properties": {
              "to_port": {
                "type": "string"
              },
              "app": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "if": {
                "type": "string"
              },
              "from": {
                "type": "string"
              },
              "log": {
                "type": "string"
              },
              "proto": {
                "type": "string"
              },
              "to": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "direction": {
                "type": "string"
              },
              "from_port": {
                "type": "string"
              },
              "to_ip": {
                "type": "string"
              },
              "insert": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "from_ip": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "logging": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "default": {
                "type": "string"
              },
              "route": {
                "type": "string"
              },
              "rule": {
                "type": "string"
              },
              "delete": {
                "type": "string"
              }
            }
          },
          "haproxy": {
            "required": [
              "state",
              "host"
            ],
            "type": "object",
            "description": "Enable, disable, and set weights for HAProxy backend servers using socket commands.",
            "properties": {
              "socket": {
                "type": "string"
              },
              "weight": {
                "type": "string"
              },
              "wait_interval": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "wait_retries": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "fail_on_not_found": {
                "type": "string"
              },
              "shutdown_sessions": {
                "type": "string"
              },
              "backend": {
                "type": "string"
              }
            }
          },
          "nxos_rollback": {
            "type": "object",
            "description": "This module offers the ability to set a configuration checkpoint file or rollback to a configuration checkpoint file on Cisco NXOS switches.",
            "properties": {
              "checkpoint_file": {
                "type": "string"
              },
              "rollback_to": {
                "type": "string"
              }
            }
          },
          "katello": {
            "required": [
              "username",
              "password",
              "params",
              "server_url",
              "entity"
            ],
            "type": "object",
            "description": "Allows the management of Katello resources inside your Foreman server",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "params": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "entity": {
                "type": "string"
              }
            }
          },
          "cs_zone_facts": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Gathering facts from the API of a zone.",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "cs_facts": {
            "type": "object",
            "description": "This module fetches data from the metadata API in CloudStack. The module must be called from within the instance itself.",
            "properties": {
              "filter": {
                "type": "string"
              }
            }
          },
          "package": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Installs, upgrade and removes packages using the underlying OS package manager.",
            "properties": {
              "state": {
                "type": "string"
              },
              "use": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "bigip_irule": {
            "required": [
              "src",
              "name",
              "module"
            ],
            "type": "object",
            "description": "Manage iRules across different modules on a BIG-IP.",
            "properties": {
              "src": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "module": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "ovirt_templates": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Module to manage virtual machine templates in oVirt.",
            "properties": {
              "exclusive": {
                "type": "string"
              },
              "image_disk": {
                "type": "string"
              },
              "storage_domain": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "export_domain": {
                "type": "string"
              },
              "cpu_profile": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "image_provider": {
                "type": "string"
              },
              "clone_permissions": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "acl": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "path"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sets and retrieves file ACL information.",
            "properties": {
              "entry": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "default": {
                "type": "string"
              },
              "recursive": {
                "type": "string"
              },
              "entity": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "etype": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "permissions": {
                "type": "string"
              }
            }
          },
          "gitlab_project": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "validate_certs",
                        "verify_ssl"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "When the project does not exists in Gitlab, it will be created.\nWhen the project does exists and state=absent, the project will be deleted.\nWhen changes are made to the project, the project will be updated.",
            "properties": {
              "verify_ssl": {
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "merge_requests_enabled": {
                "type": "string"
              },
              "import_url": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_token": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "issues_enabled": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "snippets_enabled": {
                "type": "string"
              },
              "wiki_enabled": {
                "type": "string"
              },
              "visibility_level": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "public": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "win_region": {
            "type": "object",
            "description": "Set the location settings of a Windows Server.\nSet the format settings of a Windows Server.\nSet the unicode language settings of a Windows Server.\nCopy across these settings to the default profile.",
            "properties": {
              "unicode_language": {
                "type": "string"
              },
              "copy_settings": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "format": {
                "type": "string"
              }
            }
          },
          "postgresql_db": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add or remove PostgreSQL databases from a remote host.",
            "properties": {
              "name": {
                "type": "string"
              },
              "encoding": {
                "type": "string"
              },
              "lc_collate": {
                "type": "string"
              },
              "lc_ctype": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "owner": {
                "type": "string"
              }
            }
          },
          "azure": {
            "required": [
              "image",
              "storage_account",
              "name",
              "location"
            ],
            "type": "object",
            "description": "Creates or terminates azure instances. When created optionally waits for it to be 'running'.",
            "properties": {
              "endpoints": {
                "type": "string"
              },
              "role_size": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "virtual_network_name": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "enable_winrm": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout_redirects": {
                "type": "string"
              },
              "management_cert_path": {
                "type": "string"
              },
              "ssh_cert_path": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "auto_updates": {
                "type": "string"
              },
              "storage_account": {
                "type": "string"
              },
              "os_type": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "subscription_id": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "os_server_volume": {
            "required": [
              "volume",
              "server"
            ],
            "type": "object",
            "description": "Attach or Detach volumes from OpenStack VM's",
            "properties": {
              "volume": {
                "type": "string"
              },
              "device": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "server": {
                "type": "string"
              }
            }
          },
          "zabbix_host": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "server_url",
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "server_url"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows you to create, modify and delete Zabbix host entries and associated group and template data.",
            "properties": {
              "status": {
                "type": "string"
              },
              "http_login_password": {
                "type": "string"
              },
              "inventory_mode": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "interfaces": {
                "type": "array"
              },
              "http_login_user": {
                "type": "string"
              },
              "server_url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "host_name": {
                "type": "string"
              },
              "host_groups": {
                "type": "array"
              },
              "login_password": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "link_templates": {
                "type": "array"
              },
              "proxy": {
                "type": "string"
              }
            }
          },
          "swdepot": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Will install, upgrade and remove packages with swdepot package manager (HP-UX)",
            "properties": {
              "state": {
                "type": "string"
              },
              "depot": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "linode": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "linode_id",
                        "lid"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "creates / deletes a Linode Public Cloud instance and optionally waits for it to be 'running'.",
            "properties": {
              "lid": {
                "type": "string"
              },
              "datacenter": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "payment_term": {
                "type": "string"
              },
              "linode_id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "swap": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "distribution": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "ssh_pub_key": {
                "type": "string"
              },
              "plan": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_igw_facts": {
            "type": "object",
            "description": "Gather facts about internet gateways in AWS.",
            "properties": {
              "filters": {
                "type": "string"
              },
              "internet_gateway_ids": {
                "type": "string"
              }
            }
          },
          "rax_dns_record": {
            "required": [
              "name",
              "data",
              "type"
            ],
            "type": "object",
            "description": "Manage DNS records on Rackspace Cloud DNS",
            "properties": {
              "comment": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "overwrite": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "loadbalancer": {
                "type": "string"
              }
            }
          },
          "docker_image_facts": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Provide one or more image names, and the module will inspect each, returning an array of inspection results.",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "redshift": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cluster_parameter_group_name",
                        "param_group_name"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "new_cluster_identifier",
                        "new_identifier"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "availability_zone",
                        "zone",
                        "aws_zone"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "allow_version_upgrade",
                        "version_upgrade"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cluster_subnet_group_name",
                        "subnet"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cluster_security_groups",
                        "security_groups"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "automated_snapshot_retention_period",
                        "retention_period"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cluster_version",
                        "version"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "preferred_maintenance_window",
                        "maintance_window",
                        "maint_window"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "vpc_security_group_ids",
                        "vpc_security_groups"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates, deletes, or modifies amazon Redshift cluster instances.",
            "properties": {
              "cluster_parameter_group_name": {
                "type": "string"
              },
              "maint_window": {
                "type": "string"
              },
              "availability_zone": {
                "type": "string"
              },
              "encrypted": {
                "type": "string"
              },
              "retention_period": {
                "type": "string"
              },
              "node_type": {
                "type": "string"
              },
              "publicly_accessible": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "security_groups": {
                "type": "string"
              },
              "subnet": {
                "type": "string"
              },
              "vpc_security_groups": {
                "type": "string"
              },
              "allow_version_upgrade": {
                "type": "string"
              },
              "cluster_type": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "vpc_security_group_ids": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "new_cluster_identifier": {
                "type": "string"
              },
              "number_of_nodes": {
                "type": "string"
              },
              "version_upgrade": {
                "type": "string"
              },
              "db_name": {
                "type": "string"
              },
              "param_group_name": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "cluster_subnet_group_name": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "aws_zone": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "cluster_security_groups": {
                "type": "string"
              },
              "maintance_window": {
                "type": "string"
              },
              "elastic_ip": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "new_identifier": {
                "type": "string"
              },
              "automated_snapshot_retention_period": {
                "type": "string"
              },
              "identifier": {
                "type": "string"
              },
              "cluster_version": {
                "type": "string"
              },
              "preferred_maintenance_window": {
                "type": "string"
              }
            }
          },
          "gce_pd": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module can create and destroy unformatted GCE persistent disks U(https://developers.google.com/compute/docs/disks#persistentdisks). It also supports attaching and detaching disks from running instances. Full install/configuration instructions for the gce* modules can be found in the comments of ansible/test/gce_tests.py.",
            "properties": {
              "size_gb": {
                "type": "string"
              },
              "disk_type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "service_account_email": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "pem_file": {
                "type": "string"
              },
              "instance_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "snapshot": {
                "type": "string"
              },
              "detach_only": {
                "type": "string"
              },
              "credentials_file": {
                "type": "string"
              },
              "project_id": {
                "type": "string"
              },
              "mode": {
                "type": "string"
              }
            }
          },
          "tower_user": {
            "required": [
              "username",
              "email"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower users. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "username": {
                "type": "string"
              },
              "superuser": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "auditor": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          },
          "profitbricks_nic": {
            "required": [
              "datacenter",
              "lan",
              "name",
              "server"
            ],
            "type": "object",
            "description": "This module allows you to create or restore a volume snapshot. This module has a dependency on profitbricks >= 1.0.0",
            "properties": {
              "datacenter": {
                "type": "string"
              },
              "lan": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "subscription_user": {
                "type": "string"
              },
              "server": {
                "type": "string"
              },
              "subscription_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "ec2_ami_copy": {
            "required": [
              "source_image_id",
              "source_region"
            ],
            "type": "object",
            "description": "Copies AMI from a source region to a destination region. This module has a dependency on python-boto >= 2.5",
            "properties": {
              "description": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "encrypted": {
                "type": "string"
              },
              "kms_key_id": {
                "type": "string"
              },
              "source_image_id": {
                "type": "string"
              },
              "wait_timeout": {
                "type": "string"
              },
              "source_region": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "vmware_guest": {
            "required": [
              "datacenter",
              "name",
              "state",
              "esxi_hostname"
            ],
            "type": "object",
            "description": "Uses pyvmomi to ...\ncopy a template to a new virtualmachine\npoweron/poweroff/restart a virtualmachine\nremove a virtualmachine",
            "properties": {
              "datacenter": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "nic": {
                "type": "string"
              },
              "wait_for_ip_address": {
                "type": "string"
              },
              "hardware": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name_match": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "esxi_hostname": {
                "type": "string"
              },
              "folder": {
                "type": "string"
              },
              "disk": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "vmware_vmotion": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "vm_name",
                        "vm"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "vm_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "vm"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "destination_host",
                        "destination"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "destination_host"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "destination"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Using VMware vCenter, move a virtual machine using vMotion to a different host.",
            "properties": {
              "vm_name": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "destination_host": {
                "type": "string"
              }
            }
          },
          "slurp": {
            "required": [
              "src"
            ],
            "type": "object",
            "description": "This module works like M(fetch). It is used for fetching a base64- encoded blob containing the data in a remote file.",
            "properties": {
              "src": {
                "type": "string"
              }
            }
          },
          "os_user": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage OpenStack Identity users. Users can be created, updated or deleted using this module. A user will be updated if I(name) matches an existing user and I(state) is present. The value for I(name) cannot be updated without deleting and re-creating the user.",
            "properties": {
              "default_project": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          },
          "ipa_user": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "uid",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "uid"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify and delete user within IPA server",
            "properties": {
              "telephonenumber": {
                "type": "array"
              },
              "sshpubkey": {
                "type": "array"
              },
              "ipa_port": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "displayname": {
                "type": "string"
              },
              "uid": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "loginshell": {
                "type": "string"
              },
              "sn": {
                "type": "string"
              },
              "ipa_prot": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ipa_host": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "ipa_pass": {
                "type": "string"
              },
              "mail": {
                "type": "array"
              },
              "givenname": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "cs_account": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, disable, lock, enable and remove accounts.",
            "properties": {
              "username": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "account_type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "network_domain": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "timezone": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          },
          "seboolean": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Toggles SELinux booleans.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "persistent": {
                "type": "string"
              }
            }
          },
          "postgresql_lang": {
            "required": [
              "lang"
            ],
            "type": "object",
            "description": "Adds, removes or changes procedural languages with a PostgreSQL database.\nThis module allows you to add a language, remote a language or change the trust relationship with a PostgreSQL database. The module can be used on the machine where executed or on a remote host.\nWhen removing a language from a database, it is possible that dependencies prevent the database from being removed. In that case, you can specify casade to automatically drop objects that depend on the language (such as functions in the language). In case the language can't be deleted because it is required by the database system, you can specify fail_on_drop=no to ignore the error.\nBe carefull when marking a language as trusted since this could be a potential security breach. Untrusted languages allow only users with the PostgreSQL superuser privilege to use this language to create new functions.",
            "properties": {
              "lang": {
                "type": "string"
              },
              "cascade": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "force_trust": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "trust": {
                "type": "string"
              },
              "fail_on_drop": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "consul_acl": {
            "type": "object",
            "description": "allows the addition, modification and deletion of ACL keys and associated rules in a consul cluster via the agent. For more details on using and configuring ACLs, see https://www.consul.io/docs/internals/acl.html.",
            "properties": {
              "name": {
                "type": "string"
              },
              "rules": {
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "token_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "mgmt_token": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "lldp": {
            "type": "object",
            "description": "Reads data out of lldpctl",
            "properties": {}
          },
          "nxos_snmp_user": {
            "required": [
              "user",
              "group"
            ],
            "type": "object",
            "description": "Manages SNMP user configuration.",
            "properties": {
              "group": {
                "type": "string"
              },
              "privacy": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "auth": {
                "type": "string"
              },
              "pwd": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "encrypt": {
                "type": "string"
              }
            }
          },
          "vmadm": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "alias"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage SmartOS virtual machines through vmadm(1M).",
            "properties": {
              "customer_metadata": {
                "type": "string"
              },
              "disk_driver": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "zfs_root_compression": {
                "type": "string"
              },
              "virtio_txtimer": {
                "type": "string"
              },
              "spice_password": {
                "type": "string"
              },
              "zfs_io_priority": {
                "type": "string"
              },
              "ram": {
                "type": "string"
              },
              "dns_domain": {
                "type": "string"
              },
              "max_physical_memory": {
                "type": "string"
              },
              "nic_driver": {
                "type": "string"
              },
              "zfs_data_compression": {
                "type": "string"
              },
              "image_uuid": {
                "type": "string"
              },
              "spice_opts": {
                "type": "string"
              },
              "fs_allowed": {
                "type": "string"
              },
              "qemu_opts": {
                "type": "string"
              },
              "virtio_txburst": {
                "type": "string"
              },
              "firewall_enabled": {
                "type": "string"
              },
              "mdata_exec_timeout": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              },
              "nics": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "boot": {
                "type": "string"
              },
              "vga": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "zfs_snapshot_limit": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "limit_priv": {
                "type": "string"
              },
              "cpu_cap": {
                "type": "string"
              },
              "maintain_resolvers": {
                "type": "string"
              },
              "zfs_data_recsize": {
                "type": "string"
              },
              "qemu_extra_opts": {
                "type": "string"
              },
              "vnc_password": {
                "type": "string"
              },
              "max_swap": {
                "type": "string"
              },
              "zfs_root_recsize": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "zfs_filesystem_limit": {
                "type": "string"
              },
              "quota": {
                "type": "string"
              },
              "filesystems": {
                "type": "string"
              },
              "autoboot": {
                "type": "string"
              },
              "tmpfs": {
                "type": "string"
              },
              "indestructible_zoneroot": {
                "type": "string"
              },
              "resolvers": {
                "type": "array"
              },
              "max_lwps": {
                "type": "string"
              },
              "nowait": {
                "type": "string"
              },
              "indestructible_delegated": {
                "type": "string"
              },
              "kernel_version": {
                "type": "string"
              },
              "max_locked_memory": {
                "type": "string"
              },
              "disks": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "internal_metadata_namespace": {
                "type": "array"
              },
              "delegate_dataset": {
                "type": "string"
              },
              "archive_on_delete": {
                "type": "string"
              },
              "vcpus": {
                "type": "string"
              },
              "internal_metadata": {
                "type": "string"
              },
              "cpu_type": {
                "type": "string"
              },
              "routes": {
                "type": "string"
              },
              "zpool": {
                "type": "string"
              },
              "cpu_shares": {
                "type": "string"
              },
              "vnc_port": {
                "type": "string"
              }
            }
          },
          "git": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "repo",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "repo"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage I(git) checkouts of repositories to deploy files or software.",
            "properties": {
              "depth": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "refspec": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "track_submodules": {
                "type": "string"
              },
              "reference": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "verify_commit": {
                "type": "string"
              },
              "clone": {
                "type": "string"
              },
              "accept_hostkey": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "ssh_opts": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "umask": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "bare": {
                "type": "string"
              },
              "recursive": {
                "type": "string"
              },
              "remote": {
                "type": "string"
              },
              "key_file": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "azure_rm_virtualnetwork_facts": {
            "type": "object",
            "description": "Get facts for a specific virtual network or all virtual networks within a resource group.",
            "properties": {
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "cnos_command": {
            "required": [
              "clicommand"
            ],
            "type": "object",
            "description": "This module allows you to modify the switch running configuration. It provides a way to execute a single CNOS command on a switch by evaluating the current running configuration and executing the command only if the specific setting has not been already configured. The CNOS command is passed as an argument of the method. This module uses SSH to manage network device configuration. The results of the operation will be placed in a directory named 'results' that must be created by the user in their local directory to where the playbook is run. For more information about this module from Lenovo and customizing it usage for your use cases, please visit U(http://systemx.lenovofiles.com/help/index.jsp?topic=%2Fcom.lenovo.switchmgt.ansible.doc%2Fcnos_command.html)",
            "properties": {
              "clicommand": {
                "type": "string"
              }
            }
          },
          "vmware_vswitch": {
            "required": [
              "nic_name",
              "switch_name"
            ],
            "type": "object",
            "description": "Add a VMware Standard Switch to an ESXi host",
            "properties": {
              "nic_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "number_of_ports": {
                "type": "string"
              },
              "switch_name": {
                "type": "string"
              },
              "mtu": {
                "type": "string"
              }
            }
          },
          "avi_tenant": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module is used to configure Tenant object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "config_settings": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "local": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_nacl_facts": {
            "type": "object",
            "description": "Gather facts about Network ACLs in an AWS VPC",
            "properties": {
              "nacl_ids": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              }
            }
          },
          "netapp_e_volume": {
            "required": [
              "api_password",
              "api_url",
              "name",
              "ssid",
              "state",
              "storage_pool_name",
              "api_username",
              "thin_volume_repo_size",
              "size"
            ],
            "type": "object",
            "description": "Create or remove volumes (standard and thin) for NetApp E/EF-series storage arrays.",
            "properties": {
              "segment_size_kb": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              },
              "ssd_cache_enabled": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "data_assurance_enabled": {
                "type": "string"
              },
              "thin_provision": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "size_unit": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "storage_pool_name": {
                "type": "string"
              },
              "thin_volume_max_repo_size": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "thin_volume_repo_size": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_facts": {
            "type": "object",
            "description": "Collects facts from Cisco Nexus devices running the NX-OS operating system.  Fact collection is supported over both Cli and Nxapi transports.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "win_firewall_rule": {
            "required": [
              "direction",
              "name",
              "state",
              "action"
            ],
            "type": "object",
            "description": "allows you to create/remove/update firewall rules",
            "properties": {
              "profile": {
                "type": "string"
              },
              "remoteport": {
                "type": "string"
              },
              "direction": {
                "type": "string"
              },
              "enable": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "localport": {
                "type": "string"
              },
              "localip": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "program": {
                "type": "string"
              },
              "remoteip": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "tower_group": {
            "required": [
              "name",
              "inventory"
            ],
            "type": "object",
            "description": "Create, update, or destroy Ansible Tower groups. See U(https://www.ansible.com/tower) for an overview.",
            "properties": {
              "state": {
                "type": "string"
              },
              "credential": {
                "type": "string"
              },
              "source_vars": {
                "type": "string"
              },
              "tower_host": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "overwrite_vars": {
                "type": "string"
              },
              "source_regions": {
                "type": "string"
              },
              "inventory": {
                "type": "string"
              },
              "variables": {
                "type": "string"
              },
              "instance_filters": {
                "type": "string"
              },
              "group_by": {
                "type": "string"
              },
              "tower_config_file": {
                "type": "string"
              },
              "source_script": {
                "type": "string"
              },
              "update_on_launch": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "tower_password": {
                "type": "string"
              },
              "tower_username": {
                "type": "string"
              },
              "tower_verify_ssl": {
                "type": "string"
              },
              "overwrite": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ovirt_external_providers_facts": {
            "required": [
              "type"
            ],
            "type": "object",
            "description": "Retrieve facts about one or more oVirt external providers.",
            "properties": {
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ec2_snapshot_facts": {
            "type": "object",
            "description": "Gather facts about ec2 volume snapshots in AWS",
            "properties": {
              "restorable_by_user_ids": {
                "type": "string"
              },
              "snapshot_ids": {
                "type": "string"
              },
              "filters": {
                "type": "string"
              },
              "owner_ids": {
                "type": "string"
              }
            }
          },
          "vsphere_guest": {
            "required": [
              "username",
              "vcenter_hostname",
              "password",
              "guest"
            ],
            "type": "object",
            "description": "Create/delete/reconfigure a guest VM through VMware vSphere. This module has a dependency on pysphere >= 1.7",
            "properties": {
              "username": {
                "type": "string"
              },
              "resource_pool": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "guest": {
                "type": "string"
              },
              "vm_disk": {
                "type": "string"
              },
              "vm_hw_version": {
                "type": "string"
              },
              "esxi": {
                "type": "string"
              },
              "vm_nic": {
                "type": "string"
              },
              "vm_hardware": {
                "type": "string"
              },
              "from_template": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vmware_guest_facts": {
                "type": "string"
              },
              "vm_extra_config": {
                "type": "string"
              },
              "power_on_after_clone": {
                "type": "string"
              },
              "vcenter_hostname": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "template_src": {
                "type": "string"
              },
              "snapshot_to_clone": {
                "type": "string"
              }
            }
          },
          "ovirt_hosts": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "public_key",
                        "ssh_public_key"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Module to manage hosts in oVirt",
            "properties": {
              "comment": {
                "type": "string"
              },
              "public_key": {
                "type": "string"
              },
              "kdump_integration": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "kernel_params": {
                "type": "array"
              },
              "spm_priority": {
                "type": "string"
              },
              "hosted_engine": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ssh_public_key": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "override_iptables": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "override_display": {
                "type": "string"
              }
            }
          },
          "ipadm_addrprop": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "property",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "property"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "addrobj",
                        "nic",
                        "interface"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "addrobj"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "nic"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "interface"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Modify IP address properties on Solaris/illumos systems.",
            "properties": {
              "temporary": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "nic": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "property": {
                "type": "string"
              },
              "addrobj": {
                "type": "string"
              }
            }
          },
          "win_group": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Add and remove local groups",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "infini_host": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "This module creates, deletes or modifies hosts on Infinibox.",
            "properties": {
              "volume": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "wwns": {
                "type": "array"
              }
            }
          },
          "getent": {
            "required": [
              "database"
            ],
            "type": "object",
            "description": "Runs getent against one of it's various databases and returns information into the host's facts, in a getent_<database> prefixed variable",
            "properties": {
              "fail_key": {
                "type": "string"
              },
              "split": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "database": {
                "type": "string"
              }
            }
          },
          "vca_vapp": {
            "required": [
              "vapp_name"
            ],
            "type": "object",
            "description": "This module will actively managed vCloud Air vApp instances.  Instances can be created and deleted as well as both deployed and undeployed.",
            "properties": {
              "vm_name": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "vm_memory": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "template_name": {
                "type": "string"
              },
              "instance_id": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "network_mode": {
                "type": "string"
              },
              "vapp_name": {
                "type": "string"
              },
              "network_name": {
                "type": "string"
              },
              "service_type": {
                "type": "string"
              },
              "org": {
                "type": "string"
              },
              "operation": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "vm_cpus": {
                "type": "string"
              },
              "vdc_name": {
                "type": "string"
              },
              "api_version": {
                "type": "string"
              }
            }
          },
          "vertica_role": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "assigned_roles",
                        "assigned_role"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Adds or removes Vertica database role and, optionally, assign other roles.",
            "properties": {
              "assigned_roles": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "cluster": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "assigned_role": {
                "type": "string"
              }
            }
          },
          "lambda_event": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lambda_function_arn",
                        "function_name",
                        "function_arn"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "lambda_function_arn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "function_name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "function_arn"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows the management of AWS Lambda function event source mappings such as DynamoDB and Kinesis stream events via the Ansible framework. These event source mappings are relevant only in the AWS Lambda pull model, where AWS Lambda invokes the function. It is idempotent and supports \"Check\" mode.  Use module M(lambda) to manage the lambda function itself and M(lambda_alias) to manage function aliases.",
            "properties": {
              "source_params": {
                "type": "string"
              },
              "event_source": {
                "type": "string"
              },
              "function_arn": {
                "type": "string"
              },
              "lambda_function_arn": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "function_name": {
                "type": "string"
              }
            }
          },
          "ipmi_power": {
            "required": [
              "state",
              "name",
              "password",
              "user"
            ],
            "type": "object",
            "description": "Use this module for power management",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "cs_firewall": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "start_port",
                        "port"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Creates and removes firewall rules.",
            "properties": {
              "icmp_code": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "end_port": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "start_port": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "icmp_type": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "bigip_gtm_virtual_server": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "host",
                        "address"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages F5 BIG-IP GTM virtual servers",
            "properties": {
              "virtual_server_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "virtual_server_server": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "ios_vrf": {
            "type": "object",
            "description": "This module provides declarative management of VRF definitions on Cisco IOS devices.  It allows playbooks to manage individual or the entire VRF collection.  It also supports purging VRF definitions from the configuration that are not explicitly defined.",
            "properties": {
              "rd": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "interfaces": {
                "type": "string"
              },
              "purge": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vrfs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_interface_ospf": {
            "required": [
              "area",
              "interface",
              "ospf"
            ],
            "type": "object",
            "description": "Manages configuration of an OSPF interface instance.",
            "properties": {
              "cost": {
                "type": "string"
              },
              "passive_interface": {
                "type": "string"
              },
              "area": {
                "type": "string"
              },
              "message_digest_algorithm_type": {
                "type": "string"
              },
              "message_digest_key_id": {
                "type": "string"
              },
              "message_digest_encryption_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "dead_interval": {
                "type": "string"
              },
              "hello_interval": {
                "type": "string"
              },
              "message_digest_password": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "ospf": {
                "type": "string"
              },
              "message_digest": {
                "type": "string"
              }
            }
          },
          "hg": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "repo",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "repo"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "revision",
                        "version"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages Mercurial (hg) repositories. Supports SSH, HTTP/S and local address.",
            "properties": {
              "purge": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "clone": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "repo": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "revision": {
                "type": "string"
              }
            }
          },
          "win_uri": {
            "type": "object",
            "description": "Interacts with HTTP and HTTPS web services and supports Digest, Basic and WSSE HTTP authentication mechanisms.",
            "properties": {
              "body": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "use_basic_parsing": {
                "type": "string"
              },
              "headers": {
                "type": "string"
              },
              "content_type": {
                "type": "string"
              },
              "method": {
                "type": "string"
              }
            }
          },
          "bzr": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "parent"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "parent"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage I(bzr) branches to deploy files or software.",
            "properties": {
              "executable": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parent": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          },
          "win_package": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "state",
                        "ensure"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "product_id",
                        "productid"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "product_id"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "productid"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Installs or uninstalls a package.\nOptionally uses a product_id to check if the package needs installing. You can find product ids for installed programs in the windows registry either in C(HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall) or for 32 bit programs C(HKLM:Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall)",
            "properties": {
              "product_id": {
                "type": "string"
              },
              "user_password": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ensure": {
                "type": "string"
              },
              "arguments": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "productid": {
                "type": "string"
              },
              "user_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ldap_attr": {
            "required": [
              "dn",
              "name",
              "values"
            ],
            "type": "object",
            "description": "Add or remove LDAP attribute values.",
            "properties": {
              "dn": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "server_uri": {
                "type": "string"
              },
              "start_tls": {
                "type": "string"
              },
              "bind_dn": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "values": {
                "type": "string"
              },
              "bind_pw": {
                "type": "string"
              }
            }
          },
          "pacman": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "pkg",
                        "package"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "update_cache",
                        "update-cache"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage packages with the I(pacman) package manager, which is used by Arch Linux and its variants.",
            "properties": {
              "upgrade": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "package": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "update_cache": {
                "type": "string"
              },
              "pkg": {
                "type": "string"
              },
              "update-cache": {
                "type": "string"
              }
            }
          },
          "rabbitmq_plugin": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "names",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "names"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Enables or disables RabbitMQ plugins",
            "properties": {
              "state": {
                "type": "string"
              },
              "names": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "new_only": {
                "type": "string"
              }
            }
          },
          "firewalld": {
            "required": [
              "state"
            ],
            "type": "object",
            "description": "This module allows for addition or deletion of services and ports either tcp or udp in either running or permanent firewalld rules.",
            "properties": {
              "zone": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "masquerade": {
                "type": "string"
              },
              "immediate": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "permanent": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "port": {
                "type": "string"
              },
              "rich_rule": {
                "type": "string"
              }
            }
          },
          "cs_loadbalancer_rule": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "ip_address",
                        "public_ip"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "ip_address"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "public_ip"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, update and remove load balancer rules.",
            "properties": {
              "public_ip": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "open_firewall": {
                "type": "string"
              },
              "public_port": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "private_port": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "algorithm": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "nxos_snmp_host": {
            "required": [
              "snmp_host",
              "state"
            ],
            "type": "object",
            "description": "Manages SNMP host configuration parameters.",
            "properties": {
              "vrf_filter": {
                "type": "string"
              },
              "udp": {
                "type": "string"
              },
              "src_intf": {
                "type": "string"
              },
              "snmp_host": {
                "type": "string"
              },
              "community": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              },
              "snmp_type": {
                "type": "string"
              }
            }
          },
          "vmware_dvs_portgroup": {
            "required": [
              "portgroup_name",
              "portgroup_type",
              "num_ports",
              "switch_name",
              "vlan_id"
            ],
            "type": "object",
            "description": "Create or remove a Distributed vSwitch portgroup",
            "properties": {
              "portgroup_name": {
                "type": "string"
              },
              "portgroup_type": {
                "type": "string"
              },
              "num_ports": {
                "type": "string"
              },
              "switch_name": {
                "type": "string"
              },
              "vlan_id": {
                "type": "string"
              }
            }
          },
          "cs_volume": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, destroy, attach, detach volumes.",
            "properties": {
              "custom_id": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "disk_offering": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "shrink_ok": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "display_volume": {
                "type": "string"
              },
              "max_iops": {
                "type": "string"
              },
              "snapshot": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "min_iops": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "mongodb_user": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "user"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Adds or removes a user from a MongoDB database.",
            "properties": {
              "login_port": {
                "type": "string"
              },
              "update_password": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "roles": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "login_user": {
                "type": "string"
              },
              "login_host": {
                "type": "string"
              },
              "login_password": {
                "type": "string"
              },
              "ssl_cert_reqs": {
                "type": "string"
              },
              "ssl": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "login_database": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "replica_set": {
                "type": "string"
              }
            }
          },
          "vmware_target_canonical_facts": {
            "required": [
              "target_id"
            ],
            "type": "object",
            "description": "Return canonical (NAA) from an ESXi host based on SCSI target ID",
            "properties": {
              "target_id": {
                "type": "string"
              }
            }
          },
          "nxos_bgp_af": {
            "required": [
              "afi",
              "safi",
              "vrf",
              "asn"
            ],
            "type": "object",
            "description": "Manages BGP Address-family configurations on NX-OS switches.",
            "properties": {
              "dampening_max_suppress_time": {
                "type": "string"
              },
              "additional_paths_send": {
                "type": "string"
              },
              "additional_paths_install": {
                "type": "string"
              },
              "dampening_state": {
                "type": "string"
              },
              "additional_paths_receive": {
                "type": "string"
              },
              "suppress_inactive": {
                "type": "string"
              },
              "dampening_routemap": {
                "type": "string"
              },
              "networks": {
                "type": "string"
              },
              "distance_local": {
                "type": "string"
              },
              "advertise_l2vpn_evpn": {
                "type": "string"
              },
              "afi": {
                "type": "string"
              },
              "default_information_originate": {
                "type": "string"
              },
              "distance_ibgp": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "next_hop_route_map": {
                "type": "string"
              },
              "table_map_filter": {
                "type": "string"
              },
              "safi": {
                "type": "string"
              },
              "default_metric": {
                "type": "string"
              },
              "client_to_client": {
                "type": "string"
              },
              "dampen_igp_metric": {
                "type": "string"
              },
              "additional_paths_selection": {
                "type": "string"
              },
              "maximum_paths_ibgp": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              },
              "distance_ebgp": {
                "type": "string"
              },
              "asn": {
                "type": "string"
              },
              "redistribute": {
                "type": "string"
              },
              "dampening_reuse_time": {
                "type": "string"
              },
              "maximum_paths": {
                "type": "string"
              },
              "inject_map": {
                "type": "string"
              },
              "dampening_suppress_time": {
                "type": "string"
              },
              "table_map": {
                "type": "string"
              },
              "dampening_half_time": {
                "type": "string"
              }
            }
          },
          "expect": {
            "required": [
              "command",
              "responses"
            ],
            "type": "object",
            "description": "The M(expect) module executes a command and responds to prompts\nThe given command will be executed on all selected nodes. It will not be processed through the shell, so variables like C($HOME) and operations like C(\"<\"), C(\">\"), C(\"|\"), and C(\"&\") will not work",
            "properties": {
              "chdir": {
                "type": "string"
              },
              "responses": {
                "type": "string"
              },
              "removes": {
                "type": "string"
              },
              "echo": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "openvswitch_port": {
            "required": [
              "bridge",
              "port"
            ],
            "type": "object",
            "description": "Manage Open vSwitch ports",
            "properties": {
              "bridge": {
                "type": "string"
              },
              "set": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              },
              "external_ids": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "bigmon_policy": {
            "required": [
              "name",
              "controller"
            ],
            "type": "object",
            "description": "Create and remove a bigmon out-of-band policy.",
            "properties": {
              "policy_description": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "access_token": {
                "type": "string"
              },
              "start_time": {
                "type": "string"
              },
              "controller": {
                "type": "string"
              },
              "priority": {
                "type": "string"
              },
              "duration": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "delivery_packet_count": {
                "type": "string"
              }
            }
          },
          "cs_project": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, suspend, activate and remove projects.",
            "properties": {
              "display_text": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "array"
              },
              "domain": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "mysql_variables": {
            "required": [
              "variable"
            ],
            "type": "object",
            "description": "Query / Set MySQL variables",
            "properties": {
              "variable": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "ovirt_nics_facts": {
            "required": [
              "vm"
            ],
            "type": "object",
            "description": "Retrieve facts about one or more oVirt virtual machine network interfaces.",
            "properties": {
              "vm": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_snapshot": {
            "required": [
              "action"
            ],
            "type": "object",
            "description": "Create snapshots of the running states of selected features, add new show commands for snapshot creation, delete and compare existing snapshots.",
            "properties": {
              "description": {
                "type": "string"
              },
              "section": {
                "type": "string"
              },
              "snapshot1": {
                "type": "string"
              },
              "comparison_results_file": {
                "type": "string"
              },
              "snapshot2": {
                "type": "string"
              },
              "element_key1": {
                "type": "string"
              },
              "element_key2": {
                "type": "string"
              },
              "snapshot_name": {
                "type": "string"
              },
              "show_command": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "row_id": {
                "type": "string"
              },
              "save_snapshot_locally": {
                "type": "string"
              },
              "compare_option": {
                "type": "string"
              }
            }
          },
          "nagios": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "services",
                        "service"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "services"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "service"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "The M(nagios) module has two basic functions: scheduling downtime and toggling alerts for services or hosts.\nAll actions require the I(host) parameter to be given explicitly. In playbooks you can use the C({{inventory_hostname}}) variable to refer to the host the playbook is currently running on.\nYou can specify multiple services at once by separating them with commas, .e.g., C(services=httpd,nfs,puppet).\nWhen specifying what service to handle there is a special service value, I(host), which will handle alerts/downtime for the I(host itself), e.g., C(service=host). This keyword may not be given with other services at the same time. I(Setting alerts/downtime for a host does not affect alerts/downtime for any of the services running on it.) To schedule downtime for all services on particular host use keyword \"all\", e.g., C(service=all).\nWhen using the M(nagios) module you will need to specify your Nagios server using the C(delegate_to) parameter.",
            "properties": {
              "comment": {
                "type": "string"
              },
              "servicegroup": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "services": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "action": {
                "type": "string"
              },
              "minutes": {
                "type": "string"
              },
              "cmdfile": {
                "type": "string"
              }
            }
          },
          "cs_pod": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Create, update, delete pods.",
            "properties": {
              "name": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "netmask": {
                "type": "string"
              },
              "end_ip": {
                "type": "string"
              },
              "start_ip": {
                "type": "string"
              },
              "gateway": {
                "type": "string"
              }
            }
          },
          "circonus_annotation": {
            "required": [
              "category",
              "description",
              "title",
              "api_key"
            ],
            "type": "object",
            "description": "Create an annotation event with a given category, title and description. Optionally start, end or durations can be provided",
            "properties": {
              "category": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "stop": {
                "type": "string"
              },
              "start": {
                "type": "string"
              },
              "duration": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              }
            }
          },
          "clc_publicip": {
            "required": [
              "server_ids"
            ],
            "type": "object",
            "description": "An Ansible module to add or delete public ip addresses on an existing server or servers in CenturyLink Cloud.",
            "properties": {
              "server_ids": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "protocol": {
                "type": "string"
              },
              "ports": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "at": {
            "required": [
              "count",
              "units"
            ],
            "type": "object",
            "description": "Use this module to schedule a command or script file to run once in the future.\nAll jobs are executed in the 'a' queue.",
            "properties": {
              "count": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "command": {
                "type": "string"
              },
              "units": {
                "type": "string"
              },
              "unique": {
                "type": "string"
              },
              "script_file": {
                "type": "string"
              }
            }
          },
          "file": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "path",
                        "dest",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Sets attributes of files, symlinks, and directories, or removes files/symlinks/directories. Many other modules support the same options as the C(file) module - including M(copy), M(template), and M(assemble).",
            "properties": {
              "src": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "clc_aa_policy": {
            "required": [
              "location",
              "name"
            ],
            "type": "object",
            "description": "An Ansible module to Create or Delete Anti Affinity Policies at CenturyLink Cloud.",
            "properties": {
              "state": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pip": {
            "type": "object",
            "description": "Manage Python library dependencies. To use this module, one of the following keys is required: C(name) or C(requirements).",
            "properties": {
              "virtualenv": {
                "type": "string"
              },
              "extra_args": {
                "type": "string"
              },
              "virtualenv_command": {
                "type": "string"
              },
              "chdir": {
                "type": "string"
              },
              "requirements": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "virtualenv_python": {
                "type": "string"
              },
              "umask": {
                "type": "string"
              },
              "editable": {
                "type": "string"
              },
              "executable": {
                "type": "string"
              },
              "virtualenv_site_packages": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            }
          },
          "timezone": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "hwclock",
                        "rtc"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module configures the timezone setting, both of the system clock and of the hardware clock. I(Currently only Linux platform is supported.) It is recommended to restart C(crond) after changing the timezone, otherwise the jobs may run at the wrong time. It uses the C(timedatectl) command if available. Otherwise, it edits C(/etc/sysconfig/clock) or C(/etc/timezone) for the system clock, and uses the C(hwclock) command for the hardware clock. If you want to set up the NTP, use M(service) module.",
            "properties": {
              "hwclock": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "rtc": {
                "type": "string"
              }
            }
          },
          "ios_config": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "lines",
                        "commands"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Cisco IOS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with IOS configuration sections in a deterministic way.",
            "properties": {
              "multiline_delimiter": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "commands": {
                "type": "string"
              },
              "force": {
                "type": "string"
              },
              "config": {
                "type": "string"
              },
              "after": {
                "type": "string"
              },
              "lines": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "parents": {
                "type": "string"
              },
              "defaults": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              },
              "match": {
                "type": "string"
              },
              "before": {
                "type": "string"
              }
            }
          },
          "win_stat": {
            "required": [
              "path"
            ],
            "type": "object",
            "description": "Returns information about a Windows file",
            "properties": {
              "path": {
                "type": "string"
              },
              "get_md5": {
                "type": "string"
              },
              "get_checksum": {
                "type": "string"
              },
              "checksum_algorithm": {
                "type": "string"
              }
            }
          },
          "nxos_pim_interface": {
            "required": [
              "jp_policy_out",
              "interface"
            ],
            "type": "object",
            "description": "Manages PIM interface configuration settings.",
            "properties": {
              "jp_policy_in": {
                "type": "string"
              },
              "sparse": {
                "type": "string"
              },
              "jp_type_in": {
                "type": "string"
              },
              "jp_policy_out": {
                "type": "string"
              },
              "neighbor_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "neighbor_policy": {
                "type": "string"
              },
              "hello_interval": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "hello_auth_key": {
                "type": "string"
              },
              "border": {
                "type": "string"
              },
              "jp_type_out": {
                "type": "string"
              }
            }
          },
          "azure_rm_networkinterface_facts": {
            "type": "object",
            "description": "Get facts for a specific network interface or all network interfaces within a resource group.",
            "properties": {
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              }
            }
          },
          "cs_nic": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "vm_guest_ip",
                        "secondary_ip"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "vm",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "vm"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add and remove secondary IPs to and from a NIC.",
            "properties": {
              "secondary_ip": {
                "type": "string"
              },
              "vm_guest_ip": {
                "type": "string"
              },
              "account": {
                "type": "string"
              },
              "poll_async": {
                "type": "string"
              },
              "network": {
                "type": "string"
              },
              "zone": {
                "type": "string"
              },
              "domain": {
                "type": "string"
              },
              "vm": {
                "type": "string"
              },
              "project": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vpc": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "cl_ports": {
            "type": "object",
            "description": "Set the initial port attribute defined in the Cumulus Linux ports.conf, file. This module does not do any error checking at the moment. Be careful to not include ports that do not exist on the switch. Carefully read the original ports.conf file for any exceptions or limitations. For more details go the Configure Switch Port Attribute Documentation at U(http://docs.cumulusnetworks.com).",
            "properties": {
              "speed_4_by_10g": {
                "type": "array"
              },
              "speed_10g": {
                "type": "array"
              },
              "speed_40g": {
                "type": "array"
              },
              "speed_40g_div_4": {
                "type": "array"
              }
            }
          },
          "ec2_vpc_subnet": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "tags",
                        "resource_tags"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage subnets in AWS virtual private clouds",
            "properties": {
              "tags": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              },
              "resource_tags": {
                "type": "string"
              },
              "cidr": {
                "type": "string"
              },
              "az": {
                "type": "string"
              }
            }
          },
          "ec2_vpc_nacl": {
            "required": [
              "name",
              "vpc_id"
            ],
            "type": "object",
            "description": "Read the AWS documentation for Network ACLS U(http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html)",
            "properties": {
              "subnets": {
                "type": "string"
              },
              "ingress": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "egress": {
                "type": "string"
              },
              "vpc_id": {
                "type": "string"
              }
            }
          },
          "lambda_alias": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "version",
                        "function_version"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "alias_name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "alias_name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module allows the management of AWS Lambda functions aliases via the Ansible framework.  It is idempotent and supports \"Check\" mode.    Use module M(lambda) to manage the lambda function itself and M(lambda_event) to manage event source mappings.",
            "properties": {
              "description": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "function_name": {
                "type": "string"
              },
              "alias_name": {
                "type": "string"
              },
              "function_version": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "avi_applicationprofile": {
            "required": [
              "name",
              "type"
            ],
            "type": "object",
            "description": "This module is used to configure ApplicationProfile object\nmore examples at U(https://github.com/avinetworks/devops)",
            "properties": {
              "tcp_app_profile": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "dns_service_profile": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "tenant_ref": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "http_profile": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "dos_rl_profile": {
                "type": "string"
              },
              "preserve_client_ip": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          },
          "execute_lambda": {
            "type": "object",
            "description": "This module executes AWS Lambda functions, allowing synchronous and asynchronous invocation.",
            "properties": {
              "name": {
                "type": "string"
              },
              "dry_run": {
                "type": "string"
              },
              "function_arn": {
                "type": "string"
              },
              "tail_log": {
                "type": "string"
              },
              "version_qualifier": {
                "type": "string"
              },
              "payload": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "aos_asn_pool": {
            "required": [
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS ASN Pool module let you manage your ASN Pool easily. You can create and delete ASN Pool by Name, ID or by using a JSON File. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "content": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "ranges": {
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "aos_blueprint_param": {
            "required": [
              "blueprint",
              "session"
            ],
            "type": "object",
            "description": "Apstra AOS Blueprint Parameter module let you manage your Blueprint Parameter easily. You can create access, define and delete Blueprint Parameter. The list of Parameters supported is different per Blueprint. The option I(get_param_list) can help you to access the list of supported Parameters for your blueprint. This module is idempotent and support the I(check) mode. It's using the AOS REST API.",
            "properties": {
              "blueprint": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "session": {
                "type": "string"
              },
              "param_map": {
                "type": "string"
              },
              "get_param_list": {
                "type": "string"
              }
            }
          },
          "dpkg_selections": {
            "required": [
              "selection",
              "name"
            ],
            "type": "object",
            "description": "Change dpkg package selection state via --get-selections and --set-selections.",
            "properties": {
              "selection": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "nxos_vrf": {
            "required": [
              "vrf"
            ],
            "type": "object",
            "description": "Manages global VRF configuration.",
            "properties": {
              "description": {
                "type": "string"
              },
              "vni": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "route_distinguisher": {
                "type": "string"
              },
              "admin_state": {
                "type": "string"
              },
              "vrf": {
                "type": "string"
              }
            }
          },
          "clc_alert_policy": {
            "required": [
              "alias"
            ],
            "type": "object",
            "description": "An Ansible module to Create or Delete Alert Policies at CenturyLink Cloud.",
            "properties": {
              "name": {
                "type": "string"
              },
              "metric": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "alias": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "threshold": {
                "type": "string"
              },
              "alert_recipients": {
                "type": "string"
              },
              "duration": {
                "type": "string"
              }
            }
          },
          "ovirt_vms_facts": {
            "type": "object",
            "description": "Retrieve facts about one or more oVirt virtual machines.",
            "properties": {
              "all_content": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "max": {
                "type": "string"
              },
              "case_sensitive": {
                "type": "string"
              }
            }
          },
          "win_iis_virtualdirectory": {
            "required": [
              "name",
              "site"
            ],
            "type": "object",
            "description": "Creates, Removes and configures a virtual directory in IIS.",
            "properties": {
              "application": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "physical_path": {
                "type": "string"
              },
              "site": {
                "type": "string"
              }
            }
          },
          "panos_loadcfg": {
            "required": [
              "password",
              "ip_address"
            ],
            "type": "object",
            "description": "Load configuration on PAN-OS device",
            "properties": {
              "username": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              },
              "file": {
                "type": "string"
              }
            }
          },
          "win_domain": {
            "required": [
              "dns_domain_name",
              "safe_mode_password"
            ],
            "type": "object",
            "description": "Ensure that the domain named by C(dns_domain_name) exists and is reachable. If the domain is not reachable, the domain is created in a new forest on the target Windows Server 2012R2+ host. This module may require subsequent use of the M(win_reboot) action if changes are made.",
            "properties": {
              "dns_domain_name": {
                "type": "string"
              },
              "safe_mode_password": {
                "type": "string"
              }
            }
          },
          "os_zone": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage OpenStack DNS zones. Zones can be created, deleted or updated. Only the I(email), I(description), I(ttl) and I(masters) values can be updated.",
            "properties": {
              "masters": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ttl": {
                "type": "string"
              },
              "zone_type": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "crypttab": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Control Linux encrypted block devices that are set up during system boot in C(/etc/crypttab).",
            "properties": {
              "name": {
                "type": "string"
              },
              "backing_device": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "opts": {
                "type": "string"
              }
            }
          },
          "panos_interface": {
            "required": [
              "zone_name",
              "password",
              "ip_address",
              "if_name"
            ],
            "type": "object",
            "description": "Configure data-port (DP) network interface for DHCP. By default DP interfaces are static.",
            "properties": {
              "username": {
                "type": "string"
              },
              "if_name": {
                "type": "string"
              },
              "create_default_route": {
                "type": "string"
              },
              "zone_name": {
                "type": "string"
              },
              "commit": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "ip_address": {
                "type": "string"
              }
            }
          },
          "riak": {
            "type": "object",
            "description": "This module can be used to join nodes to a cluster, check the status of the cluster.",
            "properties": {
              "target_node": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "wait_for_service": {
                "type": "string"
              },
              "http_conn": {
                "type": "string"
              },
              "wait_for_ring": {
                "description": "Number of seconds to wait for all nodes to agree on the ring.",
                "$ref": "#/definitions/ansible_number"
              },
              "wait_for_handoffs": {
                "description": "Number of seconds to wait for handoffs to complete.",
                "$ref": "#/definitions/ansible_number"
              },
              "command": {
                "type": "string"
              },
              "config_dir": {
                "type": "string"
              }
            }
          },
          "serverless": {
            "required": [
              "service_path"
            ],
            "type": "object",
            "description": "Provides support for managing Serverless Framework (https://serverless.com/) project deployments and stacks.",
            "properties": {
              "region": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "service_path": {
                "type": "string"
              },
              "deploy": {
                "type": "string"
              },
              "functions": {
                "type": "string"
              }
            }
          },
          "ec2_vol_facts": {
            "type": "object",
            "description": "Gather facts about ec2 volumes in AWS",
            "properties": {
              "filters": {
                "type": "string"
              }
            }
          },
          "stat": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "mime",
                        "mime_type",
                        "mime-type"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "checksum_algorithm",
                        "checksum_algo",
                        "checksum"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Retrieves facts for a file similar to the linux/unix 'stat' command.",
            "properties": {
              "checksum_algorithm": {
                "type": "string"
              },
              "mime-type": {
                "type": "string"
              },
              "mime": {
                "type": "string"
              },
              "get_checksum": {
                "type": "string"
              },
              "checksum": {
                "type": "string"
              },
              "checksum_algo": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "get_md5": {
                "type": "string"
              },
              "mime_type": {
                "type": "string"
              }
            }
          },
          "vmware_local_user_manager": {
            "required": [
              "local_user_name"
            ],
            "type": "object",
            "description": "Manage local users on an ESXi host",
            "properties": {
              "local_user_password": {
                "type": "string"
              },
              "local_user_description": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "local_user_name": {
                "type": "string"
              }
            }
          },
          "ipa_sudocmdgroup": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "cn",
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "cn"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add, modify or delete sudo command group within IPA server using IPA API.",
            "properties": {
              "ipa_port": {
                "type": "string"
              },
              "cn": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "ipa_prot": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "ipa_host": {
                "type": "string"
              },
              "ipa_user": {
                "type": "string"
              },
              "ipa_pass": {
                "type": "string"
              },
              "sudocmd": {
                "type": "array"
              },
              "validate_certs": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "kubernetes": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "url_password",
                        "password"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "api_endpoint",
                        "endpoint"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "api_endpoint"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "endpoint"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "url_username",
                        "username"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module can manage Kubernetes resources on an existing cluster using the Kubernetes server API. Users can specify in-line API data, or specify an existing Kubernetes YAML file. Currently, this module, Only supports HTTP Basic Auth Only supports 'strategic merge' for update, http://goo.gl/fCPYxT SSL certs are not working, use 'validate_certs=off' to disable",
            "properties": {
              "username": {
                "type": "string"
              },
              "url_password": {
                "type": "string"
              },
              "endpoint": {
                "type": "string"
              },
              "certificate_authority_data": {
                "type": "string"
              },
              "inline_data": {
                "type": "string"
              },
              "insecure": {
                "type": "string"
              },
              "file_reference": {
                "type": "string"
              },
              "api_endpoint": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "url_username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "nxos_ntp_auth": {
            "required": [
              "key_id",
              "md5string"
            ],
            "type": "object",
            "description": "Manages NTP authentication.",
            "properties": {
              "auth_type": {
                "type": "string"
              },
              "trusted_key": {
                "type": "string"
              },
              "md5string": {
                "type": "string"
              },
              "authentication": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "key_id": {
                "type": "string"
              }
            }
          },
          "win_regedit": {
            "required": [
              "key",
              "value"
            ],
            "type": "object",
            "description": "Add, Edit, or Remove Registry Keys and Values using ItemProperties Cmdlets",
            "properties": {
              "datatype": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "key": {
                "type": "string"
              }
            }
          },
          "mysql_db": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "db"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "db"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Add or remove MySQL databases from a remote host.",
            "properties": {
              "target": {
                "type": "string"
              },
              "encoding": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "quick": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "collation": {
                "type": "string"
              },
              "single_transaction": {
                "type": "string"
              }
            }
          },
          "pear": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Manage PHP packages with the pear package manager.",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "pn_trunk": {
            "required": [
              "pn_name",
              "state"
            ],
            "type": "object",
            "description": "Execute trunk-create or trunk-delete command.\nTrunks can be used to aggregate network links at Layer 2 on the local switch. Use this command to create a new trunk.",
            "properties": {
              "pn_name": {
                "type": "string"
              },
              "pn_unkown_ucast_level": {
                "type": "string"
              },
              "pn_lacp_fallback_timeout": {
                "type": "string"
              },
              "pn_lacp_timeout": {
                "type": "string"
              },
              "pn_host": {
                "type": "string"
              },
              "pn_port_macaddr": {
                "type": "string"
              },
              "pn_lacp_fallback": {
                "type": "string"
              },
              "pn_routing": {
                "type": "string"
              },
              "pn_mirror_receive": {
                "type": "string"
              },
              "pn_egress_rate_limit": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pn_ports": {
                "type": "string"
              },
              "pn_broadcast_level": {
                "type": "string"
              },
              "pn_cliswitch": {
                "type": "string"
              },
              "pn_loopback": {
                "type": "string"
              },
              "pn_unkown_mcast_level": {
                "type": "string"
              },
              "pn_speed": {
                "type": "string"
              },
              "pn_edge_switch": {
                "type": "string"
              },
              "pn_jumbo": {
                "type": "string"
              },
              "pn_clipassword": {
                "type": "string"
              },
              "pn_cliusername": {
                "type": "string"
              },
              "pn_lacp_mode": {
                "type": "string"
              },
              "pn_loopvlans": {
                "type": "string"
              },
              "pn_lacp_priority": {
                "type": "string"
              },
              "pn_pause": {
                "type": "string"
              },
              "pn_description": {
                "type": "string"
              }
            }
          },
          "win_find": {
            "required": [
              "paths"
            ],
            "type": "object",
            "description": "Return a list of files based on specified criteria.\nMultiple criteria are AND'd together.",
            "properties": {
              "paths": {
                "type": "array"
              },
              "file_type": {
                "type": "string"
              },
              "checksum_algorithm": {
                "type": "string"
              },
              "age": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "age_stamp": {
                "type": "string"
              },
              "patterns": {
                "type": "string"
              },
              "get_checksum": {
                "type": "string"
              },
              "use_regex": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "hidden": {
                "type": "string"
              },
              "size": {
                "type": "string"
              }
            }
          },
          "replace": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "dest",
                        "name",
                        "destfile"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "dest"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "destfile"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module will replace all instances of a pattern within a file.\nIt is up to the user to maintain idempotence by ensuring that the same pattern would never match any replacements made.",
            "properties": {
              "name": {
                "type": "string"
              },
              "dest": {
                "type": "string"
              },
              "others": {
                "type": "string"
              },
              "destfile": {
                "type": "string"
              },
              "replace": {
                "type": "string"
              },
              "regexp": {
                "type": "string"
              },
              "follow": {
                "type": "string"
              },
              "backup": {
                "type": "string"
              }
            }
          },
          "ovirt_host_networks": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Module to manage host networks in oVirt.",
            "properties": {
              "name": {
                "type": "string"
              },
              "labels": {
                "type": "array"
              },
              "check": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "save": {
                "type": "string"
              },
              "networks": {
                "type": "array"
              },
              "bond": {
                "type": "string"
              }
            }
          },
          "ios_system": {
            "type": "object",
            "description": "This module provides declarative management of node system attributes on Cisco IOS devices.  It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
            "properties": {
              "lookup_source": {
                "type": "string"
              },
              "domain_search": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "domain_name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "name_servers": {
                "type": "array"
              },
              "lookup_enabled": {
                "description": "Administrative control for enabling or disabling DNS lookups.  When this argument is set to True, lookups are performed and when it is set to False, lookups are not performed.",
                "$ref": "#/definitions/ansible_truth"
              }
            }
          },
          "rax_meta": {
            "type": "object",
            "description": "Manipulate metadata for Rackspace Cloud Servers",
            "properties": {
              "meta": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          },
          "swupd": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "bundle"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "manifest",
                        "release",
                        "version"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manages updates and bundles with the swupd bundle manager, which is used by the Clear Linux Project for Intel Architecture.",
            "properties": {
              "contenturl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "format": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "verify": {
                "type": "string"
              },
              "update": {
                "type": "string"
              },
              "bundle": {
                "type": "string"
              },
              "manifest": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "release": {
                "type": "string"
              },
              "versionurl": {
                "type": "string"
              }
            }
          },
          "infini_export": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "name",
                        "export",
                        "path"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "export"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "path"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              }
            ],
            "type": "object",
            "description": "This module creates, deletes or modifies NFS exports on Infinibox.",
            "properties": {
              "inner_path": {
                "type": "string"
              },
              "client_list": {
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "export": {
                "type": "string"
              },
              "filesystem": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          },
          "win_unzip": {
            "required": [
              "dest",
              "src"
            ],
            "type": "object",
            "description": "Unzips compressed files and archives. For extracting any compression types other than .zip, the PowerShellCommunityExtensions (PSCX) Module is required.  This module (in conjunction with PSCX) has the ability to recursively unzip files within the src zip file provided and also functionality for many other compression types. If the destination directory does not exist, it will be created before unzipping the file.  Specifying rm parameter will force removal of the src file after extraction.",
            "properties": {
              "dest": {
                "type": "string"
              },
              "src": {
                "type": "string"
              },
              "recurse": {
                "type": "string"
              },
              "creates": {
                "type": "string"
              },
              "rm": {
                "type": "string"
              }
            }
          },
          "a10_virtual_server": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "virtual_server_status",
                        "status"
                      ],
                      "type": "object"
                    }
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "virtual_server",
                        "vip",
                        "virtual"
                      ],
                      "type": "object"
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "required": [
                          "virtual_server"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "vip"
                        ],
                        "type": "object"
                      },
                      {
                        "required": [
                          "virtual"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "virtual_server_ip",
                        "ip",
                        "address"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Manage SLB (Server Load Balancing) virtual server objects on A10 Networks devices via aXAPIv2.",
            "properties": {
              "status": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "partition": {
                "type": "string"
              },
              "virtual_server_ports": {
                "type": "string"
              },
              "virtual": {
                "type": "string"
              },
              "vip": {
                "type": "string"
              },
              "virtual_server_status": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "virtual_server_ip": {
                "type": "string"
              },
              "virtual_server": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "vmware_cluster": {
            "required": [
              "cluster_name",
              "datacenter_name"
            ],
            "type": "object",
            "description": "Create VMware vSphere Cluster",
            "properties": {
              "cluster_name": {
                "type": "string"
              },
              "enable_ha": {
                "type": "string"
              },
              "enable_drs": {
                "type": "string"
              },
              "datacenter_name": {
                "type": "string"
              },
              "enable_vsan": {
                "type": "string"
              }
            }
          },
          "digital_ocean_sshkey": {
            "type": "object",
            "description": "Create/delete an SSH key.",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "ssh_pub_key": {
                "type": "string"
              }
            }
          },
          "nxos_aaa_server": {
            "required": [
              "state",
              "server_type"
            ],
            "type": "object",
            "description": "Manages AAA server global configuration",
            "properties": {
              "server_timeout": {
                "type": "string"
              },
              "server_type": {
                "type": "string"
              },
              "encrypt_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "deadtime": {
                "type": "string"
              },
              "directed_request": {
                "type": "string"
              },
              "global_key": {
                "type": "string"
              }
            }
          },
          "svc": {
            "required": [
              "name"
            ],
            "type": "object",
            "description": "Controls daemontools services on remote hosts using the svc utility.",
            "properties": {
              "name": {
                "type": "string"
              },
              "downed": {
                "type": "string"
              },
              "enabled": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "service_dir": {
                "type": "string"
              },
              "service_src": {
                "type": "string"
              }
            }
          },
          "dellos10_facts": {
            "type": "object",
            "description": "Collects a base set of device facts from a remote device that is running Dell OS10.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
            "properties": {
              "gather_subset": {
                "type": "string"
              }
            }
          },
          "dnsmadeeasy": {
            "required": [
              "domain",
              "account_secret",
              "account_key",
              "state"
            ],
            "type": "object",
            "description": "Manages DNS records via the v2 REST API of the DNS Made Easy service.  It handles records only; there is no manipulation of domains or monitor/account support yet. See: U(https://www.dnsmadeeasy.com/integration/restapi/)",
            "properties": {
              "domain": {
                "type": "string"
              },
              "record_name": {
                "type": "string"
              },
              "record_ttl": {
                "type": "string"
              },
              "account_secret": {
                "type": "string"
              },
              "account_key": {
                "type": "string"
              },
              "record_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "record_value": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              }
            }
          },
          "monit": {
            "required": [
              "state",
              "name"
            ],
            "type": "object",
            "description": "Manage the state of a program monitored via I(Monit)",
            "properties": {
              "state": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "timeout": {
                "type": "string"
              }
            }
          },
          "netapp_e_lun_mapping": {
            "required": [
              "volume_name",
              "state"
            ],
            "type": "object",
            "description": "Allows for the creation and removal of volume to host mappings for NetApp E-series storage arrays.",
            "properties": {
              "target": {
                "type": "string"
              },
              "api_username": {
                "type": "string"
              },
              "api_password": {
                "type": "string"
              },
              "target_type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "volume_name": {
                "type": "string"
              },
              "api_url": {
                "type": "string"
              },
              "validate_certs": {
                "type": "string"
              },
              "lun": {
                "type": "string"
              },
              "ssid": {
                "type": "string"
              }
            }
          },
          "datadog_monitor": {
            "required": [
              "app_key",
              "name",
              "state",
              "api_key"
            ],
            "type": "object",
            "description": "Manages monitors within Datadog\nOptions like described on http://docs.datadoghq.com/api/",
            "properties": {
              "notify_audit": {
                "type": "string"
              },
              "locked": {
                "type": "string"
              },
              "timeout_h": {
                "type": "string"
              },
              "tags": {
                "type": "string"
              },
              "thresholds": {
                "type": "string"
              },
              "silenced": {
                "type": "string"
              },
              "app_key": {
                "type": "string"
              },
              "notify_no_data": {
                "type": "string"
              },
              "renotify_interval": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "escalation_message": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "api_key": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "no_data_timeframe": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "azure_rm_virtualnetwork": {
            "allOf": [
              {
                "allOf": [
                  {
                    "not": {
                      "required": [
                        "address_prefixes_cidr",
                        "address_prefixes"
                      ],
                      "type": "object"
                    }
                  }
                ]
              }
            ],
            "type": "object",
            "description": "Create, update or delete a virtual networks. Allows setting and updating the available IPv4 address ranges and setting custom DNS servers. Use the azure_rm_subnet module to associate subnets with a virtual network.",
            "properties": {
              "dns_servers": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "resource_group": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "address_prefixes_cidr": {
                "type": "array"
              },
              "purge_dns_servers": {
                "type": "string"
              },
              "purge_address_prefixes": {
                "type": "string"
              },
              "address_prefixes": {
                "type": "array"
              }
            }
          },
          "nxos_igmp": {
            "type": "object",
            "description": "Manages IGMP global configuration configuration settings.",
            "properties": {
              "state": {
                "type": "string"
              },
              "enforce_rtr_alert": {
                "type": "string"
              },
              "restart": {
                "type": "string"
              },
              "flush_routes": {
                "type": "string"
              }
            }
          },
          "clc_server_snapshot": {
            "required": [
              "server_ids"
            ],
            "type": "object",
            "description": "An Ansible module to Create, Delete and Restore server snapshots in CenturyLink Cloud.",
            "properties": {
              "server_ids": {
                "type": "string"
              },
              "expiration_days": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "wait": {
                "type": "string"
              }
            }
          },
          "nxos_udld": {
            "type": "object",
            "description": "Manages UDLD global configuration params.",
            "properties": {
              "reset": {
                "type": "string"
              },
              "msg_time": {
                "type": "string"
              },
              "aggressive": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          },
          "cloudfront_facts": {
            "type": "object",
            "description": "Gets information about an AWS CloudFront distribution",
            "properties": {
              "list_streaming_distributions": {
                "type": "string"
              },
              "origin_access_identity_config": {
                "type": "string"
              },
              "list_origin_access_identities": {
                "type": "string"
              },
              "streaming_distribution_configuration": {
                "type": "string"
              },
              "web_acl_id": {
                "type": "string"
              },
              "invalidation": {
                "type": "string"
              },
              "domain_name_alias": {
                "type": "string"
              },
              "list_invalidations": {
                "type": "string"
              },
              "origin_access_identity_id": {
                "type": "string"
              },
              "list_distributions_by_web_acl_id": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "distribution_id": {
                "type": "string"
              },
              "origin_access_identity": {
                "type": "string"
              },
              "distribution_config": {
                "type": "string"
              },
              "all_lists": {
                "type": "string"
              },
              "invalidation_id": {
                "type": "string"
              },
              "list_distributions": {
                "type": "string"
              },
              "streaming_distribution": {
                "type": "string"
              },
              "distribution": {
                "type": "string"
              }
            }
          }
        }
      }
    ]
  },
  "definitions": {
    "ansible_number": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "string"
        }
      ]
    },
    "ansible_truth": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        {
          "enum": [
            "yes",
            "no",
            "Yes",
            "No",
            "YES",
            "NO",
            "on",
            "off",
            "On",
            "Off",
            "ON",
            "OFF",
            "1",
            "0",
            "true",
            "false",
            "True",
            "FalseTRUE",
            "FALSE"
          ],
          "type": "string"
        }
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "array"
}
