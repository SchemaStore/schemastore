{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "properties": {
    "custom_assertions_path": {
      "default": null,
      "description": "Location(s) where custom assertions will be loaded from.",
      "items": {
        "type": "string"
      },
      "type": ["null", "string", "array"]
    },
    "custom_commands_path": {
      "default": null,
      "description": "Location(s) where custom commands will be loaded from.",
      "items": {
        "type": "string"
      },
      "type": ["null", "string", "array"]
    },
    "default_reporter": {
      "default": "junit",
      "type": "string"
    },
    "desiredCapabilities": {
      "properties": {
        "browserName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "detailed_output": {
      "default": true,
      "description": "Set this to false if you'd like to only see the test case name displayed and pass/fail status.",
      "type": "boolean"
    },
    "disable_colors": {
      "default": false,
      "description": "Used to disable colored output in the terminal.",
      "type": "boolean"
    },
    "disable_error_log": {
      "default": false,
      "description": "Set this to true if you'd like to not display errors during the execution of the test (they are shown at the end always).",
      "type": "boolean"
    },
    "dotenv": {
      "description": "Configuration settings for the dotenv module - a zero-dependency module that loads environment variables from a .env file into process.env. More details on https://www.npmjs.com/package/dotenv",
      "type": "object"
    },
    "end_session_on_fail": {
      "default": true,
      "description": "End the session automatically when the test is being terminated, usually after a failed assertion.",
      "type": "boolean"
    },
    "exclude": {
      "default": null,
      "description": "An array of folders or file patterns to be skipped (relative to the main source folder).",
      "items": {
        "type": "string"
      },
      "type": ["null", "array"]
    },
    "filter": {
      "default": null,
      "description": "Folder or file pattern to be used when loading the tests. Files that don't match this pattern will be ignored.",
      "type": ["null", "string"]
    },
    "globals": {
      "description": "An object which will be made available on the main test api, throughout the test execution",
      "properties": {
        "abortOnAssertionFailure": {
          "default": true,
          "description": "This controls whether to abort the test execution when an assertion failed and skip the rest. It's being used in waitFor commands and expect assertions",
          "type": "boolean"
        },
        "abortOnElementLocateError": {
          "default": false,
          "description": "This controls whether to abort the test execution when an element cannot be located; an error is logged in all cases, but this also enables skipping the rest of the testcase; It's being used in element commands such as .click() or .getText()",
          "type": "boolean"
        },
        "asyncHookTimeout": {
          "default": 10000,
          "description": "Controls the timeout value for async hooks. Expects the done() callback to be invoked within this time or an error is thrown",
          "type": "integer"
        },
        "customReporterCallbackTimeout": {
          "default": 20000,
          "description": "Controls the timeout value for when executing the global async reporter. Expects the done() callback to be invoked within this time or an error is thrown",
          "type": "integer"
        },
        "reporter": {},
        "retryAssertionTimeout": {
          "default": 5000,
          "description": "Automatically retrying failed assertions - You can tell Nightwatch to automatically retry failed assertions until a given timeout is reached, before the test runner gives up and fails the test.",
          "type": "integer"
        },
        "suppressWarningsOnMultipleElementsReturned": {
          "default": false,
          "description": "By default a warning is printed if multiple elements are found using the given locate strategy and selector; set this to true to suppress those warnings",
          "type": "boolean"
        },
        "throwOnMultipleElementsReturned": {
          "default": false,
          "description": "This will cause waitFor commands on elements to throw an error if multiple elements are found using the given locate strategy and selector",
          "type": "boolean"
        },
        "unitTestsTimeout": {
          "default": 2000,
          "description": "Controls the timeout value for when running async unit tests. Expects the done() callback to be invoked within this time or an error is thrown",
          "type": "integer"
        },
        "waitForConditionPollInterval": {
          "default": 500,
          "description": "This will overwrite the default polling interval (currently 500ms) for waitFor commands and expect assertions that use retry",
          "type": "integer"
        },
        "waitForConditionTimeout": {
          "default": 5000,
          "description": "Default timeout value in milliseconds for waitFor commands and implicit waitFor value for expect assertions",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "globals_path": {
      "default": null,
      "description": "Location of an external globals module which will be loaded and made available to the test as a property globals on the main client instance.",
      "type": ["null", "string"]
    },
    "launch_url": {
      "default": "",
      "description": "A url which can be used later in the tests as the main url to load.",
      "type": "string"
    },
    "live_output": {
      "default": false,
      "description": "Used when running in parallel to determine if the output should be collected and displayed at the end.",
      "type": "boolean"
    },
    "log_screenshot_data": {
      "default": false,
      "description": "Used to enable showing the Base64 image data in the (verbose) log when taking screenshots.",
      "type": "boolean"
    },
    "output": {
      "default": true,
      "description": "Used to disable terminal output completely.",
      "type": "boolean"
    },
    "output_folder": {
      "default": "tests_output",
      "description": "The location where the JUnit XML report files will be saved. Set this to false if you want to disable XML reporting",
      "type": "string"
    },
    "output_timestamp": {
      "default": false,
      "description": "Set this to true if you'd like to see timestamps next to the logging output",
      "type": "boolean"
    },
    "page_objects_path": {
      "default": null,
      "description": "Location(s) where page object files will be loaded from.",
      "type": ["null", "string", "array"]
    },
    "parallel_mode": {
      "default": false,
      "type": "boolean"
    },
    "parallel_process_delay": {
      "default": 10,
      "description": "Used when running in parallel to specify the delay (in milliseconds) between starting the child processes",
      "type": "integer"
    },
    "persist_globals": {
      "default": false,
      "description": "Persist the same globals object between runs or have a (deep) copy of it per each test; this can be useful when persisting data between test suites is needed, such as a cookie or session information",
      "type": "boolean"
    },
    "report_prefix": {
      "default": "",
      "type": "string"
    },
    "screenshots": {
      "default": false,
      "description": "Take error and failure screenshots during test execution",
      "type": "boolean"
    },
    "selenium": {
      "description": "An object containing Selenium Server related configuration options",
      "properties": {
        "check_process_delay": {
          "default": 500,
          "type": "integer"
        },
        "cli_args": {
          "type": ["object", "array"]
        },
        "log_path": {
          "default": "",
          "type": ["string", "boolean"]
        },
        "max_status_poll_tries": {
          "default": 15,
          "type": "integer"
        },
        "port": {},
        "server_path": {
          "default": null,
          "type": ["null", "string"]
        },
        "start_process": {
          "default": false,
          "type": "boolean"
        },
        "status_poll_interval": {
          "default": 200,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "silent": {
      "default": true,
      "description": "set to false if you want to show the extended http traffic command logs from the WebDriver server.",
      "type": "boolean"
    },
    "skip_testcases_on_fail": {
      "description": "Skip the remaining test cases from the current test suite, when one test case fails."
    },
    "skipgroup": {
      "default": "",
      "description": "Skip a group of tests (a subfolder); can be a list of comma-separated values (no space)",
      "type": "string"
    },
    "skiptags": {
      "default": "",
      "description": "Skip tests by tag name; can be a list of comma-separated values (no space)",
      "type": "string"
    },
    "src_folders": {
      "default": null,
      "description": "A string or array of folders (excluding subfolders) where the tests are located.",
      "items": {
        "type": "string"
      },
      "type": ["null", "string", "array"]
    },
    "start_session": {
      "default": true,
      "description": "Whether or not to automatically start the Selenium/WebDriver session. If running unit tests, this should be set tot false.",
      "type": "boolean"
    },
    "sync_test_names": {
      "default": true,
      "type": "boolean"
    },
    "test_runner": {
      "default": "default",
      "description": "Specifies which test runner to use: default|mocha",
      "type": "string"
    },
    "test_settings": {
      "type": "object"
    },
    "test_workers": {
      "default": false,
      "description": "Whether or not to run individual test files in parallel.",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "node_options": {
          "description": "Pass node arguments to individual workers (all of the process.execArgv using \"auto\" or selectively pass node arguments via [\"--inspect\"])",
          "items": {
            "type": "string"
          },
          "type": ["string", "array"]
        },
        "workers": {
          "description": "Automatically compute the number of workers based on CPU cores with \"auto\" or manually specify the number of workers",
          "type": ["string", "number"]
        }
      },
      "type": ["boolean", "object"]
    },
    "unit_tests_mode": {
      "default": false,
      "type": "boolean"
    },
    "use_xpath": {
      "default": false,
      "description": "Use xpath as the default locator strategy",
      "type": "boolean"
    },
    "webdriver": {
      "description": "Defines options used to connect to the WebDriver/Selenium server",
      "properties": {
        "access_key": {},
        "check_process_delay": {
          "default": 100,
          "description": "Time to wait (in ms) before starting to check the Webdriver server is up and running",
          "type": "integer"
        },
        "cli_args": {
          "type": ["object", "array"]
        },
        "default_path_prefix": {},
        "host": {},
        "log_path": {
          "type": "string"
        },
        "max_status_poll_tries": {
          "default": 10,
          "description": "Maximum number of ping status check attempts before returning a timeout error",
          "type": "integer"
        },
        "port": {},
        "process_create_timeout": {
          "default": 120000,
          "description": "The entire time (in ms) to wait for the Node.js process to be created and running (default is 2 min), including spawning the child process and checking the status",
          "type": "integer"
        },
        "proxy": {},
        "server_path": {
          "default": null,
          "type": ["null", "string"]
        },
        "ssl": {},
        "start_process": {
          "default": false,
          "type": "boolean"
        },
        "status_poll_interval": {
          "default": 200,
          "description": "Interval (in ms) to use between status ping checks when checking if the Webdriver server is up and running",
          "type": "integer"
        },
        "timeout_options": {
          "properties": {
            "retry_attempts": {},
            "timeout": {}
          },
          "type": "object"
        },
        "use_legacy_jsonwire": {},
        "username": {}
      },
      "type": "object"
    }
  },
  "type": "object"
}
