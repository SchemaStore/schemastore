{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Every plugin has a manifest.json file providing important information: name, description, version, author",
  "properties": {
    "actions": {
      "type": "array",
      "description": "Specifies an array of actions. A plugin can indeed have one or multiple actions. For example, the Game Capture plugin has six actions: Scene, Record, Screenshot, Flashback Recording, Stream, Live Commentary",
      "items": {
        "title": "action",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The unique identifier of the action. It must be a uniform type identifier (UTI) that contains only lowercase alphanumeric characters (a-z, 0-9), hyphen (-), and period (.). The string must be in reverse-DNS format. For example, if your domain is elgato.com and you create a plugin named Hello with the action My Action, you could assign the string com.elgato.hello.myaction as your action's Unique Identifier"
          },
          "icon": {
            "type": "string",
            "description": "The relative path to a PNG image without the .png extension. This image is displayed in the actions list. The PNG image should be a 20pt x 20pt image. You should provide @1x and @2x versions of the image. The Stream Deck application takes care of loading the appropriate version of the image. This icon is not required for actions not visible in the actions list (VisibleInActionsList set to false)"
          },
          "name": {
            "type": "string",
            "description": "The name of the action. This string is visible to the user in the actions list"
          },
          "states": {
            "type": "array",
            "description": "Specifies an array of states. Each action can have one or more states. For example, the Hotkey action has a single state. However, the Game Capture Record action has two states, active and inactive. The state of an action, supporting multiple states, is always automatically toggled whenever the action's key is released (after being pressed). In addition, it is possible to force the action to switch its state by sending a setState event",
            "items": {
              "title": "state",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "image": {
                  "type": "string",
                  "description": "The default image for the state. When a user sets a custom image on the primary state, Stream Deck will automatically set the secondary state to a darker version of the same icon"
                },
                "multiActionImage": {
                  "type": "string",
                  "description": "This can be used if you want to provide a different image for the state when the action is displayed in a Multi-Action"
                },
                "name": {
                  "type": "string",
                  "description": "Displayed in the dropdown menu in the Multi-action. For example, the Game Capture Record action has Start and Stop. If the name is not provided, the state will not appear in the Multi-Action"
                },
                "title": {
                  "type": "string",
                  "description": "Default title"
                },
                "showTitle": {
                  "type": "boolean",
                  "description": "Boolean to hide/show the title",
                  "default": true
                },
                "titleColor": {
                  "type": "string",
                  "description": "Default title color"
                },
                "titleAlignment": {
                  "type": "string",
                  "enum": [ "top", "bottom", "middle" ],
                  "description": "Default title vertical alignment"
                },
                "fontFamily": {
                  "type": "string",
                  "enum": [ "Arial", "Arial Black", "Comic Sans MS", "Courier", "Courier New", "Georgia", "Impact", "Microsoft Sans Serif", "Symbol", "Tahoma", "Times New Roman", "Trebuchet MS", "Verdana", "Webdings", "Wingdings" ],
                  "description": "Default font family for the title"
                },
                "fontStyle": {
                  "type": "string",
                  "enum": [ "Regular", "Bold", "Italic", "Bold Italic" ],
                  "description": "Default font style for the title. Note that some fonts might not support all values"
                },
                "fontSize": {
                  "type": "string",
                  "description": "Default font size for the title"
                },
                "fontUnderline": {
                  "type": "boolean",
                  "description": "Boolean to have an underline under the title. False by default",
                  "default": false
                }
              },
              "required": [ "image" ]
            }
          },
          "propertyInspectorPath": {
            "type": "string",
            "description": "This can override PropertyInspectorPath member from the plugin if you wish to have a different PropertyInspectorPath based on the action. The relative path to the Property Inspector HTML file if your plugin wants to display some custom settings in the Property Inspector"
          },
          "supportedInMultiActions": {
            "type": "boolean",
            "description": "Boolean to prevent the action from being used in a Multi Action",
            "default": true
          },
          "tooltip": {
            "type": "string",
            "description": "The string is displayed as a tooltip when the user leaves the mouse over your action in the actions list"
          },
          "disableCaching": {
            "type": "boolean",
            "description": "Boolean to disable image caching",
            "default": false
          },
          "visibleInActionList": {
            "type": "boolean",
            "description": "Boolean to hide the action in the actions list. This can be used for a plugin that only works with a specific profile",
            "default": true
          },
          "userTitleEnabled": {
            "type": "boolean",
            "description": "Boolean to disable the title field for users in the property inspector",
            "default": true
          },
          "controllers": {
            "type": "array",
            "description": "Specifies an array of controllers. Valid values include Keypad and Encoder",
            "items": {
              "type": "string",
              "enum": [ "Keypad", "Encoder" ],
              "default": [ "Keypad" ]
            }
          },
          "encoder": {
            "title": "encoder",
            "type": "object",
            "additionalProperties": false,
            "description": "An object containing encoder information. The Encoder property is used to describe and configure the dial and display segment on Stream Deck +",
            "properties": {
              "background": {
                "type": "string",
                "description": "The default background image for the encoders touch display slot"
              },
              "icon": {
                "type": "string",
                "description": "The default icon found in the property inspector, dial stack image, and the layout. If no icon is set Stream Deck will use the action list icon"
              },
              "layout": {
                "type": "string",
                "description": "A string containing the name of a built-in layout or the partial path to a JSON file with a custom layout definition. You can dynamically change the layout with setFeedbackLayout event. The default layout is the Icon Layout ($X1)"
              },
              "stackColor": {
                "type": "string",
                "description": "The color that will be used in the dial stack as background color"
              },
              "triggerDescription": {
                "title": "triggerDescription",
                "type": "object",
                "additionalProperties": false,
                "description": "An object containing strings to describe actions in the property inspector. Rotate, Push, Touch and Long Touch",
                "properties": {
                  "rotate": {
                    "type": "string",
                    "description": "Describe the rotation"
                  },
                  "push": {
                    "type": "string",
                    "description": "Describe the encoder push"
                  },
                  "touch": {
                    "type": "string",
                    "description": "Describe the touch"
                  },
                  "longTouch": {
                    "type": "string",
                    "description": "Describe the long touch"
                  }
                }
              }
            }

          }
        },
        "required": [ "uuid", "icon", "name", "states" ]
      }
    },
    "author": {
      "type": "string",
      "description": "The author of the plugin. This string is displayed to the user in the Stream Deck store"
    },
    "codePath": {
      "type": "string",
      "description": "The relative path to the HTML/binary file containing the plugin code"
    },
    "description": {
      "type": "string",
      "description": "Provides a general description of what the plugin does. This string is displayed to the user in the Stream Deck store"
    },
    "icon": {
      "type": "string",
      "description": "The relative path to a PNG image without the .png extension. This image is displayed in the Plugin Store window. The PNG image should be a 72pt x 72pt image. You should provide @1x and @2x (144pt x 144pt) versions of the image. The Stream Deck application takes care of loading the appropriate version of the image"
    },
    "name": {
      "type": "string",
      "description": "The name of the plugin. This string is displayed to the user in the Stream Deck store"
    },
    "version": {
      "type": "string",
      "description": "Plugin's semantic version (1.0.0)"
    },
    "sdkVersion": {
      "type": "number",
      "description": "The current SDK version is 2"
    },
    "os": {
      "type": "array",
      "description": "The list of operating systems & versions supported by the plugin",
      "items": {
        "title": "os",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "platform": {
            "type": "string",
            "enum": [ "mac", "windows" ],
            "description": "The name of the platform, mac or windows"
          },
          "minimumVersion": {
            "type": "string",
            "description": "The minimum version of the operating system that the plugin requires. For Windows 10, you can use 10. For macOS 10.11, you can use 10.11"
          }
        },
        "required": [ "platform", "minimumVersion" ]
      }
    },
    "software": {
      "title": "software",
      "type": "object",
      "additionalProperties": false,
      "description": "Indicates which version of the Stream Deck application is required to install the plugin",
      "properties": {
        "minimumVersion": {
          "type": "string",
          "description": "The minimum version of the Stream deck application that the plugin requires. This value should be set to support Stream Deck 5.0 or later"
        }
      },
      "required": [ "minimumVersion" ]
    },
    "category": {
      "type": "string",
      "description": "The name of the custom category in which the actions should be listed. This string is visible to the user in the actions list. If you don't provide a category, the actions will appear inside a Custom category"
    },
    "categoryIcon": {
      "type": "string",
      "description": "The relative path to a PNG image without the .png extension. This image is used in the actions list. The PNG image should be a 28pt x 28pt image. You should provide @1x and @2x versions of the image. The Stream Deck application takes care of loading the appropriate version of the image"
    },
    "codePathMac": {
      "type": "string",
      "description": "Override CodePath for macOS"
    },
    "codePathWin": {
      "type": "string",
      "description": "Override CodePath for Windows"
    },
    "profiles": {
      "type": "array",
      "description": "Specifies an array of profiles. A plugin can have one or more profiles proposed to the user on installation. This lets you create full screen plugins",
      "items": {
        "title": "profile",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The filename of the profile"
          },
          "deviceType": {
            "type": "integer",
            "enum": [ 0, 1, 2, 3, 4, 5, 6, 7 ],
            "description": "Type of device. Possible values are kESDSDKDeviceType_StreamDeck (0), kESDSDKDeviceType_StreamDeckMini (1), kESDSDKDeviceType_StreamDeckXL (2), kESDSDKDeviceType_StreamDeckMobile (3), kESDSDKDeviceType_CorsairGKeys (4), kESDSDKDeviceType_StreamDeckPedal (5), kESDSDKDeviceType_CorsairVoyager (6), and kESDSDKDeviceType_StreamDeckPlus (7)"
          },
          "readonly": {
            "type": "boolean",
            "description": "Boolean to mark the profile as read-only",
            "default": false
          },
          "dontAutoSwitchWenInstalled": {
            "type": "boolean",
            "description": "Boolean to prevent Stream Deck from automatically switching to this profile when installed",
            "default": false
          }
        },
        "required": [ "name", "deviceType" ]
      }
    },
    "propertyInspectorPath": {
      "type": "string",
      "description": "The relative path to the Property Inspector HTML file if your plugin wants to display some custom settings in the Property Inspector. If missing, the plugin will have an empty Property Inspector"
    },
    "defaultWindowSize": {
      "type": "array",
      "description": "Specify the default window size when a Javascript plugin or Property Inspector opens a window using window.open(). The default value is [500, 650]",
      "items": {
        "type": "integer"
      }
    },
    "applicationsToMonitor": {
      "type": "array",
      "description": "List of application identifiers to monitor (applications launched or terminated). See the applicationDidLaunch and applicationDidTerminate events",
      "items": {
        "title": "applicationToMonitor",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mac": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "windows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "url": {
      "type": "string",
      "description": "A site to provide more information about the plugin"
    }
  },
  "required": [ "actions", "author", "codePath", "description", "icon", "name", "version", "sdkVersion", "os", "software" ],
  "title": "Elgato Streamdeck manifest file",
  "type": "object",
  "additionalProperties": false
}
