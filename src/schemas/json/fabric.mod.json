{
	"$schema": "http://json-schema.org/draft-07/schema",
	"type": "object",
	"properties": {
		"id": {
			"type": "string",
			"pattern": "^[a-z][a-z0-9-_]{1,63}$",
			"description": "The mod identifier"
		},
		"version": {
			"type": "string",
			"description": "The mod version"
		},
		"schemaVersion": {
			"type": "integer",
			"description": "The version of the mod.json file",
			"const": 1
		},
		"environment": {
			"$ref": "#/definitions/environment"
		},
		"entrypoints": {
			"type": "object",
			"properties": {
				"main": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entrypoint"
					},
					"description": "The entrypoint for all environments (classes must implement ModInitializer)"
				},
				"client": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entrypoint"
					},
					"description": "The entrypoint for the client environment (classes must implement ClientModInitializer)"
				},
				"server": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entrypoint"
					},
					"description": "The entrypoint for the server environment (classes must implement DedicatedServerModInitializer)"
				}
			},
			"description": "The entrypoints for the mod"
		},
		"jars": {
			"type": "array",
			"description": "Contains an array of nestedJar objects",
			"items": {
				"$ref": "#/definitions/nestedJar"
			}
		},
		"languageAdapters": {
			"type": "object",
			"description": "A string→string dictionary, connecting namespaces to LanguageAdapter implementations",
			"additionalProperties": {
				"type": "string"
			}
		},
		"mixins": {
			"type": "array",
			"items": {
				"oneOf": [
					{
						"type": "string",
						"description": "Path to mixin file from root of the JAR"
					},
					{
						"type": "object",
						"properties": {
							"config": {
								"type": "string",
								"description": "Path to mixin file from root of the JAR"
							},
							"environment": {
								"$ref": "#/definitions/environment"	
							}
						}
					}
				]
			}
		},
		"depends": {
			"type": "object",
			"description": "id→versionRange map for dependencies. Failure to meet these causes a hard failure",
			"additionalProperties": {
				"$ref": "#/definitions/versionRange"
			}
		},
		"recommends": {
			"type": "object",
			"description": "id→versionRange map for dependencies. Failure to meet these causes a soft failure (warning)",
			"additionalProperties": {
				"$ref": "#/definitions/versionRange"
			}
		},
		"suggests": {
			"type": "object",
			"description": "id→versionRange map for dependencies. Are not matched and are mainly used as metadata",
			"additionalProperties": {
				"$ref": "#/definitions/versionRange"
			}
		},
		"conflicts": {
			"type": "object",
			"description": "id→versionRange map for dependencies. A successful match causes a soft failure (warning)",
			"additionalProperties": {
				"$ref": "#/definitions/versionRange"
			}
		},
		"breaks": {
			"type": "object",
			"description": "id→versionRange map for dependencies. A successful match causes a hard failure",
			"additionalProperties": {
				"$ref": "#/definitions/versionRange"
			}
		},
		"name": {
			"type": "string",
			"description": "Name of the mod"
		},
		"description": {
			"type": "string",
			"description": "Description of the mod"
		},
		"authors": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/person"
			},
			"description": "The direct authorship information"
		},
		"contributors": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/person"
			},
			"description": "Contributors to this mod"
		},
		"contact": {
			"$ref": "#/definitions/contactInfo",
			"description": "Contact infomation for the mod"
		},
		"license": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			],
			"description": "The license the mod uses"
		},
		"icon": {
			"oneOf": [
				{
					"type": "string",
					"description": "The path to a single .PNG file from the root of the JAR"
				},
				{
					"type": "object",
					"description": "A string→string dictionary, where the keys conform to widths of each PNG file, and the values are said files' paths",
					"additionalProperties": {
						"type": "string",
						"description": "The path to a single .PNG file from the root of the JAR"
					}
				}
			]
		},
		"custom": {
			"type": "object",
			"description": "A map of namespace:id→value for custom data fields."
		}

	},
	"required": [
		"id",
		"version",
		"schemaVersion"
	],
	"definitions": {
		"entrypoint": {
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"adapter": {
							"type": "string",
							"description": "The language adapter to use",
							"default": "default"
						},
						"value": {
							"type": "string",
							"description": "The entrypoint function or class"
						}
					},
					"required": [
						"value"
					]
				},
				{
					"type": "string",
					"description": "The entrypoint functions or class"
				}
			]
		},
		"contactInfo": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string",
					"description": "Contact e-mail pertaining to the mod"
				},
				"irc": {
					"type": "string",
					"description": "IRC channel pertaining to the mod. Must be of a valid URL format"
				},
				"homepage": {
					"type": "string",
					"description": "Project or user homepage. Must be a valid HTTP/HTTPS address"
				},
				"issues": {
					"type": "string",
					"description": "Project issue tracker. Must be a valid HTTP/HTTPS address"
				},
				"sources": {
					"type": "string",
					"description": "Project source code repository. Must be a valid URL"
				}
			}
		},
		"environment": {
			"type": "string",
			"enum": [
				"*",
				"client",
				"server"
			],
			"description": "The environment where this is applied"
		},
		"nestedJar": {
			"type": "object",
			"properties": {
				"file": {
					"type": "string",
					"description": "A string value pointing to a path from the root of the JAR to a nested JAR which should be loaded alongside the outer mod JAR"
				}
			},
			"required": [
				"file"
			]
		},
		"person": {
			"oneOf": [
				{
					"type": "string",
					"description": "The name of the person"
				},
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string",
							"description": "The name of the person"
						},
						"contact": {
							"description": "Contact information for the person",
							"$ref": "#/definitions/contactInfo"
						}
					},
					"required": [
						"name"
					]
				}
			]
		},
		"versionRange": {
			"type": "string"
		}
	}
}
