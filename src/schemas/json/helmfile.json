{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "environment": {
      "properties": {
        "kubeContext": {
          "type": "string"
        },
        "missingFileHandler": {
          "$ref": "#/definitions/missingFileHandler"
        },
        "secrets": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "values": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/map"
              }
            ]
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "helmDefaults": {
      "description": "Default values to set for args along with dedicated keys that can be set by contributors, cli args take precedence over these.",
      "properties": {
        "args": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              }
            ]
          },
          "type": "array"
        },
        "cleanupOnFail": {
          "type": "boolean"
        },
        "createNamespace": {
          "type": "boolean"
        },
        "force": {
          "type": "boolean"
        },
        "historyMax": {
          "default": 10,
          "description": "limit the maximum number of revisions saved per release. Use 0 for no limit.",
          "type": "number"
        },
        "kubeContext": {
          "type": "string"
        },
        "recreatePods": {
          "type": "boolean"
        },
        "tillerNamespace": {
          "type": "string"
        },
        "tillerless": {
          "type": "boolean"
        },
        "timeout": {
          "type": "number"
        },
        "tls": {
          "type": "boolean"
        },
        "tlsCACert": {
          "type": "string"
        },
        "tlsCert": {
          "type": "string"
        },
        "tlsKey": {
          "type": "string"
        },
        "verify": {
          "type": "boolean"
        },
        "wait": {
          "type": "boolean"
        },
        "waitForJobs": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "helmfile": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "properties": {
            "path": {
              "type": "string"
            },
            "selectors": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            "values": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "properties": {
                      "key1": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            }
          },
          "required": ["path"],
          "type": "object"
        }
      ]
    },
    "hook": {
      "properties": {
        "args": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": "array"
        },
        "command": {
          "type": "string"
        },
        "events": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "showlogs": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "map": {
      "patternProperties": {
        "[a-zA-Z\\d_-]+": {
          "anyOf": [
            {
              "type": "object"
            },
            {
              "type": "boolean"
            },
            {
              "type": "string"
            },
            {
              "type": "array"
            },
            {
              "type": "null"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "type": "object"
    },
    "missingFileHandler": {
      "enum": ["Error", "Warn"],
      "type": "string"
    },
    "release": {
      "properties": {
        "atomic": {
          "type": "boolean"
        },
        "chart": {
          "type": "string"
        },
        "cleanupOnFail": {
          "default": false,
          "type": "boolean"
        },
        "condition": {
          "type": "string"
        },
        "createNamespace": {
          "type": "boolean"
        },
        "devel": {
          "default": false,
          "description": "if used with charts museum allows to pull unstable charts for deployment, for example: if 1.2.3 and 1.2.4-dev versions exist and set to true, 1.2.4-dev will be pulled (default false)",
          "type": "boolean"
        },
        "disableOpenAPIValidation": {
          "type": "boolean"
        },
        "disableValidation": {
          "type": "boolean"
        },
        "disableValidationOnInstall": {
          "type": "boolean"
        },
        "force": {
          "type": "boolean"
        },
        "historyMax": {
          "type": "number"
        },
        "hooks": {
          "items": {
            "$ref": "#/definitions/hook"
          },
          "type": "array"
        },
        "installed": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "kubeContext": {
          "type": "string"
        },
        "labels": {
          "$ref": "#/definitions/map"
        },
        "missingFileHandler": {
          "$ref": "#/definitions/missingFileHandler",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "examples": ["default"],
          "type": "string"
        },
        "recreatePods": {
          "type": "boolean"
        },
        "secrets": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "set": {
          "items": {
            "anyOf": [
              {
                "properties": {
                  "file": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "values": {
                    "items": {
                      "anyOf": [
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            ]
          },
          "type": "array"
        },
        "skipDeps": {
          "default": false,
          "description": "When set to `true`, skips running `helm dep up` and `helm dep build` on this release's chart.",
          "type": "boolean"
        },
        "tillerNamespace": {
          "type": "string"
        },
        "tillerless": {
          "type": "boolean"
        },
        "timeout": {
          "type": "number"
        },
        "tls": {
          "type": "boolean"
        },
        "tlsCACert": {
          "type": "string"
        },
        "tlsCert": {
          "type": "string"
        },
        "tlsKey": {
          "type": "string"
        },
        "values": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/map"
              }
            ]
          },
          "type": "array"
        },
        "verify": {
          "type": "boolean"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "integer"
            }
          ]
        },
        "wait": {
          "type": "boolean"
        },
        "waitForJobs": {
          "type": "boolean"
        }
      },
      "required": ["name", "chart"],
      "type": "object"
    },
    "repository": {
      "properties": {
        "caFile": {
          "type": "string"
        },
        "certFile": {
          "type": "string"
        },
        "keyFile": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "oci": {
          "type": "boolean"
        },
        "passCredentials": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    }
  },
  "properties": {
    "apiVersions": {
      "description": "Configure a fixed list of API versions to pass to 'helm template' via the --api-versions flag with the below:",
      "items": {
        "examples": ["example/v1"],
        "type": "string"
      },
      "type": "array"
    },
    "bases": {
      "items": {
        "anyOf": [
          {
            "type": "string"
          }
        ]
      },
      "type": "array"
    },
    "commonLabels": {
      "$ref": "#/definitions/map",
      "description": "these labels will be applied to all releases in a Helmfile. Useful in templating if you have a helmfile per environment or customer and don't want to copy the same label to each release",
      "type": "object"
    },
    "environments": {
      "default": {
        "default": {}
      },
      "description": "The list of environments managed by helmfile.",
      "examples": [
        {
          "default": {
            "values": []
          }
        }
      ],
      "patternProperties": {
        "[a-zA-Z\\d_-]+": {
          "$ref": "#/definitions/environment"
        }
      },
      "type": "object"
    },
    "helmBinary": {
      "description": "Path to alternative helm binary (--helm-binary)",
      "examples": ["path/to/helm3"],
      "type": "string"
    },
    "helmDefaults": {
      "$ref": "#/definitions/helmDefaults"
    },
    "helmfiles": {
      "items": {
        "$ref": "#/definitions/helmfile"
      },
      "type": "array"
    },
    "hooks": {
      "items": {
        "$ref": "#/definitions/hook"
      },
      "type": "array"
    },
    "missingFileHandler": {
      "$ref": "#/definitions/missingFileHandler"
    },
    "releases": {
      "description": "Helmfile runs various helm commands to converge the current state in the live cluster to the desired state defined here.",
      "items": {
        "$ref": "#/definitions/release"
      },
      "type": "array"
    },
    "repositories": {
      "items": {
        "$ref": "#/definitions/repository"
      },
      "type": "array"
    }
  },
  "title": "Helmfile config schema"
}
