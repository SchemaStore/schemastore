{
  "$schema": "https://json.schemastore.org/metaschema-draft-07-unofficial-strict.json",
  "$id": "https://json.schemastore.org/air-verse-air.json",
  "title": "The JSON schema for the air-verse/air project",
  "type": "object",
  "properties": {
    "$schema": {
      "title": "",
      "description": "",
      "type": "string"
    },
    "root": {
      "title": "Working Root",
      "description": "Working directory, . or absolute path, please note that the directories following must be under root",
      "type": "string"
    },
    "tmp_dir": {
      "title": "Temporary Directory",
      "description": "Temporary directory for air",
      "type": "string"
    },
    "testdata_dir": {
      "title": "Test Data Directory",
      "description": "",
      "type": "string"
    },
    "build": {
      "title": "Build Configuration",
      "description": "",
      "$ref": "#/definitions/BuildConfig"
    },
    "color": {
      "title": "Color Configuration",
      "description": "",
      "$ref": "#/definitions/ColorConfig"
    },
    "log": {
      "title": "Log Configuration",
      "description": "",
      "$ref": "#/definitions/LogConfig"
    },
    "misc": {
      "title": "Misc Configuration",
      "description": "",
      "$ref": "#/definitions/MiscConfig"
    },
    "screen": {
      "title": "Screen Configuration",
      "description": "",
      "$ref": "#/definitions/ScreenConfig"
    },
    "proxy": {
      "title": "Proxy Configuration",
      "description": "",
      "$ref": "#/definitions/ProxyConfig"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "BuildConfig": {
      "type": "object",
      "properties": {
        "pre_cmd": {
          "title": "Pre Command",
          "description": "Array of commands to run before each build",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "cmd": {
          "title": "Command",
          "description": "Just plain old shell command. You could use 'make' as well",
          "type": "string"
        },
        "post_cmd": {
          "title": "Post Command",
          "description": "Array of commands to run after ^C",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "bin": {
          "title": "Binary Path",
          "description": "Binary file yields from 'cmd'",
          "type": "string"
        },
        "full_bin": {
          "title": "Full Binary Path",
          "description": "Customize binary, can setup environment variables when run your app",
          "type": "string"
        },
        "args_bin": {
          "title": "Binary Arguments",
          "description": "Add additional arguments when running binary (bin/full_bin)",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "log": {
          "title": "Log Path",
          "description": "This log file is placed in your tmp_dir",
          "type": "string"
        },
        "include_ext": {
          "title": "Include Extensions",
          "description": "Watch these filename extensions",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "exclude_dir": {
          "title": "Exclude Directories",
          "description": "Ignore these filename extensions or directories",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "include_dir": {
          "title": "Include Directories",
          "description": "Watch these directories if you specified",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "exclude_file": {
          "title": "Exclude Files",
          "description": "Exclude files",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "include_file": {
          "title": "Include Files",
          "description": "Watch these files",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "exclude_regex": {
          "title": "Exclude Regexes",
          "description": "Exclude specific regular expressions",
          "type":"array",
          "items": {
            "type": "string"
          }
        },
        "exclude_unchanged": {
          "title": "Exclude Unchanged",
          "description": "Exclude unchanged files",
          "type": "boolean"
        },
        "follow_symlink": {
          "title": "Follow Symbolic Links",
          "description": "Follow symlink for directories",
          "type": "boolean"
        },
        "poll": {
          "title": "Poll",
          "description": "Poll files for changes instead of using fsnotify",
          "type": "boolean"
        },
        "poll_interval": {
          "title": "Poll Interval",
          "description": "Poll interval (defaults to the minimum interval of 500ms)",
          "type": "integer"
        },
        "delay": {
          "title": "Delay",
          "description": "It's not necessary to trigger build each time file changes if it's too frequent",
          "type": "integer"
        },
        "stop_on_error": {
          "title": "Stop on Error",
          "description": "Stop running old binary when build errors occur",
          "type": "boolean"
        },
        "send_interrupt": {
          "title": "Send Interrupt",
          "description": "Send Interrupt signal before killing process (windows does not support this feature)",
          "type": "boolean"
        },
        "kill_delay": {
          "title": "Kill Delay",
          "description": "Delay after sending Interrupt signal",
          "type": "integer"
        },
        "rerun": {
          "title": "Rerun",
          "description": "Rerun binary or not",
          "type": "boolean"
        },
        "rerun_delay": {
          "title": "Rerun Delay",
          "description": "Delay after each execution",
          "type": "integer"
        }
      },
      "required": []
    },
    "ColorConfig": {
      "type": "object",
      "properties": {
        "main": {
          "title": "Main Color",
          "description": "Customize main part's color. If no color found, use the raw app log",
          "type": "string"
        },
        "watcher": {
          "title": "Watcher Color",
          "description": "Customize watcher part's color",
          "type": "string"
        },
        "build": {
          "title": "Build Color",
          "description": "Customize build part's color",
          "type": "string"
        },
        "runner": {
          "title": "Runner Color",
          "description": "Customize runner part's color",
          "type": "string"
        },
        "app": {
          "title": "App Color",
          "description": "Customize app part's color",
          "type": "string"
        }
      },
      "required": []
    },
    "LogConfig": {
      "type": "object",
      "properties": {
        "time": {
          "title": "Time",
          "description": "Show log time",
          "type": "boolean"
        },
        "main_only": {
          "title": "Main Only",
          "description": "Only show main log (silences watcher, build, runner)",
          "type": "boolean"
        },
        "silent": {
          "title": "Silent",
          "description": "Silence all logs produced by air",
          "type": "boolean"
        }
      },
      "required": []
    },
    "MiscConfig": {
      "type": "object",
      "properties": {
        "clean_on_exit": {
          "title": "Clean on Exit",
          "description": "Delete tmp directory on exit",
          "type": "boolean"
        }
      },
      "required": []
    },
    "ScreenConfig": {
      "type": "object",
      "properties": {
        "clear_on_rebuild": {
          "title": "Clear on Rebuild",
          "description": "Clear screen on rebuild",
          "type": "boolean"
        },
        "keep_scroll": {
          "title": "Keep Scroll",
          "description": "Keep scroll position after rebuild",
          "type": "boolean"
        }
      },
      "required": []
    },
    "ProxyConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enabled",
          "description": "Enable live-reloading on the browser",
          "type": "boolean"
        },
        "proxy_port": {
          "title": "Proxy Port",
          "description": "Port for proxy server",
          "type": "integer"
        },
        "app_port": {
          "title": "App Port",
          "description": "Port for your app",
          "type": "integer"
        }
      },
      "required": []
    }
  }
}
