{
  "$ref": "#/definitions/cc0b/full",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "2228": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of network nodes represented by this application",
        "type": "array",
        "items": {
          "$ref": "#/definitions/44ae/full"
        },
        "examples": [
          [
            {
              "network": "my_can_network_1"
            }
          ],
          [
            {
              "network": "my_can_network_1",
              "modeling-libraries": [
                "modeling/lib/1.dll",
                "${path_in_var}",
                "path/${name_in_var}"
              ]
            },
            {
              "network": "my_can_network_1",
              "lin-role": "master"
            },
            {
              "network": "my_can_network_1",
              "lin-role": ["master", "config-tester"]
            },
            {
              "network": "my_can_network_1",
              "database-node": {
                "database": "mydatabase",
                "node": "mynode"
              }
            }
          ]
        ]
      }
    },
    "3226": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Define to be passed to capl / vcdl.",
        "type": "string",
        "pattern": "^([a-zA-Z_]|([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\})[a-zA-Z0-9_]*(=((0|[1-9][0-9]*)|(\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\})|[Tt]rue|[Ff]alse))?$",
        "examples": [
          "mydefine1",
          "mydefine2",
          "mydefine_with_value=42",
          "${var_with_define_name}=${var_with_define_value}"
        ]
      }
    },
    "5642": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a dll or vmodule file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[vV][mM][oO][dD][uU][lL][eE]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "CANoeILNLVector.vmodule",
          "SomeIP_IL.vmodule",
          "AsrPDUIL2.vmodule",
          "OSEKNM01.vmodule",
          "DMOSEKNM.vmodule",
          "AsrNM30.vmodule",
          "AsrNM33.vmodule",
          "AsrUdpNm.vmodule",
          "AVB_IL.vmodule",
          "CANoeILNL_AUTOSAR_Eth.vmodule",
          "SCC_ChargePoint.vmodule",
          "SCC_Monitor.vmodule",
          "SCC_Vehicle.vmodule",
          "path/to/my.vmodule",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "6529": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Configurations for IPv4.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration"],
            "properties": {
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "examples": ["dhcp", "static", "linked-local"],
                "anyOf": [
                  {
                    "enum": ["dhcp", "linked-local"]
                  },
                  {
                    "$ref": "#/definitions/e0d7/full"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration", "addresses"],
            "properties": {
              "addresses": {
                "$ref": "#/definitions/3e58/full"
              },
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "anyOf": [
                  {
                    "const": "static"
                  },
                  {
                    "$ref": "#/definitions/e0d7/full"
                  }
                ],
                "examples": ["dhcp", "static", "linked-local"]
              }
            }
          }
        ],
        "examples": [
          {
            "address-configuration": "dhcp"
          },
          {
            "address-configuration": "static",
            "addresses": [
              {
                "address": "192.168.0.2",
                "subnet-mask": "255.255.255.0"
              },
              {
                "address": "192.168.0.3",
                "subnet-prefix-length": 24
              }
            ]
          }
        ]
      }
    },
    "8094": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A list of C-identifiers for referenced elements (case sensitive)",
        "type": "array",
        "items": {
          "$ref": "#/definitions/c642/full"
        },
        "examples": [
          ["myid"],
          ["THIS_IS_CASE_SENSITIVE", "__1_2_3_4_5__"],
          ["${id_in_variable}", "prefix_${infix_in_variable}_suffix"]
        ]
      }
    },
    "8711": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CANFD network",
        "description": "A Network using the CANFD protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "databases": {
            "$ref": "#/definitions/8094/full"
          },
          "mode": {
            "description": "Operation Mode setting (iso or non-iso Mode).",
            "anyOf": [
              {
                "type": "string",
                "enum": ["iso", "non-iso"],
                "default": "iso"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "arbitration-baudrate": {
            "description": "Baudrate for the arbitration phase of CAN FD in Baud.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 500000
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "data-baudrate": {
            "description": "Baudrate for the data phase of CAN FD in Baud.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 1000000
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "application-channel": {
            "description": "Index of the Application Channel. Each busytype should provide consecutive indices. Starts counting at 1. Value between 1 and 255. Value '0' is not allowed. Caution: CAN and CANFD share the Application Channels!",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "default": 1
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          }
        },
        "examples": [
          {
            "name": "my_canfd_network"
          },
          {
            "name": "my_canfd_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_canfd_network",
            "databases": ["DB_1", "DB_2"],
            "application-channel": 42,
            "mode": "iso",
            "arbitration-baudrate": 500000,
            "data-baudrate": 1000000
          }
        ]
      }
    },
    "9738": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Global settings for Ethernet",
        "type": "object",
        "properties": {
          "access-mode": {
            "description": "Mode of the underlying Ethernet bus. Classic approach is the 'Channel-based' setup.       More recent and recommended mode is the switched 'Network-based' mode (port based).",
            "anyOf": [
              {
                "$ref": "#/definitions/e0d7/full"
              },
              {
                "type": "string",
                "enum": ["network-based", "channel-based"],
                "default": "network-based"
              }
            ]
          },
          "signal-updates": {
            "description": "Specifies how signals are updated on Network-based access. Will be ignored on Channel-based setups. Always: Events of all ports are used to update a signal without qualified ethernet port. rx-only: Only packets received by the interface are used, which leads to less duplicated updates. never: Signals without qualified ethernet ports are not updated.",
            "anyOf": [
              {
                "$ref": "#/definitions/e0d7/full"
              },
              {
                "const": "always",
                "description": "Events of all ports are used to update a signal without qualified ethernet port."
              },
              {
                "const": "rx-only",
                "description": "Only packets received by the interface are used, which leads to less duplicated updates."
              },
              {
                "const": "never",
                "description": "Signals without qualified ethernet ports are not updated."
              }
            ]
          },
          "tcp-ip-stack": {
            "$ref": "#/definitions/30e6/full"
          }
        },
        "additionalProperties": false,
        "examples": [
          {
            "access-mode": "network-based"
          },
          {
            "access-mode": "channel-based",
            "signal-updates": "always"
          },
          {
            "signal-updates": "rx-only"
          },
          {
            "signal-updates": "never"
          }
        ]
      }
    },
    "9883": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Define to be passed to capl / vcdl.",
        "type": "string",
        "pattern": "^([a-zA-Z_]|([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\})[a-zA-Z0-9_]*(=((0|[1-9][0-9]*)|(\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\})|(\"([^\"\\\\]|\\\\\"|\\\\\\\\)*\")|[Tt]rue|[Ff]alse))?$",
        "examples": [
          "mydefine1",
          "mydefine2",
          "mydefine_with_value=42",
          "${var_with_define_name}=${var_with_define_value}"
        ]
      }
    },
    "cc0b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "venvironment schema",
        "type": "object",
        "required": ["version"],
        "oneOf": [
          {
            "allOf": [
              {
                "properties": {
                  "version": {
                    "const": "1.0.0"
                  }
                }
              },
              {
                "$ref": "#/definitions/544b/full"
              }
            ]
          },
          {
            "allOf": [
              {
                "properties": {
                  "version": {
                    "const": "1.1.0"
                  }
                }
              },
              {
                "$ref": "#/definitions/128f/full"
              }
            ]
          }
        ]
      }
    },
    "544b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "venvironment schema",
        "type": "object",
        "additionalProperties": false,
        "required": ["version"],
        "properties": {
          "version": {
            "$ref": "#/definitions/f46b/full"
          },
          "includes": {
            "$ref": "#/definitions/dfcc/full"
          },
          "variables": {
            "$ref": "#/definitions/910e/full"
          },
          "application-models": {
            "$ref": "#/definitions/7b8b/full"
          },
          "datasources": {
            "$ref": "#/definitions/3cec/full"
          },
          "defines": {
            "$ref": "#/definitions/d219/full"
          },
          "system-variables": {
            "$ref": "#/definitions/dec4/full"
          },
          "simulation-nodes": {
            "$ref": "#/definitions/62bc/full"
          },
          "databases": {
            "$ref": "#/definitions/c9ff/full"
          },
          "can-networks": {
            "$ref": "#/definitions/6d72/full"
          },
          "canfd-networks": {
            "$ref": "#/definitions/aefd/full"
          },
          "scenarios": {
            "$ref": "#/definitions/9fce/full"
          }
        }
      }
    },
    "128f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "venvironment schema",
        "type": "object",
        "additionalProperties": false,
        "required": ["version"],
        "properties": {
          "version": {
            "$ref": "#/definitions/cf43/full"
          },
          "global-settings": {
            "$ref": "#/definitions/a18a/full"
          },
          "includes": {
            "$ref": "#/definitions/6ab1/full"
          },
          "variables": {
            "$ref": "#/definitions/910e/full"
          },
          "application-models": {
            "$ref": "#/definitions/7b8b/full"
          },
          "datasources": {
            "$ref": "#/definitions/3cec/full"
          },
          "functional-mockup-units": {
            "$ref": "#/definitions/0e5c/full"
          },
          "sil-kit": {
            "$ref": "#/definitions/7c33/full"
          },
          "defines": {
            "$ref": "#/definitions/d219/full"
          },
          "system-variables": {
            "$ref": "#/definitions/dec4/full"
          },
          "xcp-configuration-files": {
            "$ref": "#/definitions/7d21/full"
          },
          "logging": {
            "$ref": "#/definitions/37da/full"
          },
          "simulation-nodes": {
            "$ref": "#/definitions/9f91/full"
          },
          "databases": {
            "$ref": "#/definitions/c9ff/full"
          },
          "can-networks": {
            "$ref": "#/definitions/c683/full"
          },
          "canfd-networks": {
            "$ref": "#/definitions/762b/full"
          },
          "ethernet-networks": {
            "$ref": "#/definitions/ea31/full"
          },
          "can-replay-blocks": {
            "$ref": "#/definitions/37e0/full"
          },
          "ethernet-replay-blocks": {
            "$ref": "#/definitions/58db/full"
          },
          "scenarios": {
            "$ref": "#/definitions/9fce/full"
          }
        }
      }
    },
    "f46b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Version",
        "description": "Json schema version for the vEnvironment configuration file. Acceptance criteria: equal major version, less/equal minor and patch version.",
        "const": "1.0.0",
        "type": "string",
        "examples": ["1.0.0"]
      }
    },
    "dfcc": {
      "local": {
        "one": {
          "type": "string",
          "pattern": "\\.([Yy][Aa][Mm][Ll]|[Jj][Ss][Oo][Nn])$"
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Include files",
        "description": "Include a different file (similar to #include of the c preprocessor). The order of includes does not matter. Circular / multiple includes are resolved correctly.",
        "oneOf": [
          {
            "$ref": "#/definitions/dfcc/local/one"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/dfcc/local/one"
            }
          }
        ],
        "examples": [
          "my_include.yaml",
          ["my_include.yaml", "my_other_include.json"]
        ]
      }
    },
    "910e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Variables",
        "description": "List of variables to be used in this configuration file.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/90f9/full"
        },
        "examples": [
          [
            {
              "name": "var",
              "value": -42
            }
          ],
          [
            {
              "name": "my_string",
              "value": "implicit-type"
            },
            {
              "name": "var",
              "value": 422200000000,
              "type": "float"
            },
            {
              "name": "path_var",
              "value": "path/to/somewhere",
              "type": "path"
            },
            {
              "name": "uint_enum",
              "value": 43,
              "type": "uint",
              "options": [1, 43, 127]
            }
          ]
        ]
      }
    },
    "7b8b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Application Models",
        "description": "List of application models representing some program. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/aaae/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/my/file.can",
              "defines": ["mydefine1", "mydefine=2"]
            }
          ]
        ]
      }
    },
    "3cec": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Datasources",
        "description": "The definition of datasources used by application models. Input files can be deactivated with when.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input-files": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": ["file-path"],
              "properties": {
                "when": {
                  "$ref": "#/definitions/e9cc/full"
                },
                "file-path": {
                  "$ref": "#/definitions/254f/full"
                }
              }
            }
          }
        },
        "examples": [
          {
            "input-files": [
              {
                "file-path": "path/to/my.vcdl"
              }
            ]
          },
          {
            "input-files": [
              {
                "file-path": [
                  "path/to/my.vcodm",
                  "${path_in_variable}",
                  "path/${name_in_variable}"
                ]
              }
            ]
          },
          {
            "input-files": [
              {
                "file-path": "path/to/my.vcdl",
                "when": "SCENARIO_NAME == \"my_scenario_name\""
              }
            ]
          }
        ]
      }
    },
    "d219": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Defines",
        "description": "List of defines to be passed to capl / vcdl. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/28a4/full"
        },
        "examples": [
          [
            {
              "define": "mydefine1"
            }
          ],
          [
            {
              "define": ["mydefine1", "mydefine2"]
            },
            {
              "define": ["mydefine1", "mydefine2"],
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "define": [
                "mydefine_with_value=42",
                "${var_with_define_name}=${var_with_define_value}"
              ]
            }
          ]
        ]
      }
    },
    "dec4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "System Variables",
        "description": "A lists of system variables to be used by the simulation. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/a3db/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/my.vsysvar"
            }
          ],
          [
            {
              "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
            },
            {
              "file-path": "path/to/my.vsysvar",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ]
        ]
      }
    },
    "62bc": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Simulation Nodes",
        "description": "A list of simulation nodes used in a simulation. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/5a68/full"
        },
        "examples": [
          [
            {
              "name": "mynode",
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ]
            }
          ],
          [
            {
              "name": "mynode",
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ],
              "file-path": "path/to/my_capl_script.can",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "mynode",
              "file-path": "path/to/my_dotnet.cs",
              "network-assignments": [
                {
                  "network": "my_can_network_1",
                  "database-node": {
                    "database": "mydatabase",
                    "node": "mynode"
                  },
                  "modeling-libraries": ["modeling/lib/2.dll"]
                }
              ],
              "defines": ["mydefine1", "mydefine2"],
              "modeling-libraries": ["modeling/lib/1.dll", "${path_in_var}"],
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ]
        ]
      }
    },
    "c9ff": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Databases",
        "description": "List of databases. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/2cf5/full"
        },
        "examples": [
          [
            {
              "name": "mydbname",
              "file-path": "path/to/some.dbc"
            }
          ],
          [
            {
              "name": "mydbname",
              "file-path": "path/to/some.dbc"
            },
            {
              "name": "mydbname",
              "file-path": "path/to/some.arxml",
              "network-name": "network_in_db"
            },
            {
              "name": "mydbname",
              "file-path": "path/to/some.dbc",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ]
        ]
      }
    },
    "6d72": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN Networks",
        "description": "List of CAN networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/d7ad/full"
        },
        "examples": [
          [
            {
              "name": "my_can_network"
            }
          ],
          [
            {
              "name": "my_can_network",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_can_network",
              "databases": ["DB_1", "DB_2"],
              "application-channel": 42,
              "baudrate": 500000
            }
          ]
        ]
      }
    },
    "aefd": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CANFD Networks",
        "description": "List of CANFD networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/8711/full"
        },
        "examples": [
          [
            {
              "name": "my_canfd_network"
            }
          ],
          [
            {
              "name": "my_canfd_network",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_canfd_network",
              "databases": ["DB_1", "DB_2"],
              "application-channel": 42,
              "mode": "iso",
              "arbitration-baudrate": 500000,
              "data-baudrate": 1000000
            }
          ]
        ]
      }
    },
    "9fce": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Scenarios",
        "description": "List of scenarios with the option to define / override variables or defines.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/d46a/full"
        },
        "examples": [
          [
            {
              "name": "my_scenario_name"
            }
          ],
          [
            {
              "name": "my_scenario_name"
            },
            {
              "name": "override_variables",
              "variables": [
                {
                  "name": "three",
                  "value": 3
                }
              ]
            },
            {
              "name": "override_defines",
              "defines": ["mydefine", "mydevine_with_value=42"]
            }
          ]
        ]
      }
    },
    "cf43": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Version",
        "description": "Json schema version for the vEnvironment configuration file. Acceptance criteria: equal major version, less/equal minor and patch version.",
        "const": "1.1.0",
        "type": "string",
        "examples": ["1.1.0"]
      }
    },
    "a18a": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Global Settings",
        "description": "Global settings for all scenarios.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ethernet-settings": {
            "$ref": "#/definitions/9738/full"
          },
          "time-scaling-factor": true,
          "time-source": {
            "description": "Time source for the simulation.",
            "default": "internal-realtime",
            "anyOf": [
              {
                "$ref": "#/definitions/e0d7/full"
              },
              {
                "const": "internal-realtime",
                "description": "Operate without hardware and simulate all buses completely. The time response of the measurement (time basis) is controlled internally."
              },
              {
                "const": "external-software",
                "description": "Operate without hardware and simulate all buses completely. The time response of the measurement (time basis) is controlled by an external program."
              },
              {
                "const": "internal-scaled",
                "description": "Operate without hardware and simulate all buses completely. The simulation speed is provided through the property time-scaling-factor."
              }
            ],
            "examples": [
              "internal-realtime",
              "internal-scaled",
              "external-software"
            ]
          }
        },
        "allOf": [
          {
            "if": {
              "required": ["time-source"],
              "properties": {
                "time-source": {
                  "const": "internal-scaled"
                }
              }
            },
            "then": {
              "properties": {
                "time-scaling-factor": {
                  "anyOf": [
                    {
                      "type": "number",
                      "exclusiveMinimum": 0,
                      "maximum": 1.7976931348623157e308,
                      "description": "The measurement is slowed-down by this factor. For scaling factors between zero and one, the simulation is accelerated accordingly. For example, if you enter the value 0.1 the measurement is accelerated by a factor of 10."
                    },
                    {
                      "const": "as-fast-as-possible",
                      "description": "Run the simulation as fast as possible. The simulation speed is not constant and depends on the performance of the computer and the load that is provoked by simulation."
                    },
                    {
                      "$ref": "#/definitions/e0d7/full"
                    }
                  ],
                  "default": "as-fast-as-possible",
                  "examples": [
                    "as-fast-as-possible",
                    "0.01",
                    "0.05",
                    "0.1",
                    "0.5",
                    "1",
                    "5",
                    "10",
                    "50",
                    "100",
                    "500"
                  ]
                }
              }
            }
          }
        ],
        "examples": [
          {
            "ethernet-settings": {
              "access-mode": "network-based"
            }
          },
          {
            "ethernet-settings": {
              "access-mode": "channel-based",
              "signal-updates": "always"
            }
          },
          {
            "time-source": "internal-realtime"
          },
          {
            "time-source": "internal-scaled",
            "time-scaling-factor": 6
          }
        ]
      }
    },
    "6ab1": {
      "local": {
        "one": {
          "type": "string",
          "pattern": "\\.([Yy][Aa]?[Mm][Ll]|[Jj][Ss][Oo][Nn])$"
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Include files",
        "description": "Include a different file (similar to #include of the c preprocessor). The order of includes does not matter. Circular / multiple includes are resolved correctly.",
        "oneOf": [
          {
            "$ref": "#/definitions/6ab1/local/one"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/6ab1/local/one"
            }
          }
        ],
        "examples": [
          "my_include.yaml",
          ["my_include.yml", "my_other_include.json"]
        ]
      }
    },
    "0e5c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Functional mockup units",
        "description": "List of functional mockup units. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/dc8a/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/some.fmu",
              "stepsize-in-sec": 0.001
            }
          ],
          [
            {
              "file-path": "path/to/some.fmu",
              "stepsize-in-sec": 0.001,
              "debug-output": true
            }
          ],
          [
            {
              "file-path": "path/to/some.fmu",
              "stepsize-in-sec": 0.001,
              "debug-output": false,
              "active-model-variables": ["Variable1", "Variable2"]
            }
          ],
          [
            {
              "file-path": "path/to/some.fmu",
              "stepsize-in-sec": 0.001,
              "debug-output": false,
              "inactive-model-variables": ["Variable3"]
            }
          ]
        ]
      }
    },
    "7c33": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SIL Kit",
        "description": "SIL Kit settings. Entry can be deactivated with when.",
        "type": "object",
        "additionalProperties": false,
        "required": ["participant-name"],
        "properties": {
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "registry-uri": {
            "description": "registry URI",
            "type": "string",
            "anyOf": [
              {
                "pattern": "^[^:]+://[^:/]+(:[0-9]+)?(/[^?#/]+)*(\\?([^=#&]+=[^=#&]+)(&([^=#&]+=[^=#&]+))*)?(#.+)?"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": ["silkit://localhost:8500"]
          },
          "participant-name": {
            "description": "Name used by CANoe4SW to join a simulation as a participant at the start of a measurement.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": ["CANoe4SW"]
          },
          "config-file-path": {
            "$ref": "#/definitions/bd94/full"
          },
          "simulation-step-in-micro-sec": {
            "description": "Time length of a single simulation step. Valid only for the time-source \"external-software\". Default: 100 us.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 100
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "life-cycle-event-timeout-in-sec": {
            "description": "Maximum waiting time for the other simulation participants. Valid only for the time-source \"external-software\". Default: 30s.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 30
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          }
        },
        "examples": [
          {
            "registry-uri": "silkit://localhost:8500",
            "participant-name": "CANoe4SW",
            "config-file-path": "path/to/config-file.json"
          },
          {
            "registry-uri": "silkit://localhost:8500",
            "participant-name": "CANoe4SW",
            "config-file-path": "path/to/config-file.json",
            "simulation-step-in-micro-sec": 150
          },
          {
            "registry-uri": "silkit://localhost:8500",
            "participant-name": "CANoe4SW",
            "config-file-path": "path/to/config-file.json",
            "simulation-step-in-micro-sec": 150,
            "life-cycle-event-timeout-in-sec": 30
          }
        ]
      }
    },
    "7d21": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "XCP files",
        "description": "List of XCP configuration files (entries can be deactivated with when)",
        "type": "array",
        "items": {
          "$ref": "#/definitions/d186/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/my.xcpcfg"
            }
          ],
          [
            {
              "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
            },
            {
              "file-path": "path/to/my.xcpcfg",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ]
        ]
      }
    },
    "37da": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Logging Block",
        "description": "Configuration of the standalone logging block.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-name"],
        "properties": {
          "file-name": {
            "$ref": "#/definitions/f489/full"
          },
          "logging-events": {
            "type": "array",
            "default": [
              "bus",
              "diagnostic",
              "internal",
              "statistic",
              "system-variable",
              "test"
            ],
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "bus",
                    "diagnostic",
                    "internal",
                    "statistic",
                    "system-variable",
                    "test"
                  ]
                },
                {
                  "$ref": "#/definitions/e0d7/full"
                }
              ]
            }
          },
          "advanced": {
            "$ref": "#/definitions/e06b/full"
          }
        },
        "examples": [
          {
            "file-name": "file-name.blf",
            "logging-events": [
              "bus",
              "diagnostic",
              "internal",
              "${someVariable}"
            ],
            "advanced": {
              "warn-overwritten-log-file": true,
              "show-error-on-data-loss": false
            }
          }
        ]
      }
    },
    "9f91": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Simulation Nodes",
        "description": "A list of simulation nodes used in a simulation. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/1e1a/full"
        },
        "examples": [
          [
            {
              "name": "mynode",
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ]
            }
          ],
          [
            {
              "name": "mynode",
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ],
              "file-path": "path/to/my_capl_script.can",
              "when": "SCENARIO_NAME == \"my_scenario_name1\""
            },
            {
              "name": "mynode",
              "file-path": "path/to/my_dotnet.cs",
              "network-assignments": [
                {
                  "network": "my_can_network_1",
                  "database-node": {
                    "database": "mydatabase",
                    "node": "mynode"
                  }
                }
              ],
              "defines": ["mydefine1", "mydefine2"],
              "modeling-libraries": [
                "modeling/lib/1.vmodule",
                "${path_in_var}"
              ],
              "when": "SCENARIO_NAME == \"my_scenario_name2\""
            }
          ]
        ]
      }
    },
    "c683": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN Networks",
        "description": "List of CAN networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/da7f/full"
        },
        "examples": [
          [
            {
              "name": "my_can_network"
            }
          ],
          [
            {
              "name": "my_can_network",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_can_network",
              "databases": ["DB_1", "DB_2"],
              "application-channel": 42,
              "baudrate": 500000,
              "mapping": "internal-simulator",
              "when": "SCENARIO_NAME == \"another_scenario\""
            }
          ]
        ]
      }
    },
    "762b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CANFD Networks",
        "description": "List of CANFD networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/d18f/full"
        },
        "examples": [
          [
            {
              "name": "my_canfd_network"
            }
          ],
          [
            {
              "name": "my_canfd_network",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_canfd_network",
              "databases": ["DB_1", "DB_2"],
              "application-channel": 42,
              "mode": "iso",
              "arbitration-baudrate": 500000,
              "data-baudrate": 1000000,
              "mapping": "internal-simulator"
            }
          ]
        ]
      }
    },
    "ea31": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN Networks",
        "description": "List of Ethernet networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/888c/full"
        },
        "examples": [
          [
            {
              "name": "my_eth_network"
            }
          ],
          [
            {
              "name": "my_eth_network",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_eth_network",
              "databases": ["DB_1", "DB_2"],
              "application-channel": 12,
              "tcp-ip-stack-adapter": {
                "mac-address": "02:84:cf:3b:be:01"
              },
              "mapping": "external-sil-kit"
            },
            {
              "name": "my_eth_network",
              "databases": ["DB_1", "DB_2"],
              "application-channel": 12,
              "mapping": "internal-simulator",
              "tcp-ip-stack-adapter": {
                "mtu": 1500,
                "ipv4-settings": {
                  "address-configuration": "static",
                  "addresses": [
                    {
                      "address": "192.168.0.1",
                      "subnet-mask": "255.255.0.0"
                    }
                  ]
                },
                "ipv6-settings": {
                  "address-configuration": "dhcp"
                },
                "vlans": [
                  {
                    "id": 42,
                    "priority": 0
                  }
                ]
              }
            }
          ]
        ]
      }
    },
    "37e0": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN Replay Blocks",
        "description": "List of CAN replay blocks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/a9f3/full"
        },
        "examples": [
          [
            {
              "name": "my_can_replay_block",
              "file-path": "my_logging_file.blf"
            }
          ],
          [
            {
              "name": "my_can_replay_block",
              "file-path": "my_logging_file.blf",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_can_replay_block",
              "file-path": "another_logging_file.blf",
              "when": "SCENARIO_NAME == \"another_scenario_name\""
            }
          ]
        ]
      }
    },
    "58db": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ethernet Replay Blocks",
        "description": "List of ethernet replay blocks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/780d/full"
        },
        "examples": [
          [
            {
              "name": "my_ethernet_replay_block",
              "file-path": "my_logging_file.blf"
            }
          ],
          [
            {
              "name": "my_ethernet_replay_block",
              "file-path": "my_logging_file.blf",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_ethernet_replay_block",
              "file-path": "another_logging_file.blf",
              "when": "SCENARIO_NAME == \"another_scenario_name\""
            }
          ]
        ]
      }
    },
    "90f9": {
      "local": {
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "allOf": [
            {
              "not": {
                "pattern": "^[cC][aA][nN][oO][eE]_.*$"
              }
            },
            {
              "not": {
                "pattern": "^[aA][nN][dD]$"
              }
            },
            {
              "not": {
                "pattern": "^[aA][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[aA][sS][sS][eE][rR][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[bB][oO][oO][lL]$"
              }
            },
            {
              "not": {
                "pattern": "^[bB][rR][eE][aA][kK]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][aA][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][aA][tT][cC][hH]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][lL][aA][sS][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][oO][nN][tT][iI][nN][uU][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[dD][eE][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[dD][eE][lL][eE][tT][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[eE][lL][iI][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[eE][lL][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[eE][xX][cC][eE][pP][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][aA][lL][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][iI][nN][aA][lL][lL][yY]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][lL][oO][aA][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][oO][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][rR][oO][mM]$"
              }
            },
            {
              "not": {
                "pattern": "^[gG][lL][oO][bB][aA][lL]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][mM][pP][oO][rR][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][nN]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][nN][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][nN][tT][eE][gG][eE][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[lL][oO][nN][gG]$"
              }
            },
            {
              "not": {
                "pattern": "^[nN][oO][nN][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[nN][oO][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[oO][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[pP][aA][sS][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[rR][aA][iI][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[rR][eE][tT][uU][rR][nN]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][eE][lL][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][tT][rR][uU][cC][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][wW][iI][tT][cC][hH]$"
              }
            },
            {
              "not": {
                "pattern": "^[tT][hH][iI][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[tT][rR][uU][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[tT][rR][yY]$"
              }
            },
            {
              "not": {
                "pattern": "^[uU][iI][nN][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[uU][nN][sS][iI][gG][nN][eE][dD]$"
              }
            },
            {
              "not": {
                "pattern": "^[vV][oO][iI][dD]$"
              }
            },
            {
              "not": {
                "pattern": "^[wW][hH][iI][lL][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[wW][iI][tT][hH]$"
              }
            },
            {
              "not": {
                "pattern": "^[xX][oO][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[yY][iI][eE][lL][dD]$"
              }
            }
          ],
          "examples": ["my_var"]
        },
        "from-environment": {
          "type": "boolean",
          "default": false
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Variable",
        "description": "This variable can be used in any other node and overwritten by a scenario.",
        "type": "object",
        "required": ["name"],
        "$comment": "has to be split, since the type determines the valid values",
        "oneOf": [
          {
            "$comment": "type implicit",
            "additionalProperties": false,
            "required": ["value"],
            "properties": {
              "name": {
                "$ref": "#/definitions/90f9/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/90f9/local/from-environment"
              },
              "value": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          {
            "$comment": "type int",
            "additionalProperties": false,
            "required": ["type"],
            "properties": {
              "name": {
                "$ref": "#/definitions/90f9/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/90f9/local/from-environment"
              },
              "value": {
                "type": "integer",
                "minimum": -9223372036854776000,
                "maximum": 9223372036854776000
              },
              "type": {
                "const": "int"
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": -9223372036854776000,
                  "maximum": 9223372036854776000
                }
              }
            }
          },
          {
            "$comment": "type uint",
            "additionalProperties": false,
            "required": ["type"],
            "properties": {
              "name": {
                "$ref": "#/definitions/90f9/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/90f9/local/from-environment"
              },
              "value": {
                "type": "integer",
                "minimum": 0,
                "maximum": 18446744073709552000
              },
              "type": {
                "const": "uint"
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 18446744073709552000
                }
              }
            }
          },
          {
            "$comment": "type string / path",
            "additionalProperties": false,
            "required": ["type"],
            "properties": {
              "name": {
                "$ref": "#/definitions/90f9/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/90f9/local/from-environment"
              },
              "value": {
                "type": "string"
              },
              "type": {
                "enum": ["string", "path"]
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "$comment": "type boolean",
            "additionalProperties": false,
            "required": ["type"],
            "properties": {
              "name": {
                "$ref": "#/definitions/90f9/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/90f9/local/from-environment"
              },
              "value": {
                "type": "boolean"
              },
              "type": {
                "const": "bool"
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "$comment": "type float",
            "additionalProperties": false,
            "required": ["type"],
            "properties": {
              "name": {
                "$ref": "#/definitions/90f9/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/90f9/local/from-environment"
              },
              "value": {
                "type": "number",
                "minimum": -1.79769e308,
                "maximum": 1.79769e308
              },
              "type": {
                "const": "float"
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "number",
                  "minimum": -1.79769e308,
                  "maximum": 1.79769e308
                }
              }
            }
          }
        ],
        "examples": [
          {
            "name": "var",
            "value": -42
          },
          {
            "name": "my_string",
            "value": "implicit-type"
          },
          {
            "name": "var",
            "value": 422200000000,
            "type": "float"
          },
          {
            "name": "path_var",
            "value": "path/to/somewhere",
            "type": "path"
          },
          {
            "name": "uint_enum",
            "value": 43,
            "type": "uint",
            "options": [1, 43, 127]
          }
        ]
      }
    },
    "aaae": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Application Model",
        "description": "Represents an application used in a scenario",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-path"],
        "properties": {
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "file-path": {
            "$ref": "#/definitions/36ee/full"
          },
          "defines": {
            "$ref": "#/definitions/72ad/full"
          }
        },
        "examples": [
          {
            "file-path": "path/to/my/file.can",
            "defines": ["mydefine1", "mydefine=2"]
          },
          {
            "file-path": "path/to/my/file.can",
            "defines": ["mydefine1", "mydefine=2"],
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "e9cc": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Declares when to add this node.",
        "anyOf": [
          {
            "type": "string",
            "$comment": "impossible to express this grammar as a regex"
          },
          {
            "type": "boolean"
          }
        ],
        "examples": [
          "SCENARIO_NAME == \"my_scenario_name\"",
          "some_variable == \"somevalue\"",
          "some_int_variable > 42 && some_other_int_variable <= 42",
          true
        ]
      }
    },
    "254f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "anyOf": [
          {
            "$ref": "#/definitions/8c0b/full"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/8c0b/full"
            },
            "examples": [
              ["path/to/my.vcdl"],
              ["path/to/my.vcodm"],
              [
                "path/to/my.vcdl",
                "path/to/my.vcodm",
                "${path_in_variable}",
                "path/${name_in_variable}"
              ]
            ]
          }
        ],
        "examples": [
          "path/to/my.vcdl",
          ["path/to/my.vcodm"],
          [
            "path/to/my.vcdl",
            "path/to/my.vcodm",
            "${path_in_variable}",
            "path/${name_in_variable}"
          ]
        ]
      }
    },
    "28a4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Define",
        "description": "Defines to be passed to capl / vcdl.",
        "type": "object",
        "additionalProperties": false,
        "required": ["define"],
        "properties": {
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "define": {
            "anyOf": [
              {
                "$ref": "#/definitions/9883/full"
              },
              {
                "$ref": "#/definitions/72ad/full"
              }
            ]
          }
        },
        "examples": [
          {
            "define": "mydefine1"
          },
          {
            "define": ["mydefine1", "mydefine2"]
          },
          {
            "define": ["mydefine1", "mydefine2"],
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "define": [
              "mydefine_with_value=42",
              "${var_with_define_name}=${var_with_define_value}"
            ]
          }
        ]
      }
    },
    "a3db": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "System variables",
        "description": "Absolute or relative path to an external file containing system variables. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-path"],
        "properties": {
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "file-path": {
            "anyOf": [
              {
                "$ref": "#/definitions/7a17/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/7a17/full"
                }
              }
            ]
          }
        },
        "examples": [
          {
            "file-path": "path/to/my.vsysvar"
          },
          {
            "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
          },
          {
            "file-path": "path/to/my.vsysvar",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "5a68": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Simulation Node",
        "description": "Represents a simulation node used in a simulation",
        "additionalProperties": false,
        "type": "object",
        "required": ["name", "network-assignments"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "file-path": {
            "$ref": "#/definitions/ffc5/full"
          },
          "network-assignments": {
            "$ref": "#/definitions/2228/full"
          },
          "defines": {
            "$ref": "#/definitions/72ad/full"
          },
          "modeling-libraries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/e2c9/full"
            },
            "description": "For assignment of modeling libraries to this simulation node"
          }
        },
        "examples": [
          {
            "name": "mynode",
            "network-assignments": [
              {
                "network": "my_can_network_1"
              }
            ],
            "file-path": "path/to/my_capl_script.can",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "mynode",
            "file-path": "path/to/my_dotnet.cs",
            "network-assignments": [
              {
                "network": "my_can_network_1",
                "database-node": {
                  "database": "mydatabase",
                  "node": "mynode"
                },
                "modeling-libraries": ["modeling/lib/2.dll"]
              }
            ],
            "defines": ["mydefine1", "mydefine2"],
            "modeling-libraries": ["modeling/lib/1.dll", "${path_in_var}"],
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "2cf5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Database",
        "description": "Absolute or relative path to an external database file (.dbc / .ldf / ...). Relative path specifications are resolved relative to the defining configuration file.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "network-name": {
            "type": "string"
          },
          "file-path": {
            "type": "string",
            "anyOf": [
              {
                "pattern": "^.*\\.[Aa][Rr][Xx][Mm][Ll]$"
              },
              {
                "pattern": "^.*\\.[Xx][Mm][Ll]$"
              },
              {
                "pattern": "^.*\\.[Dd][Bb][Cc]$"
              },
              {
                "pattern": "^.*\\.[Ll][Dd][Ff]$"
              },
              {
                "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
              }
            ],
            "examples": [
              "path/to/some.dbc",
              "path/to/some.arxml",
              "path/to/some.xml",
              "path/to/some.ldf",
              "path/${var_with_name}",
              "${var_with_path}"
            ]
          }
        },
        "examples": [
          {
            "name": "mydbname",
            "file-path": "path/to/some.dbc"
          },
          {
            "name": "mydbname",
            "file-path": "path/to/some.arxml",
            "network-name": "network_in_db"
          },
          {
            "name": "mydbname",
            "file-path": "path/to/some.dbc",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "d7ad": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN network",
        "description": "A Network using the CAN protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "databases": {
            "$ref": "#/definitions/8094/full"
          },
          "baudrate": {
            "description": "Baudrate in Baud.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 500000
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "application-channel": {
            "description": "Index of the Application Channel. Each busytype should provide consecutive indices. Starts counting at 1. Value between 1 and 255. Value '0' is not allowed. Caution: CAN and CANFD share the Application Channels!",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "default": 1
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          }
        },
        "examples": [
          {
            "name": "my_can_network"
          },
          {
            "name": "my_can_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_can_network",
            "databases": ["DB_1", "DB_2"],
            "application-channel": 42,
            "baudrate": 500000
          }
        ]
      }
    },
    "d46a": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Scenario",
        "description": "A scenario with the option to define / override variables or defines",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
            "not": {
              "const": "Default"
            }
          },
          "variables": {
            "$ref": "#/definitions/910e/full"
          },
          "defines": {
            "$ref": "#/definitions/72ad/full"
          }
        },
        "examples": [
          {
            "name": "my_scenario_name"
          },
          {
            "name": "override_variables",
            "variables": [
              {
                "name": "three",
                "value": 3
              }
            ]
          },
          {
            "name": "override_defines",
            "defines": ["mydefine", "mydevine_with_value=42"]
          }
        ]
      }
    },
    "e0d7": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "string",
        "pattern": "\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}",
        "examples": ["${myvarname}"]
      }
    },
    "dc8a": {
      "local": {
        "stepsize-in-sec": {
          "description": "step size in seconds",
          "anyOf": [
            {
              "type": "number",
              "minimum": 0,
              "maximum": 1.79769e308
            },
            {
              "$ref": "#/definitions/e0d7/full"
            }
          ],
          "examples": [0, 0.0005, 1568714585, "${var_with_path}"]
        },
        "debug-output": {
          "description": "Are the debug outputs on",
          "anyOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "#/definitions/e0d7/full"
            }
          ],
          "examples": [false, true, "${var_with_path}"]
        },
        "active-model-variables": {
          "description": "List of the FMU variables which should be exported",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": ["Variable1", "${var_with_path}"]
          }
        },
        "inactive-model-variables": {
          "description": "List of the FMU variables which should be excluded from the export",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": ["Variable1", "${var_with_path}"]
          }
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Functional mockup unit",
        "description": "Represents a functional mockup unit used in a scenario",
        "type": "object",
        "anyOf": [
          {
            "additionalProperties": false,
            "required": ["file-path", "stepsize-in-sec"],
            "properties": {
              "when": {
                "$ref": "#/definitions/e9cc/full"
              },
              "file-path": {
                "$ref": "#/definitions/c51f/full"
              },
              "stepsize-in-sec": {
                "$ref": "#/definitions/dc8a/local/stepsize-in-sec"
              },
              "debug-output": {
                "$ref": "#/definitions/dc8a/local/debug-output"
              }
            }
          },
          {
            "additionalProperties": false,
            "required": [
              "file-path",
              "stepsize-in-sec",
              "active-model-variables"
            ],
            "properties": {
              "when": {
                "$ref": "#/definitions/e9cc/full"
              },
              "file-path": {
                "$ref": "#/definitions/c51f/full"
              },
              "stepsize-in-sec": {
                "$ref": "#/definitions/dc8a/local/stepsize-in-sec"
              },
              "debug-output": {
                "$ref": "#/definitions/dc8a/local/debug-output"
              },
              "active-model-variables": {
                "$ref": "#/definitions/dc8a/local/active-model-variables"
              }
            }
          },
          {
            "additionalProperties": false,
            "required": [
              "file-path",
              "stepsize-in-sec",
              "inactive-model-variables"
            ],
            "properties": {
              "when": {
                "$ref": "#/definitions/e9cc/full"
              },
              "file-path": {
                "$ref": "#/definitions/c51f/full"
              },
              "stepsize-in-sec": {
                "$ref": "#/definitions/dc8a/local/stepsize-in-sec"
              },
              "debug-output": {
                "$ref": "#/definitions/dc8a/local/debug-output"
              },
              "inactive-model-variables": {
                "$ref": "#/definitions/dc8a/local/inactive-model-variables"
              }
            }
          }
        ]
      }
    },
    "bd94": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a SIL Kit config file (.yaml or .json). Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[yY][aA][mM][lL]$"
          },
          {
            "pattern": "^.*\\.[jJ][sS][oO][nN]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "path/to/myConfigFile.json",
          "path/to/myConfigFile.yaml",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "d186": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "XCP files",
        "description": "Absolute or relative path to an external xcpcfg file. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-path"],
        "properties": {
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "file-path": {
            "anyOf": [
              {
                "$ref": "#/definitions/ad7e/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ad7e/full"
                }
              }
            ]
          }
        },
        "examples": [
          {
            "file-path": "path/to/my.xcpcfg"
          },
          {
            "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
          },
          {
            "file-path": "path/to/my.xcpcfg",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "f489": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Name of a blf file, supporting the field codes: {ComputerName}, {LocalTime}, {MeasurementIndex}, {MeasurementStart}, {IncSize|001|100MB} and {IncTime|001|01h00m}.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^(?!.*(\\{TriggerCondition\\}|\\{LoggingBlock\\}|\\{IncMeasurement\\}|\\{ConfigName\\}|\\{IncTrigger\\|[0-9]*\\}|[\"<>*?:/\\\\])).*\\.[bB][lL][fF]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "$comment": "|<|>",
        "examples": [
          "fileName.blf",
          "file_${SCENARIO_NAME}.blf",
          "${name_in_variable}",
          "log_{ComputerName}.blf",
          "log_{LocalTime}.blf",
          "log_{MeasurementIndex}.blf",
          "log_{MeasurementStart}.blf"
        ]
      }
    },
    "e06b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Advanced logging configurations",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "warn-overwritten-log-file": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "default": true
          },
          "show-error-on-data-loss": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "default": true
          }
        },
        "examples": [
          {
            "warn-overwritten-log-file": false,
            "show-error-on-data-loss": true
          },
          {
            "warn-overwritten-log-file": true
          }
        ]
      }
    },
    "1e1a": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Simulation Node",
        "description": "Represents a simulation node used in a simulation",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "network-assignments"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "file-path": {
            "$ref": "#/definitions/ffc5/full"
          },
          "network-assignments": {
            "$ref": "#/definitions/b8f4/full"
          },
          "defines": {
            "$ref": "#/definitions/72ad/full"
          },
          "modeling-libraries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/5642/full"
            },
            "description": "For assignment of modeling libraries to this simulation node"
          },
          "tcp-ip-stack": {
            "$ref": "#/definitions/1b39/full"
          }
        },
        "examples": [
          {
            "name": "mynode",
            "network-assignments": [
              {
                "network": "my_can_network_1"
              }
            ],
            "file-path": "path/to/my_capl_script.can",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "mynode",
            "file-path": "path/to/my_dotnet.cs",
            "network-assignments": [
              {
                "network": "my_can_network_1",
                "database-node": {
                  "database": "mydatabase",
                  "node": "mynode"
                }
              }
            ],
            "defines": ["mydefine1", "mydefine2"],
            "modeling-libraries": ["modeling/lib/1.vmodule", "${path_in_var}"],
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "da7f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN network",
        "description": "A Network using the CAN protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "databases": {
            "$ref": "#/definitions/8094/full"
          },
          "baudrate": {
            "description": "Baudrate in Baud.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 500000
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "application-channel": {
            "description": "Index of the Application Channel. Each busytype should provide consecutive indices. Starts counting at 1. Value between 1 and 255. Value '0' is not allowed. Caution: CAN and CANFD share the Application Channels!",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "default": 1
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "mapping": {
            "$ref": "#/definitions/71c7/full"
          }
        },
        "examples": [
          {
            "name": "my_can_network"
          },
          {
            "name": "my_can_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_can_network",
            "databases": ["DB_1", "DB_2"],
            "application-channel": 42,
            "baudrate": 500000,
            "mapping": "internal-simulator"
          }
        ]
      }
    },
    "d18f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CANFD network",
        "description": "A Network using the CANFD protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "databases": {
            "$ref": "#/definitions/8094/full"
          },
          "mode": {
            "description": "Operation Mode setting (iso or non-iso Mode).",
            "anyOf": [
              {
                "type": "string",
                "enum": ["iso", "non-iso"],
                "default": "iso"
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "arbitration-baudrate": {
            "description": "Baudrate for the arbitration phase of CAN FD in Baud.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 500000
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "data-baudrate": {
            "description": "Baudrate for the data phase of CAN FD in Baud.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 1000000
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "application-channel": {
            "description": "Index of the Application Channel. Each busytype should provide consecutive indices. Starts counting at 1. Value between 1 and 255. Value '0' is not allowed. Caution: CAN and CANFD share the Application Channels!",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "default": 1
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "mapping": {
            "$ref": "#/definitions/71c7/full"
          }
        },
        "examples": [
          {
            "name": "my_canfd_network"
          },
          {
            "name": "my_canfd_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_canfd_network",
            "databases": ["DB_1", "DB_2"],
            "application-channel": 42,
            "mode": "iso",
            "arbitration-baudrate": 500000,
            "data-baudrate": 1000000,
            "mapping": "internal-simulator"
          }
        ]
      }
    },
    "888c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ethernet network",
        "description": "A Network using the Ethernet protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "databases": {
            "$ref": "#/definitions/8094/full"
          },
          "tcp-ip-stack-adapter": {
            "$ref": "#/definitions/f2e1/full"
          },
          "mapping": {
            "$ref": "#/definitions/71c7/full"
          },
          "application-channel": {
            "description": "Index of the Application Channel. Each busytype should provide consecutive indices. Starts counting at 1. Value between 1 and 32. Value '0' is not allowed.",
            "anyOf": [
              {
                "$ref": "#/definitions/e0d7/full"
              },
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 32
              }
            ]
          }
        },
        "examples": [
          {
            "name": "my_eth_network"
          },
          {
            "name": "my_eth_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_eth_network",
            "databases": ["DB_1", "DB_2"],
            "application-channel": 12,
            "tcp-ip-stack-adapter": {
              "mac-address": "02:84:cf:3b:be:01"
            },
            "mapping": "external-sil-kit"
          },
          {
            "name": "my_eth_network",
            "databases": ["DB_1", "DB_2"],
            "application-channel": 12,
            "mapping": "internal-simulator",
            "tcp-ip-stack-adapter": {
              "mtu": 1500,
              "ipv4-settings": {
                "address-configuration": "static",
                "addresses": [
                  {
                    "address": "192.168.0.1",
                    "subnet-mask": "255.255.0.0"
                  }
                ]
              },
              "ipv6-settings": {
                "address-configuration": "dhcp"
              },
              "vlans": [
                {
                  "id": 42,
                  "priority": 0
                }
              ]
            }
          }
        ]
      }
    },
    "a9f3": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN replay block",
        "description": "A replay block for the CAN protocol.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "file-path": {
            "$ref": "#/definitions/f2c7/full"
          },
          "replay-on-measurement-start": {
            "description": "Replay starts with measurement start",
            "anyOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "send-system-variables": {
            "description": "Send system variable values.",
            "anyOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "start-timing-condition": {
            "$ref": "#/definitions/0e34/full"
          },
          "channel-mapping": {
            "$ref": "#/definitions/6e1c/full"
          },
          "send-tx-messages": {
            "description": "Replay the tx messages.",
            "anyOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "send-rx-messages": {
            "description": "Replay the rx messages.",
            "anyOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          }
        },
        "examples": [
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf"
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "when": "SCENARIO_NAME == \"MyScenario\""
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "replay-on-measurement-start": true,
            "send-system-variables": false,
            "send-tx-messages": true,
            "send-rx-messages": false,
            "start-timing-condition": {
              "condition": "immediately"
            },
            "channel-mapping": {
              "default-mapping": "as-in-original"
            }
          }
        ]
      }
    },
    "780d": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ethernet replay block",
        "description": "A replay block for the ethernet protocol.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path"],
        "properties": {
          "name": {
            "$ref": "#/definitions/87f8/full"
          },
          "when": {
            "$ref": "#/definitions/e9cc/full"
          },
          "file-path": {
            "$ref": "#/definitions/f2c7/full"
          },
          "replay-on-measurement-start": {
            "description": "Replay starts with measurement start",
            "anyOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "send-system-variables": {
            "description": "Send system variable values.",
            "anyOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "start-timing-condition": {
            "$ref": "#/definitions/0e34/full"
          },
          "channel-mapping": {
            "$ref": "#/definitions/6e1c/full"
          }
        },
        "examples": [
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf"
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "when": "SCENARIO_NAME == \"MyScenario\""
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "replay-on-measurement-start": true,
            "send-system-variables": false,
            "start-timing-condition": {
              "condition": "immediately"
            },
            "channel-mapping": {
              "default-mapping": "as-in-original"
            }
          }
        ]
      }
    },
    "36ee": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a source file of an application model (can/cs/sln/py/vmodule). Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Cc][Ss]$"
          },
          {
            "pattern": "^.*\\.[Pp][Yy]$"
          },
          {
            "pattern": "^.*\\.[Ss][Ll][Nn]$"
          },
          {
            "pattern": "^.*\\.[Cc][Aa][Nn]$"
          },
          {
            "pattern": "^.*\\.[vV][mM][oO][dD][uU][lL][eE]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "my_dotnet.cs",
          "my_python.py",
          "my_visual_studio.sln",
          "my_caplfile.can",
          "my_module.vmodule",
          "${some_variable}"
        ]
      }
    },
    "72ad": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of defines to be passed to capl / vcdl.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/9883/full"
        },
        "examples": [
          ["mydefine1", "mydefine2"],
          [
            "mydefine_with_value=42",
            "${var_with_define_name}=${var_with_define_value}"
          ]
        ]
      }
    },
    "8c0b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Reference to external datasource files (.vcdl/.vcodm). Absolute or relative path. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[vV][cC][dD][lL]$"
          },
          {
            "pattern": "^.*\\.[vV][cC][oO][dD][mM]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "path/to/my.vcdl",
          "path/to/my.vcodm",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "7a17": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a vsysvar file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[vV][sS][yY][sS][vV][aA][rR]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "path/to/my.vsysvar",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "87f8": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A C-identifier for this element (case sensitive)",
        "type": "string",
        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
        "examples": ["myid", "THIS_IS_CASE_SENSITIVE", "__1_2_3_4_5__"]
      }
    },
    "ffc5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a source file of a simulation node.  Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Cc][Aa][Nn]$"
          },
          {
            "pattern": "^.*\\.[Cc][Ss]$"
          },
          {
            "pattern": "^.*\\.[Ss][Ll][Nn]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "path/to/my_capl_script.can",
          "path/to/my_dotnet.cs",
          "path/to/my_visual_studio.sln",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "e2c9": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a dll or vmodule file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Dd][Ll]{2}$"
          },
          {
            "pattern": "^.*\\.[vV][mM][oO][dD][uU][lL][eE]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "path/to/my.dll",
          "path/to/my.vmodule",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "30e6": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Global configuration for the TCP/IP stack.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to operating-system, the machines configuration is used. If set to canoe, a custom configuration can be provided",
                "anyOf": [
                  {
                    "const": "operating-system",
                    "description": "If set to operating-system, the machines configuration is used. (use 'canoe' if settings should be manually provided)"
                  }
                ],
                "examples": ["canoe", "operating-system"]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to operating-system, the machines configuration is used. If set to canoe, a custom configuration can be provided",
                "anyOf": [
                  {
                    "const": "canoe",
                    "description": "If set to canoe, a custom configuration can be provided. (remove other elements for option operating-system)"
                  },
                  {
                    "$ref": "#/definitions/e0d7/full"
                  }
                ],
                "examples": ["canoe", "operating-system"]
              },
              "activate-routing": {
                "$ref": "#/definitions/465f/full"
              },
              "tcp-delayed-ack": {
                "$ref": "#/definitions/f671/full"
              },
              "timestamp-option-RFC1323": {
                "$ref": "#/definitions/93e4/full"
              },
              "ttl": {
                "$ref": "#/definitions/4bc4/full"
              },
              "ipv4-gateway": {
                "$ref": "#/definitions/e4b5/full"
              },
              "ipv6-gateway": {
                "$ref": "#/definitions/d820/full"
              }
            }
          }
        ]
      }
    },
    "c51f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a source file of a functional mockup unit (.fmu). Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Ff][Mm][Uu]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "my_functional_mockup_unit.fmu",
          "Inputs/MyFmu.FMU",
          "${some_variable}"
        ]
      }
    },
    "ad7e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a xcpcfg file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[xX][cC][pP][cC][fF][gG]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "path/to/my.xcpcfg",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "b8f4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of network nodes represented by this application",
        "type": "array",
        "items": {
          "$ref": "#/definitions/3e12/full"
        },
        "examples": [
          [
            {
              "network": "my_can_network_1"
            }
          ],
          [
            {
              "network": "my_can_network_1",
              "lin-role": "master"
            },
            {
              "network": "my_can_network_1",
              "lin-role": ["master", "config-tester"]
            },
            {
              "network": "my_can_network_1",
              "database-node": {
                "database": "mydatabase",
                "node": "mynode"
              }
            }
          ]
        ]
      }
    },
    "1b39": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Simulation node configuration for the TCP/IP stack.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to operating-system, the machines configuration is used.\n If set to canoe, the configuration on the global level is used (this requires globals-settings/ethernet-settings/tcp-ip-stack/selected-stack to be set to canoe).\n If set to individual, a custom configuration can be provided",
                "enum": ["operating-system", "canoe"],
                "default": "individual",
                "examples": ["operating-system", "canoe", "individual"]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to operating-system, the machines configuration is used.\n If set to canoe, the configuration on the global level is used (this requires globals-settings/ethernet-settings/tcp-ip-stack/selected-stack to be set to canoe).\n If set to individual, a custom configuration can be provided",
                "anyOf": [
                  {
                    "enum": ["individual"]
                  },
                  {
                    "$ref": "#/definitions/e0d7/full"
                  }
                ],
                "default": "individual",
                "examples": ["operating-system", "canoe", "individual"]
              },
              "activate-routing": {
                "$ref": "#/definitions/465f/full"
              },
              "tcp-delayed-ack": {
                "$ref": "#/definitions/f671/full"
              },
              "timestamp-option-RFC1323": {
                "$ref": "#/definitions/93e4/full"
              },
              "ttl": {
                "$ref": "#/definitions/4bc4/full"
              },
              "ipv4-gateway": {
                "$ref": "#/definitions/e4b5/full"
              },
              "ipv6-gateway": {
                "$ref": "#/definitions/d820/full"
              }
            }
          }
        ]
      }
    },
    "71c7": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Define the mapping of application channels to an underlying layer",
        "anyOf": [
          {
            "$ref": "#/definitions/e0d7/full"
          },
          {
            "const": "internal-simulator",
            "description": "Connect application channel to simulated network."
          },
          {
            "const": "external-sil-kit",
            "description": "Connect application channel to SIL Kit."
          }
        ],
        "default": "internal-simulator",
        "examples": ["internal-simulator", "external-sil-kit"]
      }
    },
    "f2e1": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Address configuration for an TCP/IP stack.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mac-address": {
            "$ref": "#/definitions/9d1f/full"
          },
          "mtu": {
            "$ref": "#/definitions/2e5f/full"
          },
          "ipv4-settings": {
            "$ref": "#/definitions/6529/full"
          },
          "ipv6-settings": {
            "$ref": "#/definitions/d90f/full"
          },
          "vlans": {
            "$ref": "#/definitions/f224/full"
          }
        },
        "examples": [
          {
            "mac-address": "02:84:cf:3b:be:01"
          },
          {
            "mtu": 1500,
            "ipv4-settings": {
              "address-configuration": "static",
              "addresses": [
                {
                  "address": "192.168.0.1",
                  "subnet-mask": "255.255.0.0"
                }
              ]
            },
            "ipv6-settings": {
              "address-configuration": "dhcp"
            },
            "vlans": [
              {
                "id": 42,
                "priority": 0
              }
            ]
          }
        ]
      }
    },
    "f2c7": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a replay file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[bB][lL][fF]$"
          },
          {
            "pattern": "^.*\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}$"
          }
        ],
        "examples": [
          "path/to/my.blf",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "0e34": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Timing conditions",
        "description": "Timing conditions for a replay block.",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "condition": {
            "description": "The condition when the replay shall start.",
            "anyOf": [
              {
                "const": "immediately",
                "description": "The first event of the replayed file occurs with measurement start."
              },
              {
                "const": "first-event-time",
                "description": "The original timestamp of the replayed file are used."
              },
              {
                "const": "delayed",
                "description": "The first event is delayed. Can be configured by the 'delayed-ms' element."
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "delay-ms": {
            "description": "The delay in ms if the condition 'delayed' is selected. No effect otherwise.",
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "default": 0
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          }
        },
        "examples": [
          {
            "condition": "immediately"
          },
          {
            "condition": "first-event-time"
          },
          {
            "condition": "delayed",
            "delay-ms": 1000
          },
          {
            "condition": "${variable}"
          }
        ]
      }
    },
    "6e1c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Channel mapping",
        "description": "The channel mapping for a replay block.",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "default-mapping": {
            "description": "The default mapping of a channel if it is not explicitely mapped.",
            "anyOf": [
              {
                "const": "as-in-original",
                "description": "The channel is mapped to itself if there is an active network."
              },
              {
                "const": "ignore-all",
                "description": "The channels are ignored by default."
              },
              {
                "$ref": "#/definitions/e0d7/full"
              }
            ]
          },
          "mappings": {
            "title": "Explicit mappings",
            "description": "The explicitly mapped channels. Overwrites the default mapping for the source.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "title": "Map source channel",
                  "type": "object",
                  "description": "Mapping from application channel of the replay file to a target network.",
                  "additionalProperties": false,
                  "required": ["source-channel", "target-network"],
                  "properties": {
                    "source-channel": {
                      "description": "The source application channel from the replayed file.",
                      "anyOf": [
                        {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 65535,
                          "default": 0
                        },
                        {
                          "$ref": "#/definitions/e0d7/full"
                        }
                      ]
                    },
                    "target-network": {
                      "description": "The target network name.",
                      "anyOf": [
                        {
                          "$ref": "#/definitions/87f8/full"
                        },
                        {
                          "$ref": "#/definitions/e0d7/full"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Map source network",
                  "type": "object",
                  "description": "Mapping from a named source network of the replay file to a named target network.",
                  "additionalProperties": false,
                  "required": ["source-network", "target-network"],
                  "properties": {
                    "source-network": {
                      "description": "The source network name. Only works if the replay file was created by CANoe and contains the relevant metadata.",
                      "type": "string"
                    },
                    "target-network": {
                      "description": "The target network name.",
                      "anyOf": [
                        {
                          "$ref": "#/definitions/87f8/full"
                        },
                        {
                          "$ref": "#/definitions/e0d7/full"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Ignore source channel",
                  "type": "object",
                  "description": "Ignores an application channel of the replay file.",
                  "additionalProperties": false,
                  "required": ["ignore-source-channel"],
                  "properties": {
                    "ignore-source-channel": {
                      "description": "The ignored source channel.",
                      "anyOf": [
                        {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 65535,
                          "default": 0
                        },
                        {
                          "$ref": "#/definitions/e0d7/full"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Ignore source network",
                  "type": "object",
                  "description": "Ignores a named source network of the replay file.",
                  "additionalProperties": false,
                  "required": ["ignore-source-network"],
                  "properties": {
                    "ignore-source-network": {
                      "description": "The ignored source network name. Only works if the replay file was created by CANoe and contains the relevant metadata.",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        },
        "examples": [
          {
            "default-mapping": "as-in-original"
          },
          {
            "default-mapping": "ignore-all",
            "mappings": [
              {
                "source-channel": 1,
                "target-network": "CAN1"
              }
            ]
          },
          {
            "default-mapping": "as-in-original",
            "mappings": [
              {
                "source-network": "CAN1",
                "target-network": "CAN2"
              }
            ]
          },
          {
            "default-mapping": "as-in-original",
            "mappings": [
              {
                "ignore-source-channel": 2
              },
              {
                "ignore-source-network": "CAN4"
              }
            ]
          }
        ]
      }
    },
    "44ae": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A network node represented by this application.",
        "type": "object",
        "additionalProperties": false,
        "required": ["network"],
        "properties": {
          "network": {
            "type": "string",
            "description": "For assignment of this NetworkNode to a Network.",
            "examples": ["network_name"]
          },
          "modeling-libraries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/e2c9/full"
            },
            "description": "For assignment of modeling libraries to this NetworkNode"
          },
          "database-node": {
            "$ref": "#/definitions/1a81/full"
          },
          "lin-role": {
            "anyOf": [
              {
                "$ref": "#/definitions/1abd/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/1abd/full"
                }
              }
            ]
          }
        },
        "examples": [
          {
            "network": "my_can_network_1"
          },
          {
            "network": "my_can_network_1",
            "modeling-libraries": [
              "modeling/lib/1.dll",
              "${path_in_var}",
              "path/${name_in_var}"
            ]
          },
          {
            "network": "my_can_network_1",
            "lin-role": "master"
          },
          {
            "network": "my_can_network_1",
            "lin-role": ["master", "config-tester"]
          },
          {
            "network": "my_can_network_1",
            "database-node": {
              "database": "mydatabase",
              "node": "mynode"
            }
          }
        ]
      }
    },
    "c642": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A C-identifier for a referenced element (case sensitive)",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
          },
          {
            "pattern": "^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"
          }
        ],
        "examples": [
          "myid",
          "THIS_IS_CASE_SENSITIVE",
          "__1_2_3_4_5__",
          "${id_in_variable}"
        ]
      }
    },
    "465f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Activates TCP Routing",
        "anyOf": [
          {
            "type": "boolean"
          },
          {
            "$ref": "#/definitions/e0d7/full"
          }
        ],
        "default": false
      }
    },
    "f671": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Activates the TCP Delayed Ack Option.",
        "anyOf": [
          {
            "$ref": "#/definitions/e0d7/full"
          },
          {
            "type": "boolean"
          }
        ],
        "default": true
      }
    },
    "93e4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Timestamp Option for TCP (RFC1323).",
        "anyOf": [
          {
            "$ref": "#/definitions/e0d7/full"
          },
          {
            "type": "boolean"
          }
        ],
        "default": true
      }
    },
    "4bc4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Time To Live.",
        "default": 64,
        "anyOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "$ref": "#/definitions/e0d7/full"
          }
        ]
      }
    },
    "e4b5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv4-Address of the Gateway",
        "anyOf": [
          {
            "$ref": "#/definitions/e0d7/full"
          },
          {
            "$ref": "#/definitions/c306/full"
          }
        ],
        "default": "0.0.0.0"
      }
    },
    "d820": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv6-Address of the Gateway",
        "anyOf": [
          {
            "$ref": "#/definitions/e0d7/full"
          },
          {
            "$ref": "#/definitions/cd0a/full"
          }
        ],
        "default": "::1"
      }
    },
    "3e12": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A network node represented by this application.",
        "type": "object",
        "additionalProperties": false,
        "required": ["network"],
        "properties": {
          "network": {
            "$ref": "#/definitions/bff3/full",
            "description": "For assignment of this NetworkNode to a Network.",
            "examples": ["network_name"]
          },
          "database-node": {
            "$ref": "#/definitions/1a81/full"
          },
          "lin-role": {
            "anyOf": [
              {
                "$ref": "#/definitions/1abd/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/1abd/full"
                }
              }
            ]
          },
          "tcp-ip-stack-adapter": {
            "$ref": "#/definitions/f2e1/full"
          }
        },
        "examples": [
          {
            "network": "my_can_network_1"
          },
          {
            "network": "my_can_network_1",
            "lin-role": "master"
          },
          {
            "network": "my_can_network_1",
            "lin-role": ["master", "config-tester"]
          },
          {
            "network": "my_can_network_1",
            "database-node": {
              "database": "mydatabase",
              "node": "mynode"
            }
          }
        ]
      }
    },
    "bff3": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
          },
          {
            "pattern": "^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"
          }
        ],
        "examples": [
          "myid",
          "THIS_IS_CASE_SENSITIVE",
          "__1_2_3_4_5__",
          "${id_in_variable}"
        ]
      }
    },
    "9d1f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "MAC-Address of the current TcpIpStack. (Can't be a multicast address.)",
        "type": "string",
        "anyOf": [
          {
            "pattern": "[0-9a-fA-F][02468aceACE](:[0-9a-fA-F]{2}){5}"
          },
          {
            "$ref": "#/definitions/e0d7/full"
          }
        ],
        "examples": [
          "02:84:cf:3b:be:01",
          "aa:bb:cc:dd:ee:ff",
          "AA:BB:CC:DD:EE:FF"
        ]
      }
    },
    "2e5f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Maximum Transmittion Unit.",
        "anyOf": [
          {
            "type": "integer",
            "minimum": 1,
            "maximum": 1500
          },
          {
            "$ref": "#/definitions/e0d7/full"
          }
        ],
        "default": 1500
      }
    },
    "d90f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Configurations for IPv6.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration"],
            "properties": {
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "examples": ["dhcp", "static"],
                "anyOf": [
                  {
                    "enum": ["dhcp", "linked-local"]
                  },
                  {
                    "$ref": "#/definitions/e0d7/full"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration", "addresses"],
            "properties": {
              "addresses": {
                "$ref": "#/definitions/08ee/full"
              },
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "anyOf": [
                  {
                    "const": "static"
                  },
                  {
                    "$ref": "#/definitions/e0d7/full"
                  }
                ],
                "examples": ["dhcp", "static"]
              }
            }
          }
        ],
        "examples": [
          {
            "address-configuration": "dhcp"
          },
          {
            "address-configuration": "static",
            "addresses": [
              {
                "address": "1234::abce",
                "subnet-prefix-length": 42
              },
              {
                "address": "1234::abcf",
                "subnet-prefix-length": 24
              }
            ]
          }
        ]
      }
    },
    "f224": {
      "local": {
        "vlan-settings": {
          "type": "object",
          "description": "Defines a VLAN with its relevant seetings.",
          "additionalProperties": false,
          "required": ["id", "priority"],
          "properties": {
            "id": {
              "description": "Id of the current VLAN.",
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 4094
                },
                {
                  "$ref": "#/definitions/e0d7/full"
                }
              ],
              "$comment": "reason for 4094: see https://en.wikipedia.org/wiki/IEEE_802.1Q - VLAN identifier (VID)",
              "examples": [1, 2, 3, 4, 4094]
            },
            "priority": {
              "description": "Priority of the current VLAN.",
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 7
                },
                {
                  "$ref": "#/definitions/e0d7/full"
                }
              ],
              "examples": [0, 1, 2, 3, 4, 5, 6, 7]
            },
            "ipv4-settings": {
              "$ref": "#/definitions/6529/full"
            },
            "ipv6-settings": {
              "$ref": "#/definitions/d90f/full"
            }
          }
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A list of VLANs with their relevant seetings.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/f224/local/vlan-settings"
        },
        "maxItems": 4094,
        "examples": [
          [
            {
              "id": 42,
              "priority": 0
            }
          ],
          [
            {
              "id": 24,
              "priority": 0,
              "ipv4-settings": {
                "address-configuration": "static",
                "addresses": [
                  {
                    "address": "192.168.0.2",
                    "subnet-mask": "255.255.255.0"
                  },
                  {
                    "address": "192.168.0.3",
                    "subnet-prefix-length": 24
                  }
                ]
              },
              "ipv6-settings": {
                "address-configuration": "static",
                "addresses": [
                  {
                    "address": "1234::abce",
                    "subnet-prefix-length": 42
                  },
                  {
                    "address": "1234::abcf",
                    "subnet-prefix-length": 24
                  }
                ]
              }
            }
          ]
        ]
      }
    },
    "1a81": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Reference to a certain node from a database",
        "type": "object",
        "additionalProperties": false,
        "required": ["node", "database"],
        "properties": {
          "node": {
            "type": "string",
            "description": "The node from the database",
            "examples": ["node_name"]
          },
          "database": {
            "$ref": "#/definitions/c642/full",
            "description": "The database"
          }
        },
        "examples": [
          {
            "database": "mydatabase",
            "node": "mynode"
          }
        ]
      }
    },
    "1abd": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Role of a node in a LIN network.",
        "type": "string",
        "enum": ["master", "slave", "config-tester"],
        "examples": ["master", "slave", "config-tester"]
      }
    },
    "c306": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv4 address",
        "type": "string",
        "anyOf": [
          {
            "pattern": "((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"
          },
          {
            "$ref": "#/definitions/e0d7/full"
          }
        ],
        "examples": ["127.0.0.1", "192.168.0.0", "172.16.0.0", "10.0.0.0"]
      }
    },
    "cd0a": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv6 address",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7}|:(:[0-9A-Fa-f]{1,4}){1,7}|([0-9A-Fa-f]{1,4}:){1,7}:|::|([0-9A-Fa-f]{1,4}:){1}(:[0-9A-Fa-f]{1,4}){1,6}|([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){1,5}|([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){1,4}|([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){1,3}|([0-9A-Fa-f]{1,4}:){5}(:[0-9A-Fa-f]{1,4}){1,2}|([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}){1})$"
          },
          {
            "$ref": "#/definitions/e0d7/full"
          }
        ],
        "examples": [
          "1234:0000:0000:0000:0000:0000:0000:abcd",
          "1234::abcd",
          "::1"
        ]
      }
    },
    "3e58": {
      "local": {
        "ipv4-subnet-mask": {
          "description": "Subnet mask of an IPv4 Address",
          "anyOf": [
            {
              "$ref": "#/definitions/c306/full"
            }
          ],
          "examples": [
            "255.255.255.0",
            "255.255.0.0",
            "255.240.0.0",
            "255.0.0.0"
          ]
        },
        "ipv4-subnet-prefix-length": {
          "description": "Subnet prefix of an IPv4 Address",
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 32
            },
            {
              "$ref": "#/definitions/e0d7/full"
            }
          ],
          "examples": [0, 24, 16, 12, 8, 32]
        },
        "ipv4-with-subnet": {
          "type": "object",
          "anyOf": [
            {
              "additionalProperties": false,
              "required": ["address", "subnet-mask"],
              "properties": {
                "address": {
                  "$ref": "#/definitions/c306/full"
                },
                "subnet-mask": {
                  "$ref": "#/definitions/3e58/local/ipv4-subnet-mask"
                }
              }
            },
            {
              "additionalProperties": false,
              "required": ["address", "subnet-prefix-length"],
              "properties": {
                "address": {
                  "$ref": "#/definitions/c306/full"
                },
                "subnet-prefix-length": {
                  "$ref": "#/definitions/3e58/local/ipv4-subnet-prefix-length"
                }
              }
            }
          ]
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of IPv4 addresses with their subnet definition",
        "type": "array",
        "items": {
          "$ref": "#/definitions/3e58/local/ipv4-with-subnet"
        },
        "examples": [
          [
            {
              "address": "192.168.0.2",
              "subnet-mask": "255.255.255.0"
            }
          ],
          [
            {
              "address": "192.168.0.3",
              "subnet-prefix-length": 24
            }
          ]
        ]
      }
    },
    "08ee": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of IPv6 addresses with their subnet definition",
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": ["address", "subnet-prefix-length"],
          "properties": {
            "address": {
              "$ref": "#/definitions/cd0a/full"
            },
            "subnet-prefix-length": {
              "description": "Subnetprefix of an IPv6 Address",
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 128
                },
                {
                  "$ref": "#/definitions/e0d7/full"
                }
              ],
              "examples": [0, 48, 128]
            }
          }
        },
        "examples": [
          [
            {
              "address": "1234::abce",
              "subnet-prefix-length": 42
            }
          ],
          [
            {
              "address": "1234::abcf",
              "subnet-prefix-length": 24
            }
          ]
        ]
      }
    }
  },
  "title": "venvironment schema",
  "type": "object"
}
