{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ansiblePlaybookConfig": {
      "properties": {
        "additional_args": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Additional args that you want to use, for example, '-c local'."
        },
        "additional_playbook_files": {
          "description": "A list of string paths blueprint resources that you\nwould like to download to the playbook directory.\nIf you use this variable, you must list all of the paths\nthat you expect to download.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ansible_become": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "A boolean value, `true` or `false` whether\nto assume the user privileges."
        },
        "ansible_env_vars": {
          "description": "A dictionary of environment variables to set.",
          "properties": {
            "ANSIBLE_HOST_KEY_CHECKING": {
              "default": false,
              "type": "boolean"
            },
            "ANSIBLE_INVALID_TASK_ATTRIBUTE_FAILED": {
              "default": false,
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ansible_playbook_executable_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "ansible-playbook",
          "description": "A full path to your ansible_playbook executable if user don't want to\nuse the included version of executable in the plugin"
        },
        "debug_level": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 2,
          "description": "Debug level"
        },
        "options_config": {
          "description": "Command-line options, such as `tags` or `skip_tags`.",
          "type": "object"
        },
        "playbook_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A path to your `site.yaml` or `main.yaml` in your\nAnsible Playbook relative to blueprint or playbook_source_path\nif playbook_source_path is URL to archive File relative inside the archive."
        },
        "playbook_source_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A full path/URL that contain playbook specified in playbook_path\nor site_yaml_path."
        },
        "remerge_sources": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": "false",
          "description": "update sources on target node"
        },
        "run_data": {
          "description": "Variable values.",
          "type": "object"
        },
        "save_playbook": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Save playbook after action"
        },
        "scp_extra_args": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specify extra arguments to pass to scp only (e.g. -l)"
        },
        "sensitive_keys": {
          "default": "ansible_password",
          "description": "keys that you want us to obscure",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sftp_extra_args": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specify extra arguments to pass to sftp only (e.g. -f, -l)"
        },
        "site_yaml_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "DEPRECATED.\nA path to your `site.yaml` or `main.yaml` in your\nAnsible Playbook relative to blueprint or playbook_source_path\nif playbook_source_path is URL to archive File relative inside the archive."
        },
        "sources": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Your Inventory sources. Either YAML or a path to a file.\nIf not provided the inventory will be take from the `sources`\nruntime property."
        },
        "ssh_common_args": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "Specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)"
        },
        "ssh_extra_args": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specify extra arguments to pass to ssh only (e.g. -R)"
        },
        "start_at_task": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Start the playbook at the task matching this name"
        },
        "timeout": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": 10,
          "description": "Override the connection timeout in seconds (default=10)"
        }
      },
      "type": "object"
    },
    "ansiblePlaybookInputs": {
      "properties": {
        "additional_args": {
          "default": {
            "get_property": ["SELF", "additional_args"]
          },
          "type": "string"
        },
        "ansible_env_vars": {
          "default": {
            "get_property": ["SELF", "ansible_env_vars"]
          },
          "type": "string"
        },
        "ansible_playbook_executable_path": {
          "default": {
            "get_property": ["SELF", "ansible_playbook_executable_path"]
          },
          "type": ["string", "object"]
        },
        "debug_level": {
          "default": {
            "get_property": ["SELF", "debug_level"]
          },
          "type": "string"
        },
        "options_config": {
          "default": {
            "get_property": ["SELF", "options_config"]
          },
          "type": "string"
        },
        "playbook_path": {
          "default": {
            "get_property": ["SELF", "playbook_path"]
          },
          "type": "string"
        },
        "playbook_source_path": {
          "default": {
            "get_property": ["SELF", "playbook_source_path"]
          },
          "type": ["string", "object"]
        },
        "remerge_sources": {
          "default": {
            "get_property": ["SELF", "remerge_sources"]
          },
          "type": "string"
        },
        "run_data": {
          "default": {
            "get_property": ["SELF", "run_data"]
          },
          "type": "string"
        },
        "save_playbook": {
          "default": {
            "get_property": ["SELF", "save_playbook"]
          },
          "type": "string"
        },
        "scp_extra_args": {
          "default": {
            "get_attribute": ["SELF", "scp_extra_args"]
          },
          "type": "string"
        },
        "sensitive_keys": {
          "default": {
            "get_property": ["SELF", "sensitive_keys"]
          },
          "type": "string"
        },
        "sftp_extra_args": {
          "default": {
            "get_attribute": ["SELF", "sftp_extra_args"]
          },
          "type": "string"
        },
        "site_yaml_path": {
          "default": {
            "get_property": ["SELF", "site_yaml_path"]
          },
          "type": "string"
        },
        "sources": {
          "default": {
            "get_property": ["SELF", "sources"]
          },
          "type": "string"
        },
        "ssh_common_args": {
          "default": {
            "get_attribute": ["SELF", "ssh_common_args"]
          },
          "type": "string"
        },
        "ssh_extra_args": {
          "default": {
            "get_attribute": ["SELF", "ssh_extra_args"]
          },
          "type": "string"
        },
        "start_at_task": {
          "default": {
            "get_property": ["SELF", "start_at_task"]
          },
          "type": "string"
        },
        "timeout": {
          "default": {
            "get_attribute": ["SELF", "timeout"]
          },
          "type": "string"
        }
      },
      "type": "object"
    },
    "awsClientConfig": {
      "properties": {
        "aws_access_key_id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "aws_secret_access_key": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "region_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "type": "object"
    },
    "awsConnectionConfig": {
      "description": "A dictionary of values to pass to authenticate with the AWS API.",
      "properties": {
        "aws_access_key_id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The ID of your AWS ACCESS KEY ID."
        },
        "aws_secret_access_key": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The ID of your AWS SECRET ACCESS KEY."
        },
        "region_name": {
          "$ref": "#/definitions/cloudifyGetStringOrAwsRegion"
        }
      },
      "type": "object"
    },
    "awsRegion": {
      "enum": [
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "af-south-1",
        "ap-east-1",
        "ap-south-1",
        "ap-southeast-1",
        "ap-northeast-2",
        "ap-northeast-3",
        "ap-northeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "cn-north-1",
        "cn-northwest-1",
        "eu-central-1",
        "eu-west-1",
        "eu-west-2",
        "eu-south-1",
        "eu-west-3",
        "eu-north-1",
        "me-south-1",
        "sa-east-1",
        "us-gov-east-1",
        "us-gov-west-1"
      ],
      "type": "string"
    },
    "awsResourceId": {
      "default": "",
      "description": "The AWS resource ID of the external resource, if\nuse_external_resource is true. Otherwise it is an empty string.",
      "type": "string"
    },
    "cloudifyBooleanOrGetInput": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/cloudifyGetIntrinsicFunction"
        }
      ]
    },
    "cloudifyDataTypesAgentConfig": {
      "description": "Cloudify agent configuration schema.",
      "properties": {
        "disable_requiretty": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "description": "For linux based agents, disables the requiretty setting in the sudoers file. By default, this value will be true."
        },
        "env": {
          "description": "Optional environment variables that the agent will be started with. (type: dictionary)"
        },
        "extra": {
          "description": "Optional additional low level configuration details. (type: dictionary)",
          "type": "object"
        },
        "heartbeat": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "The interval of the AMQP heartbeats in seconds\nNote: the AMQP heartbeat is only used on Linux."
        },
        "install_method": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies how (and if) the cloudify agent should be installed.\nValid values are:\n* none - No agent will be installed on the host.\n* remote - An agent will be installed using SSH on linux hosts and WinRM on windows hosts.\n* init_script - An agent will be installed via a script that will run on the host when it gets created.\n                This method is only supported for specific IaaS plugins.\n* plugin - An agent will be installed via a plugin which will run a script on the host.\n          This method is only supported for specific IaaS plugins.\n* provided - An agent is assumed to already be installed on the host image.\n            That agent will be configured and started via a script that will run on the host when it gets created.\n            This method is only supported for specific IaaS plugins."
        },
        "key": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "For host agents that are installed via SSH, this is the path to the private\nkey that will be used to connect to the host.\nIn most cases, this value will be derived automatically during bootstrap."
        },
        "max_workers": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Maximum number of agent workers. By default, the value will be 5."
        },
        "min_workers": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Minimum number of agent workers. By default, the value will be 0.\nNote: For windows based agents, this property is ignored and min_workers is set to the value of max_workers."
        },
        "network": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The name of the manager network to which the agent should be\nconnected. By default, the value will be `default` (which is the\nmanager's private IP, by default)"
        },
        "password": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "For host agents that are installed via SSH (on linux) and WinRM (on windows)\nthis property can be used to connect to the host.\nFor linux hosts, this property is optional in case the key property is properly configured\n(either explicitly or implicitly during bootstrap).\nFor windows hosts that are installed via WinRM, this property is also optional\nand depends on whether the password runtime property has been set by the relevant IaaS plugin,\nprior to the agent installation."
        },
        "port": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "For host agents that are installed via SSH (on linux) and WinRM (on windows),\nthis is the port used to connect to the host.\nThe default values are 22 for linux hosts and 5985 for windows hosts."
        },
        "process_management": {
          "description": "Process management specific configuration. (type: dictionary)",
          "type": "object"
        },
        "service_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Used to set the the cloudify agent service name.\n\nIf not set, the default value for the service name is:\n- Linux: 'cloudify-worker-<id>'\n- Windows: '<id>'\n\nwhere 'id' is the instance id of the compute node in which the agent is running.\n\nNote: the value in this field, takes precedence over the deprecated\n'cloudify.nodes.Compute.cloudify_agent.name'."
        },
        "user": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "For host agents, the agent will be installed for this user."
        }
      },
      "required": ["install_method"],
      "type": "object"
    },
    "cloudifyDatatypesAzureComputeAvailabilitySetConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163607.aspx",
      "properties": {
        "platformFaultDomainCount": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "platformUpdateDomainCount": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "sku": {
          "description": "dict to represent sku [for now we only provide name]",
          "type": "object"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureComputeManagedClusterConfig": {
      "description": "See https://docs.microsoft.com/en-us/rest/api/aks/managedclusters",
      "properties": {
        "addon_profiles": {
          "description": "A dict to define addons to the managed cluster",
          "type": "object"
        },
        "agent_pool_profiles": {
          "description": "An array to pass an array of dict for agent profile",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dns_prefix": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "enable_rbac": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true
        },
        "kubernetes_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "linux_profile": {
          "description": "A dict to define linux profile with user name and public keys",
          "type": "object"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "network_profile": {
          "description": "A dict to define network profile loadbalancer,outbound,IPs",
          "type": "object"
        },
        "service_principal_profile": {
          "description": "A dict to define service service_principal_profile [client_id, secret]",
          "type": "object"
        },
        "tags": {
          "description": "A dict containing resource tags",
          "type": "object"
        },
        "windows_profile": {
          "description": "A dict to define windows profile with user name and password",
          "type": "object"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureComputeVirtualMachineConfig": {
      "description": "https://msdn.microsoft.com/en-us/library/azure/mt163591.aspx",
      "properties": {
        "hardwareProfile": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "osProfile": {
          "type": "object"
        },
        "spot_instance": {
          "$ref": "#/definitions/cloudifyDatatypesAzureComputeVirtualMachineSpotConfig"
        },
        "storageProfile": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureComputeVirtualMachineSpotConfig": {
      "description": "check the parameters from this link : https://www.shorturl.at/wHTU2",
      "properties": {
        "billing_profile": {
          "type": "object"
        },
        "eviction_policy": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "Deallocate",
          "description": "the only supported value is 'Deallocate'"
        },
        "is_spot_instance": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "set true if you want to consider spot instance params"
        },
        "priority": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "Spot",
          "description": "Possible values include: 'Regular', 'Low', 'Spot'"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureConfig": {
      "properties": {
        "certificate": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Certificate private key."
        },
        "client_id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A Microsoft Azure client ID. This can be found in\nthe Azure Active Directory dashboard by accessing\nyour directory. View the Applications tab and select\nthe application used to access Azure APIs.  Your\nclient ID can be found by expanding the ACCESS WEB\nAPIS IN OTHER APPLICATIONS tab."
        },
        "client_secret": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A Microsoft Azure client secret key. This can be found\nor generated in the same location as your client ID."
        },
        "cloud_environment": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "An alternative cloud environment."
        },
        "endpoint_resource": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "https://management.core.windows.net/",
          "description": "A Microsoft Azure Active Directory Resource Id."
        },
        "endpoint_verify": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true,
          "description": "Connection certificate verify."
        },
        "endpoints_active_directory": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "https://login.microsoftonline.com",
          "description": "A Microsoft Azure Active Directory endpoint."
        },
        "endpoints_resource_manager": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "https://management.azure.com",
          "description": "A Microsoft Azure Active Directory Resource Manager."
        },
        "scale_name_separator": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "_",
          "description": "When scaling resources, a unique name must be sent to\nthe Azure API. Since names are left to the user to\nmanage (the service does not generate unique IDs),\nthis plugin will attempt to append characters or\nnumbers to the end of the resource name when resources\nare scaled out. This value should be a character, or\ncharacters, that will separate the base name from the\ngenerated unique characters.  For instance, if the\nbase name of a resource is \"myvm\", the separator is\nset to \"_\", and a scale workflow attempts to create\nanother resource, the resulting name could be\nsomething like \"myvm_1\". This field can be left blank."
        },
        "scale_name_suffix_chars": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "1234567890",
          "description": "A string of characters (ASCII) to be used when\ngenerating unique suffix data when scaling resources.\nSee \"scale_name_separator\" for more information."
        },
        "subscription_id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A Microsoft Azure subscription ID. This is a unique\nuser account in Azure. This can be found in the\nSubscriptions tab on your dashboard."
        },
        "tenant_id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A Microsoft Azure tenant ID. This can be found in the Azure Active Directory dashboard by accessing\nyour directory. Open the Application Endpoints\ndialog and your tenant ID will be in the URL for\nthe OAUTH2.0 TOKEN ENDPOINT."
        },
        "thumbprint": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Certificate thumbprint."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkIPConfigurationConfig": {
      "properties": {
        "privateIPAddress": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Static, private IP Address"
        },
        "privateIPAllocationMethod": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Defines how a private IP address is assigned. Options\nare Static or Dynamic"
        }
      },
      "required": ["privateIPAllocationMethod"],
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkLoadBalancerConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163574.aspx",
      "properties": {
        "backendAddressPools": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "frontendIPConfigurations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inboundNatRules": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "loadBalancingRules": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "probes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkLoadBalancerIncomingNATRuleConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163574.aspx",
      "properties": {
        "backendPort": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "frontendPort": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "protocol": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "Tcp"
        }
      },
      "required": ["protocol", "frontendPort", "backendPort"],
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkLoadBalancerProbeConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163574.aspx",
      "properties": {
        "intervalInSeconds": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 5
        },
        "numberOfProbes": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 16
        },
        "port": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "protocol": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "Tcp"
        },
        "requestPath": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "required": ["port", "intervalInSeconds", "numberOfProbes"],
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkLoadBalancerRuleConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163574.aspx",
      "properties": {
        "backendPort": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "enableFloatingIP": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false
        },
        "frontendPort": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "idleTimeoutInMinutes": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 5
        },
        "loadDistribution": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "Default"
        },
        "protocol": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "Tcp"
        }
      },
      "required": ["protocol", "frontendPort", "backendPort"],
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkNetworkInterfaceCardConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163668.aspx",
      "properties": {
        "dnsSettings": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ipConfigurations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "networkSecurityGroups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkNetworkSecurityGroupConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163656.aspx",
      "properties": {
        "securityRules": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkNetworkSecurityRuleConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163645.aspx",
      "properties": {
        "access": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "description": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "destinationAddressPrefix": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "destinationPortRange": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "direction": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "priority": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "protocol": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "sourceAddressPrefix": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "sourcePortRange": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "required": [
        "protocol",
        "sourceAddressPrefix",
        "destinationAddressPrefix",
        "access",
        "priority",
        "direction"
      ],
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkPublicIPAddressConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163590.aspx",
      "properties": {
        "domainNameLabel": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The concatenation of the domain name label and the regionalized\nDNS zone make up the fully qualified domain name associated\nwith the public IP address."
        },
        "idleTimeoutInMinutes": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Specifies the timeout (in minutes) for the TCP idle connection.\nThe value can be set between 4 and 30 minutes"
        },
        "publicIPAllocationMethod": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Defines whether the IP address is stable or dynamic.\nOptions are Static or Dynamic"
        },
        "reverseFqdn": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A fully qualified domain name that resolves to this\npublic IP address."
        }
      },
      "required": ["publicIPAllocationMethod"],
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkRouteConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt459110.aspx",
      "properties": {
        "addressPrefix": {
          "type": "string"
        },
        "nextHopIpAddress": {
          "type": "string"
        },
        "nextHopType": {
          "type": "string"
        }
      },
      "required": ["nextHopType", "addressPrefix"],
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkRouteTableConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt502548.aspx",
      "properties": {
        "routes": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkSubnetConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163621.aspx",
      "properties": {
        "addressPrefix": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        },
        "routeTable": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureNetworkVirtualNetworkConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163661.aspx",
      "properties": {
        "addressSpace": {
          "type": "object"
        },
        "dhcpOptions": {
          "type": "object"
        },
        "subnets": {
          "type": "object"
        }
      },
      "required": ["addressSpace"],
      "type": "string"
    },
    "cloudifyDatatypesAzureStorageDataDiskConfig": {
      "properties": {
        "container_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "vhds",
          "description": "Container for the resource."
        },
        "force_delete": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "If set to true, the resource's \"delete\" lifecycle will purge the\nAzure Data Disk from the Azure Storage Account. If false, the\nData Disk is left as-is in the Storage Account."
        },
        "size": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 20,
          "description": "Size of the Page Blob (Azure disk) in GiB. Maximum of 1023 GiB allowed."
        }
      },
      "required": ["size"],
      "type": "object"
    },
    "cloudifyDatatypesAzureStorageFileShareConfig": {
      "properties": {
        "fail_on_exist": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "If true, causes the operation to raise a NonRecoverableError if\nthe file share already exists. If false, issues a warning and\ncontinues execution."
        },
        "metadata": {
          "description": "Metadata (dict) for the File Share",
          "type": "object"
        },
        "quota": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Quote, in GiB, for the maximum size of the file share"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesAzureStorageStorageAccountConfig": {
      "description": "See https://msdn.microsoft.com/en-us/library/mt163564.aspx",
      "properties": {
        "accountType": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "An storage account type (case sensitive)"
        },
        "encryption": {
          "type": "object"
        },
        "keySource": {
          "type": "object"
        },
        "networkAcls": {
          "type": "object"
        },
        "supportsHttpsTrafficOnly": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesBlueprint": {
      "properties": {
        "blueprint_archive": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The URL of a .zip to upload to the manager.(Can be skipped if external_resource == True)"
        },
        "external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Use external resource."
        },
        "id": {
          "description": "This is the blueprint that the deployment node is a proxy to."
        },
        "main_file_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "blueprint.yaml",
          "description": "The application blueprint filename. If the blueprint consists many\nimported files this is the main blueprint."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesDeployment": {
      "properties": {
        "all_outputs": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true,
          "description": "Ignored if \"outputs\" is specified.\nOtherwise, if true (the default), then all outputs from the remote\ndeployment are exposed. If false, then no output is exposed."
        },
        "external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Use external resource."
        },
        "id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "This is the deployment that the node is a proxy to."
        },
        "inputs": {
          "description": "The inputs to the deployment.",
          "type": "object"
        },
        "logs": {
          "description": "Logs redirect settings, by default {redirect: true}",
          "type": "object"
        },
        "outputs": {
          "description": "A dictionary of \"{ key: value, key: value }\".\nGet \"key\" the deployment.\nSet \"value\" runtime property to the value of the output.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesDeploymentProxy": {
      "properties": {
        "blueprint": {
          "$ref": "#/definitions/cloudifyDatatypesBlueprint"
        },
        "deployment": {
          "$ref": "#/definitions/cloudifyDatatypesDeployment"
        },
        "executions_start_args": {
          "description": "Optional params for executions",
          "type": "object"
        },
        "reexecute": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Reexecute workflows, on external deployment"
        }
      },
      "required": ["blueprint", "deployment"],
      "type": "object"
    },
    "cloudifyDatatypesFile": {
      "properties": {
        "allow_failure": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "If the download fails, log the error and continue."
        },
        "file_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The path on the machine where the file should be saved."
        },
        "mode": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "The file permissions, such as 777. Must be provided as an integer.\n\"0777\" and 0777 are not valid. Only 777."
        },
        "owner": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The owner string, such as \"centos:wheel\""
        },
        "resource_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The path relative to the blueprint where the file is stored.\nCurrently this must be packaged in the blueprint. An external URI is\nnot valid."
        },
        "template_variables": {
          "description": "Variables to render Jinja templates.",
          "type": "object"
        },
        "use_sudo": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Whether or not to use sudo to move, rename, delete, chown, chmod,\nthe file."
        }
      },
      "required": ["resource_path", "file_path", "owner", "mode"],
      "type": "object"
    },
    "cloudifyDatatypesFtpAuth": {
      "properties": {
        "ignore_host": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "optional, ignore host in ftp response"
        },
        "ip": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "optional, device ip"
        },
        "password": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "optional, ftp password"
        },
        "port": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 21,
          "description": "optional, ftp port"
        },
        "tls": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "optional, use tls connection to ftp"
        },
        "user": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The login credentials for ftp server."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesHelmApiOptions": {
      "properties": {
        "api_key": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Bearer token used for authentication."
        },
        "host": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "HTTP/HTTPS URL to Kubernetes API."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesHelmAuthenticationVariant": {
      "description": "Type representing all authentication variants.\n for different Kubernetes cloud providers.\n Each property represents separate supported variant of authentication.\n You should choose one variant and fill in only on property.",
      "properties": {
        "gcp_service_account": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": " (JSON) Content of Google Cloud Platform Service Account file."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesHelmClientConfig": {
      "description": "Configuration properties for Helm to interact with kubernetes cluster.\n If kube_config file not provided then kube_token and kube_api_server should provided.",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/cloudifyDatatypesHelmAuthenticationVariant"
        },
        "configuration": {
          "$ref": "#/definitions/cloudifyDatatypesHelmConfigurationVariant"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesHelmConfig": {
      "properties": {
        "executable_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "",
          "description": "Helm binary path."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesHelmConfigurationVariant": {
      "description": "Type representing all Kubernetes API configuration variants. Each property represents separate supported variant of configuration. For now, until Helm support \"--insecure\" one of \"blueprint_file_name\",\n      \"manager_file_path\" and \"file_content\" must be used.\n      \"api_key\" inputs will override kubeconfig data.",
      "properties": {
        "api_options": {
          "$ref": "#/definitions/cloudifyDatatypesHelmApiOptions",
          "description": "Set of basic properties describing Kubernetes API access."
        },
        "blueprint_file_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of Kubernetes configuration file attached to blueprint(path)."
        },
        "file_content": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Content (YAML) of Kubernetes configuration file. kubeconfig string or dict are supported. "
        },
        "manager_file_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Path to Kubernetes configuration file placed on Cloudify Manager VM."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesHelmReleaseConfig": {
      "description": "configuration properties for release node type.",
      "properties": {
        "chart": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the chart to install.For example: stable/mysql."
        },
        "flags": {
          "$ref": "#/definitions/cloudifyDatatypesHelmSetFlagsList",
          "default": [],
          "description": "List of flags add to both \"helm install\" and \"helm uninstall\" commands.\n          For example:\n          - name: namespace\n            value: my_namespace\n          If the flag not requires value, omit \"value\" and specify only the name as element in the list."
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the created release."
        },
        "set_values": {
          "$ref": "#/definitions/cloudifyDatatypesHelmSetFlagsList",
          "default": [],
          "description": " List of variables names and values to set. For example:\n          - name: x\n            value: y\n          - name: a\n            value: b\n          It equals to --set x=y --set a=b in helm command."
        },
        "values_file": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Path to values files."
        }
      },
      "required": ["name", "chart"],
      "type": "object"
    },
    "cloudifyDatatypesHelmRepoConfig": {
      "description": "configuration properties for repo node type.",
      "properties": {
        "flags": {
          "$ref": "#/definitions/cloudifyDatatypesHelmSetFlagsList",
          "default": [],
          "description": "List of flags add to both \"helm repo add\" and \"helm repo remove\" commands."
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the repo that added/removed."
        },
        "repo_url": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "URL of the repo to add."
        }
      },
      "required": ["name", "repo_url"],
      "type": "object"
    },
    "cloudifyDatatypesHelmSetFlagsList": {
      "additionalProperties": false,
      "default": [],
      "items": {
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {}
        },
        "type": "object"
      },
      "type": "array"
    },
    "cloudifyDatatypesKey": {
      "properties": {
        "algorithm": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "RSA"
        },
        "bits": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 2048
        },
        "comment": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "key_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "openssh_format": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput"
        },
        "passphrase": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "private_key_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "public_key_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "~/.ssh/id_rsa.pub"
        },
        "unvalidated": {
          "description": "Unvalidated parameters."
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesNode": {
      "properties": {
        "id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesNodeInstance": {
      "properties": {
        "id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "node": {
          "$ref": "#/definitions/cloudifyDatatypesNode"
        }
      },
      "type": "object"
    },
    "cloudifyDatatypesNodeInstanceProxy": {
      "properties": {
        "blueprint": {
          "$ref": "#/definitions/cloudifyDatatypesBlueprint"
        },
        "deployment": {
          "$ref": "#/definitions/cloudifyDatatypesDeployment"
        },
        "executions_start_args": {
          "description": "Optional params for executions",
          "type": "object"
        },
        "node_instance": {
          "$ref": "#/definitions/cloudifyDatatypesNodeInstance"
        },
        "reexecute": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Reexecute workflows, on external deployment"
        }
      },
      "required": ["blueprint", "deployment"],
      "type": "object"
    },
    "cloudifyDatatypesTerminalAuth": {
      "properties": {
        "criticals": {
          "description": "optional, list of possible criticals without new line",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "description": "optional, list of possible errors without new line",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exit_command": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "exit",
          "description": "optional, command for close connection, default 'exit'"
        },
        "ip": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "optional, device ip"
        },
        "key_content": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "optional, ssh user key"
        },
        "password": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "optional, ssh password"
        },
        "port": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 22,
          "description": "optional, ssh port"
        },
        "promt_check": {
          "description": "optional, list of prompts accepted from device, default is \"#/$\"",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "smart_device": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "optional, use shell extension"
        },
        "store_logs": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "optional, save communication logs"
        },
        "user": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The login credentials for ssh server."
        },
        "warnings": {
          "description": "optional, list of possible warnings without new line",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "cloudifyGetAttribute": {
      "properties": {
        "get_attribute": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        }
      },
      "type": "object"
    },
    "cloudifyGetInput": {
      "properties": {
        "get_input": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        }
      },
      "type": "object"
    },
    "cloudifyGetIntrinsicFunction": {
      "anyOf": [
        {
          "$ref": "#/definitions/cloudifyGetInput"
        },
        {
          "$ref": "#/definitions/cloudifyGetSecret"
        },
        {
          "$ref": "#/definitions/cloudifyGetAttribute"
        },
        {
          "$ref": "#/definitions/cloudifyGetProperty"
        }
      ]
    },
    "cloudifyGetProperty": {
      "properties": {
        "get_property": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        }
      },
      "type": "object"
    },
    "cloudifyGetSecret": {
      "properties": {
        "get_secret": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        }
      },
      "type": "object"
    },
    "cloudifyGetStringOrAwsRegion": {
      "anyOf": [
        {
          "$ref": "#/definitions/awsRegion"
        },
        {
          "$ref": "#/definitions/cloudifyGetInput"
        }
      ],
      "description": "The server region name, such as us-east-1.\n(Not us-east-1b, which is an availability zone, or\nUS East, which is a Region.)\nUS East (N. Virginia) - us-east-1\nUS East (Ohio) - us-east-2\nUS West (N. California) - us-west-1\nUS West (Oregon) - us-west-2\nAfrica (Cape Town) - af-south-1\nAsia Pacific (Hong Kong) - ap-east-1\nAsia Pacific (Mumbai) - ap-south-1\nAsia Pacific (Seoul) - ap-northeast-2\nAsia Pacific (Osaka-Local) - ap-northeast-3\nAsia Pacific (Singapore) - ap-southeast-1\nAsia Pacific (Sydney) - ap-southeast-2\nAsia Pacific (Tokyo) - ap-northeast-1\nCanada (Central) - ca-central-1\nChina (Beijing) - cn-north-1\nChina (Ningxia) - cn-northwest-1\nEurope (Frankfurt) - eu-central-1\nEurope (Ireland) - eu-west-1\nEurope (London) - eu-west-2\nEurope (Milan) - eu-south-1\nEurope (Paris) - eu-west-3\nEurope (Stockholm) - eu-north-1\nMiddle East (Bahrain) - me-south-1\nSouth America (São Paulo) - sa-east-1\nAWS GovCloud (US-East) - us-gov-east-1\nAWS GovCloud (US) - us-gov-west-1"
    },
    "cloudifyIntegerOrGetInput": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "$ref": "#/definitions/cloudifyGetIntrinsicFunction"
        }
      ]
    },
    "cloudifyStringOrGetInput": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/cloudifyGetIntrinsicFunction"
        }
      ]
    },
    "dataType": {
      "additionalProperties": false,
      "properties": {
        "derived_from": {
          "description": "Parent data type.",
          "type": "string"
        },
        "description": {
          "description": "Description for the data type.",
          "type": "string"
        },
        "properties": {
          "description": "Dictionary of the data type properties.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "dataTypes": {
      "description": "To use data_types, the definitions version must be cloudify_dsl_1_2 or higher.",
      "patternProperties": {
        "": {
          "$ref": "#/definitions/dataType"
        }
      },
      "type": "object"
    },
    "dockerClientConfig": {
      "properties": {
        "docker_host": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Docker Machine IP to connect to."
        },
        "docker_rest_port": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Docker Machine rest port."
        }
      },
      "type": "object"
    },
    "dockerInstallationConfig": {
      "description": "Docker Installation type",
      "properties": {
        "install_script": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "https://raw.githubusercontent.com/cloudify-cosmo/cloudify-docker-plugin/master/cloudify_docker/resources/post-install.sh",
          "description": "Docker Installation script"
        },
        "install_url": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "https://get.docker.com",
          "description": "Docker Installation Link"
        }
      },
      "type": "object"
    },
    "dockerMachine": {
      "description": "Docker Machine IP,User,Private_key",
      "properties": {
        "container_volume": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Docker Container volume_mapping"
        },
        "docker_ip": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Docker Machine IP"
        },
        "docker_key": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Docker Machine Private Key"
        },
        "docker_user": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Docker Machine User"
        }
      },
      "type": "object"
    },
    "gcpExternalResource": {
      "properties": {
        "use_external_resource": {
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource,\ntrue if you are bringing an existing resource, false if you want cloudify to create it.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "gcpResourceId": {
      "properties": {
        "resource_id": {
          "description": "The GCP resource ID of the external resource, if\nuse_external_resource is true. Otherwise it is an empty string.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "inputProperty": {
      "additionalProperties": false,
      "description": "inputs are parameters that are injected into a blueprint when a deployment is created. These parameters can be referenced by using the get_input intrinsic function.",
      "properties": {
        "constraints": {
          "$ref": "#/definitions/inputPropertyConstraints"
        },
        "default": {
          "description": "An optional default value for the input.",
          "type": ["number", "string", "array", "boolean", "integer", "object"]
        },
        "description": {
          "description": "An optional description for the input.",
          "type": "string"
        },
        "required": {
          "description": "a boolean value to indicate whether the input is required must be passed or not.",
          "type": "boolean"
        },
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "enum": [
                "string",
                "integer",
                "float",
                "boolean",
                "list",
                "dict",
                "regex"
              ],
              "type": "string"
            }
          ],
          "description": "The required data type of the input. Not specifying a data type means the type can be anything, including a list, an array or a dictionary. Valid types: string, integer, float, boolean, list, dict, regex or a custom data type."
        }
      },
      "type": "object"
    },
    "inputPropertyConstraints": {
      "anyOf": [
        {
          "properties": {
            "equal": {
              "description": "",
              "type": ["number", "string", "boolean", "integer"]
            },
            "greater_or_equal": {
              "type": ["number", "string", "boolean", "integer"]
            },
            "greater_than": {
              "type": ["number", "string", "boolean", "integer"]
            },
            "less_or_equal": {
              "type": ["number", "string", "boolean", "integer"]
            },
            "less_than": {
              "type": ["number", "string", "boolean", "integer"]
            }
          },
          "type": "object"
        },
        {
          "valid_values": {
            "items": {
              "type": ["number", "string", "boolean", "integer"]
            },
            "type": "array"
          }
        }
      ],
      "description": "The constraints the input value must comply with. Read more details about the format and usage of the constraints in the Constraints section below."
    },
    "kubernetesTypesAbstractResource": {
      "description": "Type defining common base structure for any Kubernetes resource\nIt is some kind of wrapper for native Kubernetes YAML definition",
      "properties": {
        "apiVersion": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "v1",
          "description": "Kubernetes API version as a string"
        },
        "kind": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "metadata": {
          "type": "object"
        }
      },
      "required": ["kind"],
      "type": "object"
    },
    "kubernetesTypesApiMapping": {
      "description": "Type containing python Kubernetes API objects and methods definitions for all supported operations",
      "properties": {
        "create": {
          "$ref": "#/definitions/kubernetesTypesApiMappingEntry",
          "description": "Python Kubernetes API objects and methods definitions for create operation"
        },
        "delete": {
          "$ref": "#/definitions/kubernetesTypesApiMappingEntry",
          "description": "Python Kubernetes API objects and methods definitions for delete operation"
        },
        "read": {
          "$ref": "#/definitions/kubernetesTypesApiMappingEntry",
          "description": "Python Kubernetes API objects and methods definitions for read operation"
        },
        "update": {
          "$ref": "#/definitions/kubernetesTypesApiMappingEntry",
          "description": "Python Kubernetes API objects and methods definitions for update operation"
        }
      },
      "type": "object"
    },
    "kubernetesTypesApiMappingEntry": {
      "description": "Type defining python Kubernetes API objects and methods definitions for particular operation",
      "properties": {
        "api": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of python Kubernetes API object which will be used to as request for particular operation type"
        },
        "method": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Method name of python Kubernetes API object which will be used as request for particular operation type"
        },
        "payload": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of python Kubernetes API object which will be used as request data for particular operation type"
        }
      },
      "required": ["api", "method"],
      "type": "object"
    },
    "kubernetesTypesAuthenticationVariant": {
      "description": "Type representing all authentication variants\nfor different Kubernetes cloud providers.\nEach property represents separate supported variant of authentication.\nYou should choose one variant and fill in only on property.",
      "properties": {
        "gcp_service_account": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "(JSON) Content of Google Cloud Platform Service Account file"
        }
      },
      "type": "object"
    },
    "kubernetesTypesClientConfig": {
      "description": "Configuration properties of kubernetes API and\nauthentication properties of Kubernetes Cloud providers.",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/kubernetesTypesAuthenticationVariant",
          "description": "Authentication properties of Kubernetes Cloud providers. Optional.\nCurrently supported providers: Google Cloud Platform."
        },
        "configuration": {
          "$ref": "#/definitions/kubernetesTypesConfigurationVariant",
          "description": "Configuration properties of Kubernetes API. One of four configuration options can be used\n1. Kubernetes config file contained by blueprint archive\n2. Kubernetes config file previously uploaded into Cloudify Manager VM\n3. Content of Kubernetes config file (YAML)\n4. Kubernetes API set o properties"
        }
      },
      "type": "object"
    },
    "kubernetesTypesClusterRoleDefinitio": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesAbstractResource"
        }
      ],
      "description": "Type defining single Kubernetes resource e.g. ClusterRole, ...\nIt is some kind of wrapper for native Kubernetes YAML definition",
      "type": "object"
    },
    "kubernetesTypesConfigClassResourceDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesResourceDefinition"
        },
        {
          "properties": {
            "data": {
              "description": "Contains data to store in ConfigMap, Secret..",
              "type": "object"
            }
          }
        }
      ],
      "description": "Type defining Kubernetes resource for storing data.\nIt is some kind of wrapper for native Kubernetes YAML definition",
      "type": "object"
    },
    "kubernetesTypesConfigurationVariant": {
      "description": "Type representing all Kubernetes API configuration variants.\nEach property represents separate supported variant of configuration.\nYou should choose one variant and fill in only on property.",
      "properties": {
        "api_options": {
          "description": "Set of basic properties describing Kubernetes API access",
          "properties": {
            "api_key": {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            "cert_file": {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            "debug": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput"
            },
            "host": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "HTTP/HTTPS URL to Kubernetes API"
            },
            "key_file": {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            "ssl_ca_cert": {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            "verify_ssl": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput"
            }
          },
          "type": "object"
        },
        "blueprint_file_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of Kubernetes configuration file attached to blueprint"
        },
        "file_content": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Content (YAML) of Kubernetes configuration file"
        },
        "manager_file_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Path to Kubernetes configuration file placed on Cloudify Manager VM"
        }
      },
      "type": "object"
    },
    "kubernetesTypesFileResource": {
      "properties": {
        "resource_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "File relative to blueprint path."
        },
        "target_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Do not use."
        },
        "template_variables": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "kubernetesTypesResourceDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesAbstractResource"
        },
        {
          "properties": {
            "spec": {
              "description": "Kubernetes resource object specification",
              "type": "object"
            }
          }
        }
      ],
      "description": "Type defining single Kubernetes resource e.g. Pod, Service, ...\nIt is some kind of wrapper for native Kubernetes YAML definition",
      "type": "object"
    },
    "kubernetesTypesRoleBindingDefinitio": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesAbstractResource"
        },
        {
          "properties": {
            "roleRef": {
              "description": "RoleRef can only reference a ClusterRole in the global namespace.\nIf the RoleRef cannot be resolved, the Authorizer must return an error.",
              "type": "object"
            },
            "subjects": {
              "description": "Subjects holds references to the objects the role applies to.",
              "items": {
                "$ref": "#/definitions/cloudifyStringOrGetInput"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "Type defining single Kubernetes resource e.g. Pod, Service, ...\nIt is some kind of wrapper for native Kubernetes YAML definition",
      "type": "object"
    },
    "kubernetesTypesRoleDefinitio": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesAbstractResource"
        },
        {
          "properties": {
            "rules": {
              "description": "Rules holds all the PolicyRules for this Role.",
              "items": {
                "$ref": "#/definitions/cloudifyStringOrGetInput"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "Type defining single Kubernetes resource e.g. Role, ...\nIt is some kind of wrapper for native Kubernetes YAML definition",
      "type": "object"
    },
    "kubernetesTypesSecretDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesAbstractResource"
        },
        {
          "properties": {
            "data": {
              "description": "Data contains the secret data.",
              "type": "object"
            },
            "stringData": {
              "description": "stringData allows specifying non-binary secret data in string form.\nIt is provided as a write-only convenience method.\nAll keys and values are merged into the data field on write,\noverwriting any existing values. It is never output when reading from the API..",
              "type": "object"
            },
            "type": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Used to facilitate programmatic handling of secret data."
            }
          }
        }
      ],
      "description": "Secret holds secret data of a certain type.\nThe total bytes of the values in the Data field must be less than MaxSecretSize bytes",
      "type": "object"
    },
    "kubernetesTypesServiceAccountDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesAbstractResource"
        },
        {
          "properties": {
            "automountServiceAccountToken": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": false,
              "description": "AutomountServiceAccountToken indicates whether pods running\nas this service account should have an API token automatically mounted.\nCan be overridden at the pod level.."
            },
            "imagePullSecrets": {
              "description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images\nin pods that reference this ServiceAccount. ImagePullSecrets are distinct\nfrom Secrets because Secrets can be mounted in the pod,\nbut ImagePullSecrets are only accessed by the kubelet",
              "items": {
                "$ref": "#/definitions/cloudifyStringOrGetInput"
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount.",
              "items": {
                "$ref": "#/definitions/cloudifyStringOrGetInput"
              },
              "type": "array"
            }
          }
        }
      ],
      "description": "ServiceAccount binds together: a name, understood by users,\nand perhaps by peripheral systems, for an identity a principal\nthat can be authenticated and authorized * a set of secrets",
      "type": "object"
    },
    "kubernetesTypesStorageClassResourceDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/kubernetesTypesAbstractResource"
        },
        {
          "properties": {
            "parameters": {
              "description": "Additional parameters for object creation",
              "type": "object"
            },
            "provisioner": {
              "description": "Class provisioner for object creation",
              "type": "object"
            }
          }
        }
      ],
      "description": "Type defining single Kubernetes resource e.g. StorageClass\nIt is some kind of wrapper for native Kubernetes YAML definition",
      "type": "object"
    },
    "nodeTemplate": {
      "additionalProperties": false,
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.Vpc"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2VPC"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.InternetGateway"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSInternetGateway"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.Subnet"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2Subnet"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.RouteTable"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2RouteTable"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.Route"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2Route"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.ElasticIP"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2ElasticIP"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.NATGateway"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2NATGateway"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.SecurityGroup"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2SecurityGroup"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.SecurityGroupRuleIngress"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2SecurityGroupRuleIngress"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.Interface"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2Interface"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.Image"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2Image"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.Instances"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2Instances"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.EBSVolume"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2EBSVolume"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.aws.ec2.EBSAttachment"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeAWSEC2EBSAttachment"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.images"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerImagesInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerImagesProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.containers"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerContainersInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerContainersProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.host"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerHostInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerHostProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.host_details"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerHostDetailsInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerHostDetailsProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.image"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerImageInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerImageProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.container"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerContainerInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerContainerProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.container_files"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerContainerFilesInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerContainerFilesProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.ansible_playbook"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerAnsiblePlaybookInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerAnsiblePlaybookProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.docker.terraform_module"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeDockerTerraformModuleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeDockerTerraformModuleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.nodes.Master"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesNodesMasterProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ResourceBase"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesResourceBase"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ResourceWithValidateStatus"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesResourceWithValidateStatus"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.BlueprintDefinedResource"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ClusterRoleBinding"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesClusterRoleBindingProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.RoleBinding"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesRoleBinding"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Role"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesRoleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ClusterRole"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesClusterRoleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Secret"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesSecretProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ServiceAccount"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesServiceAccountProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Deployment"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesDeploymentProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Node"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesNodeProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Namespace"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesNamespaceProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Pod"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesPodProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ReplicaSet"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesReplicaSetProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ReplicationController"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesReplicationControllerProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.DaemonSet"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesDaemonSetProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.CustomResourceDefinition"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesCustomResourceDefinitionProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Service"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesServiceProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.PersistentVolume"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesPersistentVolumeProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.ConfigMap"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesConfigMapProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.StorageClass"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesStorageClassProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.StatefulSet"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesStatefulSetProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.PodSecurityPolicy"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesPodSecurityPolicyProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.NetworkPolicy"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesNetworkPolicyProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.Ingress"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesIngressProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.PersistentVolumeClaim"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesPersistentVolumeClaimProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.CustomBlueprintDefinedResource"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesCustomBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesCustomBlueprintDefinedResourceProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.CustomBlueprintDefinedResource"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesCustomBlueprintDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesCustomBlueprintDefinedResourceProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.FileDefinedResource"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesFileDefinedResourceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesFileDefinedResourceProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.kubernetes.resources.MultipleFileDefinedResources"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesMultipleFileDefinedResourcesInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeKubernetesResourcesMultipleFileDefinedResourcesProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.terraform"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeTerraformInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeTerraformProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.terraform.Module"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeTerraformModuleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeTerraformModuleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.terraform.Module"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeTerraformModuleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeTerraformModuleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.ansible.Executor"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeAnsibleExecutorInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeAnsibleExecutorProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.NetworkBase"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackNetworkBaseProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Network"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackNetworkInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackNetworkProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Subnet"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackSubnetInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackSubnetProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Port"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackPortInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackPortProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Router"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackRouterInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackRouterProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.FloatingIP"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackFloatingIPInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackFloatingIPProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.SecurityGroup"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackSecurityGroupInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackSecurityGroupProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.SecurityGroupRule"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackSecurityGroupRuleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackSecurityGroupRuleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.RBACPolicy"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackRBACPolicyProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Server"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackServerProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.WindowsServer"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackWindowsServerProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.KeyPair"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackKeyPairInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackKeyPairProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.HostAggregate"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackHostAggregateInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackHostAggregateProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Image"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackImageInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackImageProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Flavor"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackFlavorInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackFlavorProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.User"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackUserInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackUserProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Group"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackGroupInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackGroupProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Role"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackRoleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackRoleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Project"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackProjectInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackProjectProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Volume"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackVolumeInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackVolumeProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.VolumeType"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackVolumeTypeInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackVolumeTypeProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.Zone"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackZoneInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackZoneProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.openstack.RecordSet"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeOpenstackRecordSetInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeOpenstackRecordSetProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.DeploymentProxy"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesDeploymentProxyInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesDeploymentProxyProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.NodeInstanceProxy"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesNodeInstanceProxyProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.CloudInit.CloudConfig"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesCloudInitCloudConfigInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesCloudInitCloudConfigProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.keys.nodes.RSAKey"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesRSAKeyInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesRSAKeyProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.terminal.raw"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyTerminalRawInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyTerminalRawProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.File"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesFileInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesFileProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.ftp"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesFTPInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesFTPProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.rest.Requests"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyRestRequestsInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyRestRequestsProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.rest.BunchRequests"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyRestBunchRequestsInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyRestBunchRequestsProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.secrets.Writer"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesSecretsWriterInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesSecretsWriterProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.secrets.Reader"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesSecretsReaderInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyNodesSecretsReaderProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.ResourceGroup"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesResourceGroupInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesResourceGroupProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.storage.StorageAccount"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesStorageStorageAccountInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesStorageStorageAccountProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.storage.DataDisk"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesStorageDataDisktInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesStorageDataDiskProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.storage.FileShare"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesStorageFileShareInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesStorageFileShareProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.VirtualNetwork"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkVirtualNetworkInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkVirtualNetworkProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.NetworkSecurityGroup"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkNetworkSecurityGroupInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkNetworkSecurityGroupProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.NetworkSecurityRule"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkNetworkSecurityRuleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkNetworkSecurityRuleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.Subnet"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkSubnetInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkSubnetProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.RouteTable"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkRouteTableInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkRouteTableProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.Route"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkRouteInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkRouteProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.NetworkInterfaceCard"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkNetworkInterfaceCardInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkNetworkInterfaceCardProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.IPConfiguration"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkIPConfigurationProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.PublicIPAddress"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkPublicIPAddressInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkPublicIPAddressProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.compute.AvailabilitySet"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeAvailabilitySetInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeAvailabilitySetProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.compute.VirtualMachine"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeVirtualMachineInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeVirtualMachineProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.compute.WindowsVirtualMachine"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeWindowsVirtualMachineInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeWindowsVirtualMachineProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.compute.VirtualMachineExtension"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeVirtualMachineExtensionInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeVirtualMachineExtensionProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.LoadBalancer"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.LoadBalancer.BackendAddressPool"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerBackendAddressPoolInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerBackendAddressPoolProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.LoadBalancer.Probe"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerProbeInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerProbeProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.LoadBalancer.IncomingNATRule"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerIncomingNATRuleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerIncomingNATRuleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.network.LoadBalancer.Rule"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerRuleInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesNetworkLoadBalancerRuleProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.Deployment"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureDeploymentInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureDeploymentProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.compute.ContainerService"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeContainerServiceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeContainerServiceProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.Plan"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesPlanInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesPlanProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.WebApp"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesWebAppInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesWebAppProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.PublishingUser"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesPublishingUserInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesPublishingUserProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.azure.nodes.compute.ManagedCluster"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeManagedClusterInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeManagedClusterProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.gcp.project"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyGCPProjectInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyGCPProjectProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.gcp.nodes.Instance"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeCloudifyGCPNodesInstanceInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeCloudifyGCPNodesInstanceProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.helm.Binary"
              }
            }
          },
          "then": {
            "properties": {
              "properties": {
                "$ref": "#/definitions/nodeTypeHelmBinaryProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.helm.Release"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeHelmReleaseInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeHelmReleaseProperties"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "cloudify.nodes.helm.Repo"
              }
            }
          },
          "then": {
            "properties": {
              "interfaces": {
                "$ref": "#/definitions/nodeTypeHelmRepoInterfaces"
              },
              "properties": {
                "$ref": "#/definitions/nodeTypeHelmRepoProperties"
              }
            }
          }
        }
      ],
      "properties": {
        "capabilities": {
          "description": "Used for specifying the node template capabilities (Supported since: cloudify_dsl_1_3.) Only the scalable capability is supported.",
          "type": "object"
        },
        "instances": {
          "description": "Instances configuration. (Deprecated. Replaced with capabilities.scalable)",
          "type": "object"
        },
        "interfaces": {
          "$ref": "#/definitions/nodeTemplateInterfaces",
          "description": "Used for a mapping plugins to interfaces operation, or for specifying inputs for already-mapped node type operations."
        },
        "properties": {
          "description": "The properties of the node template, matching its node type properties schema.",
          "type": "object"
        },
        "relationships": {
          "$ref": "#/definitions/nodeTemplateRelationships",
          "description": "Used for specifying the relationships that this node template has with other node templates."
        },
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "enum": [
                "cloudify.nodes.Root",
                "cloudify.nodes.Tier",
                "cloudify.nodes.Compute",
                "cloudify.nodes.Container",
                "cloudify.nodes.Network",
                "cloudify.nodes.Subnet",
                "cloudify.nodes.Router",
                "cloudify.nodes.Port",
                "cloudify.nodes.VirtualIP",
                "cloudify.nodes.SecurityGroup",
                "cloudify.nodes.LoadBalancer",
                "cloudify.nodes.Volume",
                "cloudify.nodes.FileSystem",
                "cloudify.nodes.ObjectStorage",
                "cloudify.nodes.SoftwareComponent",
                "cloudify.nodes.WebServer",
                "cloudify.nodes.ApplicationServer",
                "cloudify.nodes.DBMS",
                "cloudify.nodes.MessageBugServer",
                "cloudify.nodes.ApplicationModule",
                "cloudify.nodes.Component",
                "cloudify.nodes.ServiceComponent",
                "cloudify.nodes.SharedResource",
                "cloudify.nodes.aws.dynamodb.Table",
                "cloudify.nodes.aws.iam.Group",
                "cloudify.nodes.aws.iam.AccessKey",
                "cloudify.nodes.aws.iam.LoginProfile",
                "cloudify.nodes.aws.iam.User",
                "cloudify.nodes.aws.iam.Role",
                "cloudify.nodes.aws.iam.RolePolicy",
                "cloudify.nodes.aws.iam.InstanceProfile",
                "cloudify.nodes.aws.iam.Policy",
                "cloudify.nodes.aws.lambda.Function",
                "cloudify.nodes.aws.lambda.Invoke",
                "cloudify.nodes.aws.lambda.Permission",
                "cloudify.nodes.aws.rds.Instance",
                "cloudify.nodes.aws.rds.InstanceReadReplica",
                "cloudify.nodes.aws.rds.SubnetGroup",
                "cloudify.nodes.aws.rds.OptionGroup",
                "cloudify.nodes.aws.rds.Option",
                "cloudify.nodes.aws.rds.ParameterGroup",
                "cloudify.nodes.aws.rds.Parameter",
                "cloudify.nodes.aws.route53.HostedZone",
                "cloudify.nodes.aws.route53.RecordSet",
                "cloudify.nodes.aws.SQS.Queue",
                "cloudify.nodes.aws.SNS.Topic",
                "cloudify.nodes.aws.SNS.Subscription",
                "cloudify.nodes.aws.elb.LoadBalancer",
                "cloudify.nodes.aws.elb.Classic.LoadBalancer",
                "cloudify.nodes.aws.elb.Classic.HealthCheck",
                "cloudify.nodes.aws.elb.Listener",
                "cloudify.nodes.aws.elb.Classic.Listener",
                "cloudify.nodes.aws.elb.Rule",
                "cloudify.nodes.aws.elb.TargetGroup",
                "cloudify.nodes.aws.elb.Classic.Policy",
                "cloudify.nodes.aws.elb.Classic.Policy.Stickiness",
                "cloudify.nodes.aws.s3.BaseBucket",
                "cloudify.nodes.aws.s3.BaseBucketObject",
                "cloudify.nodes.aws.s3.Bucket",
                "cloudify.nodes.aws.s3.BucketPolicy",
                "cloudify.nodes.aws.s3.BucketLifecycleConfiguration",
                "cloudify.nodes.aws.s3.BucketTagging",
                "cloudify.nodes.aws.s3.BucketObject",
                "cloudify.nodes.aws.ec2.BaseType",
                "cloudify.nodes.aws.ec2.Vpc",
                "cloudify.nodes.aws.ec2.VpcPeering",
                "cloudify.nodes.aws.ec2.VpcPeeringRequest",
                "cloudify.nodes.aws.ec2.VpcPeeringAcceptRequest",
                "cloudify.nodes.aws.ec2.VpcPeeringRejectRequest",
                "cloudify.nodes.aws.ec2.Subnet",
                "cloudify.nodes.aws.ec2.SecurityGroup",
                "cloudify.nodes.aws.ec2.SecurityGroupRuleIngress",
                "cloudify.nodes.aws.ec2.SecurityGroupRuleEgress",
                "cloudify.nodes.aws.ec2.NATGateway",
                "cloudify.nodes.aws.ec2.Interface",
                "cloudify.nodes.aws.ec2.Instances",
                "cloudify.nodes.aws.ec2.Keypair",
                "cloudify.nodes.aws.ec2.ElasticIP",
                "cloudify.nodes.aws.ec2.NetworkACL",
                "cloudify.nodes.aws.ec2.NetworkAclEntry",
                "cloudify.nodes.aws.ec2.DHCPOptions",
                "cloudify.nodes.aws.ec2.VPNGateway",
                "cloudify.nodes.aws.ec2.VPNConnection",
                "cloudify.nodes.aws.ec2.VPNConnectionRoute",
                "cloudify.nodes.aws.ec2.CustomerGateway",
                "cloudify.nodes.aws.ec2.InternetGateway",
                "cloudify.nodes.aws.ec2.RouteTable",
                "cloudify.nodes.aws.ec2.Route",
                "cloudify.nodes.aws.ec2.Image",
                "cloudify.nodes.aws.ec2.Tags",
                "cloudify.nodes.aws.ec2.EBSVolume",
                "cloudify.nodes.aws.ec2.EBSAttachment",
                "cloudify.nodes.aws.autoscaling.Group",
                "cloudify.nodes.aws.autoscaling.LaunchConfiguration",
                "cloudify.nodes.aws.autoscaling.Policy",
                "cloudify.nodes.aws.autoscaling.LifecycleHook",
                "cloudify.nodes.aws.autoscaling.NotificationConfiguration",
                "cloudify.nodes.aws.cloudwatch.Alarm",
                "cloudify.nodes.aws.cloudwatch.Rule",
                "cloudify.nodes.aws.cloudwatch.Event",
                "cloudify.nodes.aws.cloudwatch.Target",
                "cloudify.nodes.aws.efs.FileSystem",
                "cloudify.nodes.aws.efs.MountTarget",
                "cloudify.nodes.aws.efs.FileSystemTags",
                "cloudify.nodes.aws.kms.CustomerMasterKey",
                "cloudify.nodes.aws.kms.Alias",
                "cloudify.nodes.aws.kms.Grant",
                "cloudify.nodes.aws.CloudFormation.Stack",
                "cloudify.nodes.aws.ecs.Cluster",
                "cloudify.nodes.aws.ecs.Service",
                "cloudify.nodes.aws.ecs.TaskDefinition",
                "cloudify.nodes.swift.s3.Bucket",
                "cloudify.nodes.swift.s3.BucketObject",
                "cloudify.nodes.aws.eks.Cluster",
                "cloudify.nodes.aws.eks.NodeGroup",
                "cloudify.azure.nodes.storage.StorageAccount",
                "cloudify.azure.nodes.storage.DataDisk",
                "cloudify.azure.nodes.storage.FileShare",
                "cloudify.azure.nodes.network.VirtualNetwork",
                "cloudify.azure.nodes.network.NetworkSecurityGroup",
                "cloudify.azure.nodes.network.NetworkSecurityRule",
                "cloudify.azure.nodes.network.Subnet",
                "cloudify.azure.nodes.network.RouteTable",
                "cloudify.azure.nodes.network.Route",
                "cloudify.azure.nodes.network.NetworkInterfaceCard",
                "cloudify.azure.nodes.network.IPConfiguration",
                "cloudify.azure.nodes.network.PublicIPAddress",
                "cloudify.azure.nodes.compute.AvailabilitySet",
                "cloudify.azure.nodes.compute.VirtualMachine",
                "cloudify.azure.nodes.compute.WindowsVirtualMachine",
                "cloudify.azure.nodes.compute.VirtualMachineExtension",
                "cloudify.azure.nodes.network.LoadBalancer",
                "cloudify.azure.nodes.network.LoadBalancer.BackendAddressPool",
                "cloudify.azure.nodes.network.LoadBalancer.Probe",
                "cloudify.azure.nodes.network.LoadBalancer.IncomingNATRule",
                "cloudify.azure.nodes.network.LoadBalancer.Rule",
                "cloudify.azure.Deployment",
                "cloudify.azure.nodes.compute.ContainerService",
                "cloudify.azure.nodes.Plan",
                "cloudify.azure.nodes.WebApp",
                "cloudify.azure.nodes.PublishingUser",
                "cloudify.azure.nodes.compute.ManagedCluster",
                "cloudify.gcp.project",
                "cloudify.gcp.nodes.Instance",
                "cloudify.gcp.nodes.InstanceGroup",
                "cloudify.gcp.nodes.Volume",
                "cloudify.gcp.nodes.Snapshot",
                "cloudify.gcp.nodes.Network",
                "cloudify.gcp.nodes.SubNetwork",
                "cloudify.gcp.nodes.VPCNetworkPeering",
                "cloudify.gcp.nodes.Route",
                "cloudify.gcp.nodes.FirewallRule",
                "cloudify.gcp.nodes.SecurityGroup",
                "cloudify.gcp.nodes.Access",
                "cloudify.gcp.nodes.KeyPair",
                "cloudify.gcp.nodes.ExternalIP",
                "cloudify.gcp.nodes.GlobalAddress",
                "cloudify.gcp.nodes.StaticIP",
                "cloudify.gcp.nodes.Address",
                "cloudify.gcp.nodes.Image",
                "cloudify.gcp.nodes.HealthCheck",
                "cloudify.gcp.nodes.BackendService",
                "cloudify.gcp.nodes.RegionBackendService",
                "cloudify.gcp.nodes.UrlMap",
                "cloudify.gcp.nodes.TargetProxy",
                "cloudify.gcp.nodes.SslCertificate",
                "cloudify.gcp.nodes.ForwardingRule",
                "cloudify.gcp.nodes.GlobalForwardingRule",
                "cloudify.gcp.nodes.DNSZone",
                "cloudify.gcp.nodes.DNSRecord",
                "cloudify.gcp.nodes.DNSAAAARecord",
                "cloudify.gcp.nodes.DNSMXRecord",
                "cloudify.gcp.nodes.DNSNSRecord",
                "cloudify.gcp.nodes.DNSTXTRecord",
                "cloudify.gcp.nodes.KubernetesCluster",
                "cloudify.gcp.nodes.KubernetesNodePool",
                "cloudify.gcp.nodes.KubernetesClusterMonitoring",
                "cloudify.gcp.nodes.KubernetesClusterlegacyAbac",
                "cloudify.gcp.nodes.KubernetesClusterNetworkPolicy",
                "cloudify.gcp.nodes.Topic",
                "cloudify.gcp.nodes.TopicPolicy",
                "cloudify.gcp.nodes.TopicMessage",
                "cloudify.gcp.nodes.Subscription",
                "cloudify.gcp.nodes.SubscriptionPolicy",
                "cloudify.gcp.nodes.Acknowledge",
                "cloudify.gcp.nodes.PullRequest",
                "cloudify.gcp.nodes.StackDriverGroup",
                "cloudify.gcp.nodes.StackDriverTimeSeries",
                "cloudify.gcp.nodes.StackDriverUpTimeCheckConfig",
                "cloudify.gcp.nodes.LoggingSink",
                "cloudify.gcp.nodes.LoggingExclusion",
                "cloudify.gcp.nodes.Logging.BillingAccounts.sinks",
                "cloudify.gcp.nodes.Logging.Folders.sinks",
                "cloudify.gcp.nodes.Logging.Organizations.sinks",
                "cloudify.gcp.nodes.Logging.Projects.sinks",
                "cloudify.gcp.nodes.Logging.BillingAccounts.exclusions",
                "cloudify.gcp.nodes.Logging.Folders.exclusions",
                "cloudify.gcp.nodes.Logging.Organizations.exclusions",
                "cloudify.gcp.nodes.Logging.Projects.exclusions",
                "cloudify.gcp.nodes.Logging.Projects.metrics",
                "cloudify.kubernetes.resources.StatefulSet",
                "cloudify.nodes.helm.Binary",
                "cloudify.nodes.helm.Release",
                "cloudify.nodes.helm.Repo"
              ],
              "type": "string"
            }
          ],
          "description": "The node-type of this node template.",
          "type": "string"
        }
      },
      "required": ["type"],
      "type": "object"
    },
    "nodeTemplateInterface": {
      "patternProperties": {
        "": {
          "$ref": "#/definitions/nodeTemplateInterfaceAction"
        }
      },
      "properties": {
        "configure": {
          "$ref": "#/definitions/nodeTemplateInterfaceAction"
        },
        "delete": {
          "$ref": "#/definitions/nodeTemplateInterfaceAction"
        }
      },
      "type": "object"
    },
    "nodeTemplateInterfaceAction": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "additionalProperties": false,
          "properties": {
            "executor": {
              "description": "Valid values: central_deployment_agent, host_agent. See the Plugins Specification for more info.",
              "enum": ["central_deployment_agent", "host_agent"],
              "type": "string"
            },
            "implementation": {
              "description": "The script or plugin task name to execute.",
              "type": "string"
            },
            "inputs": {
              "description": "Schema of inputs to be passed to the implementation as kwargs.",
              "type": "object"
            },
            "max_retries": {
              "description": "Maximum number of retries for a task. -1 means infinite retries (Default: task_retries in the Cloudify Manager config.yaml file for remote workflows, and task_retries workflow configuration for local workflows).",
              "type": "number"
            },
            "retry_interval": {
              "description": "Minimum wait time (in seconds) between task retries (Default: task_retry_interval in the Cloudify Manager config.yaml file for remote workflows and task_retry_interval workflow configuration for local workflows).",
              "type": "number"
            },
            "timeone": {
              "default": 0,
              "description": "Number of seconds to wait before the operation is terminated by the orchestrator. A value of 0 (or no value at all, which is the default) means no timeout.",
              "type": "number"
            },
            "timeout_recoverable": {
              "default": true,
              "description": "If true (the default), and a timeout occurred, then, the operation will raise a RecoverableError, resulting in the operation being retried. Otherwise, a NonRecoverableError is raised, ending the execution with a failure.",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      ]
    },
    "nodeTemplateInterfaces": {
      "description": "Interfaces enable you to map logical tasks to executable operations.",
      "patternProperties": {
        "": {
          "$ref": "#/definitions/nodeTemplateInterface"
        }
      },
      "type": "object"
    },
    "nodeTemplateRelationship": {
      "additionalProperties": false,
      "properties": {
        "connection_type": {
          "description": "Valid values: all_to_all and all_to_one (See explanation below.)",
          "enum": ["all_to_all", "all_to_one"],
          "type": "string"
        },
        "source_interfaces": {
          "description": "A dictionary of interfaces.",
          "type": "object"
        },
        "target": {
          "description": "The name of the node to which the current node is related.",
          "type": "string"
        },
        "target_interfaces": {
          "description": "A dictionary of interfaces.",
          "type": "object"
        },
        "type": {
          "description": "Either a newly-declared relationship type or one of the relationship types provided by default when importing the types.yaml file.",
          "type": "string"
        }
      },
      "required": ["type"],
      "type": "object"
    },
    "nodeTemplateRelationships": {
      "description": "relationships enable you to define how nodes relate to one another. For example, a web_server node can be contained_in a vm node or an application node can be connected_to a database node.",
      "items": {
        "$ref": "#/definitions/nodeTemplateRelationship"
      },
      "type": "array"
    },
    "nodeTemplates": {
      "description": "node_templates represent the actual instances of node types that eventually represent the running application/service, as described in the blueprint. node_templates are more commonly referred to as nodes. Nodes can comprise more than one instance. For example, you might define a node that contains two VMs. Each VM is a node_instance.",
      "patternProperties": {
        "": {
          "$ref": "#/definitions/nodeTemplate"
        }
      },
      "type": "object"
    },
    "nodeType": {
      "properties": {
        "derived_from": {
          "description": "A string referencing a parent type.",
          "type": "string"
        },
        "interfaces": {
          "description": "A dictionary of node interfaces.",
          "type": "object"
        },
        "properties": {
          "description": "A dictionary of node properties.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2Base": {
      "properties": {
        "Tags": {
          "$ref": "#/definitions/tags"
        },
        "client_config": {
          "$ref": "#/definitions/awsConnectionConfig"
        },
        "resource_id": {
          "$ref": "#/definitions/awsResourceId"
        },
        "use_external_resource": {
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource,\ntrue if you are bringing an existing resource, false if you want cloudify to create it.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2EBSAttachment": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/awsConnectionConfig"
        },
        "resource_config": {
          "description": "Configuration key-value data to be passed as-is to the corresponding\nBoto3 method. Key names must match the case that Boto3 requires.",
          "properties": {
            "kwargs": {
              "properties": {
                "Device": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The device name (for example, /dev/sdh or xvdh )"
                },
                "DryRun": {
                  "$ref": "#/definitions/cloudifyBooleanOrGetInput",
                  "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation ."
                },
                "InstanceId": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The ID of the instance."
                },
                "VolumeId": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The ID of the EBS volume. The volume and instance must be within the same Availability Zone"
                }
              },
              "required": ["Device", "InstanceId", "VolumeId"],
              "type": "object"
            }
          },
          "type": "object"
        },
        "resource_id": {
          "$ref": "#/definitions/awsResourceId"
        },
        "use_external_resource": {
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource,\ntrue if you are bringing an existing resource, false if you want cloudify to create it.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2EBSVolume": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeAWSEC2Base"
        },
        {
          "properties": {
            "resource_config": {
              "description": "Configuration key-value data to be passed as-is to the corresponding\nBoto3 method. Key names must match the case that Boto3 requires.",
              "properties": {
                "AvailabilityZone": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The Availability Zone in which to create the volume."
                },
                "Size": {
                  "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                  "description": "The size of the volume, in GiBs."
                },
                "kwargs": {
                  "properties": {
                    "DryRun": {
                      "$ref": "#/definitions/cloudifyBooleanOrGetInput",
                      "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation . Otherwise, it is UnauthorizedOperation."
                    },
                    "Encrypted": {
                      "$ref": "#/definitions/cloudifyBooleanOrGetInput",
                      "description": "Specifies whether the volume should be encrypted. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Encryption by Default in the Amazon Elastic Compute Cloud User Guide.\nEncrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types ."
                    },
                    "Iops": {
                      "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                      "description": "The number of I/O operations per second (IOPS) to provision for the volume, with a maximum ratio of 50 IOPS/GiB. Range is 100 to 64,000 IOPS for volumes in most Regions. Maximum IOPS of 64,000 is guaranteed only on Nitro-based instances . Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types in the Amazon Elastic Compute Cloud User Guide.\nThis parameter is valid only for Provisioned IOPS SSD (io1) volumes."
                    },
                    "KmsKeyId": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true.\n\nYou can specify the CMK using any of the following:\n\nKey ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.\nKey alias. For example, alias/ExampleAlias.\nKey ARN. For example, arn:aws:kms:us-east-1 :012345678910 :key/abcd1234-a123-456a-a12b-a123b4cd56ef .\nAlias ARN. For example, arn:aws:kms:us-east-1 :012345678910 :alias/ExampleAlias .\nAWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails."
                    },
                    "OutpostArn": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The Amazon Resource Name (ARN) of the Outpost."
                    },
                    "Size": {
                      "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                      "description": "The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size.\n\nConstraints: 1-16,384 for gp2 , 4-16,384 for io1 , 500-16,384 for st1 , 500-16,384 for sc1 , and 1-1,024 for standard . If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\n\nDefault: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size."
                    },
                    "SnapshotId": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size."
                    },
                    "TagSpecifications": {
                      "items": {
                        "properties": {
                          "ResourceType": {
                            "$ref": "#/definitions/cloudifyStringOrGetInput",
                            "description": "The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | customer-gateway | dedicated-host | dhcp-options | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | import-image-task | import-snapshot-task | instance | internet-gateway | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | placement-group | prefix-list | natgateway | network-acl | route-table | security-group | spot-fleet-request | spot-instances-request | snapshot | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | volume |vpc | vpc-peering-connection | vpc-endpoint (for interface and gateway endpoints) | vpc-endpoint-service (for AWS PrivateLink) | vpc-flow-log | vpn-connection | vpn-gateway."
                          },
                          "Tags": {
                            "items": {
                              "properties": {
                                "Key": {
                                  "$ref": "#/definitions/cloudifyStringOrGetInput"
                                },
                                "Value": {
                                  "$ref": "#/definitions/cloudifyStringOrGetInput"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "VolumeType": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "default": "gp2",
                      "description": "The volume type. This can be gp2 for General Purpose SSD, io1 for Provisioned IOPS SSD, st1 for Throughput Optimized HDD, sc1 for Cold HDD, or standard for Magnetic volumes.\n\nDefault: gp2"
                    }
                  },
                  "type": "object"
                }
              },
              "required": ["AvailabilityZone"],
              "type": "object"
            },
            "use_available_zones": {
              "description": "A boolean to choose another available zone if the one provided is not available.",
              "type": "boolean"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeAWSEC2ElasticIP": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/awsClientConfig"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2Image": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeAWSEC2Base"
        },
        {
          "properties": {
            "resource_config": {
              "description": "Configuration key-value data to be passed as-is to the corresponding\nBoto3 method. Key names must match the case that Boto3 requires.",
              "properties": {
                "kwargs": {
                  "description": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#EC2.Client.describe_images",
                  "properties": {
                    "Filters": {
                      "items": {
                        "properties": {
                          "Name": {
                            "type": "string"
                          },
                          "Values": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeAWSEC2Instances": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeAWSEC2Base"
        },
        {
          "properties": {
            "agent_config": {
              "properties": {
                "install_method": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "resource_config": {
              "description": "Configuration key-value data to be passed as-is to the corresponding\nBoto3 method. Key names must match the case that Boto3 requires.",
              "properties": {
                "ImageId": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template"
                },
                "InstanceType": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "default": "m1.small",
                  "description": "The instance type. For more information, see Instance types in the Amazon Elastic Compute Cloud User Guide.\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\nDefault: m1.small"
                },
                "LaunchTemplate": {
                  "properties": {
                    "LaunchTemplateId": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    },
                    "LaunchTemplateName": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    },
                    "Version": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    }
                  },
                  "type": "object"
                },
                "MaxCount": {
                  "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                  "default": "1"
                },
                "MinCount": {
                  "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                  "default": "1"
                },
                "kwargs": {
                  "description": "http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.run_instances",
                  "properties": {
                    "BlockDeviceMappings": {
                      "description": "The block device mapping entries.",
                      "type": "object"
                    },
                    "Ipv6AddressCount": {
                      "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                      "description": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.\n\nYou cannot specify this option and the network interfaces option in the same request."
                    },
                    "KernelId": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The ID of the kernel."
                    },
                    "KeyName": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The name of the key pair. You can create a key pair using CreateKeyPair or ImportKeyPair "
                    },
                    "SecondaryPrivateIpAddressCount": {
                      "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                      "description": "The number of secondary private IPv4 addresses to assign to a network interface."
                    },
                    "SecurityGroupIds": {
                      "description": "The IDs of the security groups. You can create a security group using CreateSecurityGroup.\n\nIf you specify a network interface, you must specify any security groups as part of the network interface.",
                      "items": {
                        "$ref": "#/definitions/cloudifyStringOrGetInput"
                      },
                      "type": "array"
                    },
                    "SubnetId": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The ID of the subnet for the network interface."
                    }
                  },
                  "type": "object"
                }
              },
              "required": ["MaxCount", "MinCount"],
              "type": "object"
            },
            "use_ipv6_ip": {
              "type": "boolean"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeAWSEC2Interface": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeAWSEC2Base"
        },
        {
          "properties": {
            "resource_config": {
              "description": "Configuration key-value data to be passed as-is to the corresponding\nBoto3 method. Key names must match the case that Boto3 requires.",
              "properties": {
                "kwargs": {
                  "description": "http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.create_network_interface",
                  "properties": {
                    "Description": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "A description for the network interface."
                    },
                    "Groups": {
                      "description": "The IDs of one or more security groups.",
                      "items": {
                        "$ref": "#/definitions/cloudifyStringOrGetInput"
                      },
                      "type": "array"
                    },
                    "InterfaceType": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "Indicates the type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa . For more information, see Elastic Fabric Adapter in the Amazon Elastic Compute Cloud User Guide."
                    },
                    "Ipv6AddressCount": {
                      "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                      "description": "The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true , you can specify 0 to override this setting."
                    },
                    "PrivateIpAddress": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The primary private IPv4 address of the network interface. If you don't specify an IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in privateIpAddresses as primary (only one IP address can be designated as primary)."
                    },
                    "SecondaryPrivateIpAddressCount": {
                      "$ref": "#/definitions/cloudifyIntegerOrGetInput",
                      "description": "The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using privateIpAddresses .\n\nThe number of IP addresses you can assign to a network interface varies by instance type. For more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide ."
                    },
                    "SubnetId": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "description": "The ID of the subnet to associate with the network interface."
                    }
                  },
                  "required": ["SubnetId"],
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeAWSEC2NATGateway": {
      "properties": {
        "Tags": {
          "$ref": "#/definitions/tags"
        },
        "client_config": {
          "$ref": "#/definitions/awsClientConfig"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2Route": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/awsClientConfig"
        },
        "resource_config": {
          "properties": {
            "kwargs": {
              "properties": {
                "DestinationCidrBlock": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2RouteTable": {
      "properties": {
        "Tags": {
          "$ref": "#/definitions/tags"
        },
        "client_config": {
          "$ref": "#/definitions/awsClientConfig"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2SecurityGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeAWSEC2Base"
        },
        {
          "properties": {
            "resource_config": {
              "description": "Configuration key-value data to be passed as-is to the corresponding\nBoto3 method. Key names must match the case that Boto3 requires.",
              "properties": {
                "Description": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The description for the security group."
                },
                "GroupName": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The name of the security group."
                },
                "VpcId": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "description": "The ID of the VPC. Required for EC2-VPC."
                },
                "kwargs": {
                  "description": "http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.create_security_group",
                  "type": "object"
                }
              },
              "required": ["Description", "GroupName"],
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeAWSEC2SecurityGroupRuleIngress": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeAWSEC2Base"
        },
        {
          "properties": {
            "resource_config": {
              "description": "Configuration key-value data to be passed as-is to the corresponding\nBoto3 method. Key names must match the case that Boto3 requires.",
              "properties": {
                "IpPermissions": {
                  "items": {
                    "properties": {
                      "FromPort": {
                        "type": "integer"
                      },
                      "IpProtocol": {
                        "type": "string"
                      },
                      "IpRanges": {
                        "properties": {
                          "CidrIp": {
                            "type": "string"
                          }
                        },
                        "type": "array"
                      },
                      "ToPort": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "kwargs": {
                  "description": "http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.authorize_security_group_ingress\nhttp://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.Client.authorize_security_group_egress",
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeAWSEC2Subnet": {
      "properties": {
        "Tags": {
          "$ref": "#/definitions/tags"
        },
        "client_config": {
          "$ref": "#/definitions/awsClientConfig"
        },
        "resource_config": {
          "properties": {
            "AvailabilityZone": {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            "CidrBlock": {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            "kwargs": {
              "properties": {
                "Ipv6CidrBlock": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSEC2VPC": {
      "properties": {
        "Tags": {
          "$ref": "#/definitions/tags"
        },
        "client_config": {
          "$ref": "#/definitions/awsClientConfig"
        },
        "resource_config": {
          "properties": {
            "CidrBlock": {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            "kwargs": {
              "properties": {
                "AmazonProvidedIpv6CidrBlock": {
                  "$ref": "#/definitions/cloudifyBooleanOrGetInput"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeAWSInternetGateway": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/awsClientConfig"
        }
      },
      "type": "object"
    },
    "nodeTypeAnsibleExecutorInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["ansible.cloudify_ansible.tasks.cleanup"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["ansible.cloudify_ansible.tasks.run"],
                  "type": "string"
                },
                "inputs": {
                  "$ref": "#/definitions/ansiblePlaybookInputs"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeAnsibleExecutorProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/ansiblePlaybookConfig"
        }
      ],
      "type": "object"
    },
    "nodeTypeCloudifyAzureDeploymentInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": ["azure.cloudify_azure.resources.deployment.create"],
              "type": "string"
            },
            "delete": {
              "enum": ["azure.cloudify_azure.resources.deployment.delete"],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureDeploymentProperties": {
      "properties": {
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "params": {
          "description": "Deployment params",
          "type": "object"
        },
        "template": {
          "anyOf": [
            {
              "$ref": "#/definitions/cloudifyStringOrGetInput"
            },
            {
              "type": "object"
            }
          ],
          "description": "Deployment template. Can be either a string (which will be parsed as\nJSON) or a dict (which will be passed as-is to the Azure SDK)."
        },
        "template_file": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Path or URL to template file. Ignored if `template` is specified."
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["name", "location", "use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeAvailabilitySetInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.compute.availabilityset.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.compute.availabilityset.delete"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeAvailabilitySetProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-03-30",
          "description": "Compute API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureComputeAvailabilitySetConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["resource_config", "use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeContainerServiceInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.compute.container_service.create"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "azure_config": {
                    "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                  },
                  "client_config": {
                    "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                  },
                  "container_service_config": {
                    "$ref": "#/definitions/cloudifyStringOrGetInput"
                  },
                  "name": {
                    "$ref": "#/definitions/cloudifyStringOrGetInput"
                  },
                  "resource_group": {
                    "$ref": "#/definitions/cloudifyStringOrGetInput"
                  }
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.compute.container_service.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeContainerServiceProperties": {
      "properties": {
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "container_service_config": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Container service config details"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "resource_group": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "required": ["name", "resource_group"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeManagedClusterInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.compute.managed_cluster.create"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "azure_config": {
                      "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
                      "default": {
                        "get_property": ["SELF", "azure_config"]
                      }
                    },
                    "client_config": {
                      "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
                      "default": {
                        "get_property": ["SELF", "client_config"]
                      }
                    },
                    "cluster_name": {
                      "default": {
                        "get_property": ["SELF", "cluster_name"]
                      },
                      "type": "string"
                    },
                    "resource_config": {
                      "$ref": "#/definitions/cloudifyDatatypesAzureComputeManagedClusterConfig",
                      "default": {
                        "get_property": ["SELF", "resource_config"]
                      }
                    },
                    "resource_group": {
                      "default": {
                        "get_property": ["SELF", "resource_group"]
                      },
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.compute.managed_cluster.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeManagedClusterProperties": {
      "properties": {
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "cluster_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureComputeManagedClusterConfig",
          "description": "Managed Cluster config details, including location, profiles"
        },
        "resource_group": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "store_kube_config_in_runtime": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true,
          "description": "it will store the kubernetes configuration into a runtime property ['kubeconf'] to\nuse later to interact with the cluster"
        }
      },
      "required": [
        "resource_group",
        "cluster_name",
        "resource_config",
        "store_kube_config_in_runtime"
      ],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeVirtualMachineExtensionInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create:": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.compute.virtualmachineextension.create"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "resource_config": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.compute.virtualmachineextension.delete"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeVirtualMachineExtensionProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-03-30",
          "description": "Compute API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        },
        "virtual_machine_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Virtual Machine that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Virtual Machine node)"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeVirtualMachineInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.compute.virtualmachine.configure"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "command_to_execute": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    },
                    "file_uris": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeVirtualMachineProperties": {
      "properties": {
        "agent_config": {
          "$ref": "#/definitions/cloudifyDataTypesAgentConfig",
          "type": "object"
        },
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-03-30",
          "description": "Compute API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "ip": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Property specifying the IP address of the resource to\nuse for the agent installer."
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "os_family": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "linux",
          "description": "Property specifying what type of operating system family\nthis compute node will run."
        },
        "plan": {
          "description": "Specifies information about the marketplace image used to create the virtual\nmachine. This element is only used for marketplace images.",
          "type": "object"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureComputeVirtualMachineConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "storage_endpoint": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "core.windows.net",
          "description": "This is the suffix for the storage endpoint. Supported values are core.windows.net or local.azurestack.external."
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        },
        "use_public_ip": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "description": "Tells the deployment to use the public IP (if available) of the resource\nfor Cloudify Agent connections"
        }
      },
      "required": ["use_external_resource", "resource_config"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeWindowsVirtualMachineInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.compute.virtualmachine.configure"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "command_to_execute": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    },
                    "file_uris": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesComputeWindowsVirtualMachineProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeCloudifyAzureNodesComputeWindowsVirtualMachineProperties"
        },
        {
          "properties": {
            "agent_config": {
              "type": "object"
            },
            "os_family": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "default": "windows"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkIPConfigurationProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkIPConfigurationConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerBackendAddressPoolInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.create_backend_pool"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.delete_backend_pool"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerBackendAddressPoolProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "load_balancer_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerIncomingNATRuleInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.create_incoming_nat_rule"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.delete_incoming_nat_rule"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerIncomingNATRuleProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "load_balancer_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkLoadBalancerIncomingNATRuleConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.configure"
              ],
              "type": "string"
            },
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.delete"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerProbeInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.create_probe"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.delete_probe"
              ],
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerProbeProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "load_balancer_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkLoadBalancerProbeConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkLoadBalancerConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerRuleInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.create_rule"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.loadbalancer.delete_rule"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkLoadBalancerRuleProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "load_balancer_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkLoadBalancerRuleConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkNetworkInterfaceCardInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "enum": [
                "azure.cloudify_azure.resources.network.networkinterfacecard.configure"
              ],
              "type": "string"
            },
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.networkinterfacecard.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.networkinterfacecard.delete"
              ],
              "type": "string"
            },
            "start": {
              "enum": [
                "azure.cloudify_azure.resources.network.networkinterfacecard.start"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkNetworkInterfaceCardProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "primary": {
          "default": false,
          "description": "When using multiple Network Interfaces, a primary must be set"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkNetworkInterfaceCardConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkNetworkSecurityGroupInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.networksecuritygroup.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.networksecuritygroup.delete"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkNetworkSecurityGroupProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkNetworkSecurityGroupConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkNetworkSecurityRuleInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.networksecurityrule.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.networksecurityrule.delete"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkNetworkSecurityRuleProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "network_security_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Network Security Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Network Security Groupnode)"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkNetworkSecurityRuleConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkPublicIPAddressInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.publicipaddress.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.publicipaddress.delete"
              ],
              "type": "string"
            },
            "start": {
              "enum": [
                "azure.cloudify_azure.resources.network.publicipaddress.start"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkPublicIPAddressProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkPublicIPAddressConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkRouteInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": ["azure.cloudify_azure.resources.network.route.create"],
              "type": "string"
            },
            "delete": {
              "enum": ["azure.cloudify_azure.resources.network.route.delete"],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkRouteProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkRouteConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "route_table_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Network Security Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Virtual Network node)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkRouteTableInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.routetable.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.routetable.delete"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkRouteTableProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location:": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkRouteTableConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkSubnetInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "create": {
            "enum": ["azure.cloudify_azure.resources.network.subnet.create"],
            "type": "string"
          },
          "delete": {
            "enum": ["azure.cloudify_azure.resources.network.subnet.delete"],
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkSubnetProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkSubnetConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        },
        "virtual_network_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Virtual Network that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Virtual Network node)"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkVirtualNetworkInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.network.virtualnetwork.create"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.network.virtualnetwork.delete"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesNetworkVirtualNetworkProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2016-09-01",
          "description": "Network API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureNetworkVirtualNetworkConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": "false",
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesPlanInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.app_service.plan.create"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "azure_config": {
                      "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                    },
                    "client_config": {
                      "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                    },
                    "name": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    },
                    "resource_group": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    },
                    "sku": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.app_service.plan.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesPlanProperties": {
      "properties": {
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "resource_group": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "sku": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "SKU details, including location, name, capacity and tier"
        },
        "use_external_resource": {
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource",
          "type": "boolean"
        }
      },
      "required": ["name", "resource_group", "use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesPublishingUserInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.app_service.publishing_user.set_user"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "azure_config": {
                      "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                    },
                    "client_config": {
                      "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                    },
                    "user_details": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesPublishingUserProperties": {
      "properties": {
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "user_details": {
          "description": "User details including location, name, kind, user_name,...",
          "type": "object"
        }
      },
      "required": ["user_details"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesResourceGroupInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": ["azure.cloudify_azure.resources.resourcegroup.create"],
              "type": "string"
            },
            "delete": {
              "enum": ["azure.cloudify_azure.resources.resourcegroup.delete"],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesResourceGroupProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2017-05-10",
          "description": "Resources API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource. Resource group name must be no longer than\n80 characters long. It can contain only alphanumeric characters,\ndash, underscore, opening parenthesis, closing parenthesis,\nand period. The name cannot end with a period."
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": "false",
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesStorageDataDiskProperties": {
      "properties": {
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource (include any extension, such as .vhd).\nCan be up to 80 characters in length and\ncontain lowercase letters, numbers, \".\", and \"_\". Must start\nwith a number or lowercase letter and cannot end with\neither \"_\" or \".\""
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureStorageDataDiskConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesStorageDataDisktInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.storage.disk.create_data_disk"
              ],
              "type": "string"
            },
            "delete": {
              "enum": [
                "azure.cloudify_azure.resources.storage.disk.delete_data_disk"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesStorageFileShareInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "create": {
            "enum": [
              "azure.cloudify_azure.resources.storage.file.create_file_share"
            ],
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesStorageFileShareProperties": {
      "properties": {
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource. Can be up to 63 characters in length and\ncontain lowercase letters, numbers, and dashes. Must start\nwith a number or lowercase letter and cannot contain\ntwo consecutive dashes."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureStorageFileShareConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This property\nwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["use_external_resource"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesStorageStorageAccountInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "delete": {
            "enum": [
              "azure.cloudify_azure.resources.storage.storageaccount.delete"
            ],
            "type": "string"
          },
          "properties": {
            "create": {
              "enum": [
                "azure.cloudify_azure.resources.storage.storageaccount.create"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesStorageStorageAccountProperties": {
      "properties": {
        "api_version": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "2015-06-15",
          "description": "Storage API Version"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "location": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Specifies the supported Azure location for the resource"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name for the resource. Storage account name must be between\n3 and 24 characters in length and use numbers and lower-case\nletters only."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureStorageStorageAccountConfig",
          "description": "A dictionary of values to pass as properties when creating the resource"
        },
        "resource_group_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Name of the Resource Group that the existing resource belongs to\n(this is only useful when not using a relationship between a resource\nnode and a Resource Group node)"
        },
        "retry_after": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "description": "Overrides the Azure-specified \"retry_after\" response. This propertynwill set the number of seconds for each task retry interval (in the\ncase of iteratively checking the status of an asynchronous operation)"
        },
        "sku": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "A Storage account SKU if needed."
        },
        "tags": {
          "description": "Specifies a dictionary of one or more name and value pairs that describe a tag",
          "type": "object"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": "false",
          "description": "Indicate whether the resource exists or if Cloudify should create the resource"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesWebAppInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.app_service.webapp.create"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "app_config": {
                    "$ref": "#/definitions/cloudifyStringOrGetInput"
                  },
                  "azure_config": {
                    "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                  },
                  "client_config": {
                    "$ref": "#/definitions/cloudifyDatatypesAzureConfig"
                  },
                  "name": {
                    "$ref": "#/definitions/cloudifyStringOrGetInput"
                  },
                  "resource_group": {
                    "$ref": "#/definitions/cloudifyStringOrGetInput"
                  }
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "azure.cloudify_azure.resources.app_service.webapp.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyAzureNodesWebAppProperties": {
      "properties": {
        "app_config": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "App config details, including location and plan"
        },
        "azure_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesAzureConfig",
          "description": "A dictionary of values to pass to authenticate with the Azure API"
        },
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "resource_group": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "required": ["name", "resource_group"],
      "type": "object"
    },
    "nodeTypeCloudifyGCPNodesInstanceInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": ["gcp_plugin.cloudify_gcp.compute.instance.create"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "additional_settings": {
                      "default": {
                        "get_property": ["SELF", "additional_settings"]
                      },
                      "type": "object"
                    },
                    "can_ip_forward": {
                      "default": {
                        "get_property": ["SELF", "can_ip_forward"]
                      },
                      "type": "boolean"
                    },
                    "external_ip": {
                      "default": {
                        "get_property": ["SELF", "external_ip"]
                      },
                      "type": "boolean"
                    },
                    "image_id": {
                      "default": {
                        "get_property": ["SELF", "image_id"]
                      },
                      "type": "string"
                    },
                    "instance_type": {
                      "default": {
                        "get_property": ["SELF", "instance_type"]
                      },
                      "type": "string"
                    },
                    "name": {
                      "default": {
                        "get_property": ["SELF", "name"]
                      },
                      "type": "string"
                    },
                    "scopes": {
                      "default": {
                        "get_property": ["SELF", "scopes"]
                      },
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "startup_script": {
                      "default": {
                        "get_property": ["SELF", "startup_script"]
                      },
                      "type": "string"
                    },
                    "tags": {
                      "default": {
                        "get_property": ["SELF", "tags"]
                      },
                      "type": "string"
                    },
                    "zone": {
                      "default": {
                        "get_property": ["SELF", "zone"]
                      },
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["gcp_plugin.cloudify_gcp.compute.instance.delete"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "name": {
                      "default": {
                        "get_attribute": ["SELF", "name"]
                      },
                      "type": "string"
                    },
                    "zone": {
                      "default": {
                        "get_attribute": ["SELF", "zone"]
                      },
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["gcp_plugin.cloudify_gcp.compute.instance.start"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "name": {
                      "default": {
                        "get_attribute": ["SELF", "name"]
                      },
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyGCPNodesInstanceProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/gcpExternalResource"
        },
        {
          "$ref": "#/definitions/gcpResourceId"
        },
        {
          "properties": {
            "additional_settings": {
              "description": "Additional instance settings.",
              "type": "object"
            },
            "block_project_ssh_keys": {
              "default": false,
              "description": " Disable project-wide ssh keys for this Instance",
              "type": "boolean"
            },
            "can_ip_forward": {
              "default": false,
              "description": "Is the VM allowed to send packets with source address different to its own?",
              "type": "boolean"
            },
            "external_ip": {
              "default": false,
              "description": "Should the Instance be created with an externally-accessible\nIP address. This will be an ephemeral IP.\nIf you would like to use an IP address which can be transferred\nto another Instance then connect this Instance to an `Address`\nnode using the\n`cloudify.gcp.relationships.instance_connected_to_ip`\nrelationship.",
              "type": "boolean"
            },
            "gcp_config": {
              "description": "A dictionary of values to pass to authenticate with the GCP API.",
              "type": "object"
            },
            "image_id": {
              "description": "The ID of the image in your GCP account.",
              "type": "string"
            },
            "instance_type": {
              "default": "n1-standard-1",
              "description": "The instance's type. All available instance types can be found here:\nhttps://cloud.google.com/compute/docs/machine-types",
              "type": "string"
            },
            "name": {
              "description": "Optional instance name. By default it will be instance id.",
              "type": "string"
            },
            "scopes": {
              "description": "Optional scopes. If not will set by default:\n'https://www.googleapis.com/auth/devstorage.read_write',\n'https://www.googleapis.com/auth/logging.write'",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "startup_script": {
              "description": "A script which will be run when the Instance is first started\nexample:\n  type: string\n  script: |\n    yum install some stuff\n    systemctl start it\nor:\n  type: file\n  script: <path to script file>",
              "type": "string"
            },
            "tags": {
              "description": "Optional tags. If not given, this instance will have a tag only with\nits name.",
              "type": "string"
            },
            "use_public_ip": {
              "default": false,
              "description": "Tells the deployment to use the public IP (if available) of the resource\nfor Cloudify Agent connections",
              "type": "boolean"
            },
            "zone": {
              "description": "Optional zone name. If not given, this instance will be deployed\bin default zone.",
              "type": "string"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeCloudifyGCPProjectInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["gcp_plugin.cloudify_gcp.admin.projects.create"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["gcp_plugin.cloudify_gcp.admin.projects.delete"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyGCPProjectProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/gcpExternalResource"
        },
        {
          "$ref": "#/definitions/gcpResourceId"
        },
        {
          "properties": {
            "gcp_config": {
              "description": "A dictionary of values to pass to authenticate with the GCP API.",
              "type": "object"
            },
            "name": {
              "description": "Optional project name. By default it will be instance id.",
              "type": "string"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeCloudifyNodesCloudInitCloudConfigInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": ["cloudinit.cloudify_cloudinit.tasks.update"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["cloudinit.cloudify_cloudinit.tasks.update"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["cloudinit.cloudify_cloudinit.tasks.delete"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["cloudinit.cloudify_cloudinit.tasks.update"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "stop": {
              "properties": {
                "implementation": {
                  "enum": ["cloudinit.cloudify_cloudinit.tasks.update"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesCloudInitCloudConfigProperties": {
      "properties": {
        "encode_base64": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": "false"
        },
        "header": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "#cloud-config"
        },
        "resource_config": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesDeploymentProxyInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": [
                    "cfy_util.cloudify_deployment_proxy.tasks.create_deployment"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "cfy_util.cloudify_deployment_proxy.tasks.upload_blueprint"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "cfy_util.cloudify_deployment_proxy.tasks.delete_deployment"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": [
                    "cfy_util.cloudify_deployment_proxy.tasks.execute_start"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "interval": {
                      "default": 10,
                      "description": "Polling interval (seconds)",
                      "type": "integer"
                    },
                    "timeout": {
                      "default": 1800,
                      "description": "How long (in seconds) to wait for execution to finish before timing out",
                      "type": "integer"
                    },
                    "workflow_id": {
                      "default": "install",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "stop": {
              "properties": {
                "implementation": {
                  "enum": [
                    "cfy_util.cloudify_deployment_proxy.tasks.execute_start"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "resource_config": {
                      "$ref": "#/definitions/cloudifyDatatypesDeploymentProxy"
                    },
                    "workflow_id": {
                      "default": "uninstall",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesDeploymentProxyProperties": {
      "properties": {
        "client": {
          "description": "Client configuration, if empty will be reused manager client:\n  host: Host of Cloudify's management machine.\n  port: Port of REST API service on management machine.\n  protocol: Protocol of REST API service on management machine,\n            defaults to http.\n  api_version: version of REST API service on management machine.\n  headers: Headers to be added to request.\n  query_params: Query parameters to be added to the request.\n  cert: Path to a copy of the server's self-signed certificate.\n  trust_all: if `False`, the server's certificate\n            (self-signed or not) will be verified.\n  username: Cloudify User username.\n  password: Cloudify User password.\n  token: Cloudify User token.\n  tenant: Cloudify Tenant name.",
          "properties": {
            "host": {
              "default": "127.0.0.1",
              "type": "string"
            },
            "password": {
              "default": "admin",
              "type": "string"
            },
            "tenant": {
              "default": "default_tenant",
              "type": "string"
            },
            "username": {
              "default": "admin",
              "type": "string"
            }
          },
          "type": "object"
        },
        "plugins": {
          "description": "Optional, list of plugins for upload.\n  wagon_path: Url for plugin wagon file.\n  plugin_yaml_path: Url for plugin yaml file.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesDeploymentProxy"
        },
        "secrets": {
          "description": "Optional, dictionary of secrets for set before run deployments.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesFTPInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["cfy_ftp.cloudify_ftp.tasks.create"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "files": {
                      "description": "list files with content from blueprint to upload",
                      "type": "object"
                    },
                    "raw_files": {
                      "description": "list files from blueprint to upload",
                      "type": "object"
                    },
                    "resource_config": {
                      "$ref": "#/definitions/cloudifyDatatypesFtpAuth"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["cfy_ftp.cloudify_ftp.tasks.delete"],
                  "type": "string"
                },
                "inputs": {
                  "resource_config": {
                    "$ref": "#/definitions/cloudifyDatatypesFtpAuth"
                  }
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesFTPProperties": {
      "properties": {
        "files": {
          "description": "list files with content from blueprint to upload",
          "type": "object"
        },
        "raw_files": {
          "description": "list files from blueprint to upload",
          "type": "object"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesFtpAuth"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeCloudifyNodesFileInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["cfy_files.cloudify_files.tasks.create"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["cfy_files.cloudify_files.tasks.delete"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesFileProperties": {
      "properties": {
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesFile"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeCloudifyNodesNodeInstanceProxyProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeCloudifyNodesDeploymentProxyProperties"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/cloudifyDatatypesNodeInstanceProxy"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeCloudifyNodesRSAKeyInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["keys.cloudify_ssh_key.operations.create"],
                  "type": "string"
                },
                "inputs": {
                  "store_private_key_material": {
                    "default": false,
                    "description": "Allow the private key material to be stored as a runtime\nproperty. Not recommended for manager deployments.",
                    "type": "boolean"
                  },
                  "store_public_key_material": {
                    "default": true,
                    "description": "Allow the public key material to be stored as a runtime\nproperty. Recommended.",
                    "type": "boolean"
                  }
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["keys.cloudify_ssh_key.operations.delete"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesRSAKeyProperties": {
      "properties": {
        "key_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Deprecated. Use resource_config.key_name."
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesKey",
          "description": "A dictionary of values to pass to configure the key."
        },
        "use_secret_store": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true
        },
        "use_secrets_if_exist": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "this flag is able to be true only if use_secret_store is true\nif this property is false the secret for the key value will be\ncreated, if true then the existing secrets of an existing node\nwith same key_name will be used as a key, if this property is true\nand the secrets does not exist they will be created."
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesSecretsReaderInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["secrets.cloudify_secrets.tasks.read"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "update": {
              "properties": {
                "implementation": {
                  "enum": ["secrets.cloudify_secrets.tasks.read"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesSecretsReaderProperties": {
      "properties": {
        "keys": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "separator": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "variant": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesSecretsWriterInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["secrets.cloudify_secrets.tasks.create"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["secrets.cloudify_secrets.tasks.delete"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "update": {
              "properties": {
                "implementation": {
                  "enum": ["secrets.cloudify_secrets.tasks.update"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyNodesSecretsWriterProperties": {
      "properties": {
        "do_not_delete": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false
        },
        "entries": {
          "type": "object"
        },
        "separator": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        },
        "variant": {
          "$ref": "#/definitions/cloudifyStringOrGetInput"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyRestBunchRequestsInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.bunch_execute"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "auth": {
                      "type": "object"
                    },
                    "templates": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.bunch_execute"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "auth": {
                      "type": "object"
                    },
                    "templates": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.bunch_execute"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "auth": {
                      "type": "object"
                    },
                    "templates": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.bunch_execute"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "auth": {
                      "type": "object"
                    },
                    "templates": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "stop": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.bunch_execute"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "auth": {
                      "type": "object"
                    },
                    "templates": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyRestBunchRequestsProperties": {
      "properties": {
        "cert": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": null,
          "description": "Supported such values:\n* `None`: default value, ignore client certificates,\n* `<file path>`: path to certificate on local system,\n* `<certificate content>`: certificate content."
        },
        "host": {
          "description": "host name or IP addresses of Rest Servers\nif list of hosts is not needed single host can be provided by this\nproperty. NOTE: the 'hosts' property overwrite the 'host' property",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hosts": {
          "description": "list of hosts name or IP addresses of Rest Servers",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "params": {
          "description": "Template parameters. Default is empty dictionary.",
          "type": "object"
        },
        "port": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": -1,
          "description": "port number. When -1 default ports are used\n(80 for ssl = false and 443 for ssl = true)"
        },
        "proxies": {
          "description": "List of proxies.",
          "type": "object"
        },
        "ssl": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "http or https"
        },
        "timeout": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": null,
          "description": "Timeout value for requests."
        },
        "verify": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true,
          "description": "A boolean which controls whether we verify the server's TLS\ncertificate. Supported such values:\n* `True`: default value, check certificates,\n* `False`: ignore server certificates,\n* `<file path>`: path to certificate on local system,\n* `<certificate content>`: certificate content."
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyRestRequestsInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.execute"],
                  "type": "string"
                },
                "inputs": {
                  "$ref": "#/definitions/restTemplateInputs"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.execute"],
                  "type": "string"
                },
                "inputs": {
                  "$ref": "#/definitions/restTemplateInputs"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.execute"],
                  "type": "string"
                },
                "inputs": {
                  "$ref": "#/definitions/restTemplateInputs"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.execute"],
                  "type": "string"
                },
                "inputs": {
                  "$ref": "#/definitions/restTemplateInputs"
                }
              },
              "type": "object"
            },
            "stop": {
              "properties": {
                "implementation": {
                  "enum": ["rest.cloudify_rest.tasks.execute"],
                  "type": "string"
                },
                "inputs": {
                  "$ref": "#/definitions/restTemplateInputs"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyRestRequestsProperties": {
      "properties": {
        "cert": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": null,
          "description": "Supported such values:\n* `None`: default value, ignore client certificates,\n* `<file path>`: path to certificate on local system,\n* `<certificate content>`: certificate content."
        },
        "host": {
          "description": "host name or IP addresses of Rest Servers\nif list of hosts is not needed single host can be provided by this\nproperty. NOTE: the 'hosts' property overwrite the 'host' property",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hosts": {
          "description": "list of hosts name or IP addresses of Rest Servers",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "params": {
          "description": "Template parameters. Default is empty dictionary.",
          "type": "object"
        },
        "port": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": -1,
          "description": "port number. When -1 default ports are used\n(80 for ssl = false and 443 for ssl = true)"
        },
        "proxies": {
          "description": "List of proxies.",
          "type": "object"
        },
        "ssl": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "http or https"
        },
        "timeout": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": null,
          "description": "Timeout value for requests."
        },
        "verify": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true,
          "description": "A boolean which controls whether we verify the server's TLS\ncertificate. Supported such values:\n* `True`: default value, check certificates,\n* `False`: ignore server certificates,\n* `<file path>`: path to certificate on local system,\n* `<certificate content>`: certificate content."
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyTerminalRawInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": ["terminal.cloudify_terminal.tasks.run"],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["terminal.cloudify_terminal.tasks.run"],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["terminal.cloudify_terminal.tasks.run"],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["terminal.cloudify_terminal.tasks.run"],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "stop": {
              "properties": {
                "implementation": {
                  "enum": ["terminal.cloudify_terminal.tasks.run"],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeCloudifyTerminalRawProperties": {
      "properties": {
        "terminal_auth": {
          "$ref": "#/definitions/cloudifyDatatypesTerminalAuth",
          "description": "terminal credentials, like example:\n  user: <user name>\n  password: <user password>\n  ip: <host name>"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerAnsiblePlaybookInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "docker.cloudify_docker.ansible.create_ansible_playbook"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "docker.cloudify_docker.ansible.remove_ansible_playbook"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "precreate": {
              "properties": {
                "implementation": {
                  "enum": [
                    "docker.cloudify_docker.ansible.set_playbook_config"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "additional_args": {
                      "type": "string"
                    },
                    "ansible_env_vars": {
                      "type": "object"
                    },
                    "ansible_playbook_executable_path": {
                      "type": "string"
                    },
                    "debug_level": {
                      "type": "integer"
                    },
                    "options_config": {
                      "type": "object"
                    },
                    "playbook_path": {
                      "type": "string"
                    },
                    "playbook_source_path": {
                      "type": "string"
                    },
                    "remerge_sources": {
                      "type": "boolean"
                    },
                    "run_data": {
                      "type": "object"
                    },
                    "save_playbook": {
                      "type": "boolean"
                    },
                    "sensitive_keys": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "site_yaml_path": {
                      "type": "string"
                    },
                    "sources": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerAnsiblePlaybookProperties": {
      "properties": {
        "additional_args": {
          "description": "Additional args that you want to use, for example, '-c local'.",
          "type": "string"
        },
        "additional_playbook_files": {
          "description": "A list of string paths blueprint resources that you\nwould like to download to the playbook directory.\nIf you use this variable, you must list all of the paths\nthat you expect to download.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ansible_become": {
          "default": false,
          "description": "A boolean value, `true` or `false` whether\nto assume the user privileges.",
          "type": "boolean"
        },
        "ansible_env_vars": {
          "description": "A dictionary of environment variables to set.",
          "properties": {
            "ANSIBLE_HOST_KEY_CHECKING": {
              "default": "False",
              "enum": ["True", "False"],
              "type": "string"
            },
            "ANSIBLE_INVALID_TASK_ATTRIBUTE_FAILED": {
              "default": "False",
              "enum": ["True", "False"],
              "type": "string"
            }
          },
          "type": "object"
        },
        "ansible_playbook_executable_path": {
          "default": "ansible-playbook",
          "description": "A full path to your ansible_playbook executable if user don't want to\nuse the included version of executable in the plugin",
          "type": "string"
        },
        "debug_level": {
          "default": 2,
          "description": "Debug level",
          "type": "integer"
        },
        "docker_machine": {
          "$ref": "#/definitions/dockerMachine",
          "description": "Docker Machine IP,User,Private_key"
        },
        "options_config": {
          "description": "Command-line options, such as `tags` or `skip_tags`.",
          "type": "object"
        },
        "playbook_path": {
          "description": "A path to your `site.yaml` or `main.yaml` in your\nAnsible Playbook relative to blueprint or playbook_source_path\nif playbook_source_path is URL to archive File relative inside the archive.",
          "type": "string"
        },
        "playbook_source_path": {
          "description": "A full path/URL that contain playbook specified in playbook_path\nor site_yaml_path.",
          "type": "string"
        },
        "remerge_sources": {
          "default": false,
          "description": "update sources on target node",
          "type": "boolean"
        },
        "run_data": {
          "description": "Variable values.",
          "type": "object"
        },
        "save_playbook": {
          "default": false,
          "description": "Save playbook after action",
          "type": "boolean"
        },
        "sensitive_keys": {
          "description": "keys that you want us to obscure",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "site_yaml_path": {
          "description": "DEPRECATED.\nA path to your `site.yaml` or `main.yaml` in your\nAnsible Playbook relative to blueprint or playbook_source_path\nif playbook_source_path is URL to archive File relative inside the archive.",
          "type": "string"
        },
        "sources": {
          "description": "Your Inventory sources. Either YAML or a path to a file.\nIf not provided the inventory will be take from the `sources`\nruntime property.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerContainerFilesInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "docker.cloudify_docker.tasks.prepare_container_files"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "docker.cloudify_docker.tasks.remove_container_files"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerContainerFilesProperties": {
      "properties": {
        "resource_config": {
          "description": "Docker Container Files type",
          "properties": {
            "ansible_sources": {
              "description": "special case for ansible sources",
              "type": "object"
            },
            "destination": {
              "description": "Location to extract the files into,\nthat will be mapped to container volume later",
              "type": "string"
            },
            "docker_machine": {
              "description": "Docker Machine IP,User,Private_key",
              "properties": {
                "ansible_sources": {
                  "description": "special case for ansible sources",
                  "type": "object"
                },
                "destination": {
                  "description": "Location to extract the files into,\nthat will be mapped to container volume later",
                  "type": "string"
                },
                "docker_machine": {
                  "$ref": "#/definitions/dockerMachine",
                  "description": "Docker Machine IP,User,Private_keys"
                },
                "extra_files": {
                  "description": "More files to add to source before it goes to destination",
                  "type": "string"
                },
                "source": {
                  "description": "Files location that will be mapped to container",
                  "type": "string"
                },
                "terraform_sources": {
                  "description": "special case for terraform sources",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "extra_files": {
              "description": "More files to add to source before it goes to destination",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "source": {
              "description": "Files location that will be mapped to container",
              "type": "string"
            },
            "terraform_sources": {
              "description": "special case for terraform sources",
              "type": "object"
            }
          }
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeDockerContainerInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.create_container"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.remove_container"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "stop": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.remove_container"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "stop_command": {
                      "type": ["string", "object"]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerContainerProperties": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/dockerClientConfig"
        },
        "resource_config": {
          "description": "Docker Container type",
          "properties": {
            "container_args": {
              "description": "dict of arguments to pass to container when run\ncheck this URL for details: https://tinyurl.com/v8url54",
              "type": "object"
            },
            "image_tag": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Docker image tag to build container"
            }
          },
          "type": "object"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeDockerContainersInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.list_containers"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerContainersProperties": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/dockerClientConfig"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerHostDetailsInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.list_host_details"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerHostDetailsProperties": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/dockerClientConfig"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerHostInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.install_docker"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.uninstall_docker"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerHostProperties": {
      "properties": {
        "docker_machine": {
          "$ref": "#/definitions/dockerMachine"
        },
        "resource_config": {
          "$ref": "#/definitions/dockerInstallationConfig"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeDockerImageInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.build_image"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.remove_image"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerImageProperties": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/dockerClientConfig"
        },
        "resource_config": {
          "description": "Docker Image type",
          "properties": {
            "image_content": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Docker image to build"
            },
            "tag": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Docker image tag"
            }
          },
          "type": "object"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeDockerImagesInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["docker.cloudify_docker.tasks.list_images"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerImagesProperties": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/dockerClientConfig"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerTerraformModuleInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "docker.cloudify_docker.terraform.prepare_terraform_files"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "docker.cloudify_docker.terraform.remove_terraform_files"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeDockerTerraformModuleProperties": {
      "properties": {
        "docker_machine": {
          "$ref": "#/definitions/dockerMachine"
        },
        "resource_config": {
          "properties": {
            "backend": {
              "description": "If a backend is not defined in source,\nand you want to use a specific backend, define that here.",
              "properties": {
                "name": {
                  "description": "Some name.",
                  "type": "string"
                },
                "options": {
                  "description": "Should be a dictionary of key/values.",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "environment_variables": {
              "description": "A dictionary of environment variables.",
              "type": "object"
            },
            "source": {
              "description": "Path or URL to the ZIP file containing the Terraform project.\nIf this is a path, then it must be relative to the blueprint's root.",
              "type": "string"
            },
            "variables": {
              "description": "A dictionary of variables.",
              "type": "object"
            }
          },
          "required": ["source"],
          "type": "object"
        },
        "terraform_plugins": {
          "description": "Terraform Plugins to install",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["terraform_plugins", "resource_config"],
      "type": "object"
    },
    "nodeTypeHelmBinaryProperties": {
      "properties": {
        "helm_config": {
          "$ref": "#/definitions/cloudifyDatatypesHelmConfig"
        },
        "installation_source": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "https://get.helm.sh/helm-v3.3.1-linux-amd64.tar.gz",
          "description": "Location to download the Helm installation from. Ignored if 'use_existing_resource' is true."
        },
        "use_existing_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "If true, use an existing helm installation rather than installing it."
        }
      },
      "type": "object"
    },
    "nodeTypeHelmReleaseInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["helm.cloudify_helm.tasks.uninstall_release"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "flags": {
                      "$ref": "#/definitions/cloudifyDatatypesHelmSetFlagsList",
                      "description": " Flags to add only to `helm uninstall` command.The format is the same as \"flags\"."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["helm.cloudify_helm.tasks.install_release"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "flags": {
                      "$ref": "#/definitions/cloudifyDatatypesHelmSetFlagsList",
                      "description": " Flags to add only to `helm install` command.The format is the same as \"flags\"."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeHelmReleaseProperties": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/cloudifyDatatypesHelmClientConfig"
        },
        "helm_config": {
          "$ref": "#/definitions/cloudifyDatatypesHelmConfig"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesHelmReleaseConfig"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource,\ntrue if you are bringing an existing resource, false if you want cloudify to create it."
        }
      },
      "required": ["client_config", "resource_config"],
      "type": "object"
    },
    "nodeTypeHelmRepoInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["helm.cloudify_helm.tasks.remove_repo"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "flags": {
                      "$ref": "#/definitions/cloudifyDatatypesHelmSetFlagsList",
                      "description": " Flags to add only to `helm repo remove` command.The format is the same as \"flags\"."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["helm.cloudify_helm.tasks.add_repo"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "flags": {
                      "$ref": "#/definitions/cloudifyDatatypesHelmSetFlagsList",
                      "description": " Flags to add only to `helm repo add` command.The format is the same as \"flags\"."
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeHelmRepoProperties": {
      "properties": {
        "helm_config": {
          "$ref": "#/definitions/cloudifyDatatypesHelmConfig"
        },
        "resource_config": {
          "$ref": "#/definitions/cloudifyDatatypesHelmRepoConfig"
        },
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource,\ntrue if you are bringing an existing resource, false if you want cloudify to create it."
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeKubernetesNodesMasterProperties": {
      "properties": {
        "authentication": {
          "$ref": "#/definitions/kubernetesTypesAuthenticationVariant",
          "description": "Authentication properties of Kubernetes Cloud providers. Optional.\nCurrently supported providers: Google Cloud Platform."
        },
        "configuration": {
          "$ref": "#/definitions/kubernetesTypesConfigurationVariant",
          "description": "Configuration properties of Kubernetes API. One of four configuration options can be used\n1. Kubernetes config file contained by blueprint archive\n2. Kubernetes config file previously uploaded into Cloudify Manager VM\n3. Content of Kubernetes config file (YAML)\n4. Kubernetes API set o properties"
        }
      },
      "type": "object"
    },
    "nodeTypeKubernetesResourcesBlueprintDefinedResource": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesResourceWithValidateStatus"
        },
        {
          "properties": {
            "definition": {
              "$ref": "#/definitions/kubernetesTypesResourceDefinition",
              "description": "Definition of resource object using native Kubernetes YAML spec"
            },
            "options": {
              "description": "API options depending on API operations execution",
              "type": "object"
            },
            "use_external_resource": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "description": "Indicates that you want to use an existing resource in Kubernetes."
            }
          },
          "type": "object"
        }
      ],
      "description": "",
      "type": "object"
    },
    "nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces": {
      "description": "",
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.resource_create"
                  ]
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.resource_delete"
                  ]
                }
              },
              "type": "object"
            },
            "poststart": {
              "properties": {
                "implementation": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "enum": ["kubernetes.cloudify_kubernetes.tasks.resource_read"]
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.resource_update"
                  ]
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeKubernetesResourcesClusterRoleBindingProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "$ref": "#/definitions/kubernetesTypesRoleBindingDefinitio",
              "description": "Definition of role binding using native Kubernetes YAML spec"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesClusterRoleProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesRoleProperties"
        },
        {
          "properties": {
            "definition": {
              "$ref": "#/definitions/kubernetesTypesClusterRoleDefinitio",
              "description": "Definition of role binding using native Kubernetes YAML spec"
            }
          }
        }
      ],
      "description": "Definition of cluster role using native Kubernetes YAML spec",
      "type": "object"
    },
    "nodeTypeKubernetesResourcesConfigMapProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "$ref": "#/definitions/kubernetesTypesConfigClassResourceDefinition"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesCustomBlueprintDefinedResourceInterfaces": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResourceInterfaces"
        },
        {
          "properties": {
            "cloudify.interfaces.lifecycle": {
              "properties": {
                "create": {
                  "properties": {
                    "implementation": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "enum": [
                        "kubernetes.cloudify_kubernetes.tasks.custom_resource_create"
                      ]
                    }
                  },
                  "type": "object"
                },
                "delete": {
                  "properties": {
                    "implementation": {
                      "$ref": "#/definitions/cloudifyStringOrGetInput",
                      "enum": [
                        "kubernetes.cloudify_kubernetes.tasks.custom_resource_delete"
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesCustomBlueprintDefinedResourceProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "api_mapping": {
              "$ref": "#/definitions/kubernetesTypesApiMapping",
              "description": "Python Kubernetes API objects and methods definitions used for given resource type"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesCustomResourceDefinitionProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesDaemonSetProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesDeploymentProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "validate_resource_status": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesFileDefinedResourceInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.file_resource_create"
                  ]
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.file_resource_delete"
                  ]
                }
              },
              "type": "object"
            },
            "poststart": {
              "properties": {
                "implementation": {
                  "$ref": "#/definitions/cloudifyStringOrGetInput",
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.file_resource_read"
                  ]
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeKubernetesResourcesFileDefinedResourceProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesResourceWithValidateStatus"
        },
        {
          "properties": {
            "allow_node_redefinition": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": false,
              "description": "Permit changing the name and kind and number of resources defined in file."
            },
            "file": {
              "$ref": "#/definitions/kubernetesTypesFileResource",
              "description": "A path to YAML file containing the resource definition."
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesIngressProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "description": "Definition of resource object using native Kubernetes YAML spec",
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesMultipleFileDefinedResourcesInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.multiple_file_resource_create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.custom_resource_delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "poststart": {
              "properties": {
                "implementation": {
                  "enum": [
                    "kubernetes.cloudify_kubernetes.tasks.multiple_file_resource_delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeKubernetesResourcesMultipleFileDefinedResourcesProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesResourceWithValidateStatus"
        },
        {
          "properties": {
            "allow_node_redefinition": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": false,
              "description": "Permit changing the name and kind and number of resources defined in file."
            },
            "files": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "A list of paths to YAML files containing the resources definition."
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesNamespaceProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "use_external_resource": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesNetworkPolicyProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "description": "Definition of resource object using native Kubernetes YAML spec",
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesNodeProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "use_external_resource": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesPersistentVolumeClaimProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "description": "Definition of resource object using native Kubernetes YAML spec",
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesPersistentVolumeProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "validate_resource_status": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesPodProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "use_external_resource": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesPodSecurityPolicyProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "description": "Definition of resource object using native Kubernetes YAML spec",
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesReplicaSetProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "use_external_resource": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesReplicationControllerProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "use_external_resource": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesResourceBase": {
      "description": "",
      "properties": {
        "allow_node_redefinition": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Permit changing the name and kind and number of resources defined in file."
        },
        "client_config": {
          "$ref": "#/definitions/kubernetesTypesClientConfig",
          "description": "Configuration properties of kubernetes API and\nauthentication properties of Kubernetes Cloud providers."
        }
      },
      "type": "object"
    },
    "nodeTypeKubernetesResourcesResourceWithValidateStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesResourceBase"
        },
        {
          "properties": {
            "validate_resource_status": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "description": "Set this to \"true\" if you want Cloudify to wait for a predetermined state."
            }
          },
          "type": "object"
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesRoleBinding": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "$ref": "#/definitions/kubernetesTypesRoleBindingDefinitio",
              "description": "Definition of role binding using native Kubernetes YAML spec"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesRoleProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "$ref": "#/definitions/kubernetesTypesRoleDefinitio",
              "description": "Definition of role using native Kubernetes YAML spec"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesSecretProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definitions": {
              "$ref": "#/definitions/kubernetesTypesSecretDefinition",
              "description": "Definition of secret using native Kubernetes YAML spec"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesServiceAccountProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definitions": {
              "$ref": "#/definitions/kubernetesTypesServiceAccountDefinition",
              "description": "Definition of service account using native Kubernetes YAML spec"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesServiceProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "validate_resource_status": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesStatefulSetProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "description": "Definition of resource object using native Kubernetes YAML spec",
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeKubernetesResourcesStorageClassProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeKubernetesResourcesBlueprintDefinedResource"
        },
        {
          "properties": {
            "definition": {
              "$ref": "#/definitions/kubernetesTypesStorageClassResourceDefinition",
              "description": "Definition of resource object using native Kubernetes YAML spec"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackFlavorInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.flavor.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.flavor.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.flavor.list_flavors"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "details": {
                      "default": true,
                      "type": "boolean"
                    },
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.flavor.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackFlavorProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "extra_specs": {
              "description": "key-value user configuration, according to:\nhttps://developer.openstack.org/api-ref/compute/#create-extra-specs-for-a-flavor",
              "type": "object"
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesFlavor",
              "description": "https://developer.openstack.org/api-ref/compute/?expanded=create-flavor-detail"
            },
            "tenants": {
              "description": "List of tenants to add to flavor access",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackFloatingIPInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.floating_ip.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.floating_ip.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.floating_ip.list_floating_ips"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.floating_ip.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.floating_ip.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackFloatingIPProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "allow_reallocation": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": false,
              "description": "(Applicable only when use_external_resource is true)\nIf true, then allow using this floating IP even if it has already been allocated to\nanother instance. If false, and the floating IP is already allocated (that is, it is\nin 'ACTIVE' state), a recoverable error is raised."
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesFloatingIP",
              "description": "A dictionary that may contain these keys https://developer.openstack.org/api-ref/network/v2/#create-floating-ip."
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackGroupInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.group.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.group.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.group.list_groups"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.group.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackGroupProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesGroup",
              "description": "https://docs.openstack.org/api-ref/identity/v3/?expanded=update-user.yaml-detail,create-user.yaml-detail,update-project-detail#groups"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackHostAggregateInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.host_aggregate.configure"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.host_aggregate.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.host_aggregate.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "add_hosts": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.host_aggregate.add_hosts"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "hosts": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.host_aggregate.list_aggregates"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "remove_hosts": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.host_aggregate.remove_hosts"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "hosts": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.host_aggregate.update"
                  ],
                  "type": "object"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackHostAggregateProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "hosts": {
              "description": "list of hosts IDs, which will be a members of host aggregate",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "metadata": {
              "description": "Metadata key and value pairs. The maximum size for each metadata key and value pair is 255 bytes\nAll keys values should be provided as string\nExample\nmetadata:\n  ssd: 'True'\n  max_number: '1233'",
              "type": "object"
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesHostAggregate",
              "description": "https://developer.openstack.org/api-ref/compute/?expanded=create-aggregate-detail"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackImageInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.image.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.image.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.image.start"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.image.list_images"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.image.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.image.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackImageProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "image_url": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The openstack resource URL for the image."
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesImage",
              "description": "https://developer.openstack.org/api-ref/image/v2/index.html?expanded=show-image-detail,create-image-detail#create-image"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackKeyPairInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.keypair.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.keypair.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.keypair.list_keypairs"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.compute.keypair.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackKeyPairProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesKeyPair",
              "description": "https://developer.openstack.org/api-ref/compute/?expanded=create-or-import-keypair-detail"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackNetworkBaseProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackNetworkInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.network.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.network.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.network.list_networks"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.network.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.network.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackNetworkProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeOpenstackNetworkBaseProperties"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesNetwork",
              "description": "A dictionary that may contain these keys https://developer.openstack.org/api-ref/network/v2/#create-network."
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackPortInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.port.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.port.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.port.list_ports"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.port.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.port.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackPortProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "fixed_ip": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "may be used to request a specific fixed IP for the port.\nIf the IP is unavailable\n(either already taken or does not belong to a subnet the port is on)\nan error will be raised."
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesPort",
              "description": "A dictionary that may contain these keys https://developer.openstack.org/api-ref/network/v2/#create-port."
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackProjectInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.project.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.project.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.project.start"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "quota_dict": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "get_quota": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.project.get_project_quota"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.project.list_projects"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update_project": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.project.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update_quota": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.project.update_project_quota"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "quota": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "enum": [
                "openstack.openstack_plugin.resources.identity.project.creation_validation"
              ],
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackProjectProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "groups": {
              "description": "List of groups assigned to this project in the following format:\n  { name: string, roles: [string] }",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "quota": {
              "description": "A dictionary mapping service names to quota definitions for a project\ne.g:\n  quota:\n    compute: <quota>\n    network: <quota>\n    volume: <quota>",
              "type": "object"
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesProject",
              "description": "https://developer.openstack.org/api-ref/identity/v3/?expanded=update-user.yaml-detail,create-user.yaml-detail,update-project-detail#projects"
            },
            "users": {
              "description": "List of users assigned to this project in the following format:\n  { name: string, roles: [string] }",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackRBACPolicyProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "action": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Action for the RBAC policy which is access_as_external or access_as_shared."
            },
            "object_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the object_type resource. An object_type of\nnetwork returns a network ID and an object_type of qos-policy returns a QoS ID."
            },
            "object_type": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The type of the object that the RBAC policy affects.\nTypes include qos-policy or network."
            },
            "target_tenant": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the tenant to which the RBAC policy will be enforced."
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackRecordSetInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.dns_service.record_set.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.dns_service.record_set.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackRecordSetProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackRecordSetType",
              "description": "https://docs.openstack.org/api-ref/dns/?expanded=create-zone-detail"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackRoleInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.role.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.role.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.role.list_roles"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.role.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackRoleProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesRole",
              "description": "https://docs.openstack.org/api-ref/identity/v3/?expanded=update-project-detail,create-group-detail#roles"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackRouterInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.router.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.router.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.router.start"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "routes": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "stop": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.router.stop"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.router.list_routers"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.router.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.router.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackRouterProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "external_network": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "An external network name or ID.\nIf given, the router will use this external network as a gateway."
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesRouter",
              "description": "A dictionary that may contain these keys https://developer.openstack.org/api-ref/network/v2/#create-router."
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackSecurityGroupInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "configure": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.security_group.configure"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "security_group_rules": {
                      "default": {
                        "get_property": ["SELF", "security_group_rules"]
                      },
                      "type": ["array", "object"]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.security_group.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.security_group.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.security_group.list_security_groups"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.security_group.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.security_group.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackSecurityGroupProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "disable_default_egress_rules": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "description": "a flag for removing the default rules. If not set to `true`,\nthese rules will remain, and exist alongside any additional rules passed using the `rules` property."
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesSecurityGroup",
              "description": "A dictionary that may contain these keys https://developer.openstack.org/api-ref/network/v2/#create-security-group."
            },
            "security_group_rules": {
              "description": "List of security groups rule.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackSecurityGroupRuleInterfaces": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeOpenstackSecurityGroupInterfaces"
        },
        {
          "properties": {
            "cloudify.interfaces.lifecycle": {
              "properties": {
                "create": {
                  "properties": {
                    "implementation": {
                      "enum": [
                        "openstack.openstack_plugin.resources.network.security_group_rule.create"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "delete": {
                  "properties": {
                    "implementation": {
                      "enum": [
                        "openstack.openstack_plugin.resources.network.security_group_rule.delete"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "cloudify.interfaces.operations": {
              "properties": {
                "list": {
                  "properties": {
                    "implementation": {
                      "enum": [
                        "openstack.openstack_plugin.resources.network.security_group_rule.list_security_group_rules"
                      ],
                      "type": "string"
                    },
                    "inputs": {
                      "properties": {
                        "query": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "cloudify.interfaces.validation": {
              "properties": {
                "creation": {
                  "properties": {
                    "implementation": {
                      "enum": [
                        "openstack.openstack_plugin.resources.network.security_group_rule.creation_validation"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackSecurityGroupRuleProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeOpenstackSecurityGroupProperties"
        },
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesSecurityGroupRule",
              "description": "A dictionary that may contain these keys https://developer.openstack.org/api-ref/network/v2/#create-security-group-rule"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackServerProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "availability_zone": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The availability zone from which to launch the server.\nWhen you provision resources, you specify from which availability\nzone you want your instance to be built. Typically,\nan admin user will use availability zones to arrange\nOpenStack compute hosts into logical groups.\nAn availability zone provides a form of physical isolation\nand redundancy from other availability zones.\nFor instance, if some racks in your data center are\non a separate power source, you can put servers in those racks\nin their own availability zone. Availability zones can\nalso help separate different classes of hardware.\nBy segregating resources into availability zones,\nyou can ensure that your application resources are spread across\ndisparate machines to achieve high availability\nin the event of hardware or other failure.\nYou can list the available availability zones\nby calling the os-availability-zone API,\nbut you should avoid using the default availability zone when\nbooting the instance. In general,\nthe default availability zone is named nova.\nThis AZ is only shown when listing the availability zones as an admin"
            },
            "flavor_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The flavor reference, as an ID (including a UUID) or\nfull URL, for the flavor for your server instance."
            },
            "image_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The UUID of the image to use for your server instance.\nThis is not required in case of boot from volume.\nIn all other cases it is required\nand must be a valid UUID otherwise API will return 400"
            },
            "key_name": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Key pair name."
            },
            "metadata": {
              "description": "Metadata key and value pairs.\nThe maximum size of the metadata key and value is 255 bytes each.",
              "type": "object"
            },
            "networks": {
              "description": "A list of network object.\nRequired parameter when there are multiple networks\ndefined for the tenant. When you do not specify the networks parameter,\nthe server attaches to the only network created for the current tenant.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "security_groups": {
              "description": "One or more security groups.\nSpecify the name of the security group in the name attribute.\nIf you omit this attribute, the API creates the server\nin the default security group. Requested security groups are not\napplied to pre-existing ports",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "user_data": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Configuration information or scripts to use upon launch.\nMust be Base64 encoded. Restricted to 65535 bytes."
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackSubnetInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.subnet.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.subnet.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.subnet.list_subnets"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.subnet.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.network.subnet.creation_validation"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackSubnetProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeOpenstackNetworkBaseProperties"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesSubnet",
              "description": "A dictionary that may contain these keys https://developer.openstack.org/api-ref/network/v2/#create-subnet. This is not a list of cloudify."
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackUserInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.user.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.user.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.user.list_users"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "update": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.identity.user.update"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackUserProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesUser",
              "description": "https://developer.openstack.org/api-ref/identity/v3/?expanded=update-user.yaml-detail,create-user.yaml-detail,update-project-detail#users"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackVolumeInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.create"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "args": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.start"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.operations": {
          "properties": {
            "list": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.list_volumes"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "query": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.snapshot": {
          "properties": {
            "apply": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.snapshot_apply"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.snapshot_create"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.snapshot_delete"
                  ],
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cloudify.interfaces.validation": {
          "properties": {
            "creation": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume.creation_validation"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackVolumeProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "device_name": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "default": "auto",
              "description": "The device name this volume will be attached to.\nDefault value is *auto*,\nwhich means openstack will auto-assign a device.\nNote that if you do explicitly set a value,\nthis value may not be the actual device name assigned.\nSometimes the device requested will not be available and openstack will assign it to a different device,n\this is why we recommend using *auto*."
            },
            "resource_config": {
              "$ref": "#/definitions/openstackTypesVolume",
              "description": "https://developer.openstack.org/api-ref/block-storage/v2/index.html?expanded=create-volume-detail#volumes-volumes"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackVolumeTypeInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume_type.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.volume.volume_type.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackVolumeTypeProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackExternalResource"
        },
        {
          "$ref": "#/definitions/openstackCreateIfMissing"
        },
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesVolumeType",
              "description": "https://developer.openstack.org/api-ref/block-storage/v3/index.html?expanded=create-a-volume-type-detail#volume-types-types"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackWindowsServerProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/nodeTypeOpenstackServerProperties"
        },
        {
          "properties": {
            "agent_config": {
              "$ref": "#/definitions/cloudifyDataTypesAgentConfig",
              "default": {
                "port": 5985
              },
              "description": "updates the defaults for the agent_config for Windows)"
            },
            "os_family": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "default": "windows",
              "description": "updates the os_family default as a convenience"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeOpenstackZoneInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.dns_service.zone.create"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": [
                    "openstack.openstack_plugin.resources.dns_service.zone.delete"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeOpenstackZoneProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackClientConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/openstackTypesZoneType",
              "description": "https://docs.openstack.org/api-ref/dns/?expanded=create-zone-detail"
            }
          }
        }
      ],
      "type": "object"
    },
    "nodeTypeTerraformDirectoryConfig": {
      "properties": {
        "executable_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "default": "/usr/bin/terraform",
          "description": "The path to the terraform binary executable."
        },
        "plugins_dir": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Location where Terraform plugins are located. If a value is provided, then\nthe Terraform plugin uses '--plugin-dir' with that value, ensuring that\nno plugins are downloaded on-the-fly, for increased stability.\nIf a value is not provided, plugins will be downloaded on-the-fly. This is\nnot recommended in production environments."
        },
        "storage_path": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Directory to store downloaded Terraform templates. The directory must\neither already exist and be writable by 'cfyuser', or alternatively\nbe create-able by 'cfyuser'.\nThe default is an empty string, which prompts the plugin to use the OS\ntemporary directory."
        }
      },
      "type": "object"
    },
    "nodeTypeTerraformInstallConfig": {
      "properties": {
        "installation_source": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Location to download the Terraform installation from. Ignored if 'use_existing' is true."
        },
        "plugins": {
          "description": "List of plugins to download and install.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "use_existing_resource": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": true,
          "description": "If true, use an existing Terraform installation rather than installing it"
        }
      },
      "required": ["use_existing_resource"],
      "type": "object"
    },
    "nodeTypeTerraformInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "create": {
              "properties": {
                "implementation": {
                  "enum": ["tf.cloudify_tf.tasks.install"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["tf.cloudify_tf.tasks.uninstall"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeTerraformModuleInterfaces": {
      "properties": {
        "cloudify.interfaces.lifecycle": {
          "properties": {
            "delete": {
              "properties": {
                "implementation": {
                  "enum": ["tf.cloudify_tf.tasks.destroy"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "start": {
              "properties": {
                "implementation": {
                  "enum": ["tf.cloudify_tf.tasks.apply"],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "terraform": {
          "properties": {
            "refresh": {
              "properties": {
                "implementation": {
                  "enum": ["tf.cloudify_tf.tasks.state_pull"],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "reload": {
              "properties": {
                "implementation": {
                  "enum": ["tf.cloudify_tf.tasks.reload_template"],
                  "type": "string"
                },
                "inputs": {
                  "properties": {
                    "destroy_previous": {
                      "default": false,
                      "description": "If true, then the plugin destroys the existing Terraform\ntopology before applying the new one.",
                      "type": "boolean"
                    },
                    "source": {
                      "description": "URL or path to a ZIP/tar.gz file or a Git repository to obtain\nnew module source from. If omitted, then the module is reloaded\nfrom its last location.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "nodeTypeTerraformModuleProperties": {
      "properties": {
        "resource_config": {
          "$ref": "#/definitions/terraformTypesRootModule"
        }
      },
      "required": ["resource_config"],
      "type": "object"
    },
    "nodeTypeTerraformProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/terraformConfig"
        },
        {
          "properties": {
            "resource_config": {
              "$ref": "#/definitions/nodeTypeTerraformInstallConfig"
            }
          },
          "required": ["resource_config"]
        }
      ],
      "type": "object"
    },
    "nodeTypes": {
      "patternProperties": {
        "": {
          "$ref": "#/definitions/nodeType"
        }
      },
      "type": "object"
    },
    "openstackClientConfig": {
      "properties": {
        "client_config": {
          "$ref": "#/definitions/openstackTypeClientConfig",
          "description": "Your OpenStack client configuration."
        }
      },
      "type": "object"
    },
    "openstackCreateIfMissing": {
      "properties": {
        "create_if_missing": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": false,
          "description": "If use_external_resource is ``true`` and the resource is missing,create it instead of failing."
        }
      },
      "type": "object"
    },
    "openstackDataTypeDescription": {
      "properties": {
        "description": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Resource description."
        }
      },
      "type": "object"
    },
    "openstackDataTypeId": {
      "properties": {
        "id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Resource id"
        }
      },
      "type": "object"
    },
    "openstackDataTypeKwargs": {
      "properties": {
        "kwargs:": {
          "description": "A dictionary of keys and values that is not validated but will override other values in the resource config.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "openstackDataTypeName": {
      "properties": {
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Resource name."
        }
      },
      "type": "object"
    },
    "openstackExternalResource": {
      "properties": {
        "use_external_resource": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": false,
          "description": "Indicate whether the resource exists or if Cloudify should create the resource, true if you are bringing an existing resource, false if you want cloudify to create it."
        }
      },
      "type": "object"
    },
    "openstackRecordSetType": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "records": {
              "description": "A list of data for this recordset.\nEach item will be a separate record in Designate\nThese items should conform to the DNS spec for\nthe record type - e.g. A records must be IPv4 addresses,\nCNAME records must be a hostname.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ttl": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "TTL (Time to Live) for the recordset."
            },
            "type": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "They RRTYPE of the recordset."
            },
            "zone_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "ID for the zone"
            }
          },
          "required": ["zone_id", "records"]
        }
      ],
      "type": "object"
    },
    "openstackTypeClientConfig": {
      "properties": {
        "auth_url": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Your OpenStack Client Authorization URL."
        },
        "ca_cert": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Path to CA certificate to validate OpenStack's endpoint with."
        },
        "insecure": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": false,
          "description": "If true, SSL validation is skipped."
        },
        "kwargs": {
          "description": "A dictionary of keys and values that is not validated\nbut will override other values in the client config.",
          "type": "object"
        },
        "logging": {
          "$ref": "#/definitions/openstackTypesLogging",
          "description": "Logging configuration."
        },
        "password": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Your OpenStack password."
        },
        "project_domain_id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The Project domain id"
        },
        "project_domain_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Project domain name to operate on."
        },
        "project_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The name of your OpenStack project."
        },
        "region_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The region where you want this particular resource to be created."
        },
        "tenant_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The name of your OpenStack tenant."
        },
        "user_domain_id": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "The user domain id"
        },
        "user_domain_name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Domain name to operate on."
        },
        "username": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Your OpenStack username."
        }
      },
      "type": "object"
    },
    "openstackTypesFlavor": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "disk": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "The size of the root disk that will be created in GiB.\nIf 0 the root disk will be set to exactly the size of the image used\nto deploy the instance. However, in this case filter scheduler cannot\nselect the compute host based on the virtual image size.\nTherefore, 0 should only be used for volume booted instances or for testing purposes."
            },
            "ram": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "The amount of RAM a flavor has, in MiB"
            },
            "vcpus": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "The number of virtual CPUs that will be allocated to the server."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesFloatingIP": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "dns_domain": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "A valid DNS domain."
            },
            "dns_name": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "A valid DNS name."
            },
            "fixed_ip_address": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The fixed IP address that is associated with the floating IP. If an internal port has multiple associated IP addresses, the service chooses the first IP address unless you explicitly define a fixed IP address in the fixed_ip_address parameter."
            },
            "floating_ip_address": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The floating IP address."
            },
            "floating_network_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the network associated with the floating IP."
            },
            "floating_network_name": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The Name of the network associated with the floating IP."
            },
            "port_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of a port associated with the floating IP. To associate the floating IP with a fixed IP at creation time, you must specify the identifier of the internal port."
            },
            "subnet_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The subnet ID on which you want to create the floating IP."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "domain_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the domain of the group. If the domain ID is not provided\nin the request, the Identity service will attempt to pull the\ndomain ID from the token used in the request.Note that this requires the use of a domain-scoped token."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesHostAggregate": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "availability_zone": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The name of the host aggregate."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesImage": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "container_format": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Format of the image container."
            },
            "disk_format": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The format of the disk."
            },
            "tags": {
              "description": "List of tags for this image. Each tag is a string of at most 255 chars.\nThe maximum number of tags allowed on an image is set by the operator.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesKeyPair": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "public_key": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The public ssh key to import. If you omit this value,\na keypair is generated for you"
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesLogging": {
      "description": "For logging groups' configuration. Each level can be one of the following values:\ncritical/error/warning/info/debug/notset",
      "properties": {
        "openstack": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Default logging level for openstack component."
        }
      }
    },
    "openstackTypesNetwork": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "admin_state_up": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "default": true,
              "description": "The administrative state of the network, which is up (true) or down (false)."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesPort": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "allowed_address_pairs": {
              "description": "A set of zero or more allowed address pair objects each where address pair object contains an ip_address and mac_address. While the ip_address is required, the mac_address will be taken from the port if not specified. The value of ip_address can be an IP Address or a CIDR (if supported by the underlying extension plugin). A server connected to the port can send a packet with source address which matches one of the specified allowed address pairs.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "device_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the device that uses this port. For example, a server instance or a logical router."
            },
            "device_owner": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The entity type that uses this port. For example, compute:nova (server instance), network:dhcp (DHCP agent) or network:router_interface (router interface)."
            },
            "fixed_ips": {
              "description": "list.\nThe IP addresses for the port. If you would like to assign multiple IP addresses for the port, specify multiple entries in this field. Each entry consists of IP address (ip_address) and the subnet ID from which the IP address is assigned (subnet_id).\n- If you specify both a subnet ID and an IP address, OpenStack Networking tries to allocate the IP address on that subnet to the port.\n- If you specify only a subnet ID, OpenStack Networking allocates an available IP from that subnet to the port.\n- If you specify only an IP address, OpenStack Networking tries to allocate the IP address if the address is a valid IP for any of the subnets on the specified network.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "network_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the network to which the subnet belongs."
            },
            "security_groups": {
              "description": "list. The IDs of security groups applied to the port.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesProject": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "domain_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the domain for the project.\nFor projects acting as a domain, the domain_id must not be specified, it will be generated by the Identity service implementation."
            },
            "is_domain": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "description": "Indicates whether the project also acts as a domain.\nIf set to true, this project acts as both a project and domain."
            },
            "parent_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the parent of the project.."
            },
            "tags": {
              "description": "A list of simple strings assigned to a project. Tags can be used to classify projects into groups.",
              "items": {
                "type": "string"
              },
              "type": "object"
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesRole": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "domain_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the domain of the role. If the domain ID is not provided\nin the request, the Identity service will attempt to pull the\ndomain ID from the token used in the request.Note that this requires the use of a domain-scoped token."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesRouter": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        }
      ],
      "type": "object"
    },
    "openstackTypesSecurityGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        }
      ],
      "type": "object"
    },
    "openstackTypesSecurityGroupRule": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "direction": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Ingress or egress, which is the direction in which the security group rule is applied."
            },
            "port_range_max": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "The maximum port number in the range that is matched by the security group rule. If the protocol is TCP, UDP, DCCP, SCTP or UDP-Lite this value must be greater than or equal to the port_range_min attribute value. If the protocol is ICMP, this value must be an ICMP type."
            },
            "port_range_min": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": " The minimum port number in the range that is matched by the security group rule. If the protocol is TCP, UDP, DCCP, SCTP or UDP-Lite this value must be less than or equal to the port_range_max attribute value. If the protocol is ICMP, this value must be an ICMP type."
            },
            "protocol": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The IP protocol of the security group rule."
            },
            "remote_group_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The remote group UUID to associate with this security group rule. You can specify either the remote_group_id or remote_ip_prefix attribute in the request body."
            },
            "remote_ip_prefix": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The remote IP prefix that is matched by this security group rule."
            },
            "security_group_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The security group ID to associate with this security group rule."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesSubnet": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "allocation_pools": {
              "description": "Allocation pools with start and end IP addresses for this subnet. If allocation_pools are not specified, OpenStack Networking automatically allocates pools for covering all IP addresses in the CIDR, excluding the address reserved for the subnet gateway by default.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "cidr": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The CIDR of the subnet."
            },
            "dns_nameservers": {
              "description": "List of dns name servers associated with the subnet. Default is an empty list.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "enable_dhcp": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "description": "Indicates whether dhcp is enabled or disabled for the subnet. Default is true."
            },
            "gateway_ip": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Gateway IP of this subnet. If the value is null that implies no gateway is associated with the subnet. If the gateway_ip is not specified, OpenStack Networking allocates an address from the CIDR for the gateway for the subnet by default."
            },
            "host_routes": {
              "description": "Additional routes for the subnet. A list of dictionaries with destination and nexthop parameters. Default value is an empty list.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "ip_version": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The IP protocol version. Value is 4 or 6."
            },
            "ipv6_address_mode": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The IPv6 address modes specifies mechanisms for assigning IP addresses. Value is slaac, dhcpv6-stateful, dhcpv6-stateless."
            },
            "ipv6_ra_mode": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The IPv6 router advertisement specifies whether the networking service should transmit ICMPv6 packets, for a subnet. Value is slaac, dhcpv6-stateful, dhcpv6-stateless."
            },
            "network_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the network to which the subnet belongs."
            },
            "prefixlen": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "The prefix length to use for subnet allocation from a subnet pool. If not specified, the default_prefixlen value of the subnet pool will be used."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesUser": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "properties": {
            "default_project_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the default project for the user.\nA user's default project must not be a domain.\nSetting this attribute does not grant any actual authorization\non the project, and is merely provided for convenience.\nTherefore, the referenced project does not need to exist within the user domain. Since v3.1.\nIf the user does not have authorization to their default project,\nthe default project is ignored at token creation. Since v3.1.\nAdditionally, if your default project is not valid, a token is issued without an explicit scope of authorization"
            },
            "domain_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The ID of the domain of the user. If the domain ID is not provided\nin the request, the Identity service will attempt to pull the\ndomain ID from the token used in the request.Note that this requires the use of a domain-scoped token."
            },
            "email": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The email for the user."
            },
            "enabled": {
              "$ref": "#/definitions/cloudifyBooleanOrGetInput",
              "description": "If the user is enabled, this value is true. If the user is disabled, this value is false"
            },
            "password": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The password for the user."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesVolume": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "availability_zone": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The name of the availability zone."
            },
            "imageRef": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The UUID of the image from which you want to create the volume.\nRequired to create a bootable volume."
            },
            "project_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The UUID of the project in a multi-tenancy cloud."
            },
            "size": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "The size of the volume, in gibibytes (GiB)."
            },
            "snapshot_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "To create a volume from an existing snapshot,\nspecify the UUID of the volume snapshot.\nThe volume is created in same availability zone and with same size as the snapshot."
            },
            "volume_type": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The volume type (either name or ID).\nTo create an environment with multiple-storage back ends, you\nmust specify a volume type. Block Storage volume back ends are\nspawned as children to cinder- volume, and they are keyed from a\nunique queue. They are named cinder- volume.HOST.BACKEND. For\nexample, cinder- volume.ubuntu.lvmdriver. When a volume is\ncreated, the scheduler chooses an appropriate back end to handle\nthe request based on the volume type. Default is None. For\ninformation about how to use volume types to create multiple-\nstorage back ends,"
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesVolumeType": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeId"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "extra_specs": {
              "description": "A key and value pair that contains additional specifications\nthat are associated with the volume type.\nExamples include capabilities, capacity, compression,\nand so on, depending on the storage driver in use.",
              "type": "object"
            },
            "project_id": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "The UUID of the project in a multi-tenancy cloud.."
            }
          }
        }
      ],
      "type": "object"
    },
    "openstackTypesZoneType": {
      "allOf": [
        {
          "$ref": "#/definitions/openstackDataTypeKwargs"
        },
        {
          "$ref": "#/definitions/openstackDataTypeName"
        },
        {
          "$ref": "#/definitions/openstackDataTypeDescription"
        },
        {
          "properties": {
            "attributes": {
              "description": "Key:Value pairs of information about this zone,nand the pool the user would like to place the zone in.\nThis information can be used by the scheduler to placenzones on the correct pool.",
              "type": "object"
            },
            "email": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "e-mail for the zone. Used in SOA records for the zone"
            },
            "masters": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Mandatory for secondary zones.\nThe servers to slave from to get DNS information"
            },
            "ttl": {
              "$ref": "#/definitions/cloudifyIntegerOrGetInput",
              "description": "TTL (Time to Live) for the zone."
            },
            "type": {
              "$ref": "#/definitions/cloudifyStringOrGetInput",
              "description": "Type of zone. PRIMARY is controlled by Designate,\nSECONDARY zones are slaved from another DNS Server.\nDefaults to PRIMARY"
            }
          }
        }
      ],
      "type": "object"
    },
    "restTemplateInputs": {
      "properties": {
        "force_rerun": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Rerun operation if on next operation rerun"
        },
        "params": {
          "description": "Template parameters. Default is empty dictionary. Merged\nwith params from node properties and has 'ctx' key for\ncurrent action context.",
          "type": "object"
        },
        "prerender": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Prerender template before run calls jinja render=>yaml parse.\nDefault is yaml parse=>jinja render."
        },
        "remove_calls": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Remove calls list from results. Default: save calls in\nruntime properties."
        },
        "retry_count": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 1,
          "description": "Rerun count on warning on caught warnings"
        },
        "retry_sleep": {
          "$ref": "#/definitions/cloudifyIntegerOrGetInput",
          "default": 15,
          "description": "Sleep between rerun"
        },
        "save_path": {
          "$ref": "#/definitions/cloudifyBooleanOrGetInput",
          "default": false,
          "description": "Save result to runtime properties key. Default is directly\nsave to runtime properties."
        },
        "template_file": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Template path in blueprint directory"
        }
      },
      "type": "object"
    },
    "tags": {
      "description": "Tags to add to an EC2 resource",
      "items": {
        "properties": {
          "Key": {
            "$ref": "#/definitions/cloudifyStringOrGetInput"
          },
          "Value": {
            "$ref": "#/definitions/cloudifyStringOrGetInput"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "terraformConfig": {
      "$ref": "#/definitions/nodeTypeTerraformDirectoryConfig",
      "description": "Terraform directories for executions."
    },
    "terraformTypesBackend": {
      "properties": {
        "name": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Some name."
        },
        "options": {
          "description": "Should be a dictionary of key/values.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "terraformTypesRootModule": {
      "properties": {
        "backend": {
          "$ref": "#/definitions/terraformTypesBackend",
          "description": "If a backend is not defined in source,\nand you want to use a specific backend, define that here."
        },
        "environment_variables": {
          "description": "A dictionary of environment variables.",
          "type": "object"
        },
        "source": {
          "$ref": "#/definitions/cloudifyStringOrGetInput",
          "description": "Path or URL to the ZIP file containing the Terraform project.\nIf this is a path, then it must be relative to the blueprint's root."
        },
        "variables": {
          "description": "A dictionary of variables.",
          "type": "object"
        }
      },
      "required": ["source"],
      "type": "object"
    }
  },
  "properties": {
    "data_types": {
      "$ref": "#/definitions/dataTypes"
    },
    "dsl_definitions": {
      "type": "object"
    },
    "imports": {
      "description": "imports enable the author of a blueprint to reuse blueprint files, or parts of them, and to use predefined types (e.g. from the types.yaml file).",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "enum": [
              "http://www.getcloudify.org/spec/cloudify/4.5/types.yaml",
              "plugin:cloudify-ansible-plugin",
              "plugin:cloudify-aws-plugin",
              "plugin:cloudify-azure-plugin",
              "plugin:cloudify-cloudstack-plugin",
              "plugin:cloudify-diamond-plugin",
              "plugin:cloudify-fabric-plugin",
              "plugin:cloudify-gcp-plugin",
              "plugin:cloudify-host-pool-plugin",
              "plugin:cloudify-kubernetes-plugin",
              "plugin:cloudify-openstack-plugin",
              "plugin:cloudify-utilities-plugin",
              "plugin:cloudify-vsphere-plugin",
              "plugin:cloudify-terraform-plugin",
              "plugin:cloudify-helm-plugin"
            ],
            "type": "string"
          }
        ],
        "default": "http://www.getcloudify.org/spec/cloudify/4.5/types.yaml"
      },
      "type": "array"
    },
    "inputs": {
      "description": "inputs are parameters that are injected into a blueprint when a deployment is created. These parameters can be referenced by using the get_input intrinsic function.",
      "patternProperties": {
        "": {
          "$ref": "#/definitions/inputProperty"
        }
      },
      "properties": {
        "aws_access_key_id": {
          "$ref": "#/definitions/inputProperty"
        },
        "aws_account_id": {
          "$ref": "#/definitions/inputProperty"
        },
        "aws_cloudwatch_log_arn": {
          "$ref": "#/definitions/inputProperty"
        },
        "aws_region_name": {
          "$ref": "#/definitions/inputProperty"
        },
        "aws_region_zone1": {
          "$ref": "#/definitions/inputProperty"
        },
        "aws_region_zone2": {
          "$ref": "#/definitions/inputProperty"
        },
        "aws_secret_access_key": {
          "$ref": "#/definitions/inputProperty"
        }
      },
      "type": "object"
    },
    "node_templates": {
      "$ref": "#/definitions/nodeTemplates"
    },
    "node_types": {
      "$ref": "#/definitions/nodeTypes"
    },
    "tosca_definitions_version": {
      "default": "cloudify_dsl_1_3",
      "description": "tosca_definitions_version is a top level property of the blueprint which is used to specify the DSL version used. For Cloudify, the versions that are currently defined are cloudify_dsl_1_0, cloudify_dsl_1_1, cloudify_dsl_1_2 and cloudify_dsl_1_3.",
      "enum": [
        "cloudify_dsl_1_0",
        "cloudify_dsl_1_1",
        "cloudify_dsl_1_2",
        "cloudify_dsl_1_3"
      ],
      "type": "string"
    }
  },
  "title": "Blueprint",
  "type": "object"
}
