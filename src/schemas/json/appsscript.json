{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "homepageTrigger": {
      "description": "The Google Workspace add-on manifest configuration for homepage triggers.",
      "properties": {
        "enabled": {
          "description": "Whether or not homepage (non-contextual) cards are enabled in Calendar. Defaults to true.",
          "type": "boolean"
        },
        "runFunction": {
          "description": "The name of the function to run when this trigger fires. You must implement this function in your add-on project. This function must build and return an array of Card objects.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "properties": {
    "addOns": {
      "description": "G Suite Add-ons",
      "properties": {
        "calendar": {
          "description": "Calendar add-on metadata.",
          "properties": {
            "eventAccess": {
              "description": "Handler access to Calendar event",
              "enum": ["METADATA", "READ", "WRITE", "READ_WRITE"],
              "type": "string"
            },
            "eventOpenTrigger": {
              "description": "When a Calendar event is opened",
              "properties": {
                "runFunction": {
                  "description": "Event hander function",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "eventUpdateTrigger": {
              "description": "When a Calendar event is updated",
              "properties": {
                "runFunction": {
                  "description": "Event hander function",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "homepageTrigger": {
              "description": "The trigger function specification for creating the add-on homepage in the Calendar host.",
              "properties": {
                "enabled": {
                  "description": "Whether or not homepage (non-contextual) cards are enabled in Calendar. Defaults to true.",
                  "type": "boolean"
                },
                "runFunction": {
                  "description": "The name of the function to run when this trigger fires. You must implement this function in your add-on project. This function must build and return an array of Card objects.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "common": {
          "description": "Common properties between all G Suite add-on types.",
          "properties": {
            "homepageTrigger": {
              "description": "Homepage trigger data",
              "properties": {
                "enabled": {
                  "description": "Whether or not homepage (non-contextual) cards are enabled. Defaults to true.",
                  "type": "boolean"
                },
                "runFunctions": {
                  "description": "The name of the function to run",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "layoutProperties": {
              "description": "Layout properties.",
              "properties": {
                "primaryColor": {
                  "description": "The color of toolbar. Defaults to grey (#424242).",
                  "type": "string"
                },
                "secondaryColor": {
                  "description": "The default color of buttons. Defaults to the primary color (if it is set); otherwise defaults to blue (#2196F3).",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "logoUrl": {
              "description": "The logo URL.",
              "format": "uri",
              "type": "string"
            },
            "name": {
              "description": "The add-on name.",
              "type": "string"
            },
            "openLinkUrlPrefixes": {
              "description": "Link prefixes.",
              "items": {
                "description": "A link prefix.",
                "type": "string"
              },
              "type": "array"
            },
            "universalActions": {
              "description": "Universal add-on actions",
              "items": {
                "description": "Actions",
                "properties": {
                  "label": {
                    "description": "The action label.",
                    "type": "string"
                  },
                  "openLink": {
                    "description": "The link's URL",
                    "format": "hostname",
                    "type": "string"
                  },
                  "runFunction": {
                    "description": "Required for each defined universal action if openLink is not present. If provided, the name of the Apps Script function that executes when the user selects this action.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "useLocaleFromApp": {
              "description": "Use the locale from the host application?",
              "type": "boolean"
            }
          },
          "required": ["logoUrl", "name"],
          "type": "object"
        },
        "gmail": {
          "description": "Gmail add-on metadata.",
          "properties": {
            "contextualTriggers": {
              "description": "Contextual triggers.",
              "items": {
                "description": "A contextual trigger.",
                "properties": {
                  "onTriggerFunction": {
                    "description": "The name of the Apps Script function that executes when this contextual trigger fires (that is, when a message is opened in Gmail). The function specified here must build and return an array of Card objects.",
                    "type": "string"
                  },
                  "unconditional": {
                    "description": "Used to specify that the contextual trigger is fired for all Gmail messages. This is currently the only option, so this should always be an empty object.",
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "homepageTrigger": {
              "description": "The trigger function specification for creating the add-on homepage in the Gmail host.",
              "properties": {
                "enabled": {
                  "description": "Whether or not homepage (non-contextual) cards are enabled in Gmail. Defaults to true.",
                  "type": "boolean"
                },
                "runFunction": {
                  "description": "The name of the function to run when this trigger fires. You must implement this function in your add-on project. This function must build and return an array of Card objects.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "sheets": {
          "additionalProperties": false,
          "description": "Configurations for the Google Workspace Add-on's appearance and behavior within the Sheets host application.",
          "properties": {
            "homepageTrigger": {
              "$ref": "#/definitions/homepageTrigger"
            },
            "onFileScopeGrantedTrigger": {
              "description": "A configuration for a contextual trigger that fires when the add-on presents the request file scope dialog.",
              "properties": {
                "runFunction": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "dataStudio": {
      "description": "Data Studio add-on manifest.",
      "properties": {
        "addonUrl": {
          "format": "hostname",
          "type": "string"
        },
        "authType": {
          "description": "List of AuthTypes supported.",
          "items": {
            "description": "Types of Authorization supported by the add-on.",
            "enum": ["NONE", "KEY", "USER_PASS", "OAUTH2"],
            "type": "string"
          },
          "type": "array"
        },
        "company": {
          "description": "Company name for the add-on.",
          "type": "string"
        },
        "companyUrl": {
          "format": "hostname",
          "type": "string"
        },
        "description": {
          "description": "Short description about the add-on.",
          "type": "string"
        },
        "logoUrl": {
          "description": "URL for logo image of add-on.",
          "format": "hostname",
          "type": "string"
        },
        "name": {
          "description": "Display name for add-on.",
          "type": "string"
        },
        "privacyPolicyUrl": {
          "description": "Url for privacy policy information about the add-on.",
          "format": "hostname",
          "type": "string"
        },
        "shortDescription": {
          "description": "Even shorter description used in gallery cards. Only a maximum of 114 characters will be shown on the card.",
          "type": "string"
        },
        "sources": {
          "description": "List of sources or services that can be accessed with this add-on.",
          "items": {
            "description": "A single source type.",
            "type": "string"
          },
          "type": "array"
        },
        "supportUrl": {
          "description": "URL for support information of the add-on.",
          "format": "hostname",
          "type": "string"
        },
        "templates": {
          "description": "Map of template name to report ID.",
          "type": "object"
        },
        "termsOfServiceUrl": {
          "description": "Url for terms of service information about the add-on.",
          "format": "hostname",
          "type": "string"
        }
      },
      "required": ["name", "logoUrl", "company", "supportUrl", "description"],
      "type": "object"
    },
    "dependencies": {
      "description": "A list of advanced services and libraries.",
      "properties": {
        "enabledAdvancedServices": {
          "description": "The list of advanced services enabled for use by the script project.",
          "items": {
            "description": "A single advanced service.",
            "properties": {
              "serviceId": {
                "default": "sheets",
                "description": "The identifier of the service that is shown in the API discovery document (e.g., drive).",
                "type": "string"
              },
              "userSymbol": {
                "default": "Sheets",
                "description": "The identifier used to refer to this service in the code of the Apps Script project.",
                "type": "string"
              },
              "version": {
                "default": "v4",
                "description": "The enabled version of the service (e.g., \"v1\").",
                "type": "string"
              }
            },
            "required": ["userSymbol", "serviceId", "version"],
            "type": "object"
          },
          "type": "array"
        },
        "libraries": {
          "description": "The list of libraries used by the script project.",
          "items": {
            "description": "A single library.",
            "properties": {
              "developmentMode": {
                "default": true,
                "description": "If true, version is ignored and the script uses the current library project saved code, even if that code has not been saved to a new version.",
                "type": "boolean"
              },
              "libraryId": {
                "default": "1B7FSrk5Zi6L1rSxxTDgDEUsPzlukDsi4KGuTMorsTQHhGBzBkMun4iDF",
                "description": "The script ID of the library's script project. You can find a script ID in the library script's URL or in the script editor by selecting **File > Project properties**.",
                "maxLength": 57,
                "minLength": 57,
                "type": "string"
              },
              "userSymbol": {
                "default": "OAuth2",
                "description": "The label that is used in the script project code to refer to this library.",
                "type": "string"
              },
              "version": {
                "default": "41",
                "description": "The version of the library that is used by the script. This is either a version number or stable, meaning the last version created.",
                "type": "string"
              }
            },
            "required": ["userSymbol", "libraryId", "version"],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "exceptionLogging": {
      "description": "The location where exceptions are logged.",
      "enum": ["NONE", "STACKDRIVER"],
      "type": "string"
    },
    "executionApi": {
      "description": "The script project's API executable configuration. Only used if the project is deployed for API execution.",
      "properties": {
        "access": {
          "description": "Determines who has permission to run the script from the API.",
          "enum": ["MYSELF", "DOMAIN", "ANYONE", "ANYONE_ANONYMOUS"],
          "type": "string"
        }
      },
      "type": "object"
    },
    "oauthScopes": {
      "description": "The definition of authorization scopes used by the script project.",
      "items": {
        "format": "uri",
        "type": "string"
      },
      "type": "array"
    },
    "runtimeVersion": {
      "default": "STABLE",
      "description": "Version of the server to use when executing this project.",
      "enum": ["STABLE", "V8", "DEPRECATED_ES5"],
      "type": "string"
    },
    "sheets": {
      "description": "Defines manifest values specific to Sheets.",
      "properties": {
        "macros": {
          "description": "A list of defined macros and their associated properties.",
          "items": {
            "description": "A defined macros and it's associated properties.",
            "properties": {
              "defaultShortcut": {
                "default": "Ctrl+Alt+Shift+1",
                "description": "Defines the keyboard shortcut that executes the macro. This must be of the form Ctrl+Alt+Shift+Number, where Number is a single-digit. Macros without shortcuts can only be executed from the Tools > Macros menu.",
                "type": "string"
              },
              "functionName": {
                "default": "myFunction",
                "description": "The name of the Apps Script function that executes the macro. By default this matches the menuName for functions automatically created, but this is not a requirement.",
                "type": "string"
              },
              "menuName": {
                "default": "My Macro",
                "description": "The name of the macro as it appears in the Google Sheets UI.",
                "type": "string"
              }
            },
            "required": ["menuName", "functionName", "defaultShortcut"],
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "timeZone": {
      "default": "America/New_York",
      "description": "The script time zone in one of the available ZoneId values such as \"America/Denver\".",
      "type": "string"
    },
    "urlFetchWhitelist": {
      "description": "A list of HTTPS URL prefixes. If present, any URL endpoint fetched must match one of the prefixes in this list. This can help to protect user data.",
      "items": {
        "format": "hostname",
        "type": "string"
      },
      "type": "array"
    },
    "webapp": {
      "description": "The script project's web app configuration. Only used if the project is deployed as a web app.",
      "properties": {
        "access": {
          "default": "MYSELF",
          "description": "The levels of permission for running the web app.",
          "enum": ["MYSELF", "DOMAIN", "ANYONE", "ANYONE_ANONYMOUS"],
          "type": "string"
        },
        "executeAs": {
          "default": "USER_DEPLOYING",
          "description": "The identity under which the web app executes.",
          "enum": ["USER_ACCESSING", "USER_DEPLOYING"],
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "title": "JSON schema for Google Apps Script manifest files",
  "type": "object"
}
