{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "app": {
      "patternProperties": {
        "^env_\\S+$": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Specify environment variables to be injected when using --env",
          "type": "object"
        }
      },
      "properties": {
        "append_env_to_name": {
          "description": "Append the environment name to the app name",
          "type": "boolean"
        },
        "args": {
          "description": "Arguments to pass to the script",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "automation": {
          "default": true,
          "description": "Enable or disable apm wrapping",
          "type": "boolean"
        },
        "autorestart": {
          "default": true,
          "description": "Enable or disable auto restart after process failure",
          "type": "boolean"
        },
        "combine_logs": {
          "default": "/dev/null",
          "description": "If set to true, avoid to suffix logs file with the process id",
          "type": "boolean"
        },
        "cron_restart": {
          "description": "A cron pattern to restart your app",
          "type": "string"
        },
        "cwd": {
          "description": "Current working directory to start the process with. Defaults to CWD of the current environment (from your shell)",
          "type": "string"
        },
        "disable_logs": {
          "description": "Disable all logs storage",
          "type": "boolean"
        },
        "disable_source_map_support": {
          "description": "Enable or disable the source map support",
          "type": "boolean"
        },
        "disable_trace": {
          "default": true,
          "description": "Enable or disable the transaction tracing",
          "type": "boolean"
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Specify environment variables to be injected",
          "type": "object"
        },
        "env_": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Specify environment variables to be injected (when passing --env)",
          "type": "object"
        },
        "error_file": {
          "default": "~/.pm2/logs/<app_name>-error.err",
          "description": "File path for stderr (each line is appended to this file)",
          "type": "string"
        },
        "exec_mode": {
          "default": "fork",
          "description": "Set the execution mode",
          "enum": ["fork", "cluster"],
          "type": "string"
        },
        "filter_env": {
          "description": "Excludes global variables starting with “REACT_” and will not allow their penetration into the cluster",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "force": {
          "description": "Start a script even if it is already running (only the script path is considered)",
          "type": "boolean"
        },
        "gid": {
          "description": "Set group id. Defaults to current user gid",
          "type": "string"
        },
        "ignore_watch": {
          "description": "List of paths to ignore (regex)",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "increment_var": {
          "description": "Specify the name of an environment variable to inject which increments for each cluster",
          "type": "string"
        },
        "instance_var": {
          "description": "Rename the NODE_APP_INSTANCE environment variable. Defaults to NODE_APP_INSTANCE",
          "type": "string"
        },
        "instances": {
          "default": 1,
          "description": "Number of instances to be started in cluster mode",
          "type": "number"
        },
        "interpreter": {
          "description": "Interpreter absolute path. Defaults to node",
          "type": "string"
        },
        "interpreter_args": {
          "description": "Options to pass to the interpreter",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "kill_timeout": {
          "default": 1600,
          "description": "Time in ms before sending the final SIGKILL signal after SIGINT",
          "type": "number"
        },
        "listen_timeout": {
          "description": "Time in ms before forcing a reload if app is still not listening/has still not sent ready",
          "type": "number"
        },
        "log_date_format": {
          "description": "Format for log timestamps in moment.js format (eg YYYY-MM-DD HH:mm Z)",
          "type": "string"
        },
        "log_type": {
          "description": "Define a specific log output type",
          "enum": ["json"],
          "type": "string"
        },
        "max_memory_restart": {
          "description": "Restart the app if an amount of memory is exceeded (format: /0-9?/ K for KB, 'M' for MB, 'G' for GB, default to B)",
          "type": "number"
        },
        "max_restarts": {
          "default": 16,
          "description": "Number of times a script is restarted when it exits in less than min_uptime",
          "type": "number"
        },
        "merge_logs": {
          "description": "Alias to combine_logs",
          "type": "boolean"
        },
        "min_uptime": {
          "default": 1000,
          "description": "Minimum uptime of the app to be considered started (format is /[0-9]+(h|m|s)?/, for hours, minutes, seconds, default to ms)",
          "type": "number"
        },
        "name": {
          "description": "Process name in the process list. Defaults to script filename without the extension (app for app.js)",
          "type": "string"
        },
        "out_file": {
          "default": "~/.pm2/logs/<app_name>-out.log",
          "description": "File path for stdout (each line is appended to this file)",
          "type": "string"
        },
        "pid_file": {
          "description": "File path where the pid of the started process is written by pm2. Defaults to ~/.pm2/pids/app_name-id.pid",
          "type": "string"
        },
        "pmx": {
          "default": true,
          "description": "Enable or disable apm wrapping",
          "type": "boolean"
        },
        "port": {
          "description": "Shortcut to inject a PORT environment variable",
          "type": "number"
        },
        "post_update": {
          "description": "List of commands executed after a pull/upgrade operation performed from Keymetrics dashboard",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "restart_delay": {
          "description": "Time in ms to wait before restarting a crashing app",
          "type": "number"
        },
        "script": {
          "description": "Path of the script to launch",
          "type": "string"
        },
        "shutdown_with_message": {
          "description": "Shutdown an application with process.send('shutdown') instead of process.kill(pid, SIGINT)",
          "type": "boolean"
        },
        "source_map_support": {
          "default": true,
          "description": "Enable or disable the source map support",
          "type": "boolean"
        },
        "trace": {
          "description": "Enable or disable the transaction tracing",
          "type": "boolean"
        },
        "treekill": {
          "default": true,
          "description": "Only kill the main process, not detached children",
          "type": "boolean"
        },
        "uid": {
          "description": "Set user id. Defaults to current user uid",
          "type": "string"
        },
        "vizion": {
          "default": true,
          "description": "Enable or disable the versioning metadatas (vizion library)",
          "type": "boolean"
        },
        "wait_ready": {
          "description": "Make the process wait for a process.send('ready')",
          "type": "boolean"
        },
        "watch": {
          "description": "Enable or disable the watch mode",
          "type": "boolean"
        },
        "watch_options": {
          "description": "Object that will be used as an options with chokidar (refer to chokidar documentation)",
          "type": "object"
        }
      },
      "required": ["script"],
      "type": "object"
    },
    "deploymentEnvironment": {
      "properties": {
        "host": {
          "description": "SSH host",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "key": {
          "description": "SSH key path. Defaults to $HOME/.ssh",
          "type": "string"
        },
        "path": {
          "description": "path in the server",
          "type": "string"
        },
        "post-deploy": {
          "description": "post-deploy action",
          "type": "string"
        },
        "post-setup": {
          "description": "Post-setup commands or path to a script on the host machine",
          "type": "string"
        },
        "pre-deploy-local": {
          "description": "pre-deploy action",
          "type": "string"
        },
        "pre-setup": {
          "description": "Pre-setup command or path to a script on your local machine",
          "type": "string"
        },
        "ref": {
          "description": "GIT remote/branch",
          "type": "string"
        },
        "repo": {
          "description": "GIT remote",
          "type": "string"
        },
        "ssh_options": {
          "description": "SSH options with no command-line flag, see 'man ssh'",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "user": {
          "description": "SSH user",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "properties": {
    "apps": {
      "description": "The apps property is an array of object where each object contains the configuration for each process.",
      "items": {
        "$ref": "#/definitions/app"
      },
      "type": "array"
    },
    "deploy": {
      "description": "The deploy property is an object where each of its properties is an object which defines a deployment environment.",
      "properties": {
        "development": {
          "$ref": "#/definitions/deploymentEnvironment"
        },
        "production": {
          "$ref": "#/definitions/deploymentEnvironment"
        },
        "staging": {
          "$ref": "#/definitions/deploymentEnvironment"
        }
      },
      "type": "object"
    }
  },
  "title": "PM2 ecosystem config file",
  "type": "object"
}
