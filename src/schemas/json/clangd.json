{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "oneOrMorePath": {
      "oneOf": [
        {
          "type": "string",
          "$ref": "https://json.schemastore.org/base.json#/definitions/path"
        },
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "A path pattern\nhttps://clangd.llvm.org/config.html#if",
            "$ref": "https://json.schemastore.org/base.json#/definitions/path"
          }
        }
      ]
    },
    "oneOrMoreFlags": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1
        },
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "description": "A flag\nhttps://clangd.llvm.org/config.html#if",
            "type": "string",
            "minLength": 1
          }
        }
      ]
    },
    "stringOrArrayOf": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    }
  },
  "properties": {
    "If": {
      "title": "conditions",
      "description": "Conditions\nhttps://clangd.llvm.org/config.html#if",
      "type": "object",
      "properties": {
        "PathMatch": {
          "description": "Path patterns\nhttps://clangd.llvm.org/config.html#pathmatch",
          "$ref": "#/definitions/oneOrMorePath"
        },
        "PathExclude": {
          "description": "An exclude path pattern\nhttps://clangd.llvm.org/config.html#pathexclude",
          "$ref": "#/definitions/oneOrMorePath"
        }
      },
      "additionalProperties": false
    },
    "CompileFlags": {
      "title": "compilation flags",
      "description": "Flag lists to be added or removed\nhttps://clangd.llvm.org/config.html#compileflags",
      "type": "object",
      "properties": {
        "Add": {
          "description": "Flags to be added to the compile command\nhttps://clangd.llvm.org/config.html#add",
          "$ref": "#/definitions/oneOrMoreFlags"
        },
        "Remove": {
          "description": "Flags to be removed from the compile command\nhttps://clangd.llvm.org/config.html#remove",
          "$ref": "#/definitions/oneOrMoreFlags"
        },
        "CompilationDatabase": {
          "description": "A directory to search for compilation database\nhttps://clangd.llvm.org/config.html#compilationdatabase",
          "oneOf": [
            {
              "$ref": "https://json.schemastore.org/base.json#/definitions/path"
            },
            {
              "enum": ["Ancestors", "None"]
            }
          ]
        },
        "Compiler": {
          "description": "An `argv[0]` replacement\nhttps://clangd.llvm.org/config.html#compiler",
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false
    },
    "Index": {
      "title": "code interpretation",
      "description": "Code interpretation outside of the current file",
      "type": "object",
      "properties": {
        "Background": {
          "description": "Whether to produce a project index from files built in the background\nhttps://clangd.llvm.org/config.html#background",
          "type": "string",
          "enum": ["Build", "Skip"],
          "default": "Build"
        },
        "External": {
          "title": "index source",
          "description": "An external index source\nhttps://clangd.llvm.org/config.html#external",
          "type": "object",
          "oneOf": [
            {
              "required": ["File"],
              "properties": {
                "File": {
                  "description": "A file\nhttps://clangd.llvm.org/config.html#external",
                  "$ref": "https://json.schemastore.org/base.json#/definitions/path"
                }
              }
            },
            {
              "properties": {
                "Server": {
                  "description": "A server\nhttps://clangd.llvm.org/config.html#external",
                  "type": "string"
                },
                "MountPoint": {
                  "description": "A mount point\nhttps://clangd.llvm.org/config.html#external",
                  "$ref": "https://json.schemastore.org/base.json#/definitions/path"
                }
              },
              "required": ["Server"]
            }
          ],
          "additionalProperties": false
        },
        "StandardLibrary": {
          "description": "Whether to index a standard library\nhttps://clangd.llvm.org/config.html#standardlibrary",
          "enum": ["Yes", "No"]
        }
      },
      "additionalProperties": false
    },
    "Style": {
      "description": "Describes the style of the codebase, beyond formatting",
      "type": "object",
      "properties": {
        "FullyQualifiedNamespaces": {
          "type": "boolean"
        }
      }
    },
    "Diagnostics": {
      "type": "object",
      "properties": {
        "Suppress": {
          "description": "Diagnostic codes that should be suppressed.",
          "$ref": "#/definitions/stringOrArrayOf"
        },
        "ClangTidy": {
          "description": "Configure how clang-tidy runs over your files. The settings are merged with any settings found in .clang-tidy configuration files with the ones from clangd configs taking precedence.",
          "type": "object",
          "properties": {
            "Add": {
              "description": "List of checks to enable, can be globs.",
              "$ref": "#/definitions/stringOrArrayOf"
            },
            "Remove": {
              "description": "List of checks to disable, can be globs.",
              "$ref": "#/definitions/stringOrArrayOf"
            },
            "CheckOptions": {
              "description": "Key-value pairs of options for clang-tidy checks",
              "type": "object"
            },
            "UnusedIncludes": {
              "description": "Enables Include Cleaner's unused includes diagnostics.",
              "type": "string",
              "enum": ["None", "Strict"],
              "default": "None"
            }
          }
        }
      }
    },
    "Completion": {
      "type": "object",
      "properties": {
        "AllScopes": {
          "description": "Whether code completion should include suggestions from scopes that are not visible. The required scope prefix will be inserted.",
          "type": "boolean"
        }
      }
    },
    "InlayHints": {
      "description": "Configures the behaviour of the inlay-hints feature.",
      "type": "object",
      "properties": {
        "Enabled": {
          "description": "A boolean that enables/disables the inlay-hints feature for all kinds, when disabled, configuration for specific kinds are ignored.",
          "type": "boolean"
        },
        "ParameterNames": {
          "description": "A boolean that enables/disables inlay-hints for parameter names in function calls.",
          "type": "boolean"
        },
        "DeducedTypes": {
          "description": "A boolean that enables/disables inlay-hints for deduced types.",
          "type": "boolean"
        }
      }
    },
    "Hover": {
      "description": "Configures contents of the hover cards.",
      "type": "object",
      "properties": {
        "ShowAKA": {
          "description": "A boolean that controls printing of desugared types e.g: `vector<int>::value_type (aka int)`",
          "type": "boolean"
        }
      }
    }
  },
  "type": "object"
}
