{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$ref": "#/definitions/Kustomization",
  "definitions": {
    "ConfigMapArgs": {
      "description": "ConfigMapArgs contains the metadata of how to generate a configmap",
      "properties": {
        "KVSources": {
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "$ref": "#/definitions/KVSource"
          },
          "type": "array"
        },
        "behavior": {
          "enum": [
            "create",
            "replace",
            "merge"
          ]
        },
        "env": {
          "description": "Deprecated.  Use envs instead.",
          "type": "string"
        },
        "envs": {
          "description": "A list of file paths. The contents of each file should be one key=value pair per line",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "files": {
          "description": "A list of file sources to use in creating a list of key, value pairs",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "literals": {
          "description": "A list of literal pair sources. Each literal source should be a key and literal value, e.g. `key=value`",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name - actually the partial name - of the generated resource",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace for the configmap, optional",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "FieldSelector": {
      "description": "Contains the fieldPath to an object field",
      "properties": {
        "fieldpath": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "GeneratorOptions": {
      "description": "GeneratorOptions modify behavior of all ConfigMap and Secret generators",
      "properties": {
        "annotations": {
          "description": "Annotations to add to all generated resources",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "disableNameSuffixHash": {
          "description": "DisableNameSuffixHash if true disables the default behavior of adding a suffix to the names of generated resources that is a hash of the resource contents",
          "type": "boolean"
        },
        "labels": {
          "description": "Labels to add to all generated resources",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Image": {
      "properties": {
        "digest": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "newName": {
          "type": "string"
        },
        "newTag": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Inventory": {
      "description": "Inventory appends an object that contains the record of all other objects, which can be used in apply, prune and delete",
      "properties": {
        "configMap": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "$ref": "#/definitions/NameArgs"
        },
        "type": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "KVSource": {
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "pluginType": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Kustomization": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "bases": {
          "description": "Bases are relative paths or git repository URLs specifying a directory containing a kustomization.yaml file.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "commonAnnotations": {
          "description": "CommonAnnotations to add to all objects",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "commonLabels": {
          "description": " CommonLabels to add to all objects and selectors",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "configMapGenerator": {
          "description": "ConfigMapGenerator is a list of configmaps to generate from local data (one configMap per list item)",
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "$ref": "#/definitions/ConfigMapArgs"
          },
          "type": "array"
        },
        "configurations": {
          "description": "Configurations is a list of transformer configuration files",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "crds": {
          "description": "Crds specifies relative paths to Custom Resource Definition files. This allows custom resources to be recognized as operands, making it possible to add them to the Resources list. CRDs themselves are not modified.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "generatorOptions": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "$ref": "#/definitions/GeneratorOptions"
        },
        "generators": {
          "description": "Generators is a list of files containing custom generators",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "images": {
          "description": "Images is a list of (image name, new name, new tag or digest) for changing image names, tags or digests. This can also be achieved with a patch, but this operator is simpler to specify.",
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "$ref": "#/definitions/Image"
          },
          "type": "array"
        },
        "inventory": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "$ref": "#/definitions/Inventory"
        },
        "kind": {
          "type": "string"
        },
        "namePrefix": {
          "description": "NamePrefix will prefix the names of all resources mentioned in the kustomization file including generated configmaps and secrets",
          "type": "string"
        },
        "nameSuffix": {
          "description": "NameSuffix will suffix the names of all resources mentioned in the kustomization file including generated configmaps and secrets",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to add to all objects",
          "type": "string"
        },
        "patchesJson6902": {
          "description": "JSONPatches is a list of JSONPatch for applying JSON patch. See http://jsonpatch.com",
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "$ref": "#/definitions/PatchJson6902"
          },
          "type": "array"
        },
        "patchesStrategicMerge": {
          "description": " PatchesStrategicMerge specifies the relative path to a file containing a strategic merge patch. URLs and globs are not supported",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resources": {
          "description": "Resources specifies relative paths to files holding YAML representations of kubernetes API objects. URLs and globs not supported.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "secretGenerator": {
          "description": "SecretGenerator is a list of secrets to generate from local data (one secret per list item)",
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "$ref": "#/definitions/SecretArgs"
          },
          "type": "array"
        },
        "transformers": {
          "description": "Transformers is a list of files containing transformers",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "vars": {
          "description": "Allows things modified by kustomize to be injected into a container specification. A var is a name (e.g. FOO) associated with a field in a specific resource instance.  The field must contain a value of type string, and defaults to the name field of the instance",
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "$ref": "#/definitions/Var"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "NameArgs": {
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "PatchJson6902": {
      "required": [
        "path",
        "target"
      ],
      "properties": {
        "path": {
          "description": "relative file path for a json patch file inside a kustomization",
          "type": "string"
        },
        "target": {
          "description": "Refers to a Kubernetes object that the json patch will be applied to. It must refer to a Kubernetes resource under the purview of this kustomization",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "$ref": "#/definitions/PatchTarget"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "PatchTarget": {
      "required": [
        "group",
        "kind",
        "name",
        "version"
      ],
      "properties": {
        "group": {
            "type": "string"
        },
        "kind": {
            "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "version": {
            "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "SecretArgs": {
      "description": "SecretArgs contains the metadata of how to generate a secret",
      "properties": {
        "KVSources": {
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "$ref": "#/definitions/KVSource"
          },
          "type": "array"
        },
        "behavior": {
          "enum": [
            "create",
            "replace",
            "merge"
          ]
        },
        "env": {
          "type": "string"
        },
        "envs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "files": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "literals": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name - actually the partial name - of the generated resource",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace for the configmap, optional",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Target": {
      "required": [
          "name"
      ],
      "properties": {
          "apiVersion": {
              "type": "string"
          },
          "group": {
              "type": "string"
          },
          "kind": {
              "type": "string"
          },
          "name": {
              "type": "string"
          },
          "version": {
              "type": "string"
          }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Var": {
      "description": "Represents a variable whose value will be sourced from a field in a Kubernetes object.",
      "required": [
        "name",
        "objref"
      ],
      "properties": {
        "fieldref": {
          "description": "Refers to the field of the object referred to by objref whose value will be extracted for use in replacing $(FOO)",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "$ref": "#/definitions/FieldSelector"
        },
        "name": {
          "description": "Value of identifier name e.g. FOO used in container args, annotations, Appears in pod template as $(FOO)",
          "type": "string"
        },
        "objref": {
          "description": "Refers to a Kubernetes resource under the purview of this kustomization",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "$ref": "#/definitions/Target"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  }
}
