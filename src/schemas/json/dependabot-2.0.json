{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/dependabot-2.0.json",
  "additionalProperties": false,
  "definitions": {
    "timezone": {
      "$id": "timezone",
      "type": "string",
      "enum": [
        "Africa/Abidjan",
        "Africa/Accra",
        "Africa/Addis_Ababa",
        "Africa/Algiers",
        "Africa/Asmara",
        "Africa/Asmera",
        "Africa/Bamako",
        "Africa/Bangui",
        "Africa/Banjul",
        "Africa/Bissau",
        "Africa/Blantyre",
        "Africa/Brazzaville",
        "Africa/Bujumbura",
        "Africa/Cairo",
        "Africa/Casablanca",
        "Africa/Ceuta",
        "Africa/Conakry",
        "Africa/Dakar",
        "Africa/Dar_es_Salaam",
        "Africa/Djibouti",
        "Africa/Douala",
        "Africa/El_Aaiun",
        "Africa/Freetown",
        "Africa/Gaborone",
        "Africa/Harare",
        "Africa/Johannesburg",
        "Africa/Juba",
        "Africa/Kampala",
        "Africa/Khartoum",
        "Africa/Kigali",
        "Africa/Kinshasa",
        "Africa/Lagos",
        "Africa/Libreville",
        "Africa/Lome",
        "Africa/Luanda",
        "Africa/Lubumbashi",
        "Africa/Lusaka",
        "Africa/Malabo",
        "Africa/Maputo",
        "Africa/Maseru",
        "Africa/Mbabane",
        "Africa/Mogadishu",
        "Africa/Monrovia",
        "Africa/Nairobi",
        "Africa/Ndjamena",
        "Africa/Niamey",
        "Africa/Nouakchott",
        "Africa/Ouagadougou",
        "Africa/Porto-Novo",
        "Africa/Sao_Tome",
        "Africa/Timbuktu",
        "Africa/Tripoli",
        "Africa/Tunis",
        "Africa/Windhoek",
        "America/Adak",
        "America/Anchorage",
        "America/Anguilla",
        "America/Antigua",
        "America/Araguaina",
        "America/Argentina/Buenos_Aires",
        "America/Argentina/Catamarca",
        "America/Argentina/ComodRivadavia",
        "America/Argentina/Cordoba",
        "America/Argentina/Jujuy",
        "America/Argentina/La_Rioja",
        "America/Argentina/Mendoza",
        "America/Argentina/Rio_Gallegos",
        "America/Argentina/Salta",
        "America/Argentina/San_Juan",
        "America/Argentina/San_Luis",
        "America/Argentina/Tucuman",
        "America/Argentina/Ushuaia",
        "America/Aruba",
        "America/Asuncion",
        "America/Atikokan",
        "America/Atka",
        "America/Bahia",
        "America/Bahia_Banderas",
        "America/Barbados",
        "America/Belem",
        "America/Belize",
        "America/Blanc-Sablon",
        "America/Boa_Vista",
        "America/Bogota",
        "America/Boise",
        "America/Buenos_Aires",
        "America/Cambridge_Bay",
        "America/Campo_Grande",
        "America/Cancun",
        "America/Caracas",
        "America/Catamarca",
        "America/Cayenne",
        "America/Cayman",
        "America/Chicago",
        "America/Chihuahua",
        "America/Coral_Harbour",
        "America/Cordoba",
        "America/Costa_Rica",
        "America/Creston",
        "America/Cuiaba",
        "America/Curacao",
        "America/Danmarkshavn",
        "America/Dawson",
        "America/Dawson_Creek",
        "America/Denver",
        "America/Detroit",
        "America/Dominica",
        "America/Edmonton",
        "America/Eirunepe",
        "America/El_Salvador",
        "America/Ensenada",
        "America/Fort_Nelson",
        "America/Fort_Wayne",
        "America/Fortaleza",
        "America/Glace_Bay",
        "America/Godthab",
        "America/Goose_Bay",
        "America/Grand_Turk",
        "America/Grenada",
        "America/Guadeloupe",
        "America/Guatemala",
        "America/Guayaquil",
        "America/Guyana",
        "America/Halifax",
        "America/Havana",
        "America/Hermosillo",
        "America/Indiana/Indianapolis",
        "America/Indiana/Knox",
        "America/Indiana/Marengo",
        "America/Indiana/Petersburg",
        "America/Indiana/Tell_City",
        "America/Indiana/Vevay",
        "America/Indiana/Vincennes",
        "America/Indiana/Winamac",
        "America/Indianapolis",
        "America/Inuvik",
        "America/Iqaluit",
        "America/Jamaica",
        "America/Jujuy",
        "America/Juneau",
        "America/Kentucky/Louisville",
        "America/Kentucky/Monticello",
        "America/Knox_IN",
        "America/Kralendijk",
        "America/La_Paz",
        "America/Lima",
        "America/Los_Angeles",
        "America/Louisville",
        "America/Lower_Princes",
        "America/Maceio",
        "America/Managua",
        "America/Manaus",
        "America/Marigot",
        "America/Martinique",
        "America/Matamoros",
        "America/Mazatlan",
        "America/Mendoza",
        "America/Menominee",
        "America/Merida",
        "America/Metlakatla",
        "America/Mexico_City",
        "America/Miquelon",
        "America/Moncton",
        "America/Monterrey",
        "America/Montevideo",
        "America/Montreal",
        "America/Montserrat",
        "America/Nassau",
        "America/New_York",
        "America/Nipigon",
        "America/Nome",
        "America/Noronha",
        "America/North_Dakota/Beulah",
        "America/North_Dakota/Center",
        "America/North_Dakota/New_Salem",
        "America/Nuuk",
        "America/Ojinaga",
        "America/Panama",
        "America/Pangnirtung",
        "America/Paramaribo",
        "America/Phoenix",
        "America/Port-au-Prince",
        "America/Port_of_Spain",
        "America/Porto_Acre",
        "America/Porto_Velho",
        "America/Puerto_Rico",
        "America/Punta_Arenas",
        "America/Rainy_River",
        "America/Rankin_Inlet",
        "America/Recife",
        "America/Regina",
        "America/Resolute",
        "America/Rio_Branco",
        "America/Rosario",
        "America/Santa_Isabel",
        "America/Santarem",
        "America/Santiago",
        "America/Santo_Domingo",
        "America/Sao_Paulo",
        "America/Scoresbysund",
        "America/Shiprock",
        "America/Sitka",
        "America/St_Barthelemy",
        "America/St_Johns",
        "America/St_Kitts",
        "America/St_Lucia",
        "America/St_Thomas",
        "America/St_Vincent",
        "America/Swift_Current",
        "America/Tegucigalpa",
        "America/Thule",
        "America/Thunder_Bay",
        "America/Tijuana",
        "America/Toronto",
        "America/Tortola",
        "America/Vancouver",
        "America/Virgin",
        "America/Whitehorse",
        "America/Winnipeg",
        "America/Yakutat",
        "America/Yellowknife",
        "Antarctica/Casey",
        "Antarctica/Davis",
        "Antarctica/DumontDUrville",
        "Antarctica/Macquarie",
        "Antarctica/Mawson",
        "Antarctica/McMurdo",
        "Antarctica/Palmer",
        "Antarctica/Rothera",
        "Antarctica/South_Pole",
        "Antarctica/Syowa",
        "Antarctica/Troll",
        "Antarctica/Vostok",
        "Arctic/Longyearbyen",
        "Asia/Aden",
        "Asia/Almaty",
        "Asia/Amman",
        "Asia/Anadyr",
        "Asia/Aqtau",
        "Asia/Aqtobe",
        "Asia/Ashgabat",
        "Asia/Ashkhabad",
        "Asia/Atyrau",
        "Asia/Baghdad",
        "Asia/Bahrain",
        "Asia/Baku",
        "Asia/Bangkok",
        "Asia/Barnaul",
        "Asia/Beirut",
        "Asia/Bishkek",
        "Asia/Brunei",
        "Asia/Calcutta",
        "Asia/Chita",
        "Asia/Choibalsan",
        "Asia/Chongqing",
        "Asia/Chungking",
        "Asia/Colombo",
        "Asia/Dacca",
        "Asia/Damascus",
        "Asia/Dhaka",
        "Asia/Dili",
        "Asia/Dubai",
        "Asia/Dushanbe",
        "Asia/Famagusta",
        "Asia/Gaza",
        "Asia/Harbin",
        "Asia/Hebron",
        "Asia/Ho_Chi_Minh",
        "Asia/Hong_Kong",
        "Asia/Hovd",
        "Asia/Irkutsk",
        "Asia/Istanbul",
        "Asia/Jakarta",
        "Asia/Jayapura",
        "Asia/Jerusalem",
        "Asia/Kabul",
        "Asia/Kamchatka",
        "Asia/Karachi",
        "Asia/Kashgar",
        "Asia/Kathmandu",
        "Asia/Katmandu",
        "Asia/Khandyga",
        "Asia/Kolkata",
        "Asia/Krasnoyarsk",
        "Asia/Kuala_Lumpur",
        "Asia/Kuching",
        "Asia/Kuwait",
        "Asia/Macao",
        "Asia/Macau",
        "Asia/Magadan",
        "Asia/Makassar",
        "Asia/Manila",
        "Asia/Muscat",
        "Asia/Nicosia",
        "Asia/Novokuznetsk",
        "Asia/Novosibirsk",
        "Asia/Omsk",
        "Asia/Oral",
        "Asia/Phnom_Penh",
        "Asia/Pontianak",
        "Asia/Pyongyang",
        "Asia/Qatar",
        "Asia/Qostanay",
        "Asia/Qyzylorda",
        "Asia/Rangoon",
        "Asia/Riyadh",
        "Asia/Saigon",
        "Asia/Sakhalin",
        "Asia/Samarkand",
        "Asia/Seoul",
        "Asia/Shanghai",
        "Asia/Singapore",
        "Asia/Srednekolymsk",
        "Asia/Taipei",
        "Asia/Tashkent",
        "Asia/Tbilisi",
        "Asia/Tehran",
        "Asia/Tel_Aviv",
        "Asia/Thimbu",
        "Asia/Thimphu",
        "Asia/Tokyo",
        "Asia/Tomsk",
        "Asia/Ujung_Pandang",
        "Asia/Ulaanbaatar",
        "Asia/Ulan_Bator",
        "Asia/Urumqi",
        "Asia/Ust-Nera",
        "Asia/Vientiane",
        "Asia/Vladivostok",
        "Asia/Yakutsk",
        "Asia/Yangon",
        "Asia/Yekaterinburg",
        "Asia/Yerevan",
        "Atlantic/Azores",
        "Atlantic/Bermuda",
        "Atlantic/Canary",
        "Atlantic/Cape_Verde",
        "Atlantic/Faeroe",
        "Atlantic/Faroe",
        "Atlantic/Jan_Mayen",
        "Atlantic/Madeira",
        "Atlantic/Reykjavik",
        "Atlantic/South_Georgia",
        "Atlantic/St_Helena",
        "Atlantic/Stanley",
        "Australia/ACT",
        "Australia/Adelaide",
        "Australia/Brisbane",
        "Australia/Broken_Hill",
        "Australia/Canberra",
        "Australia/Currie",
        "Australia/Darwin",
        "Australia/Eucla",
        "Australia/Hobart",
        "Australia/LHI",
        "Australia/Lindeman",
        "Australia/Lord_Howe",
        "Australia/Melbourne",
        "Australia/North",
        "Australia/NSW",
        "Australia/Perth",
        "Australia/Queensland",
        "Australia/South",
        "Australia/Sydney",
        "Australia/Tasmania",
        "Australia/Victoria",
        "Australia/West",
        "Australia/Yancowinna",
        "Brazil/Acre",
        "Brazil/DeNoronha",
        "Brazil/East",
        "Brazil/West",
        "Canada/Atlantic",
        "Canada/Central",
        "Canada/Eastern",
        "Canada/Mountain",
        "Canada/Newfoundland",
        "Canada/Pacific",
        "Canada/Saskatchewan",
        "Canada/Yukon",
        "Chile/Continental",
        "Chile/EasterIsland",
        "Cuba",
        "Egypt",
        "Eire",
        "Etc/GMT",
        "Etc/GMT+0",
        "Etc/GMT+1",
        "Etc/GMT+10",
        "Etc/GMT+11",
        "Etc/GMT+12",
        "Etc/GMT+2",
        "Etc/GMT+3",
        "Etc/GMT+4",
        "Etc/GMT+5",
        "Etc/GMT+6",
        "Etc/GMT+7",
        "Etc/GMT+8",
        "Etc/GMT+9",
        "Etc/GMT-0",
        "Etc/GMT-1",
        "Etc/GMT-10",
        "Etc/GMT-11",
        "Etc/GMT-12",
        "Etc/GMT-13",
        "Etc/GMT-14",
        "Etc/GMT-2",
        "Etc/GMT-3",
        "Etc/GMT-4",
        "Etc/GMT-5",
        "Etc/GMT-6",
        "Etc/GMT-7",
        "Etc/GMT-8",
        "Etc/GMT-9",
        "Etc/GMT0",
        "Etc/Greenwich",
        "Etc/UCT",
        "Etc/Universal",
        "Etc/UTC",
        "Etc/Zulu",
        "Europe/Amsterdam",
        "Europe/Andorra",
        "Europe/Astrakhan",
        "Europe/Athens",
        "Europe/Belfast",
        "Europe/Belgrade",
        "Europe/Berlin",
        "Europe/Bratislava",
        "Europe/Brussels",
        "Europe/Bucharest",
        "Europe/Budapest",
        "Europe/Busingen",
        "Europe/Chisinau",
        "Europe/Copenhagen",
        "Europe/Dublin",
        "Europe/Gibraltar",
        "Europe/Guernsey",
        "Europe/Helsinki",
        "Europe/Isle_of_Man",
        "Europe/Istanbul",
        "Europe/Jersey",
        "Europe/Kaliningrad",
        "Europe/Kiev",
        "Europe/Kirov",
        "Europe/Kyiv",
        "Europe/Lisbon",
        "Europe/Ljubljana",
        "Europe/London",
        "Europe/Luxembourg",
        "Europe/Madrid",
        "Europe/Malta",
        "Europe/Mariehamn",
        "Europe/Minsk",
        "Europe/Monaco",
        "Europe/Moscow",
        "Europe/Nicosia",
        "Europe/Oslo",
        "Europe/Paris",
        "Europe/Podgorica",
        "Europe/Prague",
        "Europe/Riga",
        "Europe/Rome",
        "Europe/Samara",
        "Europe/San_Marino",
        "Europe/Sarajevo",
        "Europe/Saratov",
        "Europe/Simferopol",
        "Europe/Skopje",
        "Europe/Sofia",
        "Europe/Stockholm",
        "Europe/Tallinn",
        "Europe/Tirane",
        "Europe/Tiraspol",
        "Europe/Ulyanovsk",
        "Europe/Uzhgorod",
        "Europe/Vaduz",
        "Europe/Vatican",
        "Europe/Vienna",
        "Europe/Vilnius",
        "Europe/Volgograd",
        "Europe/Warsaw",
        "Europe/Zagreb",
        "Europe/Zaporozhye",
        "Europe/Zurich",
        "GB",
        "GB-Eire",
        "Hongkong",
        "Iceland",
        "Indian/Antananarivo",
        "Indian/Chagos",
        "Indian/Christmas",
        "Indian/Cocos",
        "Indian/Comoro",
        "Indian/Kerguelen",
        "Indian/Mahe",
        "Indian/Maldives",
        "Indian/Mauritius",
        "Indian/Mayotte",
        "Indian/Reunion",
        "Iran",
        "Israel",
        "Jamaica",
        "Japan",
        "Kwajalein",
        "Libya",
        "Mexico/BajaNorte",
        "Mexico/BajaSur",
        "Mexico/General",
        "Navajo",
        "NZ",
        "NZ-CHAT",
        "Pacific/Apia",
        "Pacific/Auckland",
        "Pacific/Bougainville",
        "Pacific/Chatham",
        "Pacific/Chuuk",
        "Pacific/Easter",
        "Pacific/Efate",
        "Pacific/Enderbury",
        "Pacific/Fakaofo",
        "Pacific/Fiji",
        "Pacific/Funafuti",
        "Pacific/Galapagos",
        "Pacific/Gambier",
        "Pacific/Guadalcanal",
        "Pacific/Guam",
        "Pacific/Honolulu",
        "Pacific/Johnston",
        "Pacific/Kanton",
        "Pacific/Kiritimati",
        "Pacific/Kosrae",
        "Pacific/Kwajalein",
        "Pacific/Majuro",
        "Pacific/Marquesas",
        "Pacific/Midway",
        "Pacific/Nauru",
        "Pacific/Niue",
        "Pacific/Norfolk",
        "Pacific/Noumea",
        "Pacific/Pago_Pago",
        "Pacific/Palau",
        "Pacific/Pitcairn",
        "Pacific/Pohnpei",
        "Pacific/Ponape",
        "Pacific/Port_Moresby",
        "Pacific/Rarotonga",
        "Pacific/Saipan",
        "Pacific/Samoa",
        "Pacific/Tahiti",
        "Pacific/Tarawa",
        "Pacific/Tongatapu",
        "Pacific/Truk",
        "Pacific/Wake",
        "Pacific/Wallis",
        "Pacific/Yap",
        "Poland",
        "Portugal",
        "PRC",
        "ROC",
        "Singapore",
        "US/Alaska",
        "US/Aleutian",
        "US/Arizona",
        "US/Central",
        "US/East-Indiana",
        "US/Eastern",
        "US/Hawaii",
        "US/Indiana-Starke",
        "US/Michigan",
        "US/Mountain",
        "US/Pacific",
        "US/Samoa"
      ]
    },
    "dependency-type": {
      "type": "string",
      "enum": ["direct", "indirect", "all", "production", "development"],
      "x-intellij-enum-metadata": {
        "direct": {
          "description": "All explicitly defined dependencies."
        },
        "indirect": {
          "description": "Dependencies of direct dependencies (also known as sub-dependencies, or transient dependencies)."
        },
        "all": {
          "description": "All explicitly defined dependencies. For bundler, pip, composer, cargo, also the dependencies of direct dependencies."
        },
        "production": {
          "description": "Only dependencies in the 'Product dependency group'."
        },
        "development": {
          "description": "Only dependencies in the 'Development dependency group'."
        }
      }
    },
    "update-types": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "version-update:semver-major",
          "version-update:semver-minor",
          "version-update:semver-patch"
        ]
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "insecure-external-code-execution": {
      "type": "string",
      "enum": ["allow", "deny"]
    },
    "versioning-strategy": {
      "type": "string",
      "enum": [
        "auto",
        "increase",
        "increase-if-necessary",
        "lockfile-only",
        "widen"
      ],
      "x-intellij-enum-metadata": {
        "auto": {
          "description": "Try to differentiate between apps and libraries. Use 'increase' for apps and 'widen' for libraries."
        },
        "increase": {
          "description": "Always increase the minimum version requirement to match the new version. If a range already exists, typically this only increases the lower bound."
        },
        "increase-if-necessary": {
          "description": "Leave the constraint if the original constraint allows the new version, otherwise, bump the constraint."
        },
        "lockfile-only": {
          "description": "Only create pull requests to update lockfiles. Ignore any new versions that would require package manifest changes."
        },
        "widen": {
          "description": "Widen the allowed version requirements to include both the new and old versions, when possible. Typically, this only increases the maximum allowed version requirement."
        }
      }
    },
    "package-ecosystem-values": {
      "enum": [
        "bundler",
        "cargo",
        "composer",
        "devcontainers",
        "docker",
        "elm",
        "gitsubmodule",
        "github-actions",
        "gomod",
        "gradle",
        "maven",
        "mix",
        "npm",
        "nuget",
        "pip",
        "pip-compile",
        "pub",
        "swift",
        "terraform"
      ]
    },
    "schedule-day": {
      "type": "string",
      "enum": [
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "sunday"
      ]
    },
    "schedule-interval": {
      "type": "string",
      "enum": ["daily", "weekly", "monthly"]
    },
    "update": {
      "type": "object",
      "properties": {
        "allow": {
          "description": "Customize which updates are allowed",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dependency-name": {
                "type": "string"
              },
              "dependency-type": {
                "$ref": "#/definitions/dependency-type"
              }
            },
            "anyOf": [
              { "required": ["dependency-name"] },
              { "required": ["dependency-type"] }
            ],
            "additionalProperties": false
          }
        },
        "assignees": {
          "description": "Assignees to set on pull requests",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "commit-message": {
          "description": "Dependabot attempts to detect your commit message preferences and use similar patterns. Use this option to specify your preferences explicitly.",
          "type": "object",
          "properties": {
            "prefix": {
              "description": "A prefix for all commit messages. When you specify a prefix for commit messages, GitHub will automatically add a colon between the defined prefix and the commit message provided the defined prefix ends with a letter, number, closing parenthesis, or closing bracket. This means that, for example, if you end the prefix with a whitespace, there will be no colon added between the prefix and the commit message.",
              "type": "string",
              "maxLength": 50
            },
            "prefix-development": {
              "description": "A separate prefix for all commit messages that update dependencies in the Development dependency group. When you specify a value for this option, the prefix is used only for updates to dependencies in the Production dependency group. This is not supported by all package ecosystems.",
              "type": "string",
              "maxLength": 50
            },
            "include": {
              "description": "Specifies that any prefix is followed by a list of the dependencies updated in the commit.",
              "type": "string",
              "enum": ["scope"],
              "default": "scope"
            }
          },
          "anyOf": [
            { "required": ["prefix"] },
            { "required": ["prefix-development"] },
            { "required": ["include"] }
          ],
          "additionalProperties": false
        },
        "directories": {
          "description": "Locations of package manifests",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "directory": {
          "description": "Location of package manifests",
          "type": "string",
          "default": "/"
        },
        "groups": {
          "description": "Configure groups for dependencies. Each 'groups' property is arbitrary will appear in pull request titles and branch names. For example, the code snippet '{\"groups\": {\"NPM dependencies\": {\"patterns\": [\"*\"]}}}' sets the group name to 'NPM dependencies'.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "applies-to": {
                "description": "Use to specify a whether the rules in the group apply to version updates or security updates.",
                "type": "string",
                "enum": ["version-updates", "security-updates"]
              },
              "dependency-type": {
                "description": "Specify a dependency type to be included in the group.",
                "type": "string",
                "enum": ["development", "production"]
              },
              "patterns": {
                "description": "Define strings of characters that match with a dependency name (or multiple dependency names) to include those dependencies in the group.",
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1
                },
                "uniqueItems": true,
                "minItems": 1
              },
              "exclude-patterns": {
                "description": "Exclude certain dependencies from the group. If a dependency is excluded from a group, Dependabot will continue to raise single pull requests to update the dependency to its latest version.",
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1
                },
                "uniqueItems": true,
                "minItems": 1
              },
              "update-types": {
                "description": "Specify the semantic versioning level to include in the group",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["major", "minor", "patch"]
                },
                "minItems": 1,
                "uniqueItems": true
              }
            },
            "anyOf": [
              { "required": ["dependency-type"] },
              { "required": ["patterns"] },
              { "required": ["update-types"] }
            ],
            "additionalProperties": false
          },
          "minProperties": 1
        },
        "ignore": {
          "description": "Ignore certain dependencies or versions",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dependency-name": {
                "description": "Use to ignore updates for dependencies with matching names, optionally using * to match zero or more characters.",
                "type": "string"
              },
              "update-types": {
                "$ref": "#/definitions/update-types",
                "description": "Use to ignore types of updates. You can combine this with 'dependency-name: \"*\"' to ignore particular update-types for all dependencies."
              },
              "versions": {
                "description": "Use to ignore specific versions or ranges of versions. If you want to define a range, use the standard pattern for the package manager.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "uniqueItems": true
              }
            },
            "anyOf": [
              { "required": ["dependency-name"] },
              { "required": ["update-types"] },
              { "required": ["versions"] }
            ],
            "additionalProperties": false
          }
        },
        "insecure-external-code-execution": {
          "$ref": "#/definitions/insecure-external-code-execution",
          "description": "Allow or deny code execution in manifest files"
        },
        "labels": {
          "description": "Labels to set on pull requests",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 0,
          "uniqueItems": true,
          "default": ["dependencies"]
        },
        "milestone": {
          "description": "Associate all pull requests raised for a package manager with a milestone. You need to specify the numeric identifier of the milestone and not its label.",
          "type": "integer",
          "minimum": 1
        },
        "open-pull-requests-limit": {
          "description": "Limit number of open pull requests for version updates",
          "type": "integer",
          "minimum": 0,
          "default": 5
        },
        "package-ecosystem": {
          "$comment": "These values are restricted by a top-level if-then-else when 'enable-beta-ecosystems' is not enabled.",
          "description": "Package manager to use",
          "type": "string",
          "anyOf": [
            { "$ref": "#/definitions/package-ecosystem-values" },
            { "minLength": 1 }
          ]
        },
        "pull-request-branch-name": {
          "description": "Pull request branch name preferences",
          "type": "object",
          "properties": {
            "separator": {
              "description": "Change separator for PR branch name",
              "type": "string",
              "default": "/",
              "enum": ["-", "_", "/"]
            }
          },
          "required": ["separator"],
          "additionalProperties": false
        },
        "rebase-strategy": {
          "description": "Disable automatic rebasing. 'auto' is the default and Dependabot will rebase open pull requests when changes are detected. 'disabled' will disable automatic rebasing.",
          "type": "string",
          "enum": ["auto", "disabled"],
          "default": "auto"
        },
        "registries": {
          "$comment": "'registries' must be either an array of strings, or the string constant '*'.",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "uniqueItems": true,
              "minItems": 1
            },
            {
              "type": "string",
              "const": "*"
            }
          ]
        },
        "reviewers": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "description": "Specify individual reviewers or teams of reviewers for all pull requests raised for a package manager. You must use the full team name, including the organization, as if you were @mentioning the team.",
          "minItems": 1,
          "uniqueItems": true
        },
        "schedule": {
          "description": "Schedule preferences",
          "type": "object",
          "properties": {
            "interval": {
              "$ref": "#/definitions/schedule-interval"
            },
            "day": {
              "$ref": "#/definitions/schedule-day",
              "description": "Specify an alternative day to check for updates"
            },
            "time": {
              "type": "string",
              "description": "Specify an alternative time of day to check for updates (format: hh:mm)",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]$"
            },
            "timezone": {
              "$ref": "#/definitions/timezone",
              "description": "The time zone identifier must be from the Time Zone database maintained by IANA"
            }
          },
          "required": ["interval"]
        },
        "target-branch": {
          "description": "Specify a different branch for manifest files and for pull requests.",
          "type": "string",
          "minLength": 1
        },
        "vendor": {
          "description": "Tell Dependabot to vendor dependencies when updating them. Don't use this option if you're using 'gomod'.",
          "type": "boolean"
        },
        "versioning-strategy": {
          "$ref": "#/definitions/versioning-strategy",
          "description": "How to update manifest version requirements"
        }
      },
      "allOf": [
        {
          "required": ["package-ecosystem", "schedule"]
        },
        {
          "oneOf": [
            { "required": ["directories"] },
            { "required": ["directory"] }
          ]
        }
      ]
    },
    "registry": {
      "type": "object",
      "description": "The top-level registries key is optional. It allows you to specify authentication details that Dependabot can use to access private package registries.",
      "additionalProperties": false,
      "patternProperties": {
        ".+": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "description": "Identifies the type of registry.",
              "enum": [
                "composer-repository",
                "docker-registry",
                "git",
                "hex-organization",
                "hex-repository",
                "maven-repository",
                "npm-registry",
                "nuget-feed",
                "python-index",
                "rubygems-server",
                "terraform-registry"
              ]
            },
            "url": {
              "description": "The URL to use to access the dependencies in this registry. The protocol is optional. If not specified, 'https://' is assumed. Dependabot adds or ignores trailing slashes as required.",
              "type": "string"
            },
            "username": {
              "description": "The username that Dependabot uses to access the registry.",
              "type": "string"
            },
            "password": {
              "description": "A reference to a Dependabot secret containing the password for the specified user.",
              "type": "string"
            },
            "key": {
              "description": "A reference to a Dependabot secret containing an access key for this registry.",
              "type": "string"
            },
            "token": {
              "description": "A reference to a Dependabot secret containing an access token for this registry.",
              "type": "string"
            },
            "replaces-base": {
              "description": "For registries with type: python-index, if the boolean value is true, pip resolves dependencies by using the specified URL rather than the base URL of the Python Package Index (by default https://pypi.org/simple).",
              "type": "boolean"
            },
            "organization": {
              "description": "",
              "type": "string"
            },
            "repo": {
              "description": "",
              "type": "string"
            },
            "auth-key": {
              "description": "",
              "type": "string"
            },
            "public-key-fingerprint": {
              "description": "",
              "type": "string"
            }
          },
          "required": ["type", "url"]
        }
      },
      "minProperties": 1
    }
  },
  "properties": {
    "version": {
      "title": "Config file version",
      "description": "Dependabot configuration files require this key, and its value must be 2",
      "type": "integer",
      "enum": [2]
    },
    "enable-beta-ecosystems": {
      "description": "Enable ecosystems that have beta-level support",
      "type": "boolean"
    },
    "updates": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/update",
        "title": "Package Ecosystem",
        "description": "Element for each one package manager that you want GitHub Dependabot to monitor for new versions"
      }
    },
    "registries": {
      "$ref": "#/definitions/registry"
    }
  },
  "required": ["version", "updates"],
  "title": "GitHub Dependabot v2 config",
  "type": "object",
  "allOf": [
    {
      "$comment": "If 'enable-beta-ecosystems' is NOT enabled, enforce known 'package-ecosystem' values.",
      "if": {
        "properties": {
          "enable-beta-ecosystems": {
            "const": true
          }
        },
        "required": ["enable-beta-ecosystems"]
      },
      "then": {},
      "else": {
        "properties": {
          "updates": {
            "items": {
              "properties": {
                "package-ecosystem": {
                  "$ref": "#/definitions/package-ecosystem-values"
                }
              }
            }
          }
        }
      }
    }
  ]
}
