{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$id": "https://json.schemastore.org/ansible-playbook",
  "title": "Ansible Playbook",
  "description": "Root schema of Ansible Playbook",
  "definitions": {
    "any_errors_fatal": {
      "$ref": "#/definitions/boolean"
    },
    "become": {
      "$ref": "#/definitions/boolean"
    },
    "become_flags": {
      "type": "string"
    },
    "become_method": {
      "type": "string",
      "examples": [
        "sudo",
        "su",
        "su-exec",
        "gosu"
      ]
    },
    "become_password": {
      "type": "string"
    },
    "become_user": {
      "type": "string"
    },
    "boolean": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string",
          "x-intellij-case-insensitive": true,
          "enum": [
            "true",
            "false",
            "yes",
            "no"
          ]
        }
      ]
    },
    "check_mode": {
      "$ref": "#/definitions/boolean"
    },
    "connection": {
      "type": "string",
      "enum": [
        "buildah",
        "chroot",
        "docker",
        "funcd",
        "httpapi",
        "iocage",
        "jail",
        "kubectl",
        "libvirt_lxc",
        "local",
        "lxc",
        "lxd",
        "napalm",
        "netconf",
        "network_cli",
        "oc",
        "paramiko_ssh",
        "persistent",
        "podman",
        "psrp",
        "qubes",
        "saltstack",
        "ssh",
        "vmware_tools",
        "winrm",
        "zone"
      ]
    },
    "debugger": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "on_failed",
        "on_unreachable",
        "on_skipped"
      ]
    },
    "diff": {
      "$ref": "#/definitions/boolean"
    },
    "environment": {
      "patternProperties": {
        "[a-zA-Z0-9_]": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "type": "object"
    },
    "fact_path": {
      "type": "string",
      "x-intellij-language-injection": {
        "language": "File reference"
      }
    },
    "force_handlers": {
      "$ref": "#/definitions/boolean"
    },
    "gather_facts": {
      "anyOf": [
        {
          "$ref": "#/definitions/boolean"
        },
        {
          "$ref": "#/definitions/gather_subset"
        }
      ]
    },
    "gather_subset": {
      "type": "string",
      "enum": [
        "!all",
        "!any",
        "!min",
        "!ohai",
        "!smart",
        "all",
        "any",
        "min",
        "ohai",
        "smart"
      ]
    },
    "hosts": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minLength": 1
        }
      ]
    },
    "ignore_errors": {
      "$ref": "#/definitions/boolean"
    },
    "max_fail_percentage": {
      "type": "integer"
    },
    "module_defaults": {
      "type": "object"
    },
    "name": {
      "type": "string"
    },
    "no_log": {
      "$ref": "#/definitions/boolean"
    },
    "serial": {
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "array",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ]
        }
      ]
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "vars_files": {
      "type": "array",
      "items": {
        "type": "string",
        "x-intellij-language-injection": {
          "language": "File reference"
        }
      }
    }
  },
  "type": "array",
  "minLength": 1,
  "items": {
    "title": "Ansible Playbook schema",
    "type": "object",
    "properties": {
      "any_errors_fatal": {
        "$ref": "#/definitions/any_errors_fatal"
      },
      "become": {
        "$ref": "#/definitions/become",
        "title": "Become | Ansible Playbook",
        "description": "Boolean that controls if privilege escalation is used or not on Task execution"
      },
      "become_flags": {
        "$ref": "#/definitions/become_flags",
        "title": "Become User | Ansible Playbook",
        "description": "A string of flag(s) to pass to the privilege escalation program when become is True"
      },
      "become_method": {
        "$ref": "#/definitions/become_method",
        "title": "Become Method | Ansible Playbook",
        "description": "Which method of privilege escalation to use (such as sudo or su)."
      },
      "become_password": {
        "$ref": "#/definitions/become_password",
        "title": "Become Password | Ansible Playbook"
      },
      "become_user": {
        "$ref": "#/definitions/become_user",
        "title": "Become User | Ansible Playbook",
        "description": "User that you ‘become’ after using privilege escalation. The remote/login user must have permissions to become this user"
      },
      "check_mode": {
        "$ref": "#/definitions/check_mode",
        "title": "Check Mode | Ansible Playbook",
        "description": "A boolean that controls if a task is executed in ‘check’ mode"
      },
      "connection": {
        "$ref": "#/definitions/connection",
        "description": "Allows you to change the connection plugin used for tasks to execute on the target",
        "x-intellij-html-description": "Allows you to change the connection plugin used for tasks to execute on the target",
        "title": "Connection | Ansible Playbook"
      },
      "debugger": {
        "$ref": "#/definitions/debugger",
        "title": "Debugger | Ansible Playbook",
        "description": "Enable debugging tasks based on state of the task result."
      },
      "diff": {
        "$ref": "#/definitions/diff",
        "title": "Diff | Ansible Playbook",
        "description": "Toggle to make tasks return ‘diff’ information or not"
      },
      "environment": {
        "$ref": "#/definitions/environment",
        "title": "Environment | Ansible Playbook",
        "description": "A dictionary that gets converted into environment vars to be provided for the task upon execution"
      },
      "fact_path": {
        "$ref": "#/definitions/fact_path",
        "title": "Fact Path | Ansible Playbook",
        "description": "Set the fact path option for the fact gathering plugin controlled by gather_facts"
      },
      "force_handlers": {
        "$ref": "#/definitions/force_handlers",
        "title": "Force Handlers | Ansible Playbook",
        "description": "Will force notified handler execution for hosts even if they failed during the play. Will not trigger if the play itself fails."
      },
      "gather_facts": {
        "$ref": "#/definitions/gather_facts",
        "description": "A boolean that controls if the play will automatically run the ‘setup’ task to gather facts for the hosts",
        "title": "Gather Facts | Ansible Playbook"
      },
      "gather_subset": {
        "$ref": "#/definitions/gather_subset",
        "title": "Gather Subset | Ansible Playbook",
        "description": "Allows you to pass subset options to the fact gathering plugin controlled by gather_facts"
      },
      "handlers": {
        "items": {
          "allOf": [
            {
              "$ref": "https://json.schemastore.org/ansible-role-2.9"
            }
          ]
        },
        "title": "Handlers | Ansible Playbook",
        "type": "array"
      },
      "hosts": {
        "$ref": "#/definitions/hosts",
        "title": "Hosts | Ansible Playbook",
        "description": "A list of groups, hosts or host pattern that translates into a list of hosts that are the play’s target."
      },
      "ignore_errors": {
        "$ref": "#/definitions/ignore_errors",
        "title": "Ignore Errors | Ansible Playbook",
        "description": "Boolean that allows you to ignore task failures and continue with play. It does not affect connection errors"
      },
      "max_fail_percentage": {
        "$ref": "#/definitions/max_fail_percentage",
        "title": "Max Fail Percentage | Ansible Playbook",
        "description": "Can be used to abort the run after a given percentage of hosts in the current batch has failed"
      },
      "module_defaults": {
        "$ref": "#/definitions/module_defaults",
        "title": "Module Defautls | Ansible Playbook",
        "description": "Specifies default parameter values for modules"
      },
      "name": {
        "$ref": "#/definitions/name",
        "title": "Name | Ansible Playbook",
        "description": "Identifier. Can be used for documentation, in or tasks/handlers."
      },
      "no_log": {
        "$ref": "#/definitions/no_log",
        "title": "No Log | Ansible Playbook",
        "description": "Boolean that controls information disclosure."
      },
      "order": {
        "title": "Order | Ansible Playbook",
        "default": "inventory",
        "anyOf": [
          {
            "enum": [
              "inventory",
              "reverse_inventory",
              "sorted",
              "shuffle",
              "reverse_sorted"
            ],
            "type": "string"
          }
        ]
      },
      "post_tasks": {
        "title": "Post Tasks | Ansible Playbook",
        "$ref": "https://json.schemastore.org/ansible-role-2.9"
      },
      "pre_tasks": {
        "title": "Pre Tasks | Ansible Playbook",
        "$ref": "https://json.schemastore.org/ansible-role-2.9"
      },
      "remote_user": {
        "title": "Remote_user | Ansible Playbook",
        "type": "string"
      },
      "roles": {
        "items": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        },
        "title": "Roles | Ansible Playbook",
        "type": "array"
      },
      "serial": {
        "$ref": "#/definitions/serial",
        "title": "Serial | Ansible Playbook"
      },
      "tags": {
        "$ref": "#/definitions/tags",
        "title": "Tags | Ansible Playbook"
      },
      "tasks": {
        "title": "Tasks | Ansible Playbook",
        "anyOf": [
          {
            "$ref": "https://json.schemastore.org/ansible-role-2.9"
          }
        ],
        "minLength": 1
      },
      "vars": {
        "default": {},
        "description": "An explanation about the purpose of this instance.",
        "patternProperties": {
          "[a-zA-Z0-9_]": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              },
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        "title": "Vars | Ansible Playbook",
        "type": "object"
      },
      "vars_files": {
        "title": "Var Files | Ansible Playbook",
        "$ref": "#/definitions/vars_files"
      }
    },
    "required": [
      "hosts"
    ]
  }
}
