{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/language-configuration.json",
  "additionalProperties": true,
  "definitions": {
    "regexp": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "flags": {
          "type": "string"
        }
      },
      "required": ["pattern"]
    },
    "charPair": {
      "type": "array",
      "items": [{ "type": "string" }, { "type": "string" }],
      "minItems": 2,
      "additionalItems": false
    }
  },
  "properties": {
    "comments": {
      "description": "The language's comment settings.",
      "type": "object",
      "properties": {
        "lineComment": {
          "description": "The line comment token, like `// this is a comment`.",
          "type": "string"
        },
        "blockComment": {
          "$ref": "#/definitions/charPair",
          "description": "The block comment character pair, like `/* block comment *&#47;`"
        }
      }
    },
    "brackets": {
      "description": "The language's brackets.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/charPair"
      }
    },
    "autoClosingPairs": {
      "description": "The language's auto closing pairs. The 'close' character is automatically inserted with the 'open' character is typed.",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/charPair"
          },
          {
            "type": "object",
            "properties": {
              "open": {
                "type": "string"
              },
              "close": {
                "type": "string"
              },
              "notIn": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["open", "close"]
          }
        ]
      }
    },
    "autoCloseBefore": {
      "description": "What characters must be after the cursor for bracket or quote autoclosing to occur.",
      "type": "string"
    },
    "surroundingPairs": {
      "description": "The language's surrounding pairs. When the 'open' character is typed on a selection, the selected string is surrounded by the open and close characters.",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/charPair"
          },
          {
            "type": "object",
            "properties": {
              "open": {
                "type": "string"
              },
              "close": {
                "type": "string"
              }
            },
            "required": ["open", "close"]
          }
        ]
      }
    },
    "folding": {
      "description": "The language's folding rules.",
      "type": "object",
      "properties": {
        "markers": {
          "description": "Region markers used by the language.",
          "type": "object",
          "properties": {
            "start": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/regexp"
                }
              ]
            },
            "end": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/regexp"
                }
              ]
            }
          }
        }
      }
    },
    "wordPattern": {
      "description": "The language's word definition.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/regexp"
        }
      ]
    },
    "indentationRules": {
      "description": "The language's indentation settings.",
      "type": "object",
      "properties": {
        "decreaseIndentPattern": {
          "description": "If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/regexp"
            }
          ]
        },
        "increaseIndentPattern": {
          "description": "If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/regexp"
            }
          ]
        },
        "indentNextLinePattern": {
          "description": "If a line matches this pattern, then only the next line after it should be indented once.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/regexp"
            }
          ]
        },
        "unIndentedLinePattern": {
          "description": "If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/regexp"
            }
          ]
        }
      },
      "required": ["decreaseIndentPattern", "increaseIndentPattern"]
    },
    "onEnterRules": {
      "description": "The language's rules to be evaluated when pressing Enter.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "beforeText": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/regexp"
              }
            ]
          },
          "afterText": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/regexp"
              }
            ]
          },
          "previousLineText": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/regexp"
              }
            ]
          },
          "action": {
            "type": "object",
            "properties": {
              "indent": {
                "type": "string",
                "enum": ["none", "indent", "indentOutdent", "outdent"]
              },
              "appendText": {
                "type": "string"
              },
              "removeText": {
                "type": "integer",
                "minimum": 1
              }
            },
            "required": ["indent"]
          }
        },
        "required": ["beforeText", "action"]
      }
    }
  },
  "type": "object",
  "title": "Language configuration",
  "description": "Configuration file for language features in VS Code and Visual Studio."
}
