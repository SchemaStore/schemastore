{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/metricshub.json",
  "type": "object",
  "definitions": {
    "duration": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "string",
          "pattern": "^[0-9]+\\s*[years|yrs|y|weeks|wks|w|days|d|hours|hrs|h|minutes|mins|m!seconds|secs|s|milliseconds|ms]*$"
        }
      ]
    },
    "namespace": {
      "description": "Forces a specific namespace for connectors that perform namespace auto-detection (Advanced).",
      "type": "string"
    },
    "loggerLevel": {
      "type": "string",
      "enum": [
        "all",
        "trace",
        "debug",
        "info",
        "warn",
        "error",
        "fatal",
        "off"
      ],
      "default": "off"
    },
    "resources": {
      "type": "object",
      "description": "Contains Resources",
      "additionalProperties": {
        "type": "object",
        "description": "Resource name",
        "properties": {
          "loggerLevel": {
            "type": "string",
            "description": "Logger Level",
            "enum": ["all", "trace", "debug", "info", "warn", "error", "fatal"]
          },
          "outputDirectory": {
            "type": "string",
            "description": "Output directory"
          },
          "collectPeriod": {
            "$ref": "#/definitions/duration",
            "description": "Sets the collect period that MetricsHub uses to collects metrics from the monitored hosts (Default: 2m).",
            "default": "2m"
          },
          "discoveryCycle": {
            "type": "string",
            "description": "Sets the cycle that MetricsHub uses to perform discoveries and detect new components in your monitored environment. By default, MetricsHub runs a discovery after 30 collects."
          },
          "alertingSystemConfig": {
            "type": "object",
            "description": "Alerting System Configuration",
            "properties": {
              "disable": {
                "type": "boolean",
                "description": "If true, disables the alerting system"
              },
              "problemTemplate": {
                "type": "string",
                "description": "Problem alerts template"
              }
            }
          },
          "sequential": {
            "type": "boolean",
            "description": "Sequential mode. This forces all network calls to be ordered in a sequential order."
          },
          "resolveHostnameToFqdn": {
            "type": "boolean",
            "description": "Resolve hostnames to FQDN"
          },
          "jobTimeout": {
            "$ref": "#/definitions/duration"
          },
          "attributes": {
            "type": "object",
            "description": "Resource attributes",
            "additionalProperties": {
              "type": ["string", "number", "array"],
              "description": "Attribute key-value pair"
            }
          },
          "metrics": {
            "type": "object",
            "description": "Resource metrics",
            "additionalProperties": {
              "type": ["string", "number"],
              "description": "Metrics key-value pair"
            }
          },
          "protocols": {
            "type": "object",
            "description": "Protocols Used",
            "properties": {
              "http": {
                "type": "object",
                "description": "Configures the HTTP protocol to access the host.",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Sets the username used to establish the connection with the host through the HTTP protocol."
                  },
                  "password": {
                    "type": "string",
                    "description": "Sets the password used to establish the connection with the host through the HTTP protocol."
                  },
                  "timeout": {
                    "$ref": "#/definitions/duration",
                    "description": "Sets how long until the HTTP request times out (Default: 120s).",
                    "default": "120s"
                  },
                  "https": {
                    "type": "boolean",
                    "description": "Enables HTTPS to access the host (Default: true)."
                  },
                  "port": {
                    "type": "number",
                    "description": "Sets the HTTPS port number used to perform HTTP requests (Default: 443)."
                  }
                }
              },
              "ipmi": {
                "type": "object",
                "description": "Configures the IPMI protocol to access the host.",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Sets the username used to establish the connection with the host through the IPMI protocol."
                  },
                  "password": {
                    "type": "string",
                    "description": "Sets the username used to establish the connection with the host through the IPMI protocol."
                  },
                  "timeout": {
                    "$ref": "#/definitions/duration",
                    "description": "Sets how long until the IPMI request times out (Default: 120s).",
                    "default": "120s"
                  },
                  "bmcKey": {
                    "type": "string",
                    "description": "BMC Key used to establish the connection with the host through the IPMI protocol."
                  },
                  "skipAuth": {
                    "type": "boolean",
                    "description": "Skip Authentication"
                  }
                }
              },
              "osCommand": {
                "type": "object",
                "description": "Configures the OS Command protocol to access the host.",
                "properties": {
                  "timeout": {
                    "$ref": "#/definitions/duration",
                    "description": "Sets how long until the local OS Command times out (Default: 120s).",
                    "default": "120s"
                  },
                  "useSudo": {
                    "type": "boolean",
                    "description": "Sets if sudo needs to be used for the local OS Command (Default: false).",
                    "default": false
                  },
                  "useSudoCommands": {
                    "type": "array",
                    "description": "Sets the list of commands for which sudo is required.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sudoCommand": {
                    "type": "string",
                    "description": "Sets the sudo command to be used for the host to be monitored (Default: sudo).",
                    "default": "sudo"
                  }
                }
              },
              "snmp": {
                "type": "object",
                "description": "Configures the SNMP protocol to access the host.",
                "oneOf": [
                  {
                    "properties": {
                      "version": {
                        "description": "Sets the version of the SNMP protocol (Default: v1).",
                        "type": "string",
                        "enum": ["v1", "v2c"],
                        "default": "v1"
                      },
                      "community": {
                        "type": "string",
                        "description": "Sets the SNMP Community string to use to perform queries (Default: public)."
                      },
                      "timeout": {
                        "$ref": "#/definitions/duration",
                        "description": "Sets how long until the SNMP request times out (Default: 120s).",
                        "default": "120s"
                      },
                      "port": {
                        "type": "number",
                        "description": "Sets the SNMP port number used to perform SNMP queries (Default: 161).",
                        "default": 161
                      }
                    }
                  }
                ]
              },
              "ssh": {
                "type": "object",
                "description": "Configures the SSH protocol to access the host.",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Sets the username to use for performing the SSH query."
                  },
                  "password": {
                    "type": "string",
                    "description": "ets the password to use for performing the SSH query."
                  },
                  "timeout": {
                    "$ref": "#/definitions/duration",
                    "description": "Sets how long until the command times out (Default: 120s).",
                    "default": "120s"
                  },
                  "sudoCommand": {
                    "description": "Sets the sudo command to be used.",
                    "type": "string",
                    "default": "sudo"
                  },
                  "useSudo": {
                    "description": "Sets if sudo needs to be used for the SSH Command (Default: false).",
                    "type": "boolean",
                    "default": false
                  },
                  "useSudoCommands": {
                    "description": "Sets the list of commands for which sudo is required.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "privateKey": {
                    "type": "string",
                    "description": "Sets the private Key File to use to establish the connection to the host through the SSH protocol."
                  }
                }
              },
              "wbem": {
                "type": "object",
                "description": "Configures the WBEM protocol to access the host.",
                "properties": {
                  "namespace": {
                    "$ref": "#/definitions/namespace"
                  },
                  "password": {
                    "description": "Sets the password used to establish the connection with the host through the WBEM protocol.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Sets the HTTPS port number used to perform WBEM queries (Default: 5989 for HTTPS or 5988 for HTTP).",
                    "type": "integer",
                    "default": 5989
                  },
                  "protocol": {
                    "$ref": "#/definitions/transportProtocols",
                    "description": "Sets the protocol used to access the host (Default: https).",
                    "default": "https"
                  },
                  "timeout": {
                    "$ref": "#/definitions/duration",
                    "description": "Sets how long until the WBEM request times out (Default: 120s).",
                    "default": "120s"
                  },
                  "username": {
                    "description": "Sets the username used to establish the connection with the host through the WBEM protocol.",
                    "type": "string"
                  }
                }
              },
              "winrm": {
                "type": "object",
                "description": "Configures the WinRM protocol to access the host.",
                "properties": {
                  "namespace": {
                    "$ref": "#/definitions/namespace"
                  },
                  "password": {
                    "description": "Sets the password used to establish the connection with the host through the WinRM protocol.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Sets the HTTPS port number used to perform WinRM queries (Default: 5989 for HTTPS or 5988 for HTTP).",
                    "type": "integer",
                    "default": 5989
                  },
                  "protocol": {
                    "$ref": "#/definitions/transportProtocols",
                    "description": "Sets the protocol used to access the host (Default: https).",
                    "default": "https"
                  },
                  "timeout": {
                    "$ref": "#/definitions/duration",
                    "description": "Sets how long until the WinRM request times out (Default: 120s).",
                    "default": "120s"
                  },
                  "username": {
                    "description": "Sets the username used to establish the connection with the host through the WinRM protocol.",
                    "type": "string"
                  },
                  "authentications": {
                    "type": "array",
                    "description": "Authentication Type",
                    "items": {
                      "type": "string",
                      "enum": ["ntlm", "kerberos"]
                    }
                  }
                }
              },
              "wmi": {
                "type": "object",
                "description": "Configures the WMI protocol to access the host.",
                "properties": {
                  "namespace": {
                    "$ref": "#/definitions/namespace"
                  },
                  "password": {
                    "description": "Sets the password used to establish the connection with the host through the WMI protocol.",
                    "type": "string"
                  },
                  "timeout": {
                    "$ref": "#/definitions/duration",
                    "description": "Sets how long until the WMI request times out (Default: 120s).",
                    "default": "120s"
                  },
                  "username": {
                    "description": "Sets the username used to establish the connection with the host through the WMI protocol.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "variables": {
            "type": "object",
            "description": "Variables to be used in connectors.",
            "additionalProperties": {
              "type": "object",
              "description": "Connector to which the variable is applied.",
              "additionalProperties": {
                "type": "string",
                "description": "Variable key-value pair."
              }
            }
          },
          "connectors": {
            "description": "Sets the Connector(s) to use or exclude, as well as connector tags to be matched.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "monitors": {
            "type": "object",
            "description": "Monitor Identity Properties",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "discovery": {
                  "type": "object",
                  "description": "Discovery Monitor",
                  "properties": {
                    "sources": {
                      "$ref": "#/definitions/sources"
                    },
                    "mapping": {
                      "type": "object",
                      "description": "Discovery Mapping",
                      "properties": {
                        "source": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "description": "Discovery Attributes",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID"
                            },
                            "name": {
                              "type": "string",
                              "description": "Display Name"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "metrics": {
                          "type": "string",
                          "description": "Discovery Metrics",
                          "additionalProperties": {}
                        },
                        "conditionalCollection": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "collect": {
                  "type": "object",
                  "description": "Collect Monitor",
                  "properties": {
                    "sources": {
                      "$ref": "#/definitions/sources"
                    },
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Collect Instance Type",
                      "enum": ["monoInstance", "multiInstance"]
                    },
                    "mapping": {
                      "type": "object",
                      "description": "Collect Mapping",
                      "properties": {
                        "source": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "description": "Collect Attributes",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "metrics": {
                          "type": "object",
                          "description": "Collect Metrics",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "legacyTextParameters": {
                          "type": "object",
                          "properties": {
                            "StatusInformation": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "simple": {
                  "type": "object",
                  "description": "Discovery Monitor",
                  "properties": {
                    "sources": {
                      "$ref": "#/definitions/sources"
                    },
                    "mapping": {
                      "type": "object",
                      "description": "Discovery Mapping",
                      "properties": {
                        "source": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "description": "Discovery Attributes",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID"
                            },
                            "name": {
                              "type": "string",
                              "description": "Display Name"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "metrics": {
                          "type": "object",
                          "description": "Discovery Metrics",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "conditionalCollection": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "resultContent": {
      "type": "string",
      "description": "Result Content Expected",
      "enum": ["http_status", "header", "body", "all"]
    },
    "httpMethod": {
      "type": "string",
      "description": "HTTP Method",
      "enum": ["get", "post", "delete", "put"]
    },
    "executeForEachEntryOf": {
      "type": "object",
      "description": "Execute For Each Entry",
      "properties": {
        "source": {
          "type": "string"
        },
        "concatMethod": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["list", "json_array", "json_array_extended"]
            },
            {
              "type": "object",
              "properties": {
                "concatStart": {
                  "type": "string"
                },
                "concatEnd": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },
    "sources": {
      "type": "object",
      "description": "Contains Sources",
      "additionalProperties": {
        "type": "object",
        "description": "Source Name",
        "oneOf": [
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "http"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "executeForEachEntryOf": {
                "$ref": "#/definitions/executeForEachEntryOf"
              },
              "method": {
                "$ref": "#/definitions/httpMethod"
              },
              "url": {
                "type": "string",
                "description": "HTTP Url"
              },
              "path": {
                "type": "string",
                "description": "HTTP Path"
              },
              "header": {
                "type": "string",
                "description": "HTTP Header"
              },
              "body": {
                "type": "string",
                "description": "HTTP Body"
              },
              "authenticationToken": {
                "type": "string",
                "description": "HTTP Authentication Token"
              },
              "resultContent": {
                "$ref": "#/definitions/resultContent"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "ipmi"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "osCommand"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "executeForEachEntryOf": {
                "$ref": "#/definitions/executeForEachEntryOf"
              },
              "commandLine": {
                "type": "string",
                "description": "Command Line"
              },
              "timeout": {
                "type": ["number", "string"],
                "description": "OS Command Timeout"
              },
              "executeLocally": {
                "type": "boolean",
                "description": "Command Executed On Local Agent"
              },
              "exclude": {
                "type": "string",
                "description": "Exclude Lines Matching"
              },
              "keep": {
                "type": "string",
                "description": "Keep Lines Matching"
              },
              "beginAtLineNumber": {
                "type": "integer",
                "description": "Begin At Line Number"
              },
              "endAtLineNumber": {
                "type": "integer",
                "description": "End At Line Number"
              },
              "separator": {
                "type": "string",
                "description": "Column Separator"
              },
              "selectColumns": {
                "type": "string",
                "description": "Columns Selected"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "copy"
              },
              "from": {
                "type": "string",
                "description": "Source Copied"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "static"
              },
              "value": {
                "type": "string",
                "description": "Source Value"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "snmpGet"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "executeForEachEntryOf": {
                "$ref": "#/definitions/executeForEachEntryOf"
              },
              "oid": {
                "type": "string",
                "description": "OID Queried"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "snmpTable"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "executeForEachEntryOf": {
                "$ref": "#/definitions/executeForEachEntryOf"
              },
              "oid": {
                "type": "string",
                "description": "OID Queried"
              },
              "selectColumns": {
                "type": "string",
                "description": "Columns Selected"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "tableJoin"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "leftTable": {
                "type": "string",
                "description": "Left Table"
              },
              "rightTable": {
                "type": "string",
                "description": "Right Table"
              },
              "leftKeyColumn": {
                "type": "integer",
                "description": "Left Key Column"
              },
              "rightKeyColumn": {
                "type": "integer",
                "description": "Right Key Column"
              },
              "defaultRightLine": {
                "type": "string",
                "description": "Line Used If No Matches From Right Table"
              },
              "isWbemKey": {
                "type": "boolean",
                "description": "Is WBEM Identifier"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "tableUnion"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "tables": {
                "type": "array",
                "description": "Tables To Be Concatenated",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "wbem"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "executeForEachEntryOf": {
                "$ref": "#/definitions/executeForEachEntryOf"
              },
              "query": {
                "type": "string",
                "description": "WBEM Query"
              },
              "namespace": {
                "type": "string",
                "description": "WBEM Namespace"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "const": "wmi"
              },
              "forceSerialization": {
                "type": "boolean"
              },
              "computes": {
                "$ref": "#/definitions/computes"
              },
              "executeForEachEntryOf": {
                "$ref": "#/definitions/executeForEachEntryOf"
              },
              "query": {
                "type": "string",
                "description": "WMI Description"
              },
              "namespace": {
                "type": "string",
                "description": "WMI Namespace"
              }
            }
          }
        ]
      }
    },
    "computes": {
      "type": "array",
      "items": {
        "type": "object",
        "oneOf": [
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": ["add", "divide", "multiply", "subtract"]
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "value": {
                "type": ["string", "number"],
                "description": "Number Value"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": ["and", "leftConcat", "rightConcat"]
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "value": {
                "type": "string",
                "description": "String Value"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "arrayTranslate"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "translationTable": {
                "type": "string",
                "description": "Translation Table Name"
              },
              "arraySeparator": {
                "type": "string",
                "description": "Array Separator"
              },
              "resultSeparator": {
                "type": "string",
                "description": "Result Separator"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "awk"
              },
              "script": {
                "type": "string",
                "description": "Awk Script Name"
              },
              "exclude": {
                "type": "string",
                "description": "Exclude Lines Matching"
              },
              "keep": {
                "type": "string",
                "description": "Keep Lines Matching"
              },
              "separators": {
                "type": "string",
                "description": "Column Separator"
              },
              "selectColumns": {
                "type": "string",
                "description": "Column Computed"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "convert"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "conversion": {
                "type": "string",
                "enum": ["hex2Dec", "array2SimpleStatus"]
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "duplicateColumn"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              }
            }
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": ["excludeOnlyMatchingLines", "keepOnlyMatchingLines"]
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "regExp": {
                "type": "string",
                "description": "Regular Expression To Match"
              },
              "valueList": {
                "type": "string",
                "description": "Value List To Match"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "extract"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "subColumn": {
                "type": "integer",
                "description": "Subcolumn Extracted"
              },
              "subSeparators": {
                "type": "string",
                "description": "Subcolumn Separators"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "extractPropertyFromWbemPath"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "property": {
                "type": "string",
                "description": "Property Extracted"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "json2Csv"
              },
              "entryKey": {
                "type": "string",
                "description": "JSON Entry Key"
              },
              "properties": {
                "type": "string",
                "description": "Properties To Capture"
              },
              "separator": {
                "type": "string",
                "description": "Column Separator"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "perBitTranslation"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "bitList": {
                "type": "string",
                "description": "List Of Bits"
              },
              "translationTable": {
                "type": "string",
                "description": "Translation Table Name"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "replace"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "existingValue": {
                "type": "string",
                "description": "Value Replaced"
              },
              "newValue": {
                "type": "string",
                "description": "New Value"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "substring"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "start": {
                "type": "string",
                "description": "Starting Character Index"
              },
              "length": {
                "type": "string",
                "description": "Substring Length"
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "translate"
              },
              "column": {
                "type": "integer",
                "description": "Column Computed"
              },
              "translationTable": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "Translation Table Name"
                  },
                  {
                    "type": "object",
                    "description": "Inline Translation Table",
                    "additionalProperties": {
                      "type": ["string", "number"],
                      "description": "Translation key-value pairs"
                    }
                  }
                ]
              }
            }
          },
          {
            "properties": {
              "type": {
                "const": "xml2Csv"
              },
              "recordTag": {
                "type": "string",
                "description": "XML Record Tag"
              },
              "properties": {
                "type": "string",
                "description": "Properties To Capture"
              }
            }
          }
        ]
      }
    },
    "transportProtocols": {
      "type": "string",
      "enum": ["http", "https"]
    }
  },
  "properties": {
    "jobPoolSize": {
      "type": "integer",
      "description": "Job Pool Size"
    },
    "loggerLevel": {
      "type": "string",
      "description": "Logger Level",
      "enum": ["all", "trace", "debug", "info", "warn", "error", "fatal"]
    },
    "outputDirectory": {
      "type": "string",
      "description": "Output directory"
    },
    "collectPeriod": {
      "$ref": "#/definitions/duration"
    },
    "discoveryCycle": {
      "type": "string",
      "description": "Discovery frequency (In collect cycles)"
    },
    "alertingSystemConfig": {
      "type": "object",
      "description": "Alerting System Configuration",
      "properties": {
        "disable": {
          "type": "boolean",
          "description": "If true, disables the alerting system"
        },
        "problemTemplate": {
          "type": "string",
          "description": "Problem alerts template"
        }
      }
    },
    "sequential": {
      "type": "boolean",
      "description": "Sequential mode. This forces all network calls to be ordered in a sequential order."
    },
    "resolveHostnameToFqdn": {
      "type": "boolean",
      "description": "Resolve hostnames to FQDN"
    },
    "jobTimeout": {
      "$ref": "#/definitions/duration"
    },
    "otelCollector": {
      "description": "Customizes the OpenTelemetry Collector sub-process.",
      "type": "object",
      "properties": {
        "commandLine": {
          "description": "Overrides the OpenTelemetry Collector command line.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environment": {
          "type": "object",
          "description": "Configures the OpenTelemetry Collector environment variables."
        },
        "output": {
          "description": "Configures where to print the OpenTelemetry Collector's output (Default: log).",
          "type": "string",
          "enum": ["log", "console", "silent"],
          "default": "log"
        },
        "workingDir": {
          "description": "Configures the working directory of the OpenTelemetry Collector.",
          "type": "string"
        },
        "disabled": {
          "description": "Disables the OpenTelemetry Collector (Default: false).",
          "type": "boolean",
          "default": false
        }
      }
    },
    "otel": {
      "type": "object",
      "description": "Internal OpenTelemetry SDK configuration",
      "properties": {
        "otel.exporter.otlp.logs.protocol": {
          "type": "string",
          "description": "Property used to configure the transport protocol to use on OTLP log requests",
          "enum": ["grpc", "http/protobuf"]
        },
        "otel.exporter.otlp.metrics.protocol": {
          "type": "string",
          "description": "Property used to configure the transport protocol to use on OTLP metric requests",
          "enum": ["grpc", "http/protobuf"]
        },
        "otel.exporter.otlp.logs.endpoint": {
          "type": "string",
          "description": "Property used to configure the OTLP logs endpoint to connect to. Must be a URL with a scheme of either http or https based on the use of TLS"
        },
        "otel.exporter.otlp.endpoint": {
          "type": "string",
          "description": "Property used to configure the OTLP traces, metrics, and logs endpoint to connect to"
        },
        "otel.exporter.otlp.certificate": {
          "type": "string",
          "description": "Property used to configure the path to the file containing trusted certificates"
        },
        "otel.exporter.otlp.metrics.endpoint": {
          "type": "string",
          "description": "Property used to configure the OTLP metrics endpoint to connect to"
        },
        "otel.exporter.otlp.metrics.certificate": {
          "type": "string",
          "description": "Property used to configure the path to the file containing trusted certificates to use when verifying an OTLP metric server's TLS credentials"
        },
        "otel.exporter.otlp.protocol": {
          "type": "string",
          "description": "The transport protocol to use on OTLP trace, metric, and log requests",
          "enum": ["grpc", "http/protobuf"]
        },
        "otel.exporter.otlp.logs.certificate": {
          "type": "string",
          "description": "Property used to configure the path to the file containing trusted certificates to use when verifying an OTLP log server's TLS credentials"
        },
        "otel.logs.exporter": {
          "type": "string",
          "description": "Property used to configure the OpenTelemetry exporter for logs"
        },
        "otel.metrics.exporter": {
          "type": "string",
          "description": "Property used to configure the OpenTelemetry exporter for metrics",
          "const": "otlp"
        }
      },
      "additionalProperties": {
        "type": "string",
        "description": "Property from https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions/autoconfigure"
      }
    },
    "attributes": {
      "type": "object",
      "description": "Top level attributes",
      "additionalProperties": {
        "type": ["string", "number"],
        "description": "Attribute key-value pair"
      }
    },
    "metrics": {
      "type": "object",
      "description": "Top level metrics",
      "additionalProperties": {
        "type": ["string", "number"],
        "description": "Metrics key-value pair"
      }
    },
    "resources": {
      "$ref": "#/definitions/resources"
    },
    "resourceGroups": {
      "type": "object",
      "description": "Contains Resource Groups",
      "additionalProperties": {
        "type": "object",
        "description": "Resource Group name",
        "properties": {
          "loggerLevel": {
            "type": "string",
            "description": "Logger Level",
            "enum": ["all", "trace", "debug", "info", "warn", "error", "fatal"]
          },
          "outputDirectory": {
            "type": "string",
            "description": "Output directory"
          },
          "collectPeriod": {
            "$ref": "#/definitions/duration"
          },
          "discoveryCycle": {
            "type": "string",
            "description": "Discovery frequency (In collect cycles)"
          },
          "alertingSystemConfig": {
            "type": "object",
            "description": "Alerting System Configuration",
            "properties": {
              "disable": {
                "type": "boolean",
                "description": "If true, disables the alerting system"
              },
              "problemTemplate": {
                "type": "string",
                "description": "Problem alerts template"
              }
            }
          },
          "sequential": {
            "type": "boolean",
            "description": "Sequential mode. This forces all network calls to be ordered in a sequential order."
          },
          "resolveHostnameToFqdn": {
            "type": "boolean",
            "description": "Resolve hostnames to FQDN"
          },
          "jobTimeout": {
            "$ref": "#/definitions/duration"
          },
          "attributes": {
            "type": "object",
            "description": "Resource group attributes",
            "additionalProperties": {
              "type": ["string", "number", "array"],
              "description": "Attribute key-value pair"
            }
          },
          "metrics": {
            "type": "object",
            "description": "Resource group metrics",
            "additionalProperties": {
              "type": ["string", "number"],
              "description": "Metrics key-value pair"
            }
          },
          "resources": {
            "$ref": "#/definitions/resources"
          }
        }
      }
    }
  }
}
