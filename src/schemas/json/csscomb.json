{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "properties": {
    "always-semicolon": {
      "type": "boolean"
    },
    "block-indent": {
      "description": "Whether to add a semicolon after the last value/mixin.",
      "type": "string"
    },
    "color-case": {
      "description": "Unify case of hexadecimal colors.",
      "enum": ["lower", "upper"]
    },
    "color-shorthand": {
      "description": "Whether to expand hexadecimal colors or use shorthands.",
      "type": "boolean"
    },
    "element-case": {
      "description": "Unify case of element selectors.",
      "enum": ["lower", "upper"]
    },
    "eof-newline": {
      "description": "Add/remove line break at EOF.",
      "type": "boolean"
    },
    "exclude": {
      "description": "An array of files/globbing patterns to ignore",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "leading-zero": {
      "description": "Add/remove leading zero in dimensions.",
      "type": "boolean"
    },
    "quotes": {
      "description": "Unify quotes style.",
      "enum": ["single", "double"]
    },
    "remove-empty-rulesets": {
      "description": "Remove all rulesets that contain nothing but spaces.",
      "type": "boolean"
    },
    "sort-order": {
      "description": "Sort properties in particular order.",
      "items": {
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "type": "array"
    },
    "sort-order-fallback": {
      "description": "Sort unknown properties alphabetically",
      "enum": ["abc"]
    },
    "space-after-closing-brace": {
      "description": "Set space before `}`.",
      "type": "string"
    },
    "space-after-colon": {
      "description": "Set space after `:` in declarations.",
      "type": "string"
    },
    "space-after-combinator": {
      "description": "Set space after combinator (for example, in selectors like `p > a`).",
      "type": "string"
    },
    "space-after-opening-brace": {
      "description": "Set space after `{`.",
      "type": "string"
    },
    "space-after-selector-delimiter": {
      "description": "Set space after selector delimiter.",
      "type": "string"
    },
    "space-before-colon": {
      "description": "Set space before `:` in declarations.",
      "type": "string"
    },
    "space-before-combinator": {
      "description": "Set space before combinator (for example, in selectors like `p > a`).",
      "type": "string"
    },
    "space-before-opening-brace": {
      "description": "Set space before `{`.",
      "type": "string"
    },
    "space-before-selector-delimiter": {
      "description": "Set space before selector delimiter.",
      "type": "string"
    },
    "space-between-declarations": {
      "description": "Set space between declarations (i.e. `color: tomato`).",
      "type": "string"
    },
    "strip-spaces": {
      "description": "Whether to trim trailing spaces.",
      "type": "boolean"
    },
    "tab-size": {
      "type": "boolean"
    },
    "unitless-zero": {
      "description": "Whether to remove units in zero-valued dimensions.",
      "type": "boolean"
    },
    "vendor-prefix-align": {
      "description": "Whether to align prefixes in properties and values.",
      "type": "boolean"
    },
    "verbose": {
      "type": "boolean"
    }
  },
  "title": "JSON schema for CSS Comb configuration files",
  "type": "object"
}
