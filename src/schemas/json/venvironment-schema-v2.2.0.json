{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/venvironment-schema-v2.2.0.json",
  "$ref": "#/definitions/7bd0e/full",
  "type": "object",
  "title": "venvironment schema",
  "definitions": {
    "a2b96": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Version",
        "description": "Json schema version for the vEnvironment configuration file. Acceptance criteria: equal major version, less/equal minor and patch version.",
        "const": "2.2.0",
        "type": "string",
        "examples": ["2.2.0"]
      }
    },
    "ec12f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN Replay Blocks",
        "description": "List of CAN replay blocks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/be1e5/full"
        },
        "examples": [
          [
            {
              "name": "my_can_replay_block",
              "file-path": "my_logging_file.blf"
            }
          ],
          [
            {
              "name": "my_can_replay_block",
              "file-path": "my_logging_file.blf",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_can_replay_block",
              "file-path": "another_logging_file.blf",
              "when": "SCENARIO_NAME == \"another_scenario_name\""
            }
          ],
          [
            {
              "name": "ReplayBlock",
              "file-path": "MyLoggingFile.blf",
              "replay-on-measurement-start": true,
              "send-system-variables": false,
              "send-tx-messages": true,
              "send-rx-messages": false,
              "start-timing-condition": {
                "condition": "immediately"
              },
              "channel-mapping": {
                "default-mapping": "as-in-original"
              }
            }
          ]
        ]
      }
    },
    "e8c0c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Defines",
        "description": "List of defines to be passed to capl / vcdl. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/60f6d/full"
        },
        "examples": [
          [
            {
              "define": "mydefine1"
            }
          ],
          [
            {
              "define": ["mydefine1", "mydefine2"]
            },
            {
              "define": ["mydefine1", "mydefine2"],
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "define": [
                "mydefine_with_value=42",
                "${var_with_define_name}=${var_with_define_value}"
              ]
            }
          ]
        ]
      }
    },
    "f2116": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN Networks",
        "description": "List of Ethernet networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/cd609/full"
        },
        "examples": [
          [
            {
              "name": "my_eth_network"
            }
          ],
          [
            {
              "name": "my_eth_network",
              "database": "DB",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "name": "my_eth_network",
              "database": "DB",
              "mapping": "internal-simulator",
              "tcp-ip-stack-adapter": {
                "mtu": 1500,
                "ipv4-settings": {
                  "address-configuration": "static",
                  "addresses": [
                    {
                      "address": "192.168.0.1",
                      "subnet-mask": "255.255.0.0"
                    }
                  ]
                },
                "ipv6-settings": {
                  "address-configuration": "dhcp"
                },
                "vlans": [
                  {
                    "id": 42,
                    "priority": 0
                  }
                ]
              }
            }
          ]
        ]
      }
    },
    "a6645": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ethernet Replay Blocks",
        "description": "List of ethernet replay blocks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/b1d9c/full"
        },
        "examples": [
          [
            {
              "name": "my_ethernet_replay_block",
              "file-path": "my_logging_file.blf"
            }
          ],
          [
            {
              "name": "my_ethernet_replay_block",
              "file-path": "my_logging_file.blf",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_ethernet_replay_block",
              "file-path": "another_logging_file.blf",
              "when": "SCENARIO_NAME == \"another_scenario_name\""
            }
          ],
          [
            {
              "name": "ReplayBlock",
              "file-path": "MyLoggingFile.blf",
              "replay-on-measurement-start": true,
              "send-system-variables": false,
              "start-timing-condition": {
                "condition": "immediately"
              },
              "channel-mapping": {
                "default-mapping": "as-in-original"
              }
            }
          ]
        ]
      }
    },
    "efabb": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FlexRay Clusters",
        "description": "List of FlexRay clusters. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/b0301/full"
        },
        "examples": [
          [
            {
              "name": "my_flexray_cluster",
              "database": "DB_1",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "name": "my_flexray_cluster",
              "database": "DB_1",
              "key-slot-configuration": {
                "slot-1": {
                  "mode": "manual",
                  "usage": "startup",
                  "mask": "A",
                  "slot": 1,
                  "leading-cold-start": true
                },
                "slot-2": {
                  "mode": "automatic"
                }
              },
              "mapping": "internal-simulator"
            }
          ]
        ]
      }
    },
    "b0d96": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FlexRay Replay Blocks",
        "description": "List of FlexRay replay blocks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/40c51/full"
        },
        "examples": [
          [
            {
              "name": "my_flexray_replay_block",
              "file-path": "my_logging_file.blf",
              "network": "frCluster"
            }
          ],
          [
            {
              "name": "my_flexray_replay_block",
              "file-path": "my_logging_file.blf",
              "when": "SCENARIO_NAME == \"my_scenario_name\"",
              "network": "frCluster"
            },
            {
              "name": "my_flexray_replay_block",
              "file-path": "another_logging_file.blf",
              "when": "SCENARIO_NAME == \"another_scenario_name\"",
              "network": "frCluster"
            }
          ]
        ]
      }
    },
    "b1caa": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LIN Networks",
        "description": "List of LIN networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/b5d87/full"
        },
        "examples": [
          [
            {
              "name": "my_lin_network"
            }
          ],
          [
            {
              "name": "my_lin_network",
              "database": "DB_1",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "name": "my_lin_network",
              "database": "DB_1",
              "application-channel": 42,
              "mapping": "internal-simulator",
              "mode": "responder"
            }
          ]
        ]
      }
    },
    "aad77": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Programming Modules",
        "description": "Lists of programming modules to be used by the simulation. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/bd659/full"
        },
        "examples": [
          [
            {
              "capl-library-path": "path/to/my.vmodule"
            }
          ],
          [
            {
              "c-library-path": "${path_in_variable}"
            },
            {
              "c-library-path": "path/${name_in_variable}"
            }
          ],
          [
            {
              "capl-library-path": "path/to/my.vmodule",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "capl-library-path": "path/to/my2.vmodule",
              "when": "SCENARIO_NAME == \"another_scenario_name\""
            },
            {
              "c-library-path": "path/to/my.vmodule",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ]
        ]
      }
    },
    "ce4f6": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Simulation Nodes",
        "description": "A list of simulation nodes used in a simulation. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/70264/full"
        },
        "examples": [
          [
            {
              "name": "mynode",
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ]
            }
          ],
          [
            {
              "name": "mynode",
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ],
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "name": "mynode",
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ],
              "file-path": "path/to/my_capl_script.can",
              "when": "SCENARIO_NAME == \"my_scenario_name1\""
            },
            {
              "name": "programming_node",
              "file-path": "path/to/my_dotnet.cs",
              "database-node": false,
              "network-assignments": [
                {
                  "network": "my_can_network_1"
                }
              ],
              "defines": ["mydefine1", "mydefine2"],
              "modeling-libraries": ["modeling/lib/1.vmodule", "${path_in_var}"]
            }
          ]
        ]
      }
    },
    "f2cb9": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "System Variables",
        "description": "A list of system variables to be used by the simulation. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/d5013/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/my.vsysvar"
            }
          ],
          [
            {
              "file-path": "path/to/my.vsysvar",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
            },
            {
              "file-path": "path/to/my.vsysvar"
            }
          ]
        ]
      }
    },
    "d60a5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "User Files",
        "description": "List of user files. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/38e8e/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/my.txt"
            }
          ],
          [
            {
              "file-path": "path/to/my.txt",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
            },
            {
              "file-path": "path/to/my_file.txt"
            }
          ]
        ]
      }
    },
    "a665e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "XCP files",
        "description": "List of XCP configuration files (entries can be deactivated with when)",
        "type": "array",
        "items": {
          "$ref": "#/definitions/5b3ba/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/my.xcpcfg"
            }
          ],
          [
            {
              "file-path": "path/to/my.xcpcfg",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
            },
            {
              "file-path": "path/to/my.xcp.yaml"
            }
          ]
        ]
      }
    },
    "faf17": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Application Model",
        "description": "Represents an application used in a scenario.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-path"],
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "$ref": "#/definitions/d1985/full"
          },
          "defines": {
            "$ref": "#/definitions/dbb1c/full"
          }
        },
        "examples": [
          {
            "file-path": "path/to/my/file.can",
            "defines": ["mydefine1", "mydefine=2"]
          },
          {
            "file-path": "path/to/my/file.can",
            "defines": ["mydefine1", "mydefine=2"],
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "ba2d9": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CANFD network",
        "description": "A Network using the CANFD protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "database": {
            "$ref": "#/definitions/8ab6a/full",
            "description": "Reference to a database declared in the configuration file."
          },
          "mode": {
            "description": "Operation Mode setting (iso or non-iso Mode).",
            "oneOf": [
              {
                "type": "string",
                "enum": ["iso", "non-iso"],
                "default": "iso"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "arbitration-baudrate": {
            "description": "Baudrate for the arbitration phase of CAN FD in Baud. \n If this value is set, it has priority. \n If this value is not set, the baudrate is read from the database. If the baudrate is missing from the database, the default value is used.",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 2000000,
                "default": 500000
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "data-baudrate": {
            "description": "Baudrate for the data phase of CAN FD. \n If this value is set, it has priority. \n If this value is not set, the baudrate is read from the database. If the baudrate is missing from the database, the default value is used.",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 10000000,
                "default": 1000000
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "application-channel": {
            "description": "Index of the application channel. Each bus type should provide consecutive indices. Starts counting at 1. Value between 1 and 255. Value '0' is not allowed. Caution: CAN and CANFD share the application channels!",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "default": 1
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "mapping": {
            "$ref": "#/definitions/d63e6/full"
          }
        },
        "oneOf": [
          {
            "required": ["arbitration-baudrate", "data-baudrate"],
            "properties": {
              "arbitration-baudrate": true,
              "data-baudrate": true
            }
          },
          {
            "properties": {
              "arbitration-baudrate": false,
              "data-baudrate": false
            }
          }
        ],
        "examples": [
          {
            "name": "my_canfd_network"
          },
          {
            "name": "my_canfd_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_canfd_network",
            "database": "DB_2",
            "application-channel": 42,
            "mode": "iso",
            "arbitration-baudrate": 500000,
            "data-baudrate": 1000000,
            "mapping": "internal-simulator"
          }
        ]
      }
    },
    "be1e5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN replay block",
        "description": "A replay block for the CAN protocol.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "$ref": "#/definitions/a9048/full"
          },
          "replay-on-measurement-start": {
            "description": "Replay starts with measurement start.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "send-system-variables": {
            "description": "Send system variable values.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "start-timing-condition": {
            "$ref": "#/definitions/159aa/full"
          },
          "channel-mapping": {
            "$ref": "#/definitions/8a040/full"
          },
          "send-tx-messages": {
            "description": "Replay the tx messages.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "send-rx-messages": {
            "description": "Replay the rx messages.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          }
        },
        "examples": [
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf"
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "when": "SCENARIO_NAME == \"MyScenario\""
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "replay-on-measurement-start": true,
            "send-system-variables": false,
            "send-tx-messages": true,
            "send-rx-messages": false,
            "start-timing-condition": {
              "condition": "immediately"
            },
            "channel-mapping": {
              "default-mapping": "as-in-original"
            }
          }
        ]
      }
    },
    "dbb1c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of defines to be passed to capl / vcdl.",
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/d6fe8/full"
            },
            {
              "$ref": "#/definitions/779cd/full"
            }
          ]
        },
        "examples": [
          ["mydefine1", "mydefine2"],
          [
            "mydefine_with_value=42",
            "${var_with_define_name}=${var_with_define_value}"
          ]
        ]
      }
    },
    "cd609": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ethernet network",
        "description": "A Network using the Ethernet protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "database": {
            "$ref": "#/definitions/8ab6a/full",
            "description": "Reference to a database declared in the configuration file."
          },
          "tcp-ip-stack-adapter": {
            "$ref": "#/definitions/396b5/full"
          },
          "mapping": {
            "$ref": "#/definitions/d63e6/full"
          },
          "application-channel": {
            "description": "Index of the application channel. Each bus type should provide consecutive indices. Starts counting at 1. Value between 1 and 32. Value '0' is not allowed.",
            "oneOf": [
              {
                "$ref": "#/definitions/779cd/full"
              },
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 32
              }
            ]
          },
          "measurement-ports": {
            "description": "A List if measurement ports whose data you want to measure (e.g. for logging).",
            "type": "array",
            "items": {
              "type": "string",
              "oneOf": [
                {
                  "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
                },
                {
                  "pattern": "^([a-zA-Z][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"
                }
              ],
              "examples": ["Port1", "Port2", "${var_with_port}"]
            }
          }
        },
        "examples": [
          {
            "name": "my_eth_network"
          },
          {
            "name": "my_eth_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_eth_network",
            "database": "DB",
            "application-channel": 12,
            "tcp-ip-stack-adapter": {
              "mac-address": "02:84:cf:3b:be:01"
            },
            "mapping": "external-sil-kit"
          },
          {
            "name": "my_eth_network",
            "database": "DB",
            "application-channel": 12,
            "mapping": "internal-simulator",
            "tcp-ip-stack-adapter": {
              "mtu": 1500,
              "ipv4-settings": {
                "address-configuration": "static",
                "addresses": [
                  {
                    "address": "192.168.0.1",
                    "subnet-mask": "255.255.0.0"
                  }
                ]
              },
              "ipv6-settings": {
                "address-configuration": "dhcp"
              },
              "vlans": [
                {
                  "id": 42,
                  "priority": 0
                }
              ]
            }
          }
        ]
      }
    },
    "b1d9c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ethernet replay block",
        "description": "A replay block for the ethernet protocol.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "$ref": "#/definitions/a9048/full"
          },
          "replay-on-measurement-start": {
            "description": "Replay starts with measurement start.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "send-system-variables": {
            "description": "Send system variable values.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "start-timing-condition": {
            "$ref": "#/definitions/159aa/full"
          },
          "channel-mapping": {
            "$ref": "#/definitions/8a040/full"
          }
        },
        "examples": [
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf"
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "when": "SCENARIO_NAME == \"MyScenario\""
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "replay-on-measurement-start": true,
            "send-system-variables": false,
            "start-timing-condition": {
              "condition": "immediately"
            },
            "channel-mapping": {
              "default-mapping": "as-in-original"
            }
          }
        ]
      }
    },
    "a23f7": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a FDX description file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[xX][mM][lL]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/myDescriptionFile.xml",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "b0301": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FlexRay cluster",
        "description": "A cluster using the FlexRay protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "database"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "database": {
            "$ref": "#/definitions/8ab6a/full",
            "description": "Reference to a database declared in the configuration file."
          },
          "application-channel": {
            "description": "Index of the Application Channel. Each bus type should provide consecutive indices. Starts counting at 1. Value between 1 and 32. Value '0' is not allowed.",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 32,
                "default": 1
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "mapping": {
            "$ref": "#/definitions/d63e6/full"
          },
          "key-slot-configuration": {
            "$ref": "#/definitions/f11ad/full"
          }
        },
        "examples": [
          {
            "name": "my_flexray_cluster",
            "database": "DB_1"
          },
          {
            "name": "my_flexray_cluster",
            "when": "SCENARIO_NAME == \"my_scenario_name\"",
            "database": "FR_DB"
          },
          {
            "name": "my_flexray_cluster",
            "database": "DB_1",
            "application-channel": 12,
            "mapping": "internal-simulator",
            "key-slot-configuration": {
              "slot-1": {
                "mode": "manual",
                "usage": "startup",
                "mask": "A",
                "slot": 1,
                "leading-cold-start": true
              },
              "slot-2": {
                "mode": "automatic"
              }
            }
          }
        ]
      }
    },
    "fa0cd": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Global settings for FlexRay",
        "description": "These settings control the interpretation of frames and PDUs of FlexRay configurations with channels A and B.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable-dual-channel-support": {
            "description": "If active, PDUs on both channels will be configured with channel mask 'AB' and channel postfixes (e.g. xy_Ch_A, xy_Ch_B) will be created for ambiguous objects. If this property is provided \"postfixes-for-ambiguous-pdus-on-channel\" is forbidden.",
            "oneOf": [
              {
                "$ref": "#/definitions/779cd/full"
              },
              {
                "type": "boolean"
              }
            ],
            "default": true
          },
          "postfixes-for-ambiguous-pdus-on-channel": {
            "description": "Definition of postfix settings if dual channel support is not activated. If this property is provided \"enable-dual-channel-support\" is forbidden.",
            "oneOf": [
              {
                "enum": ["A", "B", "A&B", "no-postfixes"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "default": "A&B"
          }
        },
        "allOf": [
          {
            "$comment": "prune-node-from-doc",
            "if": {
              "required": ["enable-dual-channel-support"],
              "properties": {
                "enable-dual-channel-support": {
                  "const": true
                }
              }
            },
            "then": {
              "properties": {
                "postfixes-for-ambiguous-pdus-on-channel": false
              }
            }
          },
          {
            "$comment": "prune-node-from-doc",
            "if": {
              "required": ["enable-dual-channel-support"],
              "properties": {
                "enable-dual-channel-support": {
                  "const": false
                }
              }
            },
            "then": {
              "required": ["postfixes-for-ambiguous-pdus-on-channel"],
              "properties": {
                "postfixes-for-ambiguous-pdus-on-channel": true
              }
            }
          }
        ],
        "examples": [
          {
            "enable-dual-channel-support": true
          },
          {
            "enable-dual-channel-support": false,
            "postfixes-for-ambiguous-pdus-on-channel": "no-postfixes"
          }
        ]
      }
    },
    "fbf90": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Global settings for database",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "autosar-pdu-layer": {
            "default": "from-autosar-4.2",
            "description": "Configure the PDU layer in relation to AUTOSAR databases.\n'no-pdus' : Creation of frames only \n'from-autosar-4.0' : Creation of AUTOSAR PDUs for AUTOSAR DBs >= 4.0 \n'from-autosar-4.2' : Creation of AUTOSAR PDUs for AUTOSAR DBs >= 4.2 ",
            "oneOf": [
              {
                "type": "string",
                "enum": ["no-pdus", "from-autosar-4.0", "from-autosar-4.2"],
                "examples": ["no-pdus", "from-autosar-4.0", "from-autosar-4.2"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "autosar-text-table-entries": {
            "description": "Control naming of text table entries and influence signal qualification. Use text from COMPU-CONST nodes or SHORT-LABEL nodes.",
            "default": "compu-const",
            "oneOf": [
              {
                "type": "string",
                "enum": ["compu-const", "short-label"],
                "examples": ["compu-const", "short-label"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "some-ip-pdus-without-service-context": {
            "description": "Control the generation of services for SOME/IP PDUs without service context.",
            "default": "ignore",
            "oneOf": [
              {
                "type": "string",
                "enum": ["ignore", "generate-service"],
                "examples": ["ignore", "generate-service"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          }
        },
        "examples": [
          {
            "autosar-pdu-layer": "no-pdus"
          },
          {
            "autosar-text-table-entries": "compu-const"
          },
          {
            "some-ip-pdus-without-service-context": "generate-service"
          },
          {
            "autosar-pdu-layer": "no-pdus",
            "autosar-text-table-entries": "short-label",
            "some-ip-pdus-without-service-context": "generate-service"
          }
        ]
      }
    },
    "b5d87": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LIN network",
        "description": "A network using the LIN protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "database": {
            "$ref": "#/definitions/8ab6a/full",
            "description": "Reference to a database declared in the configuration file."
          },
          "application-channel": {
            "description": "Index of the application channel. Each bus type should provide consecutive indices. Starts counting at 1. Value between 1 and 64. Value '0' is not allowed.",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "default": 1
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "mapping": {
            "$ref": "#/definitions/d63e6/full"
          },
          "mode": {
            "description": "Working mode of the LIN interface.\n \"commander\": the LIN network interface is able to output message headers on the network.\n \"responder\": the LIN network interface responds to received LIN headers if a response to the LIN ID contained within the header has been configured.",
            "oneOf": [
              {
                "enum": ["commander", "responder"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "default": "commander",
            "examples": ["commander", "responder"]
          }
        },
        "examples": [
          {
            "name": "my_lin_network"
          },
          {
            "name": "my_lin_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_lin_network",
            "database": "DB_1",
            "application-channel": 42,
            "mapping": "internal-simulator",
            "mode": "responder"
          }
        ]
      }
    },
    "bcf87": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Name of a blf file, supporting the field codes: {ComputerName}, {LocalTime}, {MeasurementIndex}, {MeasurementStart}, {IncSize|001|100MB} and {IncTime|001|01h00m}.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^(?!.*(\\{TriggerCondition\\}|\\{LoggingBlock\\}|\\{IncMeasurement\\}|\\{ConfigName\\}|\\{IncTrigger\\|[0-9]*\\}|[\"<>*?:/\\\\])).*\\.[bB][lL][fF]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "fileName.blf",
          "file_${SCENARIO_NAME}.blf",
          "${name_in_variable}",
          "log_{ComputerName}.blf",
          "log_{LocalTime}.blf",
          "log_{MeasurementIndex}.blf",
          "log_{MeasurementStart}.blf"
        ]
      }
    },
    "cba0d": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Advanced logging configurations.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "warn-overwritten-log-file": {
            "description": "Specify whether a warning is shown at the start of measurement before overwriting an existing logging file.",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "default": true
          },
          "show-error-on-data-loss": {
            "description": "Specify whether an error is shown after the measurement if data loss occurred during the measurement. Lines in the logging file marked with a * as a special symbol have corrupted lines around them.",
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "default": true
          }
        },
        "examples": [
          {
            "warn-overwritten-log-file": false,
            "show-error-on-data-loss": true
          },
          {
            "warn-overwritten-log-file": true
          }
        ]
      }
    },
    "bd659": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Programming modules",
        "description": "Programming modules file paths (capl-library or c-library). Entry can be deactivated with when.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "capl-library-path": {
            "description": "Absolute or relative path to a CAPL library. Relative path specifications are resolved relative to the configuration file.",
            "oneOf": [
              {
                "$ref": "#/definitions/47aa6/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/47aa6/full"
                }
              }
            ]
          },
          "c-library-path": {
            "description": "Absolute or relative path to a C-library. Relative path specifications are resolved relative to the configuration file.",
            "oneOf": [
              {
                "$ref": "#/definitions/47aa6/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/47aa6/full"
                }
              }
            ]
          }
        }
      }
    },
    "adad4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "oneOf": [
          {
            "$ref": "#/definitions/779cd/full"
          },
          {
            "$ref": "#/definitions/1030e/full"
          }
        ]
      }
    },
    "d5013": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "System variables",
        "description": "Absolute or relative path to an external file containing system variables. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-path"],
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "description": "Absolute or relative path to an external file containing system variables. Relative path specifications are resolved relative to the defining configuration file.",
            "oneOf": [
              {
                "$ref": "#/definitions/863d7/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/863d7/full"
                }
              }
            ]
          }
        },
        "examples": [
          {
            "file-path": "path/to/my.vsysvar"
          },
          {
            "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
          },
          {
            "file-path": "path/to/my.vsysvar",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "daa86": {
      "local": {
        "name": {
          "type": "string",
          "description": "A C-identifier for this variable (case sensitive).",
          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
          "allOf": [
            {
              "not": {
                "pattern": "^[cC][aA][nN][oO][eE]_.*$"
              }
            },
            {
              "not": {
                "pattern": "^[aA][nN][dD]$"
              }
            },
            {
              "not": {
                "pattern": "^[aA][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[aA][sS][sS][eE][rR][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[bB][oO][oO][lL]$"
              }
            },
            {
              "not": {
                "pattern": "^[bB][rR][eE][aA][kK]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][aA][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][aA][tT][cC][hH]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][lL][aA][sS][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[cC][oO][nN][tT][iI][nN][uU][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[dD][eE][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[dD][eE][lL][eE][tT][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[eE][lL][iI][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[eE][lL][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[eE][xX][cC][eE][pP][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][aA][lL][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][iI][nN][aA][lL][lL][yY]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][lL][oO][aA][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][oO][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[fF][rR][oO][mM]$"
              }
            },
            {
              "not": {
                "pattern": "^[gG][lL][oO][bB][aA][lL]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][mM][pP][oO][rR][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][nN]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][nN][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][nN][tT][eE][gG][eE][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[iI][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[lL][oO][nN][gG]$"
              }
            },
            {
              "not": {
                "pattern": "^[nN][oO][nN][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[nN][oO][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[oO][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[pP][aA][sS][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[rR][aA][iI][sS][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[rR][eE][tT][uU][rR][nN]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][cC][eE][nN][aA][rR][iI][oO]_[nN][aA][mM][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][eE][lL][fF]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][tT][rR][uU][cC][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[sS][wW][iI][tT][cC][hH]$"
              }
            },
            {
              "not": {
                "pattern": "^[tT][hH][iI][sS]$"
              }
            },
            {
              "not": {
                "pattern": "^[tT][rR][uU][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[tT][rR][yY]$"
              }
            },
            {
              "not": {
                "pattern": "^[uU][iI][nN][tT]$"
              }
            },
            {
              "not": {
                "pattern": "^[uU][nN][sS][iI][gG][nN][eE][dD]$"
              }
            },
            {
              "not": {
                "pattern": "^[vV][oO][iI][dD]$"
              }
            },
            {
              "not": {
                "pattern": "^[wW][hH][iI][lL][eE]$"
              }
            },
            {
              "not": {
                "pattern": "^[wW][iI][tT][hH]$"
              }
            },
            {
              "not": {
                "pattern": "^[xX][oO][rR]$"
              }
            },
            {
              "not": {
                "pattern": "^[yY][iI][eE][lL][dD]$"
              }
            }
          ],
          "examples": ["my_var"]
        },
        "from-environment": {
          "type": "boolean",
          "description": "Take the value from a system environment variable.",
          "default": false
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$comment": "has to be split, since the type determines the valid values",
        "title": "Variable",
        "description": "This variable can be used in any other node and overwritten by a scenario.",
        "type": "object",
        "oneOf": [
          {
            "$comment": "type implicit",
            "additionalProperties": false,
            "required": ["value", "name"],
            "properties": {
              "name": {
                "$ref": "#/definitions/daa86/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/daa86/local/from-environment"
              },
              "value": {
                "description": "Variable of type implicit type (string, number or bool).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$comment": "disable-check:no-missing-number-limits",
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          {
            "$comment": "type int",
            "additionalProperties": false,
            "required": ["type", "name"],
            "properties": {
              "name": {
                "$ref": "#/definitions/daa86/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/daa86/local/from-environment"
              },
              "value": {
                "$ref": "#/definitions/c49a5/full",
                "description": "Variable of type integer."
              },
              "type": {
                "const": "int"
              },
              "options": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/c49a5/full"
                }
              }
            }
          },
          {
            "$comment": "type uint",
            "additionalProperties": false,
            "required": ["type", "name"],
            "properties": {
              "name": {
                "$ref": "#/definitions/daa86/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/daa86/local/from-environment"
              },
              "value": {
                "$ref": "#/definitions/39ed5/full",
                "description": "Variable of type unsigned integer."
              },
              "type": {
                "const": "uint"
              },
              "options": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/39ed5/full"
                }
              }
            }
          },
          {
            "$comment": "type string / path",
            "additionalProperties": false,
            "required": ["type", "name"],
            "properties": {
              "name": {
                "$ref": "#/definitions/daa86/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/daa86/local/from-environment"
              },
              "value": {
                "description": "Variable of type string or path.",
                "type": "string"
              },
              "type": {
                "enum": ["string", "path"]
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "$comment": "type boolean",
            "additionalProperties": false,
            "required": ["type", "name"],
            "properties": {
              "name": {
                "$ref": "#/definitions/daa86/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/daa86/local/from-environment"
              },
              "value": {
                "description": "Variable of type bool.",
                "type": "boolean"
              },
              "type": {
                "const": "bool"
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "$comment": "type float",
            "additionalProperties": false,
            "required": ["type", "name"],
            "properties": {
              "name": {
                "$ref": "#/definitions/daa86/local/name"
              },
              "from-environment": {
                "$ref": "#/definitions/daa86/local/from-environment"
              },
              "value": {
                "$ref": "#/definitions/f26f2/full",
                "description": "Variable of type float."
              },
              "type": {
                "const": "float"
              },
              "options": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/f26f2/full"
                }
              }
            }
          }
        ],
        "examples": [
          {
            "name": "var",
            "value": -42
          },
          {
            "name": "my_string",
            "value": "implicit-type"
          },
          {
            "name": "var",
            "value": 422200000000.0,
            "type": "float"
          },
          {
            "name": "path_var",
            "value": "path/to/somewhere",
            "type": "path"
          },
          {
            "name": "uint_enum",
            "value": 43,
            "type": "uint",
            "options": [1, 43, 127]
          }
        ]
      }
    },
    "d1985": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a source file of an application model (can/canencr/cs/sln/py/vmodule). Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Cc][Ss]$"
          },
          {
            "pattern": "^.*\\.[Pp][Yy]$"
          },
          {
            "pattern": "^.*\\.[Ss][Ll][Nn]$"
          },
          {
            "pattern": "^.*\\.[Cc][Aa][Nn]$"
          },
          {
            "pattern": "^.*\\.[Cc][Aa][Nn][Ee][Nn][Cc][Rr]$"
          },
          {
            "pattern": "^.*\\.[vV][mM][oO][dD][uU][lL][eE]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "my_dotnet.cs",
          "my_python.py",
          "my_visual_studio.sln",
          "my_capl_file.can",
          "my_encrypted_capl_file.canencr",
          "my_module.vmodule",
          "${some_variable}"
        ]
      }
    },
    "d63e6": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/85c8a/full",
        "description": "Define the mapping of application channels to an underlying layer. Connect the network either to simulated network (\"internal-simulator\") or to SIL Kit (\"external-sil-kit\"). \nThe default value is derived from global-settings/default-network-mapping."
      }
    },
    "a9048": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a replay file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[bB][lL][fF]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/my.blf",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "c6ecb": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to an external database file (.arxml/.dbc/.ldf). Relative path specifications are resolved relative to the YAML configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Aa][Rr][Xx][Mm][Ll]$"
          },
          {
            "pattern": "^.*\\.[Dd][Bb][Cc]$"
          },
          {
            "pattern": "^.*\\.[Ll][Dd][Ff]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/some.dbc",
          "path/to/some.arxml",
          "path/to/some.ldf",
          "path/${var_with_name}",
          "${var_with_path}"
        ]
      }
    },
    "d6fe8": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Define to be passed to capl / vcdl.",
        "type": "string",
        "pattern": "^([a-zA-Z_]|([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\})[a-zA-Z0-9_]*(=((0|[1-9][0-9]*)|(\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\})|[Tt]rue|[Ff]alse))?$",
        "examples": [
          "mydefine1",
          "mydefine2",
          "mydefine_with_value=42",
          "${var_with_define_name}=${var_with_define_value}"
        ]
      }
    },
    "f11ad": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Via the key slot configuration it is possible to transmit two start-up/sync frames. Thus an external start-up node is not required for the start-up of a flexray cluster.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slot-1": {
            "$ref": "#/definitions/00b39/full"
          },
          "slot-2": {
            "$ref": "#/definitions/00b39/full"
          }
        }
      }
    },
    "db0d5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Global configuration for the TCP/IP stack.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to \"operating-system\", the machines configuration is used. If set to \"canoe\", a custom configuration can be provided",
                "oneOf": [
                  {
                    "const": "operating-system",
                    "description": "If set to \"operating-system\", the machines configuration is used. Use \"canoe\" if settings should be manually provided."
                  }
                ],
                "default": "operating-system",
                "examples": ["canoe", "operating-system"]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to \"operating-system\", the machines configuration is used. If set to \"canoe\", a custom configuration can be provided",
                "oneOf": [
                  {
                    "const": "canoe",
                    "description": "If set to \"canoe\", a custom configuration can be provided (remove other elements for option \"operating-system\")"
                  },
                  {
                    "$ref": "#/definitions/779cd/full"
                  }
                ],
                "default": "operating-system",
                "examples": ["canoe", "operating-system"]
              },
              "activate-routing": {
                "$ref": "#/definitions/698c3/full"
              },
              "tcp-delayed-ack": {
                "$ref": "#/definitions/6665e/full"
              },
              "ipv4-gateway": {
                "$ref": "#/definitions/8b747/full"
              },
              "ipv6-gateway": {
                "$ref": "#/definitions/64730/full"
              }
            }
          }
        ],
        "examples": [
          {
            "selected-stack": "canoe",
            "activate-routing": true,
            "tcp-delayed-ack": true,
            "ipv4-gateway": "192.168.0.33",
            "ipv6-gateway": "::1"
          },
          {
            "selected-stack": "operating-system"
          }
        ]
      }
    },
    "c4a92": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a source file of a simulation node. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Cc][Aa][Nn]$"
          },
          {
            "pattern": "^.*\\.[Cc][Aa][Nn][Ee][Nn][Cc][Rr]$"
          },
          {
            "pattern": "^.*\\.[Cc][Ss]$"
          },
          {
            "pattern": "^.*\\.[Ss][Ll][Nn]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/my_capl_script.can",
          "path/to/my_encrypted_capl_file.canencr",
          "path/to/my_dotnet.cs",
          "path/to/my_visual_studio.sln",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "dd53d": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Simulation node configuration for the TCP/IP stack.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to \"operating-system\", the machines configuration is used.\n If set to \"canoe\", the configuration on the global level is used (this requires globals-settings/ethernet/tcp-ip-stack/selected-stack to be set to \"canoe\").\n If set to \"individual\", a custom configuration can be provided.",
                "enum": ["operating-system", "canoe"],
                "default": "individual",
                "examples": ["operating-system", "canoe", "individual"]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["selected-stack"],
            "properties": {
              "selected-stack": {
                "description": "If set to \"operating-system\", the machines configuration is used.\n If set to \"canoe\", the configuration on the global level is used (this requires globals-settings/ethernet/tcp-ip-stack/selected-stack to be set to \"canoe\").\n If set to \"individual\", a custom configuration can be provided.",
                "oneOf": [
                  {
                    "enum": ["individual"]
                  },
                  {
                    "$ref": "#/definitions/779cd/full"
                  }
                ],
                "default": "individual",
                "examples": ["operating-system", "canoe", "individual"]
              },
              "activate-routing": {
                "$ref": "#/definitions/698c3/full"
              },
              "tcp-delayed-ack": {
                "$ref": "#/definitions/6665e/full"
              },
              "ipv4-gateway": {
                "$ref": "#/definitions/8b747/full"
              },
              "ipv6-gateway": {
                "$ref": "#/definitions/64730/full"
              }
            }
          }
        ]
      }
    },
    "c49a5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "integer",
        "minimum": -9223372036854775808,
        "maximum": 9223372036854775807
      }
    },
    "f26f2": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "number",
        "minimum": -1.79769e308,
        "maximum": 1.79769e308
      }
    },
    "d5dc9": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a xcp.yaml / xcpcfg file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Yy][Aa]?[Mm][Ll]$"
          },
          {
            "pattern": "^.*\\.[xX][cC][pP][cC][fF][gG]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/my.xcp.yaml",
          "path/to/my.xcp.yml",
          "path/to/my.xcpcfg",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "cb1c2": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Maximum Transmission Unit.",
        "oneOf": [
          {
            "type": "integer",
            "minimum": 1,
            "maximum": 1500
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "default": 1500
      }
    },
    "e391e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Configurations for IPv6.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration"],
            "properties": {
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "examples": ["dhcp", "static"],
                "oneOf": [
                  {
                    "enum": ["dhcp", "linked-local"]
                  },
                  {
                    "$ref": "#/definitions/779cd/full"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration", "addresses"],
            "properties": {
              "addresses": {
                "$ref": "#/definitions/2d92f/full"
              },
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "oneOf": [
                  {
                    "const": "static"
                  },
                  {
                    "$ref": "#/definitions/779cd/full"
                  }
                ],
                "examples": ["dhcp", "static"]
              }
            }
          }
        ],
        "examples": [
          {
            "address-configuration": "dhcp"
          },
          {
            "address-configuration": "static",
            "addresses": [
              {
                "address": "1234::abce",
                "subnet-prefix-length": 42
              },
              {
                "address": "1234::abcf",
                "subnet-prefix-length": 24
              }
            ]
          }
        ]
      }
    },
    "eaee8": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv6 address",
        "type": "string",
        "oneOf": [
          {
            "pattern": "^([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7}|:(:[0-9A-Fa-f]{1,4}){1,7}|([0-9A-Fa-f]{1,4}:){1,7}:|::|([0-9A-Fa-f]{1,4}:){1}(:[0-9A-Fa-f]{1,4}){1,6}|([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){1,5}|([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){1,4}|([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){1,3}|([0-9A-Fa-f]{1,4}:){5}(:[0-9A-Fa-f]{1,4}){1,2}|([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}){1})$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "1234:0000:0000:0000:0000:0000:0000:abcd",
          "1234::abcd",
          "::1"
        ]
      }
    },
    "7bd0e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "venvironment schema",
        "type": "object",
        "additionalProperties": false,
        "required": ["version"],
        "properties": {
          "version": {
            "$ref": "#/definitions/a2b96/full"
          },
          "application-models": {
            "$ref": "#/definitions/8bf53/full"
          },
          "canfd-networks": {
            "$ref": "#/definitions/844f0/full"
          },
          "can-networks": {
            "$ref": "#/definitions/17e74/full"
          },
          "can-replay-blocks": {
            "$ref": "#/definitions/ec12f/full"
          },
          "databases": {
            "$ref": "#/definitions/62d94/full"
          },
          "datasources": {
            "$ref": "#/definitions/6d767/full"
          },
          "defines": {
            "$ref": "#/definitions/e8c0c/full"
          },
          "ethernet-networks": {
            "$ref": "#/definitions/f2116/full"
          },
          "ethernet-replay-blocks": {
            "$ref": "#/definitions/a6645/full"
          },
          "fdx": {
            "$ref": "#/definitions/0d894/full"
          },
          "flexray-clusters": {
            "$ref": "#/definitions/efabb/full"
          },
          "flexray-replay-blocks": {
            "$ref": "#/definitions/b0d96/full"
          },
          "functional-mockup-units": {
            "$ref": "#/definitions/0edfe/full"
          },
          "global-settings": {
            "$ref": "#/definitions/896d0/full"
          },
          "includes": {
            "$ref": "#/definitions/85495/full"
          },
          "lin-networks": {
            "$ref": "#/definitions/b1caa/full"
          },
          "lin-replay-blocks": {
            "$ref": "#/definitions/9be31/full"
          },
          "logging": {
            "$ref": "#/definitions/8ea45/full"
          },
          "programming-modules": {
            "$ref": "#/definitions/aad77/full"
          },
          "scenarios": {
            "$ref": "#/definitions/23009/full"
          },
          "security": {
            "$ref": "#/definitions/49dc4/full"
          },
          "sil-kit": {
            "$ref": "#/definitions/761e4/full"
          },
          "simulation-nodes": {
            "$ref": "#/definitions/ce4f6/full"
          },
          "system-variables": {
            "$ref": "#/definitions/f2cb9/full"
          },
          "user-files": {
            "$ref": "#/definitions/d60a5/full"
          },
          "variables": {
            "$ref": "#/definitions/5d046/full"
          },
          "xcp-configuration-files": {
            "$ref": "#/definitions/a665e/full"
          }
        }
      }
    },
    "8bf53": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Application Models",
        "description": "List of application models representing some program. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/faf17/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/my/file.can",
              "defines": ["mydefine1", "mydefine=2"]
            }
          ]
        ]
      }
    },
    "844f0": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CANFD Networks",
        "description": "List of CANFD networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/ba2d9/full"
        },
        "examples": [
          [
            {
              "name": "my_canfd_network"
            }
          ],
          [
            {
              "name": "my_canfd_network",
              "database": "DB_1",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "name": "my_canfd_network",
              "database": "DB_1",
              "mode": "iso",
              "arbitration-baudrate": 500000,
              "data-baudrate": 1000000,
              "mapping": "internal-simulator"
            }
          ]
        ]
      }
    },
    "17e74": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN Networks",
        "description": "List of CAN networks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/84972/full"
        },
        "examples": [
          [
            {
              "name": "my_can_network"
            }
          ],
          [
            {
              "name": "my_can_network",
              "database": "DB_1",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ],
          [
            {
              "name": "my_can_network",
              "database": "DB_1",
              "baudrate": 500000,
              "mapping": "internal-simulator"
            }
          ]
        ]
      }
    },
    "62d94": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Databases",
        "description": "List of databases. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/5d2a8/full"
        },
        "examples": [
          [
            {
              "name": "mydbname",
              "file-path": "path/to/some.dbc"
            }
          ],
          [
            {
              "name": "mydbname",
              "file-path": "path/to/some.dbc"
            },
            {
              "name": "mydbname",
              "file-path": "path/to/some.arxml",
              "network-name": "network_in_db"
            },
            {
              "name": "mydbname",
              "file-path": "path/to/some.dbc",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            }
          ]
        ]
      }
    },
    "6d767": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Datasources",
        "description": "The definition of datasources used by application models. Input files can be deactivated with when.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input-files": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": ["file-path"],
              "properties": {
                "when": {
                  "$ref": "#/definitions/5e277/full"
                },
                "file-path": {
                  "$ref": "#/definitions/535fe/full"
                },
                "defines": {
                  "$ref": "#/definitions/dbb1c/full"
                }
              }
            }
          }
        },
        "examples": [
          {
            "input-files": [
              {
                "file-path": "path/to/my.vcdl"
              }
            ]
          },
          {
            "input-files": [
              {
                "file-path": [
                  "path/to/my.vcodm",
                  "${path_in_variable}",
                  "path/${name_in_variable}"
                ]
              }
            ]
          },
          {
            "input-files": [
              {
                "file-path": "path/to/my.vcdl",
                "defines": ["A", "B=42"],
                "when": "SCENARIO_NAME == \"my_scenario_name\""
              }
            ]
          }
        ]
      }
    },
    "0d894": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FDX",
        "description": "FDX settings. Entry can be deactivated with when.",
        "type": "object",
        "additionalProperties": false,
        "required": ["transport-layer", "port"],
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "transport-layer": {
            "description": "Protocol to be used as transport layer for the FDX protocol",
            "default": "udp/ipv4",
            "oneOf": [
              {
                "type": "string",
                "enum": ["udp/ipv4", "udp/ipv6", "tcp/ipv4", "tcp/ipv6"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "port": {
            "description": "UDP or TCP port to be used for the FDX protocol",
            "default": 2809,
            "oneOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 65535
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "description-files": {
            "description": "List of XML files that describe which signals or variables are to be exchanged and the manner in which this is to occur (e.g., with regard to grouping). Each entry can be deactivated with when.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": ["file-path"],
              "properties": {
                "when": {
                  "$ref": "#/definitions/5e277/full"
                },
                "file-path": {
                  "$ref": "#/definitions/a23f7/full"
                }
              }
            }
          }
        },
        "examples": [
          {
            "transport-layer": "udp/ipv4",
            "port": 2809
          },
          {
            "transport-layer": "tcp/ipv4",
            "port": 1859,
            "when": "SCENARIO_NAME == \"MyScenario\""
          },
          {
            "transport-layer": "tcp/ipv6",
            "port": 5555,
            "description-files": [
              {
                "file-path": "path/to/first.xml"
              },
              {
                "file-path": "path/to/second.xml"
              }
            ]
          }
        ]
      }
    },
    "0edfe": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Functional mockup units",
        "description": "List of functional mockup units. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/048e3/full"
        },
        "examples": [
          [
            {
              "file-path": "path/to/some.fmu",
              "stepsize-in-sec": 0.001
            }
          ],
          [
            {
              "file-path": "path/to/some.fmu",
              "stepsize-in-sec": 0.001,
              "debug-output": true,
              "when": "SCENARIO_NAME == \"MyScenario\"",
              "inactive-model-variables": ["Variable3"]
            }
          ],
          [
            {
              "file-path": "path/to/some.fmu",
              "stepsize-in-sec": 0.001,
              "debug-output": false,
              "active-model-variables": ["Variable1", "Variable2"]
            }
          ]
        ]
      }
    },
    "896d0": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Global Settings",
        "description": "Global settings for all scenarios.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ethernet": {
            "$ref": "#/definitions/7c80e/full"
          },
          "flexray": {
            "$ref": "#/definitions/fa0cd/full"
          },
          "database": {
            "$ref": "#/definitions/fbf90/full"
          },
          "database-dotnet-namespace-generation": {
            "description": "User defined settings for namespace generation in the .Net typelib. Default complies with the setting \"Automatic Qualification\". With this setting the namespaces for signals are automatically generated so that each class is unique. For each frame a class is generated in the namespace \"NetworkDB.Frames\".",
            "type": "array",
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "use-network",
                    "use-database",
                    "use-frame",
                    "use-node"
                  ]
                },
                {
                  "$ref": "#/definitions/779cd/full"
                }
              ]
            },
            "examples": [
              ["use-network", "use-database", "use-frame", "use-node"]
            ]
          },
          "time-scaling-factor": {
            "description": "If a number is provided, the measurement is slowed-down by this factor. For scaling factors between zero and one, the simulation is accelerated accordingly. For example, if you enter the value 0.1 the measurement is accelerated by a factor of 10. \n\"as-fast-as-possible\": Run the simulation as fast as possible. The simulation speed is not constant and depends on the performance of the computer and the load that is provoked by the simulation. The property \"time-scaling-factor\" is mandatory if \"time-source\" is set to \"internal-scaled\" and is forbidden otherwise.",
            "oneOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0,
                "maximum": 1e37
              },
              {
                "const": "as-fast-as-possible"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "default": "as-fast-as-possible",
            "examples": [0.5, 1, 100, "as-fast-as-possible"]
          },
          "time-source": {
            "description": "Time source for the simulation. Operate without hardware and simulate all buses completely. \n\"internal-realtime\": The time response of the measurement (time basis) is controlled internally. \n\"internal-scaled\": The simulation speed is provided through the property \"time-scaling-factor\". \n\"external-software\": The time response of the measurement (time basis) is controlled by an external program. The property \"time-scaling-factor\" is mandatory if \"time-source\" is set to \"internal-scaled\" and is forbidden otherwise.",
            "default": "internal-realtime",
            "oneOf": [
              {
                "enum": [
                  "internal-realtime",
                  "internal-scaled",
                  "external-software"
                ]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [
              "internal-realtime",
              "internal-scaled",
              "external-software"
            ]
          },
          "default-network-mapping": {
            "$ref": "#/definitions/85c8a/full",
            "description": "Define the default network mapping. This value can be overwritten on network level. The available options depend on the time-source. \n\"internal-realtime\" and \"external-software\"\" are supporting \"internal-simulator\" and \"external-sil-kit\".\n\"internal-scaled\" only supports \"internal-simulator\"."
          }
        },
        "allOf": [
          {
            "$comment": "prune-node-from-doc",
            "if": {
              "required": ["time-source"],
              "properties": {
                "time-source": {
                  "const": "internal-scaled"
                }
              }
            },
            "then": {
              "required": ["default-network-mapping"],
              "properties": {
                "time-scaling-factor": true,
                "default-network-mapping": {
                  "const": "internal-simulator"
                }
              }
            }
          },
          {
            "$comment": "prune-node-from-doc",
            "if": {
              "required": ["time-source"],
              "properties": {
                "time-source": {
                  "enum": ["internal-realtime", "external-software"]
                }
              }
            },
            "then": {
              "required": ["default-network-mapping"],
              "properties": {
                "time-scaling-factor": false,
                "default-network-mapping": {
                  "oneOf": [
                    {
                      "const": "internal-simulator"
                    },
                    {
                      "const": "external-sil-kit"
                    }
                  ]
                }
              }
            }
          }
        ],
        "examples": [
          {
            "ethernet": {
              "access-mode": "channel-based",
              "signal-updates": "always",
              "tcp-ip-stack": {
                "selected-stack": "canoe",
                "activate-routing": true,
                "tcp-delayed-ack": true,
                "ipv4-gateway": "192.168.0.33",
                "ipv6-gateway": "::1"
              }
            }
          },
          {
            "flexray": {
              "enable-dual-channel-support": false,
              "postfixes-for-ambiguous-pdus-on-channel": "no-postfixes"
            }
          },
          {
            "database": {
              "autosar-pdu-layer": "no-pdus",
              "autosar-text-table-entries": "short-label",
              "some-ip-pdus-without-service-context": "generate-service"
            }
          },
          {
            "time-source": "internal-realtime",
            "default-network-mapping": "internal-simulator"
          },
          {
            "time-source": "external-software",
            "default-network-mapping": "external-sil-kit"
          },
          {
            "time-source": "internal-scaled",
            "time-scaling-factor": "as-fast-as-possible",
            "default-network-mapping": "internal-simulator"
          },
          {
            "time-source": "internal-scaled",
            "time-scaling-factor": 0.01,
            "default-network-mapping": "internal-simulator"
          },
          {
            "time-source": "internal-scaled",
            "time-scaling-factor": 1,
            "default-network-mapping": "internal-simulator"
          },
          {
            "database-dotnet-namespace-generation": [
              "use-network",
              "${someVariable}"
            ]
          }
        ]
      }
    },
    "85495": {
      "local": {
        "one": {
          "type": "string",
          "pattern": "\\.([Yy][Aa]?[Mm][Ll]|[Jj][Ss][Oo][Nn])$"
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Include files",
        "description": "Include a different file (similar to #include of the c preprocessor). The order of includes does not matter. Circular / multiple includes are resolved correctly.",
        "oneOf": [
          {
            "$ref": "#/definitions/85495/local/one"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/85495/local/one"
            }
          }
        ],
        "examples": [
          "my_include.yaml",
          ["my_include.yml", "my_other_include.json"]
        ]
      }
    },
    "9be31": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LIN Replay Blocks",
        "description": "List of LIN replay blocks. Entries can be deactivated with when.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/3d295/full"
        },
        "examples": [
          [
            {
              "name": "my_lin_replay_block",
              "file-path": "my_logging_file.blf"
            }
          ],
          [
            {
              "name": "my_lin_replay_block",
              "file-path": "my_logging_file.blf",
              "when": "SCENARIO_NAME == \"my_scenario_name\""
            },
            {
              "name": "my_lin_replay_block",
              "file-path": "another_logging_file.blf",
              "when": "SCENARIO_NAME == \"another_scenario_name\""
            }
          ],
          [
            {
              "name": "ReplayBlock",
              "file-path": "MyLoggingFile.blf",
              "replay-on-measurement-start": true,
              "send-system-variables": false,
              "start-timing-condition": {
                "condition": "immediately"
              },
              "channel-mapping": {
                "default-mapping": "as-in-original"
              },
              "replay-mode": "master-responses-only",
              "send-events": ["tx-responses", "rx-responses", "wakeup-signals"]
            }
          ]
        ]
      }
    },
    "8ea45": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Logging Block",
        "description": "Configuration of the logging for the environment.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-name"],
        "properties": {
          "file-name": {
            "$ref": "#/definitions/bcf87/full"
          },
          "logging-events": {
            "type": "array",
            "description": "List of event types to be logged.",
            "default": [
              "application-layer",
              "bus",
              "diagnostic",
              "internal",
              "statistic",
              "system-variable",
              "test"
            ],
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "application-layer",
                    "bus",
                    "diagnostic",
                    "internal",
                    "statistic",
                    "system-variable",
                    "test"
                  ]
                },
                {
                  "$ref": "#/definitions/779cd/full"
                }
              ]
            }
          },
          "advanced": {
            "$ref": "#/definitions/cba0d/full"
          }
        },
        "examples": [
          {
            "file-name": "file-name.blf",
            "logging-events": [
              "bus",
              "diagnostic",
              "internal",
              "${someVariable}"
            ],
            "advanced": {
              "warn-overwritten-log-file": true,
              "show-error-on-data-loss": false
            }
          }
        ]
      }
    },
    "23009": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Scenarios",
        "description": "List of scenarios with the option to define or override variables and defines.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/316e0/full"
        },
        "examples": [
          [
            {
              "name": "my_scenario_name"
            }
          ],
          [
            {
              "name": "my_scenario_name"
            },
            {
              "name": "override_variables",
              "variables": [
                {
                  "name": "three",
                  "value": 3
                }
              ]
            },
            {
              "name": "override_defines",
              "defines": ["mydefine", "mydevine_with_value=42"]
            }
          ]
        ]
      }
    },
    "49dc4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Security",
        "description": "Security settings",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "network-profile-assignments": {
            "$ref": "#/definitions/0b81c/full"
          },
          "stack-profile-assignments": {
            "$ref": "#/definitions/3200b/full"
          },
          "operating-system-stack-profile-id": {
            "$ref": "#/definitions/adad4/full",
            "description": "The ID of the assigned security profile to the OS ethernet stack."
          },
          "shared-canoe-stack-profile-id": {
            "$ref": "#/definitions/adad4/full",
            "description": "The ID of the assigned security profile to the shared CANoe ethernet stack."
          }
        },
        "examples": [
          {
            "network-profile-assignments": [
              {
                "network": "CAN",
                "profile-id": 123456
              }
            ]
          },
          {
            "stack-profile-assignments": [
              {
                "simulation-node": "MyNode",
                "profile-id": 123456
              },
              {
                "simulation-node": "AnotherNode",
                "profile-id": 987654
              }
            ],
            "operating-system-stack-profile-id": 24680,
            "shared-canoe-stack-profile-id": 13579
          }
        ]
      }
    },
    "761e4": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SIL Kit",
        "description": "SIL Kit settings. Entry can be deactivated with when.",
        "type": "object",
        "additionalProperties": false,
        "required": ["participant-name"],
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "registry-uri": {
            "description": "The URI of the registry.",
            "type": "string",
            "anyOf": [
              {
                "pattern": "^[^:]+://[^:/]+(:[0-9]+)?(/[^?#/]+)*(\\?([^=#&]+=[^=#&]+)(&([^=#&]+=[^=#&]+))*)?(#.+)?",
                "default": "silkit://localhost:8500"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": ["silkit://localhost:8500"]
          },
          "participant-name": {
            "description": "Name used by the simulation tool to join a simulation as a participant at the start of a measurement.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": ["CANoe4SW-SE"]
          },
          "config-file-path": {
            "$ref": "#/definitions/45cf9/full"
          },
          "simulation-step-in-micro-sec": {
            "description": "Time length of a single simulation step. Valid only for the time-source \"external-software\".",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854775,
                "default": 100
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "life-cycle-event-timeout-in-sec": {
            "description": "Maximum waiting time for the other simulation participants. Valid only for the time-source \"external-software\".",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036,
                "default": 30
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          }
        },
        "examples": [
          {
            "participant-name": "CANoe4SW-SE"
          },
          {
            "registry-uri": "silkit://localhost:8500",
            "participant-name": "CANoe4SW-SE",
            "config-file-path": "path/to/config-file.json"
          },
          {
            "registry-uri": "silkit://localhost:8500",
            "participant-name": "CANoe4SW-SE",
            "config-file-path": "path/to/config-file.json",
            "simulation-step-in-micro-sec": 150
          },
          {
            "registry-uri": "silkit://localhost:8500",
            "participant-name": "CANoe4SW-SE",
            "config-file-path": "path/to/config-file.json",
            "simulation-step-in-micro-sec": 150,
            "life-cycle-event-timeout-in-sec": 30
          }
        ]
      }
    },
    "5d046": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Variables",
        "description": "List of variables to be used in this configuration file.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/daa86/full"
        },
        "examples": [
          [
            {
              "name": "var",
              "value": -42
            }
          ],
          [
            {
              "name": "my_string",
              "value": "implicit-type"
            },
            {
              "name": "var",
              "value": 422200000000.0,
              "type": "float"
            },
            {
              "name": "path_var",
              "value": "path/to/somewhere",
              "type": "path"
            },
            {
              "name": "uint_enum",
              "value": 43,
              "type": "uint",
              "options": [1, 43, 127]
            }
          ]
        ]
      }
    },
    "84972": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CAN network",
        "description": "A Network using the CAN protocol taking part in a simulation.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "database": {
            "$ref": "#/definitions/8ab6a/full",
            "description": "Reference to a database declared in the configuration file."
          },
          "baudrate": {
            "description": "Baudrate of this CAN bus. \n If this value is set, it has priority. \n If this value is not set, the baudrate is read from the database. If the baudrate is missing from the database, the default value is used.",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 2000000,
                "default": 500000
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "application-channel": {
            "description": "Index of the application channel. Each bus type should provide consecutive indices. Starts counting at 1. Value between 1 and 255. Value '0' is not allowed. Caution: CAN and CANFD share the application channels!",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "default": 1
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "mapping": {
            "$ref": "#/definitions/d63e6/full"
          }
        },
        "examples": [
          {
            "name": "my_can_network"
          },
          {
            "name": "my_can_network",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "my_can_network",
            "database": "DB_1",
            "application-channel": 42,
            "baudrate": 500000,
            "mapping": "internal-simulator"
          }
        ]
      }
    },
    "5d2a8": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Database",
        "description": "Absolute or relative path to an external database file (.dbc / .ldf / ...). Relative path specifications are resolved relative to the defining configuration file.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "network-name": {
            "description": "Select a network from the database (cluster name if .arxml). If selected, 'name' must match 'network-name'.",
            "type": "string"
          },
          "file-path": {
            "$ref": "#/definitions/c6ecb/full"
          }
        },
        "examples": [
          {
            "name": "mydbname",
            "file-path": "path/to/some.dbc"
          },
          {
            "name": "mydbname",
            "file-path": "path/to/some.arxml",
            "network-name": "network_in_db"
          },
          {
            "name": "mydbname",
            "file-path": "path/to/some.dbc",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "5e277": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Only add this node to the environment if the specified condition is true.",
        "oneOf": [
          {
            "$comment": "impossible to express this grammar as a regex",
            "description": "A condition containing logical operators (e.g., ` (intvar > 0 && boolvar) || strvar != \"setup_a\"`). Variables do not have to be escaped. The additional variable `SCENARIO_NAME` always contains the current scenario name.",
            "type": "string"
          },
          {
            "description": "A boolean constant.",
            "type": "boolean"
          }
        ],
        "examples": [
          "SCENARIO_NAME == \"my_scenario_name\"",
          "some_variable == \"somevalue\"",
          "some_int_variable > 42 && some_other_int_variable <= 42",
          true
        ]
      }
    },
    "535fe": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "oneOf": [
          {
            "$ref": "#/definitions/6c62c/full"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/6c62c/full"
            },
            "examples": [
              ["path/to/my.vcdl"],
              ["path/to/my.vcodm"],
              [
                "path/to/my.vcdl",
                "path/to/my.vcodm",
                "${path_in_variable}",
                "path/${name_in_variable}"
              ]
            ]
          }
        ],
        "examples": [
          "path/to/my.vcdl",
          ["path/to/my.vcodm"],
          [
            "path/to/my.vcdl",
            "path/to/my.vcodm",
            "${path_in_variable}",
            "path/${name_in_variable}"
          ]
        ]
      }
    },
    "60f6d": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Define",
        "description": "Defines to be passed to capl / vcdl.",
        "type": "object",
        "additionalProperties": false,
        "required": ["define"],
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "define": {
            "anyOf": [
              {
                "$ref": "#/definitions/d6fe8/full"
              },
              {
                "$ref": "#/definitions/dbb1c/full"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          }
        },
        "examples": [
          {
            "define": "mydefine1"
          },
          {
            "define": ["mydefine1", "mydefine2"]
          },
          {
            "define": ["mydefine1", "mydefine2"],
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "define": [
              "mydefine_with_value=42",
              "${var_with_define_name}=${var_with_define_value}"
            ]
          }
        ]
      }
    },
    "779cd": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "string",
        "pattern": "\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}",
        "examples": ["${myvarname}"]
      }
    },
    "40c51": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "FlexRay replay block",
        "description": "A replay block for the FlexRay protocol.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path", "network"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "$ref": "#/definitions/a9048/full"
          },
          "network": {
            "$ref": "#/definitions/8ab6a/full",
            "description": "Name of the FlexRay cluster, this replay node is attached to."
          },
          "replay-on-measurement-start": {
            "description": "Replay starts with measurement start.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "channel-mapping": {
            "$ref": "#/definitions/769ae/full"
          },
          "replay-nodes": {
            "description": "List of nodes, whose transmitted messages should be replayed from the logging file. If not set, all are active by default.",
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/definitions/8ab6a/full"
            }
          }
        },
        "examples": [
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "network": "flexRay1"
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "network": "flexRay1",
            "when": "SCENARIO_NAME == \"MyScenario\""
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "network": "flexRay1",
            "replay-on-measurement-start": true,
            "channel-mapping": {
              "default-mapping": "as-in-original"
            },
            "replay-nodes": ["ECU1", "ECU2"]
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "network": "flexRay1",
            "channel-mapping": {
              "default-mapping": "ignore-all",
              "mappings": [
                {
                  "source-network": "flexray2"
                }
              ]
            }
          }
        ]
      }
    },
    "048e3": {
      "local": {
        "stepsize-in-sec": {
          "description": "Step size in seconds.",
          "oneOf": [
            {
              "type": "number",
              "minimum": 0,
              "maximum": 10000
            },
            {
              "$ref": "#/definitions/779cd/full"
            }
          ],
          "examples": [0, 0.0005, 10000, "${var_with_path}"]
        },
        "debug-output": {
          "description": "Is the debug output active.",
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "#/definitions/779cd/full"
            }
          ],
          "examples": [false, true, "${var_with_path}"]
        },
        "active-model-variables": {
          "description": "List of the FMU variables which should be exported",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": ["Variable1", "${var_with_path}"]
          }
        },
        "inactive-model-variables": {
          "description": "List of the FMU variables which should be excluded from the export",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": ["Variable1", "${var_with_path}"]
          }
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Functional mockup unit",
        "description": "Represents a functional mockup unit used in a scenario.",
        "type": "object",
        "oneOf": [
          {
            "additionalProperties": false,
            "required": ["file-path", "stepsize-in-sec"],
            "properties": {
              "when": {
                "$ref": "#/definitions/5e277/full"
              },
              "file-path": {
                "$ref": "#/definitions/3ebec/full"
              },
              "stepsize-in-sec": {
                "$ref": "#/definitions/048e3/local/stepsize-in-sec"
              },
              "debug-output": {
                "$ref": "#/definitions/048e3/local/debug-output"
              }
            }
          },
          {
            "additionalProperties": false,
            "required": [
              "file-path",
              "stepsize-in-sec",
              "active-model-variables"
            ],
            "properties": {
              "when": {
                "$ref": "#/definitions/5e277/full"
              },
              "file-path": {
                "$ref": "#/definitions/3ebec/full"
              },
              "stepsize-in-sec": {
                "$ref": "#/definitions/048e3/local/stepsize-in-sec"
              },
              "debug-output": {
                "$ref": "#/definitions/048e3/local/debug-output"
              },
              "active-model-variables": {
                "$ref": "#/definitions/048e3/local/active-model-variables"
              }
            }
          },
          {
            "additionalProperties": false,
            "required": [
              "file-path",
              "stepsize-in-sec",
              "inactive-model-variables"
            ],
            "properties": {
              "when": {
                "$ref": "#/definitions/5e277/full"
              },
              "file-path": {
                "$ref": "#/definitions/3ebec/full"
              },
              "stepsize-in-sec": {
                "$ref": "#/definitions/048e3/local/stepsize-in-sec"
              },
              "debug-output": {
                "$ref": "#/definitions/048e3/local/debug-output"
              },
              "inactive-model-variables": {
                "$ref": "#/definitions/048e3/local/inactive-model-variables"
              }
            }
          }
        ]
      }
    },
    "7c80e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Global settings for Ethernet",
        "type": "object",
        "properties": {
          "access-mode": {
            "description": "Mode of the underlying Ethernet bus. Classic approach is the 'Channel-based' setup. More recent and recommended mode is the switched 'Network-based' mode (port based).",
            "oneOf": [
              {
                "enum": ["network-based", "channel-based"],
                "default": "network-based"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": ["network-based", "channel-based"]
          },
          "signal-updates": {
            "description": "Specifies how signals are updated on Network-based access. Will be ignored on Channel-based setups. Always: Events of all ports are used to update a signal without qualified ethernet port. rx-only: Only packets received by the interface are used, which leads to less duplicated updates. never: Signals without qualified ethernet ports are not updated.",
            "oneOf": [
              {
                "$ref": "#/definitions/779cd/full"
              },
              {
                "const": "always",
                "description": "Events of all ports are used to update a signal without qualified ethernet port."
              },
              {
                "const": "rx-only",
                "description": "Only packets received by the interface are used, which leads to less duplicated updates."
              },
              {
                "const": "never",
                "description": "Signals without qualified ethernet ports are not updated."
              }
            ],
            "examples": ["always", "rx-only", "never"]
          },
          "tcp-ip-stack": {
            "$ref": "#/definitions/db0d5/full"
          }
        },
        "additionalProperties": false,
        "examples": [
          {
            "access-mode": "network-based"
          },
          {
            "access-mode": "channel-based",
            "signal-updates": "always"
          },
          {
            "signal-updates": "rx-only"
          },
          {
            "signal-updates": "never"
          }
        ]
      }
    },
    "85c8a": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "oneOf": [
          {
            "enum": ["internal-simulator", "external-sil-kit"]
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": ["internal-simulator", "external-sil-kit"]
      }
    },
    "3d295": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "LIN replay block",
        "description": "A replay block for the LIN protocol.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file-path"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "$ref": "#/definitions/a9048/full"
          },
          "replay-on-measurement-start": {
            "description": "Replay starts with measurement start.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "send-system-variables": {
            "description": "Send system variable values.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [true, false, "${variable}"]
          },
          "start-timing-condition": {
            "$ref": "#/definitions/159aa/full"
          },
          "channel-mapping": {
            "$ref": "#/definitions/8a040/full"
          },
          "replay-mode": {
            "description": "Select events to be replayed. \n'all-responses': replay all the responses.\n'master-responses-only': replay the responses only for frames published by the Master node.\n'master-requests-only': replay only 0x3c responses.\n'no-headers': disable replay of the LIN frame headers.",
            "default": "all-responses",
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "all-responses",
                  "master-responses-only",
                  "master-requests-only",
                  "no-headers"
                ]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "send-events": {
            "description": "Select which events from rx-responses, tx-responses and wakeup-signals are replayed. If not set, the default value depends on the value of replay-mode.\n For 'all-responses' or 'master-responses-only': all events are sent.\n For 'master-requests-only': only wakeup-events are sent.\n For 'no-headers': none of the events are sent.",
            "default": ["tx-responses", "rx-responses", "wakeup-signals"],
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": ["tx-responses", "rx-responses", "wakeup-signals"]
                    },
                    {
                      "$ref": "#/definitions/779cd/full"
                    }
                  ]
                }
              }
            ]
          }
        },
        "examples": [
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf"
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "when": "SCENARIO_NAME == \"MyScenario\""
          },
          {
            "name": "ReplayBlock",
            "file-path": "MyLoggingFile.blf",
            "replay-on-measurement-start": true,
            "send-system-variables": false,
            "start-timing-condition": {
              "condition": "immediately"
            },
            "channel-mapping": {
              "default-mapping": "as-in-original"
            },
            "replay-mode": "master-responses-only",
            "send-events": ["tx-responses", "rx-responses", "wakeup-signals"]
          }
        ]
      }
    },
    "316e0": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Scenario",
        "description": "A scenario with the option to define or override variables and defines.",
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "name": {
            "description": "Name of the scenario",
            "type": "string",
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
            "not": {
              "const": "Default"
            }
          },
          "variables": {
            "$ref": "#/definitions/5d046/full"
          },
          "defines": {
            "$ref": "#/definitions/dbb1c/full"
          }
        },
        "examples": [
          {
            "name": "my_scenario_name"
          },
          {
            "name": "override_variables",
            "variables": [
              {
                "name": "three",
                "value": 3
              }
            ]
          },
          {
            "name": "override_defines",
            "defines": ["mydefine", "mydevine_with_value=42"]
          }
        ]
      }
    },
    "0b81c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Network Security Profile Assignments",
        "description": "List with security profile to network assignments. The Security profile is used for SecOC, Diagnostics and Backend Access.",
        "type": "array",
        "items": {
          "title": "Network Security Profile Assignment",
          "type": "object",
          "description": "Assignment of a security profile to a network.",
          "additionalProperties": false,
          "required": ["network", "profile-id"],
          "properties": {
            "network": {
              "description": "The name of the network to which the security profile shall be assigned.",
              "oneOf": [
                {
                  "$ref": "#/definitions/038dc/full"
                },
                {
                  "$ref": "#/definitions/779cd/full"
                }
              ]
            },
            "profile-id": {
              "$ref": "#/definitions/adad4/full",
              "description": "The ID of the assigned security profile."
            },
            "when": {
              "$ref": "#/definitions/5e277/full"
            }
          }
        },
        "examples": [
          [
            {
              "network": "CAN1",
              "profile-id": 123456
            },
            {
              "network": "CAN2",
              "profile-id": 654321
            }
          ],
          [
            {
              "network": "CAN",
              "profile-id": "${SECURITY_PROFILE_ID}"
            }
          ],
          [
            {
              "network": "CAN",
              "profile-id": 123456,
              "when": "SCENARIO_NAME == \"MyScenarioWithEnabledSecurity\""
            }
          ]
        ]
      }
    },
    "3200b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema",
        "title": "Ethernet Stack Security Profile Assignments",
        "description": "List with security profile to ethernet stack assignments. The security profile is used for TLS and IPSec.",
        "type": "array",
        "items": {
          "title": "Ethernet Stack Security Profile Assignment",
          "type": "object",
          "description": "Assignment of a security profile to an ethernet stack.",
          "additionalProperties": false,
          "required": ["simulation-node", "profile-id"],
          "properties": {
            "simulation-node": {
              "description": "The name of the simulation node. The security profile will be assigned to the ethernet stack of the simulation node.",
              "oneOf": [
                {
                  "$ref": "#/definitions/038dc/full"
                },
                {
                  "$ref": "#/definitions/779cd/full"
                }
              ]
            },
            "profile-id": {
              "$ref": "#/definitions/adad4/full",
              "description": "The ID of the assigned security profile."
            },
            "when": {
              "$ref": "#/definitions/5e277/full"
            }
          }
        },
        "examples": [
          [
            {
              "simulation-node": "MySimulationNode",
              "profile-id": 123456
            },
            {
              "simulation-node": "AnotherSimulationNode",
              "profile-id": 654321
            }
          ],
          [
            {
              "simulation-node": "MySimulationNode",
              "profile-id": "${SECURITY_PROFILE_ID}"
            }
          ],
          [
            {
              "simulation-node": "MySimulationNode",
              "profile-id": 123456,
              "when": "SCENARIO_NAME == \"MyScenarioWithEnabledSecurity\""
            }
          ]
        ]
      }
    },
    "45cf9": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a SIL Kit config file (.yaml or .json). Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[yY][aA][mM][lL]$"
          },
          {
            "pattern": "^.*\\.[jJ][sS][oO][nN]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/myConfigFile.json",
          "path/to/myConfigFile.yaml",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "70264": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Simulation Node",
        "description": "Represents a simulation node used in a simulation",
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "network-assignments"],
        "properties": {
          "name": {
            "$ref": "#/definitions/038dc/full"
          },
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "$ref": "#/definitions/c4a92/full"
          },
          "network-assignments": {
            "$ref": "#/definitions/79845/full"
          },
          "defines": {
            "$ref": "#/definitions/dbb1c/full"
          },
          "database-node": {
            "description": "Use to assign explicitly a database node to a simulation node. If not set, the simulation-node name will be used as database-node. To deactivate automatic assignment, it should be set to false.",
            "oneOf": [
              {
                "type": "boolean",
                "default": true
              },
              {
                "type": "string",
                "not": {
                  "$ref": "#/definitions/779cd/full"
                }
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": [false, true, "aDatabaseNodeName", "${var_with_path}"]
          },
          "modeling-libraries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/58c94/full"
            },
            "description": "A list of vmodule modeling libraries to assign to the simulation node."
          },
          "tcp-ip-stack": {
            "$ref": "#/definitions/dd53d/full"
          }
        },
        "examples": [
          {
            "name": "mynode",
            "network-assignments": [
              {
                "network": "my_can_network_1"
              }
            ],
            "file-path": "path/to/my_capl_script.can",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "mynode",
            "file-path": "path/to/my_dotnet.cs",
            "database-node": true,
            "network-assignments": [
              {
                "network": "my_can_network_1"
              }
            ],
            "defines": ["mydefine1", "mydefine2"],
            "modeling-libraries": ["modeling/lib/1.vmodule", "${path_in_var}"],
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          },
          {
            "name": "mynode",
            "file-path": "path/to/my_dotnet.cs",
            "database-node": false,
            "network-assignments": [
              {
                "network": "my_can_network_1"
              }
            ]
          },
          {
            "name": "otherNameThanInDb",
            "file-path": "path/to/my_dotnet.cs",
            "database-node": "nameFromDB",
            "network-assignments": [
              {
                "network": "my_can_network_1"
              }
            ]
          }
        ]
      }
    },
    "38e8e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "User files",
        "description": "Absolute or relative path to user files that can be read/written by CAPL/.NET Scripts. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-path"],
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "description": "Absolute or relative path to an user file. Relative path specifications are resolved relative to the defining configuration file.",
            "oneOf": [
              {
                "type": "string",
                "examples": [
                  "path/to/my.txt",
                  "${path_in_variable}",
                  "path/${name_in_variable}"
                ]
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "examples": [
                  ["path/to/my.txt"],
                  ["${path_in_variable}", "path/${name_in_variable}"]
                ]
              }
            ]
          }
        },
        "examples": [
          {
            "file-path": "path/to/my.txt"
          },
          {
            "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
          },
          {
            "file-path": "path/to/my_file.ini",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "5b3ba": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "XCP files",
        "description": "Absolute or relative path to an external xcpcfg file. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "object",
        "additionalProperties": false,
        "required": ["file-path"],
        "properties": {
          "when": {
            "$ref": "#/definitions/5e277/full"
          },
          "file-path": {
            "oneOf": [
              {
                "$ref": "#/definitions/d5dc9/full"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/d5dc9/full"
                }
              }
            ]
          }
        },
        "examples": [
          {
            "file-path": "path/to/my.xcpcfg"
          },
          {
            "file-path": ["${path_in_variable}", "path/${name_in_variable}"]
          },
          {
            "file-path": "path/to/my.xcpcfg",
            "when": "SCENARIO_NAME == \"my_scenario_name\""
          }
        ]
      }
    },
    "038dc": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A C-identifier for this element (case sensitive)",
        "type": "string",
        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
        "examples": ["myid", "THIS_IS_CASE_SENSITIVE", "__1_2_3_4_5__"]
      }
    },
    "8ab6a": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "string",
        "oneOf": [
          {
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
          },
          {
            "pattern": "^([a-zA-Z_][a-zA-Z0-9_]*)?\\$\\{[a-zA-Z_][a-zA-Z0-9_]*\\}[a-zA-Z0-9_]*$"
          }
        ],
        "examples": [
          "myid",
          "THIS_IS_CASE_SENSITIVE",
          "__1_2_3_4_5__",
          "${id_in_variable}"
        ]
      }
    },
    "159aa": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Timing conditions",
        "description": "Timing conditions for a replay block.",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "condition": {
            "description": "The condition when the replay shall start.",
            "oneOf": [
              {
                "const": "immediately",
                "description": "The first event of the replayed file occurs with measurement start."
              },
              {
                "const": "first-event-time",
                "description": "The original timestamp of the replayed file are used."
              },
              {
                "const": "delayed",
                "description": "The first event is delayed. Can be configured by the 'delayed-ms' element."
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "delay-ms": {
            "$ref": "#/definitions/230ce/full",
            "description": "The delay in ms if the condition 'delayed' is selected. No effect otherwise."
          }
        },
        "examples": [
          {
            "condition": "immediately"
          },
          {
            "condition": "first-event-time"
          },
          {
            "condition": "delayed",
            "delay-ms": 1000
          },
          {
            "condition": "${variable}"
          }
        ]
      }
    },
    "8a040": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Channel mapping",
        "description": "The channel mapping for a replay block.",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "default-mapping": {
            "description": "The default mapping of a channel if it is not explicitly mapped.",
            "oneOf": [
              {
                "const": "as-in-original",
                "description": "The channel is mapped to itself if there is an active network."
              },
              {
                "const": "ignore-all",
                "description": "The channels are ignored by default."
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "mappings": {
            "title": "Explicit mappings",
            "description": "The explicitly mapped channels. Overwrites the default mapping for the source.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "title": "Map source channel",
                  "type": "object",
                  "description": "Mapping from application channel of the replay file to a target network.",
                  "additionalProperties": false,
                  "required": ["source-channel", "target-network"],
                  "properties": {
                    "source-channel": {
                      "$ref": "#/definitions/20152/full",
                      "description": "The source application channel from the replayed file."
                    },
                    "target-network": {
                      "description": "The target network name.",
                      "oneOf": [
                        {
                          "$ref": "#/definitions/038dc/full"
                        },
                        {
                          "$ref": "#/definitions/779cd/full"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Map source network",
                  "type": "object",
                  "description": "Mapping from a named source network of the replay file to a named target network.",
                  "additionalProperties": false,
                  "required": ["source-network", "target-network"],
                  "properties": {
                    "source-network": {
                      "description": "The source network name. Only works if the replay file was created by CANoe and contains the relevant metadata.",
                      "type": "string"
                    },
                    "target-network": {
                      "description": "The target network name.",
                      "oneOf": [
                        {
                          "$ref": "#/definitions/038dc/full"
                        },
                        {
                          "$ref": "#/definitions/779cd/full"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "Ignore source channel",
                  "type": "object",
                  "description": "Ignores an application channel of the replay file.",
                  "additionalProperties": false,
                  "required": ["ignore-source-channel"],
                  "properties": {
                    "ignore-source-channel": {
                      "$ref": "#/definitions/20152/full",
                      "description": "The ignored source channel."
                    }
                  }
                },
                {
                  "title": "Ignore source network",
                  "type": "object",
                  "description": "Ignores a named source network of the replay file.",
                  "additionalProperties": false,
                  "required": ["ignore-source-network"],
                  "properties": {
                    "ignore-source-network": {
                      "description": "The ignored source network name. Only works if the replay file was created by CANoe and contains the relevant metadata.",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        },
        "examples": [
          {
            "default-mapping": "as-in-original"
          },
          {
            "default-mapping": "ignore-all",
            "mappings": [
              {
                "source-channel": 1,
                "target-network": "CAN1"
              }
            ]
          },
          {
            "default-mapping": "as-in-original",
            "mappings": [
              {
                "source-network": "CAN1",
                "target-network": "CAN2"
              }
            ]
          },
          {
            "default-mapping": "as-in-original",
            "mappings": [
              {
                "ignore-source-channel": 2
              },
              {
                "ignore-source-network": "CAN4"
              }
            ]
          }
        ]
      }
    },
    "6c62c": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Reference to external datasource files (.vcdl/.vcodm). Absolute or relative path. Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[vV][cC][dD][lL]$"
          },
          {
            "pattern": "^.*\\.[vV][cC][oO][dD][mM]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/my.vcdl",
          "path/to/my.vcodm",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "396b5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Address configuration for an TCP/IP stack.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mac-address": {
            "$ref": "#/definitions/6b85b/full"
          },
          "mtu": {
            "$ref": "#/definitions/cb1c2/full"
          },
          "ipv4-settings": {
            "$ref": "#/definitions/4b907/full"
          },
          "ipv6-settings": {
            "$ref": "#/definitions/e391e/full"
          },
          "vlans": {
            "$ref": "#/definitions/5261e/full"
          }
        },
        "examples": [
          {
            "mac-address": "02:84:cf:3b:be:01"
          },
          {
            "mtu": 1500,
            "ipv4-settings": {
              "address-configuration": "static",
              "addresses": [
                {
                  "address": "192.168.0.1",
                  "subnet-mask": "255.255.0.0"
                }
              ]
            },
            "ipv6-settings": {
              "address-configuration": "dhcp"
            },
            "vlans": [
              {
                "id": 42,
                "priority": 0
              }
            ]
          }
        ]
      }
    },
    "769ae": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Channel mapping",
        "description": "The channel mapping for a FlexRay replay block.",
        "type": "object",
        "additionalProperties": false,
        "required": [],
        "properties": {
          "default-mapping": {
            "description": "The default mapping of a channel if it is not explicitly mapped.",
            "oneOf": [
              {
                "const": "as-in-original",
                "description": "All channels linked to the network this node is attached to are mapped."
              },
              {
                "const": "ignore-all",
                "description": "The channels are ignored by default."
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ]
          },
          "mappings": {
            "title": "Explicit mappings",
            "description": "The explicitly mapped channels. Overwrites the default mapping for the source.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "title": "Map source network",
                  "type": "object",
                  "description": "Mapping of a named source network from the replay file to the network this node is linked to.",
                  "additionalProperties": false,
                  "required": ["source-network"],
                  "properties": {
                    "source-network": {
                      "description": "The source network name. Only works if the replay file was created by CANoe and contains the relevant metadata.",
                      "type": "string"
                    }
                  }
                },
                {
                  "title": "Map source channel",
                  "type": "object",
                  "description": "Mapping of an application channel from the replay file to the network this node is linked to.",
                  "additionalProperties": false,
                  "required": ["source-channel"],
                  "properties": {
                    "source-channel": {
                      "$ref": "#/definitions/20152/full",
                      "description": "The source application channel from the replayed file."
                    }
                  }
                }
              ]
            }
          }
        },
        "examples": [
          {
            "default-mapping": "as-in-original"
          },
          {
            "default-mapping": "ignore-all",
            "mappings": [
              {
                "source-channel": 1
              }
            ]
          },
          {
            "default-mapping": "as-in-original",
            "mappings": [
              {
                "source-network": "flexray2"
              },
              {
                "source-channel": 3
              }
            ]
          }
        ]
      }
    },
    "3ebec": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a source file of a functional mockup unit (.fmu). Relative path specifications are resolved relative to the defining configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[Ff][Mm][Uu]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "my_functional_mockup_unit.fmu",
          "Inputs/MyFmu.FMU",
          "${some_variable}"
        ]
      }
    },
    "47aa6": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a vmodule file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[vV][mM][oO][dD][uU][lL][eE]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/my.vmodule",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "1030e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "integer",
        "minimum": 0,
        "maximum": 4294967295
      }
    },
    "79845": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of networks represented by this application.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/85b66/full"
        },
        "examples": [
          [
            {
              "network": "my_can_network_1"
            }
          ]
        ]
      }
    },
    "58c94": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a vmodule modeling library. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[vV][mM][oO][dD][uU][lL][eE]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "CANoeILNLVector.vmodule",
          "SomeIP_IL.vmodule",
          "AsrPDUIL2.vmodule",
          "OSEKNM01.vmodule",
          "DMOSEKNM.vmodule",
          "AsrNM30.vmodule",
          "AsrNM33.vmodule",
          "AsrUdpNm.vmodule",
          "AVB_IL.vmodule",
          "CANoeILNL_AUTOSAR_Eth.vmodule",
          "LINtp.vmodule",
          "SCC_ChargePoint.vmodule",
          "SCC_Monitor.vmodule",
          "SCC_Vehicle.vmodule",
          "path/to/my.vmodule",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "863d7": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Absolute or relative path to a vsysvar file. Relative path specifications are resolved relative to the configuration file.",
        "type": "string",
        "anyOf": [
          {
            "pattern": "^.*\\.[vV][sS][yY][sS][vV][aA][rR]$"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "path/to/my.vsysvar",
          "${path_in_variable}",
          "path/${name_in_variable}"
        ]
      }
    },
    "39ed5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "integer",
        "minimum": 0,
        "maximum": 18446744073709551615
      }
    },
    "230ce": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/4f5d5/full",
        "default": 0
      }
    },
    "20152": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/37aed/full",
        "default": 0
      }
    },
    "6b85b": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "MAC-Address of the current TcpIpStack (cannot be a multicast address)",
        "type": "string",
        "oneOf": [
          {
            "pattern": "[0-9a-fA-F][02468aceACE](:[0-9a-fA-F]{2}){5}"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": [
          "02:84:cf:3b:be:01",
          "aa:bb:cc:dd:ee:ff",
          "AA:BB:CC:DD:EE:FF"
        ]
      }
    },
    "4b907": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Configurations for IPv4.",
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration"],
            "properties": {
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "examples": ["dhcp", "static", "linked-local"],
                "oneOf": [
                  {
                    "enum": ["dhcp", "linked-local"]
                  },
                  {
                    "$ref": "#/definitions/779cd/full"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["address-configuration", "addresses"],
            "properties": {
              "addresses": {
                "$ref": "#/definitions/87cf9/full"
              },
              "address-configuration": {
                "description": "Defines how the addresses are configured. Use 'static' to configure them manually with the 'addresses' property or use 'dhcp' for automatic configuration.",
                "oneOf": [
                  {
                    "const": "static"
                  },
                  {
                    "$ref": "#/definitions/779cd/full"
                  }
                ],
                "examples": ["dhcp", "static", "linked-local"]
              }
            }
          }
        ],
        "examples": [
          {
            "address-configuration": "dhcp"
          },
          {
            "address-configuration": "static",
            "addresses": [
              {
                "address": "192.168.0.2",
                "subnet-mask": "255.255.255.0"
              },
              {
                "address": "192.168.0.3",
                "subnet-prefix-length": 24
              }
            ]
          }
        ]
      }
    },
    "5261e": {
      "local": {
        "vlan-settings": {
          "type": "object",
          "description": "Defines a VLAN with its relevant settings.",
          "additionalProperties": false,
          "required": ["id", "priority"],
          "properties": {
            "id": {
              "$comment": "reason for 4094: see https://en.wikipedia.org/wiki/IEEE_802.1Q - VLAN identifier (VID)",
              "description": "Id of the current VLAN.",
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 4094
                },
                {
                  "$ref": "#/definitions/779cd/full"
                }
              ],
              "examples": [1, 2, 3, 4, 4094]
            },
            "priority": {
              "description": "Priority of the current VLAN.",
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 7
                },
                {
                  "$ref": "#/definitions/779cd/full"
                }
              ],
              "examples": [0, 1, 2, 3, 4, 5, 6, 7]
            },
            "ipv4-settings": {
              "$ref": "#/definitions/4b907/full"
            },
            "ipv6-settings": {
              "$ref": "#/definitions/e391e/full"
            }
          }
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A list of VLANs with their relevant settings.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/5261e/local/vlan-settings"
        },
        "maxItems": 4094,
        "examples": [
          [
            {
              "id": 42,
              "priority": 0
            }
          ],
          [
            {
              "id": 24,
              "priority": 0,
              "ipv4-settings": {
                "address-configuration": "static",
                "addresses": [
                  {
                    "address": "192.168.0.2",
                    "subnet-mask": "255.255.255.0"
                  },
                  {
                    "address": "192.168.0.3",
                    "subnet-prefix-length": 24
                  }
                ]
              },
              "ipv6-settings": {
                "address-configuration": "static",
                "addresses": [
                  {
                    "address": "1234::abce",
                    "subnet-prefix-length": 42
                  },
                  {
                    "address": "1234::abcf",
                    "subnet-prefix-length": 24
                  }
                ]
              }
            }
          ]
        ]
      }
    },
    "00b39": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Configuration of a key slot node.",
        "type": "object",
        "additionalProperties": false,
        "required": ["mode"],
        "properties": {
          "mode": {
            "description": "Key slot operating modes. \n\"automatic\": The key slot is possibly active. Any active frame in the Tx buffer will be selected for this key slot, if marked as start-up and/or sync frame. \n\"off\": The key slot is not used. \n\"manual\":Explicit definition of the key slot properties.  If set to \"manual\" the properties \"usage\", \"slot\", \"mask\" and \"leading-cold-start\" are mandatory.",
            "default": "automatic",
            "oneOf": [
              {
                "const": "automatic"
              },
              {
                "const": "off"
              },
              {
                "const": "manual"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "examples": ["manual", "automatic"]
          },
          "usage": {
            "oneOf": [
              {
                "enum": ["startup", "sync"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "description": "The frame in this slot can be send as start-up or only as sync frame. Only allowed if property \"mode\" is set to \"manual\".",
            "default": "startup"
          },
          "slot": {
            "oneOf": [
              {
                "type": "integer",
                "minimum": 1,
                "maximum": 2047,
                "default": 1
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "description": "Explicit slot number of the static segment that will be used as the key slot. Only allowed if property \"mode\" is set to \"manual\"."
          },
          "mask": {
            "oneOf": [
              {
                "enum": ["A", "B", "AB"]
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "description": "Explicit channel mask used for the key slot. Only allowed if property \"mode\" is set to \"manual\".",
            "default": "A"
          },
          "leading-cold-start": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/definitions/779cd/full"
              }
            ],
            "description": "If deactivated the key slot can only act as a following start-up or integrating sync frame. Only allowed if property \"mode\" is set to \"manual\".",
            "default": true
          }
        },
        "allOf": [
          {
            "$comment": "prune-node-from-doc",
            "if": {
              "required": ["mode"],
              "properties": {
                "mode": {
                  "const": "manual"
                }
              }
            },
            "then": {
              "required": ["usage", "slot", "mask", "leading-cold-start"],
              "properties": {
                "mask": true,
                "usage": true,
                "slot": true,
                "leading-cold-start": true
              }
            }
          },
          {
            "$comment": "prune-node-from-doc",
            "if": {
              "required": ["mode"],
              "properties": {
                "mode": {
                  "anyOf": [
                    {
                      "const": "off"
                    },
                    {
                      "const": "automatic"
                    }
                  ]
                }
              }
            },
            "then": {
              "properties": {
                "usage": false,
                "slot": false,
                "mask": false,
                "leading-cold-start": false
              }
            }
          }
        ],
        "examples": [
          {
            "mode": "automatic"
          },
          {
            "mode": "manual",
            "usage": "startup",
            "slot": 2,
            "mask": "A",
            "leading-cold-start": true
          }
        ]
      }
    },
    "698c3": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Activates TCP Routing",
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "default": false
      }
    },
    "6665e": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Activates the TCP Delayed Ack Option.",
        "oneOf": [
          {
            "$ref": "#/definitions/779cd/full"
          },
          {
            "type": "boolean"
          }
        ],
        "default": true
      }
    },
    "8b747": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv4-Address of the Gateway",
        "anyOf": [
          {
            "$ref": "#/definitions/779cd/full"
          },
          {
            "$ref": "#/definitions/6f0a1/full"
          }
        ],
        "default": "0.0.0.0"
      }
    },
    "64730": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv6-Address of the Gateway",
        "anyOf": [
          {
            "$ref": "#/definitions/779cd/full"
          },
          {
            "$ref": "#/definitions/eaee8/full"
          }
        ],
        "default": "::1"
      }
    },
    "85b66": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "A network node represented by this application.",
        "type": "object",
        "additionalProperties": false,
        "required": ["network"],
        "properties": {
          "network": {
            "$ref": "#/definitions/8ab6a/full",
            "description": "Assign the simulation node to a network.",
            "examples": ["network_name"]
          },
          "tcp-ip-stack-adapter": {
            "$ref": "#/definitions/396b5/full"
          }
        },
        "examples": [
          {
            "network": "my_can_network_1"
          }
        ]
      }
    },
    "4f5d5": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "oneOf": [
          {
            "$ref": "#/definitions/779cd/full"
          },
          {
            "$ref": "#/definitions/815f9/full"
          }
        ]
      }
    },
    "37aed": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "oneOf": [
          {
            "$ref": "#/definitions/779cd/full"
          },
          {
            "$ref": "#/definitions/09338/full"
          }
        ]
      }
    },
    "87cf9": {
      "local": {
        "ipv4-subnet-mask": {
          "description": "Subnet mask of an IPv4 Address",
          "oneOf": [
            {
              "$ref": "#/definitions/6f0a1/full"
            }
          ],
          "examples": [
            "255.255.255.0",
            "255.255.0.0",
            "255.240.0.0",
            "255.0.0.0"
          ]
        },
        "ipv4-subnet-prefix-length": {
          "description": "Subnet prefix of an IPv4 Address",
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 32
            },
            {
              "$ref": "#/definitions/779cd/full"
            }
          ],
          "examples": [0, 24, 16, 12, 8, 32]
        },
        "ipv4-with-subnet": {
          "type": "object",
          "oneOf": [
            {
              "additionalProperties": false,
              "required": ["address", "subnet-mask"],
              "properties": {
                "address": {
                  "$ref": "#/definitions/6f0a1/full"
                },
                "subnet-mask": {
                  "$ref": "#/definitions/87cf9/local/ipv4-subnet-mask"
                }
              }
            },
            {
              "additionalProperties": false,
              "required": ["address", "subnet-prefix-length"],
              "properties": {
                "address": {
                  "$ref": "#/definitions/6f0a1/full"
                },
                "subnet-prefix-length": {
                  "$ref": "#/definitions/87cf9/local/ipv4-subnet-prefix-length"
                }
              }
            }
          ]
        }
      },
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of IPv4 addresses with their subnet definition",
        "type": "array",
        "items": {
          "$ref": "#/definitions/87cf9/local/ipv4-with-subnet"
        },
        "examples": [
          [
            {
              "address": "192.168.0.2",
              "subnet-mask": "255.255.255.0"
            }
          ],
          [
            {
              "address": "192.168.0.3",
              "subnet-prefix-length": 24
            }
          ]
        ]
      }
    },
    "2d92f": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "List of IPv6 addresses with their subnet definition",
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "required": ["address", "subnet-prefix-length"],
          "properties": {
            "address": {
              "$ref": "#/definitions/eaee8/full"
            },
            "subnet-prefix-length": {
              "description": "Subnetprefix of an IPv6 Address",
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 128
                },
                {
                  "$ref": "#/definitions/779cd/full"
                }
              ],
              "examples": [0, 48, 128]
            }
          }
        },
        "examples": [
          [
            {
              "address": "1234::abce",
              "subnet-prefix-length": 42
            }
          ],
          [
            {
              "address": "1234::abcf",
              "subnet-prefix-length": 24
            }
          ]
        ]
      }
    },
    "6f0a1": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "IPv4 address",
        "type": "string",
        "oneOf": [
          {
            "pattern": "((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])"
          },
          {
            "$ref": "#/definitions/779cd/full"
          }
        ],
        "examples": ["127.0.0.1", "192.168.0.0", "172.16.0.0", "10.0.0.0"]
      }
    },
    "815f9": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "integer",
        "minimum": 0,
        "maximum": 9223372036854775807
      }
    },
    "09338": {
      "full": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      }
    }
  }
}
