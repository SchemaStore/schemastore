/**
 * @section LICENSE
 *
 * The MIT License
 *
 * @copyright Copyright (c) 2017 Intel Corporation
 * @copyright Copyright (c) 2023 ApertureData Inc
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify,
 * merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */

{
  "definitions": {
    // misc

    "positiveInt": {
      "type": "integer",
      "minimum": 1
    },

    "nonNegativeInt": {
      "type": "integer",
      "minimum": 0
    },

    "nonNegativeIntArray": {
      "type": "array",
      "items": { "type": "integer", "minimum": 0 },
      "minItems": 1
    },

    "nonNegativeIntArrayBatchingRange": {
      "type": "array",
      "items": { "type": "integer", "minimum": 0 },
      "minItems": 2,
      "maxItems": 2
    },

    "positiveDouble": {
      "type": "number",
      "minimum": 0.0
    },

    "nonNegativeDouble": {
      "type": "number",
      "minimum": 0.0
    },

    "nonNegativeFraction": {
      "type": "number",
      "minimum": 0.0,
      "maximum": 1.0
    },

    "timeOffset": {
      "type": "string",
      // NOTE double-escape before the dot
      "pattern": "^(([0-9]+:)?[0-9]+:)?[0-9]+(\\.[0-9]+)?$"
    },

    "stringArray": {
      "type": "array",
      "items": { "type": "string" },
      "minimum": 1
    },

    "blob": {
      "type": "boolean"
    },

    "refInt": {
      "type": "integer",
      "minimum": 1,
      "maximum": 100000
    },

    "imgFormatString": {
      "type": "string",
      "enum": ["png", "jpg", "tif"]
    },

    "distanceMetricSpecValue": {
      "type": "string",
      "enum": ["L2", "IP", "CS"]
    },

    "distanceMetricSpecArray": {
      "type": "array",
      "items": { "$ref": "#/definitions/distanceMetricSpecValue" },
      "minimum": 1
    },

    "distanceMetricSpecValueOrArray": {
      "oneOf": [
        { "$ref": "#/definitions/distanceMetricSpecValue" },
        { "$ref": "#/definitions/distanceMetricSpecArray" }
      ]
    },

    "classificationEngineSpecValue": {
      "type": "string",
      "enum": [
        "Flat",
        "IVF",
        "HNSW",
        // backward compatiblity
        "FaissFlat",
        "FaissIVFFlat",
        "FaissHNSWFlat"
      ]
    },

    "classificationEngineSpecArray": {
      "type": "array",
      "items": { "$ref": "#/definitions/classificationEngineSpecValue" },
      "minimum": 1
    },

    "classificationEngineSpecValueOrArray": {
      "oneOf": [
        { "$ref": "#/definitions/classificationEngineSpecValue" },
        { "$ref": "#/definitions/classificationEngineSpecArray" }
      ]
    },

    "vidCodecString": {
      "type": "string",
      "enum": ["xvid", "h263", "h264"]
    },

    "vidContainerString": {
      "type": "string",
      "enum": ["mp4", "avi", "mov"]
    },

    "unitString": {
      "type": "string",
      "enum": ["frames", "seconds"]
    },

    "edgeDirectionString": {
      "type": "string",
      "enum": ["in", "out", "any"]
    },

    "sortOrder": {
      "type": "string",
      "enum": ["ascending", "descending"]
    },

    "sortBlock": {
      "type": "object",
      "properties": {
        "key": { "type": "string" },
        "order": { "$ref": "#/definitions/sortOrder" },
        "sequence": { "type": "array" }
      },
      // "order" and "sequence" are mutually exclusive
      "oneOf": [
        { "required": ["key"] },
        { "required": ["key", "order", "sequence"] }
      ],
      "additionalProperties": false
    },

    "sortArray": {
      "type": "array",
      "items": { "$ref": "#/definitions/sortBlock" }
    },

    "crudPermissions": {
      "type": "object",
      "properties": {
        "create": { "type": "boolean" },
        "read": { "type": "boolean" },
        "update": { "type": "boolean" },
        "delete": { "type": "boolean" }
      },
      "additionalProperties": false
    },

    "oneOfSort": {
      "oneOf": [
        { "type": "string" },
        { "$ref": "#/definitions/sortArray" },
        { "$ref": "#/definitions/sortBlock" }
      ]
    },

    "oneOfAgg": {
      "oneOf": [{ "type": "string" }, { "$ref": "#/definitions/stringArray" }]
    },

    "nonNegativeIntHalfRange": {
      "type": "object",
      "properties": {
        "start": { "$ref": "#/definitions/nonNegativeInt" },
        "stop": { "$ref": "#/definitions/nonNegativeInt" }
      },
      "anyOf": [
        { "required": ["start"] },
        { "required": ["stop"] },
        { "required": ["start", "stop"] }
      ],
      "additionalProperties": false
    },

    "timeOffsetHalfRange": {
      "type": "object",
      "properties": {
        "start": { "$ref": "#/definitions/timeOffset" },
        "stop": { "$ref": "#/definitions/timeOffset" }
      },
      "anyOf": [
        { "required": ["start"] },
        { "required": ["stop"] },
        { "required": ["start", "stop"] }
      ],
      "additionalProperties": false
    },

    "nonNegativeFractionHalfRange": {
      "type": "object",
      "properties": {
        "start": { "$ref": "#/definitions/nonNegativeFraction" },
        "stop": { "$ref": "#/definitions/nonNegativeFraction" }
      },
      "anyOf": [
        { "required": ["start"] },
        { "required": ["stop"] },
        { "required": ["start", "stop"] }
      ],
      "additionalProperties": false
    },

    "framesInterval": {
      "type": "object",
      "properties": {
        "start": { "$ref": "#/definitions/nonNegativeInt" },
        "stop": { "$ref": "#/definitions/nonNegativeInt" },
        "step": { "$ref": "#/definitions/positiveInt" }
      },
      "additionalProperties": false
    },

    "oneOfFrames": {
      "oneOf": [
        { "$ref": "#/definitions/nonNegativeIntArray" },
        { "$ref": "#/definitions/framesInterval" }
      ]
    },

    "schemaElementString": {
      "type": "string",
      "enum": ["entities", "connections", "both"]
    },

    "indexElementString": {
      "type": "string",
      "enum": ["entity", "connection"]
    },

    "batchEmpty": {
      "type": "object",
      "additionalProperties": false
    },

    "batchBatchesPlusId": {
      "type": "object",
      "properties": {
        "batches": { "$ref": "#/definitions/positiveInt" },
        "batch_id": { "$ref": "#/definitions/nonNegativeInt" }
      },
      "required": ["batches", "batch_id"],
      "additionalProperties": false
    },

    "batchBatchSizePlusId": {
      "type": "object",
      "properties": {
        "batch_size": { "$ref": "#/definitions/positiveInt" },
        "batch_id": { "$ref": "#/definitions/nonNegativeInt" }
      },
      "required": ["batch_size", "batch_id"],
      "additionalProperties": false
    },

    "batchRange": {
      "type": "object",
      "properties": {
        "range": { "$ref": "#/definitions/nonNegativeIntArrayBatchingRange" }
      },
      "required": ["range"],
      "additionalProperties": false
    },

    "oneOfBatch": {
      "oneOf": [
        { "$ref": "#/definitions/batchBatchesPlusId" },
        { "$ref": "#/definitions/batchBatchSizePlusId" },
        { "$ref": "#/definitions/batchRange" },
        { "$ref": "#/definitions/batchEmpty" }
      ]
    },

    "mapStringString": {
      "type": "object",
      "patternProperties": {
        ".*": { "type": "string" }
      },
      "additionalProperties": false
    },

    "distanceMetricSpec": {
      "type": "string",
      "enum": ["json", "prometheus"]
    },

    "metricLabelsArray": {
      "type": "array",
      "items": { "$ref": "#/definitions/mapStringString" }
    },

    "metric": {
      "type": "object",
      "properties": {
        "family": { "type": "string" },
        "labels": { "$ref": "#/definitions/metricLabelsArray" }
      },
      "required": ["family"],
      "additionalProperties": false
    },

    "metricArray": {
      "type": "array",
      "items": { "$ref": "#/definitions/metric" }
    },

    "cloudServiceTypeValue": {
      "type": "string",
      "enum": ["aws"]
    },

    // Blocks

    "blockConnect": {
      "type": "object",
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "direction": { "$ref": "#/definitions/edgeDirectionString" },
        "class": { "type": "string" },
        "properties": { "type": "object" },
        "constraints": { "type": "object" }
      },
      "required": ["ref"],
      "additionalProperties": false
    },

    "blockIfNotFound": {
      "oneOf": [{ "$ref": "#/definitions/refInt" }, { "type": "object" }]
    },

    "refCredNameArray": {
      "type": "array",
      "items": { "type": "string" },
      "minItems": 1
    },

    "blockGetCredName": {
      "oneOf": [
        { "$ref": "#/definitions/refCredNameArray" },
        { "type": "string" }
      ]
    },

    "blockIsConnectedToSingle": {
      "type": "object",
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "direction": { "$ref": "#/definitions/edgeDirectionString" },
        "connection_class": { "type": "string" },
        "constraints": { "type": "object" }
      },
      "required": ["ref"],
      "additionalProperties": false
    },

    "blockIsConnectedToArray": {
      "type": "array",
      "items": { "$ref": "#/definitions/blockIsConnectedToSingle" },
      "minItems": 1
    },

    "blockIsConnectedToAny": {
      "type": "object",
      "properties": {
        "any": { "$ref": "#/definitions/blockIsConnectedToArray" }
      },
      "maxProperties": 1,
      "required": ["any"],
      "additionalProperties": false
    },

    "blockIsConnectedToAll": {
      "type": "object",
      "properties": {
        "all": { "$ref": "#/definitions/blockIsConnectedToArray" }
      },
      "maxProperties": 1,
      "required": ["all"],
      "additionalProperties": false
    },

    "blockIsConnectedTo": {
      "oneOf": [
        { "$ref": "#/definitions/blockIsConnectedToSingle" },
        { "$ref": "#/definitions/blockIsConnectedToAny" },
        { "$ref": "#/definitions/blockIsConnectedToAll" }
      ]
    },

    "blockResults": {
      "type": "object",
      "properties": {
        "list": { "$ref": "#/definitions/stringArray" },
        "group": { "$ref": "#/definitions/stringArray" },
        "all_properties": { "type": "boolean" },
        "sum": { "$ref": "#/definitions/oneOfAgg" },
        "min": { "$ref": "#/definitions/oneOfAgg" },
        "max": { "$ref": "#/definitions/oneOfAgg" },
        "avg": { "$ref": "#/definitions/oneOfAgg" },
        "average": { "$ref": "#/definitions/oneOfAgg" },
        "count": { "type": "boolean" },
        "groupby": { "type": "string" },
        "limit": { "$ref": "#/definitions/positiveInt" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "group_by_source": { "type": "boolean" },
        "uniqueids": { "type": "boolean" }
      },
      // "list" and "all_properties" are mutually exclusive
      "oneOf": [{}, { "required": ["list", "all_properties"] }],
      "additionalProperties": false
    },

    "blockImageOperations": {
      "type": "array",
      "minItems": 1,
      "items": {
        "anyOf": [
          { "$ref": "#/definitions/operationThreshold" },
          { "$ref": "#/definitions/operationResize" },
          { "$ref": "#/definitions/operationCrop" },
          { "$ref": "#/definitions/operationFlip" },
          { "$ref": "#/definitions/operationRotate" }
        ]
      },
      "uniqueItems": false
    },

    "blockVideoOperations": {
      "type": "array",
      "minItems": 1,
      "items": {
        "anyOf": [
          { "$ref": "#/definitions/operationThreshold" },
          { "$ref": "#/definitions/operationResize" },
          { "$ref": "#/definitions/operationCrop" },
          { "$ref": "#/definitions/operationInterval" },
          { "$ref": "#/definitions/operationPreview" }
        ]
      },
      "uniqueItems": false
    },

    "blockFrameOperations": {
      "type": "array",
      "minItems": 1,
      "items": {
        "anyOf": [
          { "$ref": "#/definitions/operationThreshold" },
          { "$ref": "#/definitions/operationResize" },
          { "$ref": "#/definitions/operationCrop" },
          { "$ref": "#/definitions/operationFlip" },
          { "$ref": "#/definitions/operationRotate" },
          { "$ref": "#/definitions/operationInterval" }
        ]
      },
      "uniqueItems": false
    },

    // Operations

    "operationPreview": {
      "type": "object",
      "properties": {
        "type": { "enum": ["preview"] },
        "max_frame_count": { "$ref": "#/definitions/nonNegativeInt" },
        "max_time_fraction": { "$ref": "#/definitions/nonNegativeFraction" },
        "max_time_offset": { "$ref": "#/definitions/timeOffset" },
        "max_size_mb": { "$ref": "#/definitions/positiveDouble" }
      },
      "anyOf": [
        { "required": ["type", "max_frame_count"] },
        { "required": ["type", "max_time_fraction"] },
        { "required": ["type", "max_time_offset"] },
        { "required": ["type", "max_size_mb"] }
      ],
      "additionalProperties": false
    },

    "operationInterval": {
      "type": "object",
      "properties": {
        "type": { "enum": ["interval"] },
        "start": { "$ref": "#/definitions/nonNegativeInt" },
        "stop": { "$ref": "#/definitions/nonNegativeInt" },
        "step": { "$ref": "#/definitions/positiveInt" }
      },
      "required": ["type", "start", "stop"],
      "additionalProperties": false
    },

    "operationThreshold": {
      "type": "object",
      "properties": {
        "type": { "enum": ["threshold"] },
        "value": { "$ref": "#/definitions/nonNegativeInt" }
      },
      "required": ["type", "value"],
      "additionalProperties": false
    },

    "operationResize": {
      "type": "object",
      "properties": {
        "type": { "enum": ["resize"] },
        "scale": { "$ref": "#/definitions/positiveDouble" },
        "height": { "$ref": "#/definitions/positiveInt" },
        "width": { "$ref": "#/definitions/positiveInt" }
      },
      "anyOf": [
        { "required": ["type", "width"] },
        { "required": ["type", "height"] },
        { "required": ["type", "scale"] },
        { "required": ["type", "height", "width"] }
      ],
      "additionalProperties": false
    },

    "operationCrop": {
      "type": "object",
      "properties": {
        "type": { "enum": ["crop"] },
        "x": { "$ref": "#/definitions/nonNegativeInt" },
        "y": { "$ref": "#/definitions/nonNegativeInt" },
        "height": { "$ref": "#/definitions/positiveInt" },
        "width": { "$ref": "#/definitions/positiveInt" }
      },
      "required": ["type", "x", "y", "height", "width"],
      "additionalProperties": false
    },

    "operationFlip": {
      "type": "object",
      "properties": {
        "type": { "enum": ["flip"] },
        "code": { "type": "integer" }
      },
      "required": ["type", "code"],
      "additionalProperties": false
    },

    "operationRotate": {
      "type": "object",
      "properties": {
        "type": { "enum": ["rotate"] },
        "angle": { "type": "number" },
        "resize": { "type": "boolean" }
      },
      "required": ["type", "angle", "resize"],
      "additionalProperties": false
    },

    // Shapes

    "shapeRectangle": {
      "type": "object",
      "properties": {
        "x": { "$ref": "#/definitions/nonNegativeInt" },
        "y": { "$ref": "#/definitions/nonNegativeInt" },
        "width": { "$ref": "#/definitions/positiveInt" },
        "height": { "$ref": "#/definitions/positiveInt" }
      },
      "required": ["x", "y", "width", "height"],
      "additionalProperties": false
    },

    "shapeVertex": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "type": "number"
      }
    },

    "shapePolygon": {
      "type": "array",
      "minItems": 3,
      "items": { "$ref": "#/definitions/shapeVertex" }
    },

    "shapePolygonCollection": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/definitions/shapePolygon" }
    },

    // Top-Level Commands (needed for the Schema Check)

    "AuthenticateTop": {
      "properties": {
        "Authenticate": {
          "type": "object",
          "$ref": "#/definitions/Authenticate"
        }
      },
      "additionalProperties": false
    },

    "GenerateTokenTop": {
      "properties": {
        "GenerateToken": {
          "type": "object",
          "$ref": "#/definitions/GenerateToken"
        }
      },
      "additionalProperties": false
    },

    "RefreshTokenTop": {
      "properties": {
        "RefreshToken": {
          "type": "object",
          "$ref": "#/definitions/RefreshToken"
        }
      },
      "additionalProperties": false
    },

    "GetUserDetailsTop": {
      "properties": {
        "GetUserDetails": {
          "type": "object",
          "$ref": "#/definitions/GetUserDetails"
        }
      },
      "additionalProperties": false
    },

    "CreateUserTop": {
      "properties": {
        "CreateUser": { "type": "object", "$ref": "#/definitions/CreateUser" }
      },
      "additionalProperties": false
    },

    "UpdateUserTop": {
      "properties": {
        "UpdateUser": { "type": "object", "$ref": "#/definitions/UpdateUser" }
      },
      "additionalProperties": false
    },

    "RemoveUserTop": {
      "properties": {
        "RemoveUser": { "type": "object", "$ref": "#/definitions/RemoveUser" }
      },
      "additionalProperties": false
    },

    "CreateRoleTop": {
      "properties": {
        "CreateRole": { "type": "object", "$ref": "#/definitions/CreateRole" }
      },
      "additionalProperties": false
    },

    "UpdateRoleTop": {
      "properties": {
        "UpdateRole": { "type": "object", "$ref": "#/definitions/UpdateRole" }
      },
      "additionalProperties": false
    },

    "RemoveRoleTop": {
      "properties": {
        "RemoveRole": { "type": "object", "$ref": "#/definitions/RemoveRole" }
      },
      "additionalProperties": false
    },

    "GetUsersTop": {
      "properties": {
        "GetUsers": { "type": "object", "$ref": "#/definitions/GetUsers" }
      },
      "additionalProperties": false
    },

    "GetRolesTop": {
      "properties": {
        "GetRoles": { "type": "object", "$ref": "#/definitions/GetRoles" }
      },
      "additionalProperties": false
    },

    "CreateCredentialTop": {
      "properties": {
        "CreateCredential": {
          "type": "object",
          "$ref": "#/definitions/CreateCredential"
        }
      },
      "additionalProperties": false
    },

    "GetCredentialsTop": {
      "properties": {
        "GetCredentials": {
          "type": "object",
          "$ref": "#/definitions/GetCredentials"
        }
      },
      "additionalProperties": false
    },

    "UpdateCredentialTop": {
      "properties": {
        "UpdateCredential": {
          "type": "object",
          "$ref": "#/definitions/UpdateCredential"
        }
      },
      "additionalProperties": false
    },

    "RemoveCredentialTop": {
      "properties": {
        "RemoveCredential": {
          "type": "object",
          "$ref": "#/definitions/RemoveCredential"
        }
      },
      "additionalProperties": false
    },

    "GetStatusTop": {
      "properties": {
        "GetStatus": { "type": "object", "$ref": "#/definitions/GetStatus" }
      },
      "additionalProperties": false
    },

    "GetSchemaTop": {
      "properties": {
        "GetSchema": { "type": "object", "$ref": "#/definitions/GetSchema" }
      },
      "additionalProperties": false
    },

    "GetMetricsTop": {
      "properties": {
        "GetMetrics": { "type": "object", "$ref": "#/definitions/GetMetrics" }
      },
      "additionalProperties": false
    },

    "AddEntityTop": {
      "properties": {
        "AddEntity": { "type": "object", "$ref": "#/definitions/AddEntity" }
      },
      "additionalProperties": false
    },

    "FindEntityTop": {
      "properties": {
        "FindEntity": { "type": "object", "$ref": "#/definitions/FindEntity" }
      },
      "additionalProperties": false
    },

    "UpdateEntityTop": {
      "properties": {
        "UpdateEntity": {
          "type": "object",
          "$ref": "#/definitions/UpdateEntity"
        }
      },
      "additionalProperties": false
    },

    "DeleteEntityTop": {
      "properties": {
        "DeleteEntity": {
          "type": "object",
          "$ref": "#/definitions/DeleteEntity"
        }
      },
      "additionalProperties": false
    },

    "AddBlobTop": {
      "properties": {
        "AddBlob": { "type": "object", "$ref": "#/definitions/AddBlob" }
      },
      "additionalProperties": false
    },

    "FindBlobTop": {
      "properties": {
        "FindBlob": { "type": "object", "$ref": "#/definitions/FindBlob" }
      },
      "additionalProperties": false
    },

    "UpdateBlobTop": {
      "properties": {
        "UpdateBlob": { "type": "object", "$ref": "#/definitions/UpdateBlob" }
      },
      "additionalProperties": false
    },

    "DeleteBlobTop": {
      "properties": {
        "DeleteBlob": { "type": "object", "$ref": "#/definitions/DeleteBlob" }
      },
      "additionalProperties": false
    },

    "AddConnectionTop": {
      "properties": {
        "AddConnection": {
          "type": "object",
          "$ref": "#/definitions/AddConnection"
        }
      },
      "additionalProperties": false
    },

    "UpdateConnectionTop": {
      "properties": {
        "UpdateConnection": {
          "type": "object",
          "$ref": "#/definitions/UpdateConnection"
        }
      },
      "additionalProperties": false
    },
    "DeleteConnectionTop": {
      "properties": {
        "DeleteConnection": {
          "type": "object",
          "$ref": "#/definitions/DeleteConnection"
        }
      },
      "additionalProperties": false
    },

    "FindConnectionTop": {
      "properties": {
        "FindConnection": {
          "type": "object",
          "$ref": "#/definitions/FindConnection"
        }
      },
      "additionalProperties": false
    },

    "AddImageTop": {
      "properties": {
        "AddImage": { "type": "object", "$ref": "#/definitions/AddImage" }
      },
      "additionalProperties": false
    },

    "UpdateImageTop": {
      "properties": {
        "UpdateImage": { "type": "object", "$ref": "#/definitions/UpdateImage" }
      },
      "additionalProperties": false
    },

    "FindImageTop": {
      "properties": {
        "FindImage": { "type": "object", "$ref": "#/definitions/FindImage" }
      },
      "additionalProperties": false
    },

    "DeleteImageTop": {
      "properties": {
        "DeleteImage": { "type": "object", "$ref": "#/definitions/DeleteImage" }
      },
      "additionalProperties": false
    },

    "AddDescriptorTop": {
      "properties": {
        "AddDescriptor": {
          "type": "object",
          "$ref": "#/definitions/AddDescriptor"
        }
      },
      "additionalProperties": false
    },

    "AddDescriptorSetTop": {
      "properties": {
        "AddDescriptorSet": {
          "type": "object",
          "$ref": "#/definitions/AddDescriptorSet"
        }
      },
      "additionalProperties": false
    },

    "FindDescriptorSetTop": {
      "properties": {
        "FindDescriptorSet": {
          "type": "object",
          "$ref": "#/definitions/FindDescriptorSet"
        }
      },
      "additionalProperties": false
    },

    "UpdateDescriptorSetTop": {
      "properties": {
        "UpdateDescriptorSet": {
          "type": "object",
          "$ref": "#/definitions/UpdateDescriptorSet"
        }
      },
      "additionalProperties": false
    },

    "DeleteDescriptorSetTop": {
      "properties": {
        "DeleteDescriptorSet": {
          "type": "object",
          "$ref": "#/definitions/DeleteDescriptorSet"
        }
      },
      "additionalProperties": false
    },

    "FindDescriptorTop": {
      "properties": {
        "FindDescriptor": {
          "type": "object",
          "$ref": "#/definitions/FindDescriptor"
        }
      },
      "additionalProperties": false
    },

    "FindDescriptorBatchTop": {
      "properties": {
        "FindDescriptorBatch": {
          "type": "object",
          "$ref": "#/definitions/FindDescriptorBatch"
        }
      },
      "additionalProperties": false
    },

    "UpdateDescriptorTop": {
      "properties": {
        "UpdateDescriptor": {
          "type": "object",
          "$ref": "#/definitions/UpdateDescriptor"
        }
      },
      "additionalProperties": false
    },

    "DeleteDescriptorTop": {
      "properties": {
        "DeleteDescriptor": {
          "type": "object",
          "$ref": "#/definitions/DeleteDescriptor"
        }
      },
      "additionalProperties": false
    },

    "AddBoundingBoxTop": {
      "properties": {
        "AddBoundingBox": {
          "type": "object",
          "$ref": "#/definitions/AddBoundingBox"
        }
      },
      "additionalProperties": false
    },

    "UpdateBoundingBoxTop": {
      "properties": {
        "UpdateBoundingBox": {
          "type": "object",
          "$ref": "#/definitions/UpdateBoundingBox"
        }
      },
      "additionalProperties": false
    },

    "FindBoundingBoxTop": {
      "properties": {
        "FindBoundingBox": {
          "type": "object",
          "$ref": "#/definitions/FindBoundingBox"
        }
      },
      "additionalProperties": false
    },

    "DeleteBoundingBoxTop": {
      "properties": {
        "DeleteBoundingBox": {
          "type": "object",
          "$ref": "#/definitions/DeleteBoundingBox"
        }
      },
      "additionalProperties": false
    },

    "AddPolygonTop": {
      "properties": {
        "AddPolygon": { "type": "object", "$ref": "#/definitions/AddPolygon" }
      },
      "additionalProperties": false
    },

    "UpdatePolygonTop": {
      "properties": {
        "UpdatePolygon": {
          "type": "object",
          "$ref": "#/definitions/UpdatePolygon"
        }
      },
      "additionalProperties": false
    },

    "FindPolygonTop": {
      "properties": {
        "FindPolygon": { "type": "object", "$ref": "#/definitions/FindPolygon" }
      },
      "additionalProperties": false
    },

    "DeletePolygonTop": {
      "properties": {
        "DeletePolygon": {
          "type": "object",
          "$ref": "#/definitions/DeletePolygon"
        }
      },
      "additionalProperties": false
    },

    "AddVideoTop": {
      "properties": {
        "AddVideo": { "type": "object", "$ref": "#/definitions/AddVideo" }
      },
      "additionalProperties": false
    },

    "UpdateVideoTop": {
      "properties": {
        "UpdateVideo": { "type": "object", "$ref": "#/definitions/UpdateVideo" }
      },
      "additionalProperties": false
    },

    "FindVideoTop": {
      "properties": {
        "FindVideo": { "type": "object", "$ref": "#/definitions/FindVideo" }
      },
      "additionalProperties": false
    },

    "DeleteVideoTop": {
      "properties": {
        "DeleteVideo": { "type": "object", "$ref": "#/definitions/DeleteVideo" }
      },
      "additionalProperties": false
    },

    "AddFrameTop": {
      "properties": {
        "AddFrame": { "type": "object", "$ref": "#/definitions/AddFrame" }
      },
      "additionalProperties": false
    },

    "UpdateFrameTop": {
      "properties": {
        "UpdateFrame": { "type": "object", "$ref": "#/definitions/UpdateFrame" }
      },
      "additionalProperties": false
    },

    "FindFrameTop": {
      "properties": {
        "FindFrame": { "type": "object", "$ref": "#/definitions/FindFrame" }
      },
      "additionalProperties": false
    },

    "DeleteFrameTop": {
      "properties": {
        "DeleteFrame": { "type": "object", "$ref": "#/definitions/DeleteFrame" }
      },
      "additionalProperties": false
    },

    "ExtractFramesTop": {
      "properties": {
        "ExtractFrames": {
          "type": "object",
          "$ref": "#/definitions/ExtractFrames"
        }
      },
      "additionalProperties": false
    },

    "ClassifyDescriptorTop": {
      "properties": {
        "ClassifyDescriptor": {
          "type": "object",
          "$ref": "#/definitions/ClassifyDescriptor"
        }
      },
      "additionalProperties": false
    },

    "RegionIoUTop": {
      "properties": {
        "RegionIoU": { "type": "object", "$ref": "#/definitions/RegionIoU" }
      },
      "additionalProperties": false
    },

    "CreateIndexTop": {
      "properties": {
        "CreateIndex": { "type": "object", "$ref": "#/definitions/CreateIndex" }
      },
      "additionalProperties": false
    },

    "RemoveIndexTop": {
      "properties": {
        "RemoveIndex": { "type": "object", "$ref": "#/definitions/RemoveIndex" }
      },
      "additionalProperties": false
    },

    // Commands

    "Authenticate": {
      "properties": {
        "username": { "type": "string" },
        "password": { "type": "string" },
        "token": { "type": "string" }
      },
      "anyOf": [
        { "required": ["username", "password"] },
        { "required": ["username", "token"] }
      ],
      "additionalProperties": false
    },

    "GenerateToken": {
      "properties": {},
      "additionalProperties": false
    },

    "RefreshToken": {
      "properties": {
        "refresh_token": { "type": "string" }
      },
      "required": ["refresh_token"],
      "additionalProperties": false
    },

    "GetUserDetails": {
      "properties": {
        "username": { "type": "string" }
      },
      "required": ["username"],
      "additionalProperties": false
    },

    "CreateUser": {
      "properties": {
        "username": { "type": "string" },
        "password": { "type": "string" },
        "roles": { "$ref": "#/definitions/stringArray" },
        "email": { "type": "string" }
      },
      "required": ["username", "password", "roles"],
      "additionalProperties": false
    },

    "UpdateUser": {
      "properties": {
        "username": { "type": "string" },
        "password": { "type": "string" },
        "add_roles": { "$ref": "#/definitions/stringArray" },
        "remove_roles": { "$ref": "#/definitions/stringArray" },
        "add_tokens": { "$ref": "#/definitions/stringArray" },
        "remove_tokens": { "$ref": "#/definitions/stringArray" },
        "email": { "type": "string" }
      },
      "required": ["username"],
      "additionalProperties": false
    },

    "RemoveUser": {
      "properties": {
        "username": { "type": "string" }
      },
      "required": ["username"],
      "additionalProperties": false
    },

    "CreateRole": {
      "properties": {
        "name": { "type": "string" },
        "objects": { "$ref": "#/definitions/crudPermissions" },
        "indexes": { "$ref": "#/definitions/crudPermissions" },
        "access_control": { "$ref": "#/definitions/crudPermissions" }
      },
      "required": ["name"],
      "additionalProperties": false
    },

    "UpdateRole": {
      "properties": {
        "name": { "type": "string" },
        "objects": { "$ref": "#/definitions/crudPermissions" },
        "indexes": { "$ref": "#/definitions/crudPermissions" },
        "access_control": { "$ref": "#/definitions/crudPermissions" }
      },
      "required": ["name"],
      "additionalProperties": false
    },

    "RemoveRole": {
      "properties": {
        "name": { "type": "string" }
      },
      "required": ["name"],
      "additionalProperties": false
    },

    "GetUsers": {
      "properties": {
        "users": { "$ref": "#/definitions/stringArray" },
        "roles": { "type": "boolean" },
        "emails": { "type": "boolean" },
        "tokens": { "type": "boolean" }
      },
      "additionalProperties": false
    },

    "GetRoles": {
      "properties": {
        "roles": { "$ref": "#/definitions/stringArray" },
        "objects": { "type": "boolean" },
        "indexes": { "type": "boolean" },
        "access_control": { "type": "boolean" }
      },
      "additionalProperties": false
    },

    "CreateCredential": {
      "properties": {
        "name": { "type": "string" },
        "service": { "$ref": "#/definitions/cloudServiceTypeValue" },
        "access_key": { "type": "string" },
        "secret_access_key": { "type": "string" },
        "resources": { "$ref": "#/definitions/stringArray" }
      },
      "required": [
        "name",
        "service",
        "access_key",
        "secret_access_key",
        "resources"
      ],
      "additionalProperties": false
    },

    "GetCredentials": {
      "properties": {
        "name": { "$ref": "#/definitions/blockGetCredName" }
      },
      "additionalProperties": false
    },

    "UpdateCredential": {
      "properties": {
        "name": { "type": "string" },
        "access_key": { "type": "string" },
        "secret_access_key": { "type": "string" },
        "add_resources": { "$ref": "#/definitions/stringArray" },
        "remove_resources": { "$ref": "#/definitions/stringArray" }
      },
      "required": ["name"],
      "additionalProperties": false
    },

    "RemoveCredential": {
      "properties": {
        "name": { "type": "string" }
      },
      "required": ["name"],
      "additionalProperties": false
    },

    "GetStatus": {
      "properties": {
        "all": { "type": "boolean" },
        "connection_count": { "type": "boolean" },
        "cpu_utilization": { "type": "boolean" },
        "memory_utilization": { "type": "boolean" },
        "memory_utilization_gb": { "type": "boolean" },
        "moving_average": { "type": "boolean" },
        "queries_entered": { "type": "boolean" },
        "queries_exited": { "type": "boolean" },
        "queries_queued": { "type": "boolean" },
        "queries_running": { "type": "boolean" },
        "utime_sec": { "type": "boolean" },
        "virtual_memory_utilization_gb": { "type": "boolean" }
      },
      "additionalProperties": false
    },

    "GetSchema": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "type": { "$ref": "#/definitions/schemaElementString" },
        "refresh": { "type": "boolean" }
      },
      "additionalProperties": false
    },

    "GetMetrics": {
      "properties": {
        "format": { "$ref": "#/definitions/distanceMetricSpec" },
        "metrics": { "$ref": "#/definitions/metricArray" }
      },
      "additionalProperties": false
    },

    // Entity Commands

    "AddEntity": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "class": { "type": "string" },
        "properties": { "type": "object" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "connect": { "$ref": "#/definitions/blockConnect" }
      },
      "required": ["class"],
      "additionalProperties": false
    },

    "FindEntity": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "with_class": { "type": "string" },
        "unique": { "type": "boolean" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "results": { "$ref": "#/definitions/blockResults" },
        "group_by_source": { "type": "boolean" },
        "uniqueids": { "type": "boolean" }
      },
      "anyOf": [{ "required": ["_ref"] }, { "required": ["results"] }],
      "additionalProperties": false
    },

    "UpdateEntity": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "with_class": { "type": "string" },
        "constraints": { "type": "object" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" }
      },
      "anyOf": [
        { "required": ["ref"] },
        { "required": ["with_class"] },
        { "required": ["constraints"] }
      ],
      "additionalProperties": false
    },

    "DeleteEntity": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "with_class": { "type": "string" },
        "constraints": { "type": "object" }
      },
      "anyOf": [
        { "required": ["ref"] },
        { "required": ["with_class"] },
        { "required": ["constraints"] }
      ],
      "additionalProperties": false
    },

    // Connection Commands

    "AddConnection": {
      "properties": {
        "class": { "type": "string" },
        "src": { "$ref": "#/definitions/refInt" },
        "dst": { "$ref": "#/definitions/refInt" },
        "properties": { "type": "object" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" }
      },
      "required": ["class", "src", "dst"],
      "additionalProperties": false
    },

    "FindConnection": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "with_class": { "type": "string" },
        "unique": { "type": "boolean" },
        "src": { "$ref": "#/definitions/refInt" },
        "dst": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "results": { "type": "object" },
        "uniqueids": { "type": "boolean" }
      },
      "anyOf": [{ "required": ["_ref"] }, { "required": ["results"] }],
      "additionalProperties": false
    },

    "UpdateConnection": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "with_class": { "type": "string" },
        "constraints": { "type": "object" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" }
      },
      "anyOf": [
        { "required": ["ref"] },
        { "required": ["with_class"] },
        { "required": ["constraints"] }
      ],
      "additionalProperties": false
    },

    "DeleteConnection": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "with_class": { "type": "string" },
        "constraints": { "type": "object" }
      },
      "anyOf": [
        { "required": ["ref"] },
        { "required": ["with_class"] },
        { "required": ["constraints"] }
      ],
      "additionalProperties": false
    },

    // Blob Commands

    "AddBlob": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "url": { "type": "string" },
        "properties": { "type": "object" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "connect": { "$ref": "#/definitions/blockConnect" }
      },
      "additionalProperties": false
    },

    "FindBlob": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "blobs": { "type": "boolean" },
        "uniqueids": { "type": "boolean" },
        "urls": { "type": "boolean" },
        "with_url": { "type": "string" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "results": { "$ref": "#/definitions/blockResults" }
      },
      "additionalProperties": false
    },

    "UpdateBlob": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "DeleteBlob": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    // Image Commands

    "AddImage": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "format": { "$ref": "#/definitions/imgFormatString" },
        "url": { "type": "string" },
        "properties": { "type": "object" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "connect": { "$ref": "#/definitions/blockConnect" },
        "operations": { "$ref": "#/definitions/blockImageOperations" }
      },
      "additionalProperties": false
    },

    "FindImage": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "blobs": { "type": "boolean" },
        "uniqueids": { "type": "boolean" },
        "urls": { "type": "boolean" },
        "with_url": { "type": "string" },
        "as_format": { "$ref": "#/definitions/imgFormatString" },
        "operations": { "$ref": "#/definitions/blockImageOperations" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "results": { "$ref": "#/definitions/blockResults" }
      },
      "additionalProperties": false
    },

    "UpdateImage": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" },
        "operations": { "$ref": "#/definitions/blockImageOperations" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "DeleteImage": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    // DescriptorSet Commands

    "AddDescriptorSet": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "name": { "type": "string" },
        "dimensions": { "$ref": "#/definitions/positiveInt" },

        // These two end with 'ValueOrArray' to emphaisize they can be any of
        // the two, unlike 'FindDescriptor' for which only single value can be
        // provided. I insist on using 'Value', 'Array' and 'ValueOrArray' for
        // ClassificationEngine and DistanceMetric parameters.
        "engine": {
          "$ref": "#/definitions/classificationEngineSpecValueOrArray"
        },
        "metric": { "$ref": "#/definitions/distanceMetricSpecValueOrArray" },

        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "properties": { "type": "object" },
        "connect": { "$ref": "#/definitions/blockConnect" },

        // Undocumented feature.
        // The search index consists multiple segment (faiss or whatever) indexes
        // This value dictates approximately the size of each index, the
        // default value is 1M. If the number of segments is bounded above by
        // max_segments therefore if we have more segments than the upper bound
        // we merge the segments.
        "segment_size": { "$ref": "#/definitions/positiveInt" },
        "max_segments": { "$ref": "#/definitions/positiveInt" },
        "engine_params": { "type": "object" }
      },
      "required": ["name", "dimensions"],
      "additionalProperties": false
    },

    "FindDescriptorSet": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "with_name": { "type": "string" },
        "unique": { "type": "boolean" },
        "engines": { "type": "boolean" },
        "metrics": { "type": "boolean" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "results": { "$ref": "#/definitions/blockResults" },
        "uniqueids": { "type": "boolean" },
        "dimensions": { "type": "boolean" },
        "counts": { "type": "boolean" }
      },
      "anyOf": [
        { "required": ["_ref"] },
        { "required": ["uniqueids"] },
        { "required": ["metrics"] },
        { "required": ["engines"] },
        { "required": ["results"] },
        { "required": ["dimensions"] },
        { "required": ["counts"] }
      ],
      "additionalProperties": false
    },

    "UpdateDescriptorSet": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "with_name": { "type": "string" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" },
        "engine": {
          "$ref": "#/definitions/classificationEngineSpecValueOrArray"
        },
        "metric": { "$ref": "#/definitions/distanceMetricSpecValueOrArray" },
        "segment_size": { "$ref": "#/definitions/positiveInt" },
        "max_segments": { "$ref": "#/definitions/positiveInt" },
        "build_index": { "type": "boolean" },
        "engine_params": { "type": "object" }
      },
      "anyOf": [
        { "required": ["ref"] },
        { "required": ["constraints"] },
        { "required": ["with_name"] }
      ],
      "additionalProperties": false
    },

    "DeleteDescriptorSet": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "with_name": { "type": "string" }
      },
      "anyOf": [
        { "required": ["ref"] },
        { "required": ["constraints"] },
        { "required": ["with_name"] }
      ],
      "additionalProperties": false
    },

    // Descriptor Commands

    "AddDescriptor": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "set": { "type": "string" },
        "label": { "type": "string" },
        "properties": { "type": "object" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "connect": { "$ref": "#/definitions/blockConnect" }
      },
      "required": ["set"],
      "additionalProperties": false
    },

    "FindDescriptor": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "set": { "type": "string" },

        // These two end with 'Value' to emphaisize they are not possibly arrays
        // as in 'AddDescriptorSet'. They could have ended with just 'Spec', but
        // that would be less clear. I insist on using 'Value' and 'Array' for
        // ClassificationEngine and DistanceMetric parameters.
        "engine": { "$ref": "#/definitions/classificationEngineSpecValue" },
        "metric": { "$ref": "#/definitions/distanceMetricSpecValue" },

        "k_neighbors": { "$ref": "#/definitions/positiveInt" },
        "knn_first": { "type": "boolean" },
        "labels": { "type": "boolean" },
        "distances": { "type": "boolean" },
        "indexed_results_only": { "type": "boolean" },
        "blobs": { "type": "boolean" },
        "uniqueids": { "type": "boolean" },
        "with_label": { "type": "string" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "results": { "$ref": "#/definitions/blockResults" }
      },
      "additionalProperties": false
    },

    "FindDescriptorBatch": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "set": { "type": "string" },

        // These two end with 'Value' to emphaisize they are not possibly arrays
        // as in 'AddDescriptorSet'. They could have ended with just 'Spec', but
        // that would be less clear. I insist on using 'Value' and 'Array' for
        // ClassificationEngine and DistanceMetric parameters.
        "engine": { "$ref": "#/definitions/classificationEngineSpecValue" },
        "metric": { "$ref": "#/definitions/distanceMetricSpecValue" },

        "n_descriptors": { "$ref": "#/definitions/positiveInt" },
        "k_neighbors": { "$ref": "#/definitions/positiveInt" },
        "knn_first": { "type": "boolean" },
        "labels": { "type": "boolean" },
        "distances": { "type": "boolean" },
        "indexed_results_only": { "type": "boolean" },
        "blobs": { "type": "boolean" },
        "uniqueids": { "type": "boolean" },
        "with_label": { "type": "string" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "results": { "$ref": "#/definitions/blockResults" }
      },
      "required": ["set", "n_descriptors"],
      "additionalProperties": false
    },

    "UpdateDescriptor": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" },
        "label": { "type": "string" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "DeleteDescriptor": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "set": { "type": "string" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "AddBoundingBox": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "image_ref": { "$ref": "#/definitions/refInt" },
        "properties": { "type": "object" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "connect": { "$ref": "#/definitions/blockConnect" },
        "label": { "type": "string" },
        "rectangle": { "$ref": "#/definitions/shapeRectangle" }
      },
      "required": ["rectangle", "image_ref"],
      "additionalProperties": false
    },

    "FindBoundingBox": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "image_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "constraints": { "type": "object" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "in_rectangle": { "$ref": "#/definitions/shapeRectangle" },
        "with_label": { "type": "string" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "results": { "$ref": "#/definitions/blockResults" },
        "as_format": { "$ref": "#/definitions/imgFormatString" },
        "blobs": { "type": "boolean" },
        "coordinates": { "type": "boolean" },
        "labels": { "type": "boolean" },
        "uniqueids": { "type": "boolean" },
        "areas": { "type": "boolean" }
      },
      // Either image_ref OR link are present, or none of them
      // Both image_ref AND link do not work at this time.
      "not": {
        "anyOf": [{ "required": ["image_ref", "is_connected_to"] }]
      },
      "additionalProperties": false
    },

    "UpdateBoundingBox": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "properties": { "type": "object" },
        "label": { "type": "string" },
        "rectangle": { "$ref": "#/definitions/shapeRectangle" },
        "remove_props": { "$ref": "#/definitions/stringArray" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "DeleteBoundingBox": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "AddPolygon": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "image_ref": { "$ref": "#/definitions/refInt" },
        "properties": { "type": "object" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "connect": { "$ref": "#/definitions/blockConnect" },
        "label": { "type": "string" },
        "polygons": { "$ref": "#/definitions/shapePolygonCollection" }
      },
      "required": ["polygons", "image_ref"],
      "additionalProperties": false
    },

    "FindPolygon": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "image_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "in_rectangle": { "$ref": "#/definitions/shapeRectangle" },
        "with_label": { "type": "string" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "results": { "$ref": "#/definitions/blockResults" },
        "as_format": { "$ref": "#/definitions/imgFormatString" },
        "blobs": { "type": "boolean" },
        "bounds": { "type": "boolean" },
        "hulls": { "type": "boolean" },
        "vertices": { "type": "boolean" },
        "decompositions": { "type": "boolean" },
        "areas": { "type": "boolean" },
        "labels": { "type": "boolean" },
        "uniqueids": { "type": "boolean" }
      },
      // Either image_ref OR link are present, or none of them
      // Both image_ref AND link do not work at this time.
      "not": {
        "anyOf": [{ "required": ["image_ref", "is_connected_to"] }]
      },
      "additionalProperties": false
    },

    "UpdatePolygon": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" },
        "properties": { "type": "object" },
        "label": { "type": "string" },
        "polygons": { "$ref": "#/definitions/shapePolygonCollection" },
        "remove_props": { "$ref": "#/definitions/stringArray" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "DeletePolygon": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "AddVideo": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "url": { "type": "string" },
        "properties": { "type": "object" },
        "connect": { "$ref": "#/definitions/blockConnect" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" },
        "codec": { "$ref": "#/definitions/vidCodecString" },
        "container": { "$ref": "#/definitions/vidContainerString" },
        "index_frames": { "type": "boolean" },
        "operations": { "$ref": "#/definitions/blockVideoOperations" }
      },
      "additionalProperties": false
    },

    "FindVideo": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "as_codec": { "$ref": "#/definitions/vidCodecString" },
        "as_container": { "$ref": "#/definitions/vidContainerString" },
        "blobs": { "type": "boolean" },
        "uniqueids": { "type": "boolean" },
        "urls": { "type": "boolean" },
        "with_url": { "type": "string" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "sort": { "$ref": "#/definitions/oneOfSort" },
        "offset": { "type": "integer" },
        "limit": { "type": "integer" },
        "results": { "$ref": "#/definitions/blockResults" },
        "operations": { "$ref": "#/definitions/blockVideoOperations" }
      },
      "additionalProperties": false
    },

    "UpdateVideo": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" },
        "constraints": { "type": "object" },
        "codec": { "$ref": "#/definitions/vidCodecString" },
        "operations": { "$ref": "#/definitions/blockVideoOperations" }
      },
      "additionalProperties": false
    },

    "DeleteVideo": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" }
      },
      "anyOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "AddFrame": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "video_ref": { "$ref": "#/definitions/refInt" },
        "frame_number": { "$ref": "#/definitions/nonNegativeInt" },
        "time_fraction": { "$ref": "#/definitions/nonNegativeFraction" },
        "time_offset": { "$ref": "#/definitions/timeOffset" },
        "label": { "type": "string" },
        "properties": { "type": "object" },
        "connect": { "$ref": "#/definitions/blockConnect" },
        "if_not_found": { "$ref": "#/definitions/blockIfNotFound" }
      },
      "additionalProperties": false
    },

    "FindFrame": {
      "properties": {
        "_ref": { "$ref": "#/definitions/refInt" },
        "video_ref": { "$ref": "#/definitions/refInt" },
        "unique": { "type": "boolean" },
        "constraints": { "type": "object" },
        "is_connected_to": { "$ref": "#/definitions/blockIsConnectedTo" },
        "group_by_source": { "type": "boolean" },
        "in_frame_number_range": {
          "$ref": "#/definitions/nonNegativeIntHalfRange"
        },
        "in_time_offset_range": { "$ref": "#/definitions/timeOffsetHalfRange" },
        "in_time_fraction_range": {
          "$ref": "#/definitions/nonNegativeFractionHalfRange"
        },
        "with_label": { "type": "string" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "results": { "$ref": "#/definitions/blockResults" },
        "as_format": { "$ref": "#/definitions/imgFormatString" },
        "operations": { "$ref": "#/definitions/blockFrameOperations" },
        "blobs": { "type": "boolean" },
        "frame_numbers": { "type": "boolean" },
        "time_offsets": { "type": "boolean" },
        "time_fractions": { "type": "boolean" },
        "labels": { "type": "boolean" },
        "uniqueids": { "type": "boolean" }
      },
      // Either video_ref OR is_connected_to can be present, or none of them
      "not": {
        "anyOf": [{ "required": ["video_ref", "is_connected_to"] }]
      },
      "additionalProperties": false
    },

    "UpdateFrame": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "properties": { "type": "object" },
        "remove_props": { "$ref": "#/definitions/stringArray" },
        "constraints": { "type": "object" }
      },
      "additionalProperties": false
    },

    "DeleteFrame": {
      "properties": {
        "ref": { "$ref": "#/definitions/refInt" },
        "constraints": { "type": "object" }
      },
      "oneOf": [{ "required": ["ref"] }, { "required": ["constraints"] }],
      "additionalProperties": false
    },

    "ExtractFrames": {
      "properties": {
        "video_ref": { "$ref": "#/definitions/refInt" },
        "frame_spec": { "$ref": "#/definitions/oneOfFrames" },
        "as_format": { "$ref": "#/definitions/imgFormatString" },
        "batch": { "$ref": "#/definitions/oneOfBatch" },
        "operations": { "$ref": "#/definitions/blockFrameOperations" }
      },
      "required": ["video_ref", "frame_spec"],
      "additionalProperties": false
    },

    "ClassifyDescriptor": {
      "properties": {
        "set": { "type": "string" },
        "k_neighbors": { "$ref": "#/definitions/positiveInt" }
      },
      "required": ["set", "k_neighbors"],
      "additionalProperties": false
    },

    "RegionIoU": {
      "properties": {
        "roi_1": { "$ref": "#/definitions/refInt" },
        "roi_2": { "$ref": "#/definitions/refInt" },
        "rectangle": { "$ref": "#/definitions/shapeRectangle" },
        "polygons": { "$ref": "#/definitions/shapePolygonCollection" }
      },
      "anyOf": [
        { "required": ["roi_1", "roi_2"] },
        { "required": ["roi_1", "rectangle"] },
        { "required": ["roi_1", "polygons"] }
      ],
      "additionalProperties": false
    },

    "CreateIndex": {
      "properties": {
        "index_type": { "$ref": "#/definitions/indexElementString" },
        "class": { "type": "string" },
        "property_key": { "type": "string" },
        // This parameter is ignored, kept for backward compatibility only.
        "property_type": { "type": "string" }
      },
      "required": ["index_type", "class", "property_key"],
      "additionalProperties": false
    },

    "RemoveIndex": {
      "properties": {
        "index_type": { "$ref": "#/definitions/indexElementString" },
        "class": { "type": "string" },
        "property_key": { "type": "string" }
      },
      "required": ["index_type", "class", "property_key"],
      "additionalProperties": false
    }
  },
  "description": "ApertureDB API",
  "items": {
    "type": "object",
    "anyOf": [
      { "$ref": "#/definitions/AddEntityTop" },
      { "$ref": "#/definitions/FindEntityTop" },
      { "$ref": "#/definitions/UpdateEntityTop" },
      { "$ref": "#/definitions/DeleteEntityTop" },

      { "$ref": "#/definitions/AddConnectionTop" },
      { "$ref": "#/definitions/FindConnectionTop" },
      { "$ref": "#/definitions/UpdateConnectionTop" },
      { "$ref": "#/definitions/DeleteConnectionTop" },

      { "$ref": "#/definitions/AddBlobTop" },
      { "$ref": "#/definitions/FindBlobTop" },
      { "$ref": "#/definitions/UpdateBlobTop" },
      { "$ref": "#/definitions/DeleteBlobTop" },

      { "$ref": "#/definitions/AddImageTop" },
      { "$ref": "#/definitions/FindImageTop" },
      { "$ref": "#/definitions/UpdateImageTop" },
      { "$ref": "#/definitions/DeleteImageTop" },

      { "$ref": "#/definitions/AddDescriptorSetTop" },
      { "$ref": "#/definitions/FindDescriptorSetTop" },
      { "$ref": "#/definitions/UpdateDescriptorSetTop" },
      { "$ref": "#/definitions/DeleteDescriptorSetTop" },

      { "$ref": "#/definitions/AddDescriptorTop" },
      { "$ref": "#/definitions/FindDescriptorTop" },
      { "$ref": "#/definitions/FindDescriptorBatchTop" },
      { "$ref": "#/definitions/UpdateDescriptorTop" },
      { "$ref": "#/definitions/DeleteDescriptorTop" },

      { "$ref": "#/definitions/AddBoundingBoxTop" },
      { "$ref": "#/definitions/UpdateBoundingBoxTop" },
      { "$ref": "#/definitions/FindBoundingBoxTop" },
      { "$ref": "#/definitions/DeleteBoundingBoxTop" },

      { "$ref": "#/definitions/AddPolygonTop" },
      { "$ref": "#/definitions/UpdatePolygonTop" },
      { "$ref": "#/definitions/FindPolygonTop" },
      { "$ref": "#/definitions/DeletePolygonTop" },

      { "$ref": "#/definitions/AddVideoTop" },
      { "$ref": "#/definitions/UpdateVideoTop" },
      { "$ref": "#/definitions/FindVideoTop" },
      { "$ref": "#/definitions/DeleteVideoTop" },

      { "$ref": "#/definitions/AddFrameTop" },
      { "$ref": "#/definitions/UpdateFrameTop" },
      { "$ref": "#/definitions/FindFrameTop" },
      { "$ref": "#/definitions/DeleteFrameTop" },

      { "$ref": "#/definitions/ExtractFramesTop" },
      { "$ref": "#/definitions/ClassifyDescriptorTop" },
      { "$ref": "#/definitions/RegionIoUTop" },

      { "$ref": "#/definitions/AuthenticateTop" },
      { "$ref": "#/definitions/GenerateTokenTop" },
      { "$ref": "#/definitions/RefreshTokenTop" },

      { "$ref": "#/definitions/GetUserDetailsTop" },

      { "$ref": "#/definitions/CreateUserTop" },
      { "$ref": "#/definitions/UpdateUserTop" },
      { "$ref": "#/definitions/RemoveUserTop" },

      { "$ref": "#/definitions/CreateRoleTop" },
      { "$ref": "#/definitions/UpdateRoleTop" },
      { "$ref": "#/definitions/RemoveRoleTop" },

      { "$ref": "#/definitions/GetUsersTop" },
      { "$ref": "#/definitions/GetRolesTop" },

      { "$ref": "#/definitions/CreateCredentialTop" },
      { "$ref": "#/definitions/GetCredentialsTop" },
      { "$ref": "#/definitions/UpdateCredentialTop" },
      { "$ref": "#/definitions/RemoveCredentialTop" },

      { "$ref": "#/definitions/GetStatusTop" },
      { "$ref": "#/definitions/GetSchemaTop" },
      { "$ref": "#/definitions/GetMetricsTop" },

      { "$ref": "#/definitions/CreateIndexTop" },
      { "$ref": "#/definitions/RemoveIndexTop" },
      { "$ref": "#/definitions/PauseTop" }
    ]
  },

  "minItems": 1,
  "type": "array",
  "uniqueItems": false
}
