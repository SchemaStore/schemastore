{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "anyOf": [
    {
      "properties": {
        "excludePlatforms": {
          "maxItems": 0
        },
        "includePlatforms": {
          "minItems": 1
        }
      }
    },
    {
      "properties": {
        "excludePlatforms": {
          "minItems": 1
        },
        "includePlatforms": {
          "maxItems": 0
        }
      }
    },
    {
      "properties": {
        "excludePlatforms": {
          "maxItems": 0
        },
        "includePlatforms": {
          "maxItems": 0
        }
      }
    }
  ],
  "definitions": {
    "platformValues": {
      "items": {
        "enum": [
          "Android",
          "Editor",
          "iOS",
          "LinuxStandalone32",
          "LinuxStandalone64",
          "LinuxStandaloneUniversal",
          "Lumin",
          "macOSStandalone",
          "Nintendo3DS",
          "PS4",
          "PSVita",
          "Stadia",
          "Switch",
          "tvOS",
          "WSA",
          "WebGL",
          "WindowsStandalone32",
          "WindowsStandalone64",
          "XboxOne"
        ]
      },
      "type": "array",
      "uniqueItems": true
    }
  },
  "description": "Defines an assembly in the Unity compilation pipeline",
  "properties": {
    "allowUnsafeCode": {
      "default": false,
      "description": "Allow unsafe code",
      "type": "boolean"
    },
    "autoReferenced": {
      "default": true,
      "description": "When true, this assembly definition is automatically referenced by predefined assemblies (Assembly-CSharp, Assembly-CSharp-firstpass, etc.)",
      "type": "boolean"
    },
    "defineConstraints": {
      "description": "A list of the C# compiler define symbols that must evaluate to true in order for the assembly to be compiled or referenced. Absence of a symbol can be checked with a bang symbol (!DEFINE)",
      "type": "array",
      "uniqueItems": true
    },
    "excludePlatforms": {
      "$ref": "#/definitions/platformValues",
      "description": "Platforms that are explicitly not targeted"
    },
    "includePlatforms": {
      "$ref": "#/definitions/platformValues",
      "description": "Platforms to target"
    },
    "name": {
      "description": "The name of the assembly being defined",
      "minLength": 1,
      "type": "string"
    },
    "noEngineReferences": {
      "default": false,
      "description": "When true, no references to UnityEngine or UnityEditor will be added to this assembly project",
      "type": "boolean"
    },
    "optionalUnityReferences": {
      "description": "Additional optional Unity features to reference",
      "items": {
        "enum": ["TestAssemblies"]
      },
      "type": "array",
      "uniqueItems": true
    },
    "overrideReferences": {
      "default": "false",
      "description": "When true, any references to precompiled assembly assets are manually chosen. When false, all precompiled assembly assets are automatically referenced",
      "type": "boolean"
    },
    "precompiledReferences": {
      "description": "A list of precompiled assembly assets that will be referenced. Only valid when overrideReferences is true",
      "type": "array",
      "uniqueItems": true
    },
    "references": {
      "description": "A list of assembly names or assembly asset GUIDs to reference",
      "items": {
        "minLength": 1,
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "rootNamespace": {
      "description": "The root namespace of the assembly. Requires Unity 2020.2",
      "minLength": 1,
      "type": "string"
    },
    "versionDefines": {
      "description": "A set of expressions that will define a symbol in the C# project if a package or module version matches the given expression",
      "items": {
        "properties": {
          "define": {
            "description": "The name of the define that is added to the project file when expression evaluates to true",
            "type": "string"
          },
          "expression": {
            "description": "The semantic version range of the chosen package or module",
            "type": "string"
          },
          "name": {
            "description": "The package or module that will provide the version to be checked in the expression",
            "type": "string"
          }
        },
        "required": ["name", "expression", "define"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    }
  },
  "required": ["name"],
  "title": "Unity Assembly Definition",
  "type": "object"
}
