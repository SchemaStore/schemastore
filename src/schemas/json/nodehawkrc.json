{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "buffer": {
      "$id": "#/properties/buffer",
      "default": 1500,
      "description": "The buffer duration to wait before triggering a restart.",
      "type": "integer"
    },
    "bufferPoll": {
      "$id": "#/properties/bufferPoll",
      "default": 100,
      "description": "The buffer polling interval to check for the file stability.",
      "type": "integer"
    },
    "clearScreen": {
      "$id": "#/properties/clearScreen",
      "default": true,
      "description": "Clear the screen on start and on every restart.",
      "type": "boolean"
    },
    "display": {
      "$id": "#/properties/display",
      "description": "The various messages to display during different events.",
      "properties": {
        "onBeforeRestart": {
          "$id": "#/properties/display/properties/onBeforeRestart",
          "default": "Restarting...",
          "description": "The message to display before the watcher restarts.",
          "type": "string"
        },
        "onBeforeStart": {
          "$id": "#/properties/display/properties/onBeforeStart",
          "default": "Starting...",
          "description": "The message to display before the watcher starts.",
          "type": "string"
        },
        "onBeforeStop": {
          "$id": "#/properties/display/properties/onBeforeStop",
          "default": "Stopping...",
          "description": "The message to display before the watcher stops.",
          "type": "string"
        },
        "onRestart": {
          "$id": "#/properties/display/properties/onRestart",
          "default": "Restarted",
          "description": "The message to display after the watcher restarts.",
          "type": "string"
        },
        "onStart": {
          "$id": "#/properties/display/properties/onStart",
          "default": "Started",
          "description": "The message to display after the watcher starts.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "env": {
      "$id": "#/properties/env",
      "default": {},
      "description": "A set of key-value pairs which will be promptly passed on to your process and accessible via `process.env`.",
      "type": "object"
    },
    "exec": {
      "$id": "#/properties/exec",
      "default": "",
      "description": "The command to execute on file change.",
      "examples": ["babel-node src/server", "ts-node src/server"],
      "type": "string"
    },
    "ignored": {
      "$id": "#/properties/ignored",
      "default": "",
      "description": "Paths, globs or regular expressions to ignore.",
      "type": "string"
    },
    "logLevel": {
      "$id": "#/properties/logLevel",
      "default": 3,
      "description": "The level of logging. 0 - fatal, 1 - error, 2 - warning, 3 - info, 4 - debug",
      "type": "integer"
    },
    "paths": {
      "$id": "#/properties/paths",
      "default": "./src",
      "description": "A string or an array of paths to watch. Supports globbing.",
      "examples": ["./src"],
      "oneOf": [
        {
          "default": "./src",
          "type": "string"
        },
        {
          "default": ["./src"],
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      ]
    },
    "port": {
      "$id": "#/properties/port",
      "default": 4000,
      "description": "The port on which the server should run. This is passed to your application as `process.env.PORT` which should be used by you.",
      "type": "integer"
    },
    "root": {
      "$id": "#/properties/root",
      "default": ".",
      "description": "The root path from which all other paths will be resolved.",
      "examples": ["."],
      "type": "string"
    }
  },
  "required": ["exec"],
  "title": "Nodehawk configuration schema.",
  "type": "object"
}
