{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "definitions": {
    "artifact": {
      "additionalProperties": false,
      "description": "A single artifact. In some cases, this artifact might be nested within another artifact.",
      "properties": {
        "contents": {
          "$ref": "#/definitions/artifactContent",
          "description": "The contents of the artifact."
        },
        "encoding": {
          "description": "Specifies the encoding for an artifact object that refers to a text file.",
          "type": "string"
        },
        "hashes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A dictionary, each of whose keys is the name of a hash function and each of whose values is the hashed value of the artifact produced by the specified hash function.",
          "type": "object"
        },
        "lastModifiedTimeUtc": {
          "description": "The Coordinated Universal Time (UTC) date and time at which the artifact was most recently modified. See \"Date/time properties\" in the SARIF spec for the required format.",
          "format": "date-time",
          "type": "string"
        },
        "length": {
          "description": "The length of the artifact in bytes.",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/artifactLocation",
          "description": "The location of the artifact."
        },
        "mimeType": {
          "description": "The MIME type (RFC 2045) of the artifact.",
          "pattern": "[^/]+/.+",
          "type": "string"
        },
        "offset": {
          "description": "The offset in bytes of the artifact within its containing artifact.",
          "type": "integer"
        },
        "parentIndex": {
          "default": -1,
          "description": "Identifies the index of the immediate parent of the artifact, if this artifact is nested.",
          "minimum": -1,
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the artifact."
        },
        "roles": {
          "default": [],
          "description": "The role or roles played by the artifact in the analysis.",
          "items": {
            "enum": [
              "analysisTarget",
              "toolComponent",
              "attachment",
              "responseFile",
              "resultFile",
              "standardStream",
              "traceFile",
              "unmodifiedFile",
              "modifiedFile",
              "addedFile",
              "deletedFile",
              "renamedFile",
              "uncontrolledFile"
            ]
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "sourceLanguage": {
          "description": "Specifies the source language for any artifact object that refers to a text file that contains source code.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "artifactChange": {
      "additionalProperties": false,
      "description": "A change to a single artifact.",
      "properties": {
        "artifactLocation": {
          "$ref": "#/definitions/artifactLocation",
          "description": "The location of the artifact to change."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the change."
        },
        "replacements": {
          "description": "An array of replacement objects, each of which represents the replacement of a single region in a single artifact specified by 'artifactLocation'.",
          "items": {
            "$ref": "#/definitions/replacement"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": false
        }
      },
      "required": ["artifactLocation", "replacements"],
      "type": "object"
    },
    "artifactContent": {
      "additionalProperties": false,
      "description": "Represents the contents of an artifact.",
      "properties": {
        "binary": {
          "description": "MIME Base64-encoded content from a binary artifact, or from a text artifact in its original encoding.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the artifact content."
        },
        "text": {
          "description": "UTF-8-encoded content from a text artifact.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "artifactLocation": {
      "additionalProperties": false,
      "description": "Specifies the location of an artifact.",
      "properties": {
        "index": {
          "default": -1,
          "description": "The index within the run artifacts array of the artifact object associated with the artifact location.",
          "minimum": -1,
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the artifact location."
        },
        "uri": {
          "description": "A string containing a valid relative or absolute URI.",
          "format": "uri-reference",
          "type": "string"
        },
        "uriBaseId": {
          "description": "A string which indirectly specifies the absolute URI with respect to which a relative URI in the \"uri\" property is interpreted.",
          "type": "string"
        }
      },
      "required": ["uri"],
      "type": "object"
    },
    "attachment": {
      "additionalProperties": false,
      "description": "An artifact relevant to a tool invocation or to a result.",
      "properties": {
        "artifactLocation": {
          "$ref": "#/definitions/artifactLocation",
          "description": "The location of the attachment."
        },
        "description": {
          "$ref": "#/definitions/message",
          "description": "A message describing the role played by the attachment."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the attachment."
        },
        "rectangles": {
          "default": [],
          "description": "An array of rectangles specifying areas of interest within the image.",
          "items": {
            "$ref": "#/definitions/rectangle"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "regions": {
          "default": [],
          "description": "An array of regions of interest within the attachment.",
          "items": {
            "$ref": "#/definitions/region"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": ["artifactLocation"],
      "type": "object"
    },
    "codeFlow": {
      "additionalProperties": false,
      "description": "A set of threadFlows which together describe a pattern of code execution relevant to detecting a result.",
      "properties": {
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message relevant to the code flow."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the code flow."
        },
        "threadFlows": {
          "description": "An array of one or more unique threadFlow objects, each of which describes the progress of a program through a thread of execution.",
          "items": {
            "$ref": "#/definitions/threadFlow"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": false
        }
      },
      "required": ["threadFlows"],
      "type": "object"
    },
    "conversion": {
      "additionalProperties": false,
      "description": "Describes how a converter transformed the output of a static analysis tool from the analysis tool's native output format into the SARIF format.",
      "properties": {
        "analysisToolLogFiles": {
          "default": [],
          "description": "The locations of the analysis tool's per-run log files.",
          "items": {
            "$ref": "#/definitions/artifactLocation"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "invocation": {
          "$ref": "#/definitions/invocation",
          "description": "An invocation object that describes the invocation of the converter."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the conversion."
        },
        "tool": {
          "$ref": "#/definitions/tool",
          "description": "A tool object that describes the converter."
        }
      },
      "required": ["tool"],
      "type": "object"
    },
    "edge": {
      "additionalProperties": false,
      "description": "Represents a directed edge in a graph.",
      "properties": {
        "id": {
          "description": "A string that uniquely identifies the edge within its graph.",
          "type": "string"
        },
        "label": {
          "$ref": "#/definitions/message",
          "description": "A short description of the edge."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the edge."
        },
        "sourceNodeId": {
          "description": "Identifies the source node (the node at which the edge starts).",
          "type": "string"
        },
        "targetNodeId": {
          "description": "Identifies the target node (the node at which the edge ends).",
          "type": "string"
        }
      },
      "required": ["id", "sourceNodeId", "targetNodeId"],
      "type": "object"
    },
    "edgeTraversal": {
      "additionalProperties": false,
      "description": "Represents the traversal of a single edge during a graph traversal.",
      "properties": {
        "edgeId": {
          "description": "Identifies the edge being traversed.",
          "type": "string"
        },
        "finalState": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The values of relevant expressions after the edge has been traversed.",
          "type": "object"
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message to display to the user as the edge is traversed."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the edge traversal."
        },
        "stepOverEdgeCount": {
          "description": "The number of edge traversals necessary to return from a nested graph.",
          "type": "integer"
        }
      },
      "required": ["edgeId"],
      "type": "object"
    },
    "exception": {
      "properties": {
        "innerExceptions": {
          "default": [],
          "description": "An array of exception objects each of which is considered a cause of this exception.",
          "items": {
            "$ref": "#/definitions/exception"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "kind": {
          "description": "A string that identifies the kind of exception, for example, the fully qualified type name of an object that was thrown, or the symbolic name of a signal.",
          "type": "string"
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message that describes the exception."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the exception."
        },
        "stack": {
          "$ref": "#/definitions/stack",
          "description": "The sequence of function calls leading to the exception."
        }
      },
      "type": "object"
    },
    "externalPropertyFile": {
      "properties": {
        "artifactLocation": {
          "$ref": "#/definitions/artifactLocation",
          "description": "The location of the external property file."
        },
        "instanceGuid": {
          "description": "A stable, unique identifier for the external property file in the form of a GUID.",
          "type": "string"
        },
        "itemCount": {
          "default": 0,
          "description": "A non-negative integer specifying the number of items contained in the external property file.",
          "minimum": 0,
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the external property file."
        }
      },
      "type": "object"
    },
    "externalPropertyFiles": {
      "additionalProperties": false,
      "description": "References to external property files that should be inlined with the content of a root log file.",
      "properties": {
        "artifacts": {
          "description": "An array of external property files containing run.artifacts arrays to be merged with the root log file.",
          "items": {
            "$ref": "#/definitions/externalPropertyFile"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "conversion": {
          "$ref": "#/definitions/externalPropertyFile",
          "description": "An external property file containing a run.conversion object to be merged with the root log file."
        },
        "externalizedProperties": {
          "$ref": "#/definitions/externalPropertyFile",
          "description": "An external property file containing a run.properties object to be merged with the root log file."
        },
        "graphs": {
          "$ref": "#/definitions/externalPropertyFile",
          "description": "An external property file containing a run.graphs object to be merged with the root log file."
        },
        "invocations": {
          "description": "An array of external property files containing run.invocations arrays to be merged with the root log file.",
          "items": {
            "$ref": "#/definitions/externalPropertyFile"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "logicalLocations": {
          "description": "An array of external property files containing run.logicalLocations arrays to be merged with the root log file.",
          "items": {
            "$ref": "#/definitions/externalPropertyFile"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "results": {
          "description": "An array of external property files containing run.results arrays to be merged with the root log file.",
          "items": {
            "$ref": "#/definitions/externalPropertyFile"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": false
        },
        "tool": {
          "$ref": "#/definitions/externalPropertyFile",
          "description": "An external property file containing a run.tool object to be merged with the root log file."
        }
      },
      "type": "object"
    },
    "fix": {
      "additionalProperties": false,
      "description": "A proposed fix for the problem represented by a result object. A fix specifies a set of artifacts to modify. For each artifact, it specifies a set of bytes to remove, and provides a set of new bytes to replace them.",
      "properties": {
        "changes": {
          "description": "One or more artifact changes that comprise a fix for a result.",
          "items": {
            "$ref": "#/definitions/artifactChange"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "description": {
          "$ref": "#/definitions/message",
          "description": "A message that describes the proposed fix, enabling viewers to present the proposed change to an end user."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the fix."
        }
      },
      "required": ["changes"],
      "type": "object"
    },
    "graph": {
      "additionalProperties": false,
      "description": "A network of nodes and directed edges that describes some aspect of the structure of the code (for example, a call graph).",
      "properties": {
        "description": {
          "$ref": "#/definitions/message",
          "description": "A description of the graph."
        },
        "edges": {
          "default": [],
          "description": "An array of edge objects representing the edges of the graph.",
          "items": {
            "$ref": "#/definitions/edge"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "id": {
          "description": "A string that uniquely identifies the graph within a run.graphs or result.graphs array.",
          "type": "string"
        },
        "nodes": {
          "default": [],
          "description": "An array of node objects representing the nodes of the graph.",
          "items": {
            "$ref": "#/definitions/node"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the graph."
        }
      },
      "required": ["id"],
      "type": "object"
    },
    "graphTraversal": {
      "additionalProperties": false,
      "description": "Represents a path through a graph.",
      "properties": {
        "description": {
          "$ref": "#/definitions/message",
          "description": "A description of this graph traversal."
        },
        "edgeTraversals": {
          "default": [],
          "description": "The sequences of edges traversed by this graph traversal.",
          "items": {
            "$ref": "#/definitions/edgeTraversal"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "graphId": {
          "description": "A string that uniquely identifies that graph being traversed.",
          "type": "string"
        },
        "initialState": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Values of relevant expressions at the start of the graph traversal.",
          "type": "object"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the graph traversal."
        }
      },
      "required": ["graphId"],
      "type": "object"
    },
    "invocation": {
      "additionalProperties": false,
      "description": "The runtime environment of the analysis tool run.",
      "properties": {
        "account": {
          "description": "The account that ran the analysis tool.",
          "type": "string"
        },
        "arguments": {
          "description": "An array of strings, containing in order the command line arguments passed to the tool from the operating system.",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "attachments": {
          "default": [],
          "description": "A set of artifacts relevant to the invocation of the tool.",
          "items": {
            "$ref": "#/definitions/attachment"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "commandLine": {
          "description": "The command line used to invoke the tool.",
          "type": "string"
        },
        "configurationNotifications": {
          "default": [],
          "description": "A list of conditions detected by the tool that are relevant to the tool's configuration.",
          "items": {
            "$ref": "#/definitions/notification"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "endTimeUtc": {
          "description": "The Coordinated Universal Time (UTC) date and time at which the run ended. See \"Date/time properties\" in the SARIF spec for the required format.",
          "format": "date-time",
          "type": "string"
        },
        "environmentVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The environment variables associated with the analysis tool process, expressed as key/value pairs.",
          "type": "object"
        },
        "executableLocation": {
          "$ref": "#/definitions/artifactLocation",
          "description": "An absolute URI specifying the location of the analysis tool's executable."
        },
        "exitCode": {
          "description": "The process exit code.",
          "type": "integer"
        },
        "exitCodeDescription": {
          "description": "The reason for the process exit.",
          "type": "string"
        },
        "exitSignalName": {
          "description": "The name of the signal that caused the process to exit.",
          "type": "string"
        },
        "exitSignalNumber": {
          "description": "The numeric value of the signal that caused the process to exit.",
          "type": "integer"
        },
        "machine": {
          "description": "The machine that hosted the analysis tool run.",
          "type": "string"
        },
        "processId": {
          "description": "The process id for the analysis tool run.",
          "type": "integer"
        },
        "processStartFailureMessage": {
          "description": "The reason given by the operating system that the process failed to start.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the invocation."
        },
        "reportingConfigurationOverrides": {
          "description": "An array of reportingConfigurationOverride objects that describe runtime reporting behavior.",
          "items": {
            "$ref": "#/definitions/reportingConfigurationOverride"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "responseFiles": {
          "description": "The locations of any response files specified on the tool's command line.",
          "items": {
            "$ref": "#/definitions/artifactLocation"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "startTimeUtc": {
          "description": "The Coordinated Universal Time (UTC) date and time at which the run started. See \"Date/time properties\" in the SARIF spec for the required format.",
          "format": "date-time",
          "type": "string"
        },
        "stderr": {
          "$ref": "#/definitions/artifactLocation",
          "description": "A file containing the standard error stream from the process that was invoked."
        },
        "stdin": {
          "$ref": "#/definitions/artifactLocation",
          "description": "A file containing the standard input stream to the process that was invoked."
        },
        "stdout": {
          "$ref": "#/definitions/artifactLocation",
          "description": "A file containing the standard output stream from the process that was invoked."
        },
        "stdoutStderr": {
          "$ref": "#/definitions/artifactLocation",
          "description": "A file containing the interleaved standard output and standard error stream from the process that was invoked."
        },
        "toolExecutionSuccessful": {
          "description": "A value indicating whether the tool's execution completed successfully.",
          "type": "boolean"
        },
        "toolNotifications": {
          "default": [],
          "description": "A list of runtime conditions detected by the tool during the analysis.",
          "items": {
            "$ref": "#/definitions/notification"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "workingDirectory": {
          "$ref": "#/definitions/artifactLocation",
          "description": "The working directory for the analysis tool run."
        }
      },
      "type": "object"
    },
    "location": {
      "additionalProperties": false,
      "description": "A location within a programming artifact.",
      "properties": {
        "annotations": {
          "default": [],
          "description": "A set of regions relevant to the location.",
          "items": {
            "$ref": "#/definitions/region"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "fullyQualifiedLogicalName": {
          "description": "The human-readable fully qualified name of the logical location. If run.logicalLocations is present, this value matches a property name within that object, from which further information about the logical location can be obtained.",
          "type": "string"
        },
        "logicalLocationIndex": {
          "default": -1,
          "description": "The index within the logical locations array of the logical location associated with the result.",
          "minimum": -1,
          "type": "integer"
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message relevant to the location."
        },
        "physicalLocation": {
          "$ref": "#/definitions/physicalLocation",
          "description": "Identifies the artifact and region."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the location."
        }
      },
      "type": "object"
    },
    "logicalLocation": {
      "additionalProperties": false,
      "description": "A logical location of a construct that produced a result.",
      "properties": {
        "decoratedName": {
          "description": "The machine-readable name for the logical location, such as a mangled function name provided by a C++ compiler that encodes calling convention, return type and other details along with the function name.",
          "type": "string"
        },
        "fullyQualifiedName": {
          "description": "The human-readable fully qualified name of the logical location.",
          "type": "string"
        },
        "kind": {
          "description": "The type of construct this logical location component refers to. Should be one of 'function', 'member', 'module', 'namespace', 'parameter', 'resource', 'returnType', 'type', or 'variable', if any of those accurately describe the construct.",
          "type": "string"
        },
        "name": {
          "description": "Identifies the construct in which the result occurred. For example, this property might contain the name of a class or a method.",
          "type": "string"
        },
        "parentIndex": {
          "default": -1,
          "description": "Identifies the index of the immediate parent of the construct in which the result was detected. For example, this property might point to a logical location that represents the namespace that holds a type.",
          "minimum": -1,
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the logical location."
        }
      },
      "type": "object"
    },
    "message": {
      "additionalProperties": false,
      "description": "Encapsulates a message intended to be read by the end user.",
      "properties": {
        "arguments": {
          "default": [],
          "description": "An array of strings to substitute into the message string.",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "markdown": {
          "description": "A Markdown message string.",
          "type": "string"
        },
        "messageId": {
          "description": "The resource id for a plain text or Markdown message string.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the message."
        },
        "text": {
          "description": "A plain text message string.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "multiformatMessageString": {
      "additionalProperties": false,
      "description": "A message string or message format string rendered in multiple formats.",
      "properties": {
        "markdown": {
          "description": "A Markdown message string or format string.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the message."
        },
        "text": {
          "description": "A plain text message string or format string.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "node": {
      "additionalProperties": false,
      "description": "Represents a node in a graph.",
      "properties": {
        "children": {
          "default": [],
          "description": "Array of child nodes.",
          "items": {
            "$ref": "#/definitions/node"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "id": {
          "description": "A string that uniquely identifies the node within its graph.",
          "type": "string"
        },
        "label": {
          "$ref": "#/definitions/message",
          "description": "A short description of the node."
        },
        "location": {
          "$ref": "#/definitions/location",
          "description": "A code location associated with the node."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the node."
        }
      },
      "required": ["id"],
      "type": "object"
    },
    "notification": {
      "additionalProperties": false,
      "description": "Describes a condition relevant to the tool itself, as opposed to being relevant to a target being analyzed by the tool.",
      "properties": {
        "exception": {
          "$ref": "#/definitions/exception",
          "description": "The runtime exception, if any, relevant to this notification."
        },
        "id": {
          "description": "An identifier for the condition that was encountered.",
          "type": "string"
        },
        "level": {
          "default": "warning",
          "description": "A value specifying the severity level of the notification.",
          "enum": ["none", "note", "warning", "error"]
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message that describes the condition that was encountered."
        },
        "physicalLocation": {
          "$ref": "#/definitions/physicalLocation",
          "description": "The artifact and region relevant to this notification."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the notification."
        },
        "ruleId": {
          "description": "The stable, unique identifier of the rule, if any, to which this notification is relevant.",
          "type": "string"
        },
        "ruleIndex": {
          "default": -1,
          "description": "The index within the run resources array of the rule object, if any, associated with this notification.",
          "minimum": -1,
          "type": "integer"
        },
        "threadId": {
          "description": "The thread identifier of the code that generated the notification.",
          "type": "integer"
        },
        "timeUtc": {
          "description": "The Coordinated Universal Time (UTC) date and time at which the analysis tool generated the notification.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": ["message"],
      "type": "object"
    },
    "physicalLocation": {
      "additionalProperties": false,
      "description": "A physical location relevant to a result. Specifies a reference to a programming artifact together with a range of bytes or characters within that artifact.",
      "properties": {
        "artifactLocation": {
          "$ref": "#/definitions/artifactLocation",
          "description": "The location of the artifact."
        },
        "contextRegion": {
          "$ref": "#/definitions/region",
          "description": "Specifies a portion of the artifact that encloses the region. Allows a viewer to display additional context around the region."
        },
        "id": {
          "description": "Value that distinguishes this physical location from all other physical locations in this run object.",
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the physical location."
        },
        "region": {
          "$ref": "#/definitions/region",
          "description": "Specifies a portion of the artifact."
        }
      },
      "required": ["artifactLocation"],
      "type": "object"
    },
    "propertyBag": {
      "additionalProperties": true,
      "description": "Key/value pairs that provide additional information about the object.",
      "properties": {
        "tags": {
          "default": [],
          "description": "A set of distinct strings that provide additional information.",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "rectangle": {
      "additionalProperties": false,
      "description": "An area within an image.",
      "properties": {
        "bottom": {
          "description": "The Y coordinate of the bottom edge of the rectangle, measured in the image's natural units.",
          "type": "number"
        },
        "left": {
          "description": "The X coordinate of the left edge of the rectangle, measured in the image's natural units.",
          "type": "number"
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message relevant to the rectangle."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the rectangle."
        },
        "right": {
          "description": "The X coordinate of the right edge of the rectangle, measured in the image's natural units.",
          "type": "number"
        },
        "top": {
          "description": "The Y coordinate of the top edge of the rectangle, measured in the image's natural units.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "region": {
      "additionalProperties": false,
      "description": "A region within an artifact where a result was detected.",
      "properties": {
        "byteLength": {
          "description": "The length of the region in bytes.",
          "minimum": 0,
          "type": "integer"
        },
        "byteOffset": {
          "description": "The zero-based offset from the beginning of the artifact of the first byte in the region.",
          "minimum": 0,
          "type": "integer"
        },
        "charLength": {
          "description": "The length of the region in characters.",
          "minimum": 0,
          "type": "integer"
        },
        "charOffset": {
          "default": -1,
          "description": "The zero-based offset from the beginning of the artifact of the first character in the region.",
          "minimum": -1,
          "type": "integer"
        },
        "endColumn": {
          "description": "The column number of the character following the end of the region.",
          "minimum": 1,
          "type": "integer"
        },
        "endLine": {
          "description": "The line number of the last character in the region.",
          "minimum": 1,
          "type": "integer"
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message relevant to the region."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the region."
        },
        "snippet": {
          "$ref": "#/definitions/artifactContent",
          "description": "The portion of the artifact contents within the specified region."
        },
        "sourceLanguage": {
          "description": "Specifies the source language, if any, of the portion of the artifact specified by the region object.",
          "type": "string"
        },
        "startColumn": {
          "description": "The column number of the first character in the region.",
          "minimum": 1,
          "type": "integer"
        },
        "startLine": {
          "description": "The line number of the first character in the region.",
          "minimum": 1,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "replacement": {
      "additionalProperties": false,
      "description": "The replacement of a single region of an artifact.",
      "properties": {
        "deletedRegion": {
          "$ref": "#/definitions/region",
          "description": "The region of the artifact to delete."
        },
        "insertedContent": {
          "$ref": "#/definitions/artifactContent",
          "description": "The content to insert at the location specified by the 'deletedRegion' property."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the replacement."
        }
      },
      "required": ["deletedRegion"],
      "type": "object"
    },
    "reportingConfiguration": {
      "additionalProperties": false,
      "description": "Information about a tool report that can be configured at runtime.",
      "properties": {
        "enabled": {
          "default": true,
          "description": "Specifies whether the report may be produced during the scan.",
          "type": "boolean"
        },
        "level": {
          "default": "warning",
          "description": "Specifies the failure level for the report.",
          "enum": ["none", "note", "warning", "error"]
        },
        "parameters": {
          "$ref": "#/definitions/propertyBag",
          "description": "Contains configuration information specific to a report."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the reporting configuration."
        },
        "rank": {
          "default": -1,
          "description": "Specifies the relative priority of the report. Used for analysis output only.",
          "maximum": 100,
          "minimum": -1,
          "type": "number"
        }
      },
      "type": "object"
    },
    "reportingConfigurationOverride": {
      "additionalProperties": false,
      "description": "Information about how a specific tool report was reconfigured at runtime.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/reportingConfiguration",
          "description": "Specifies how the report was configured during the scan."
        },
        "extensionIndex": {
          "default": -1,
          "description": "The index within the run.tool.extensions array of the toolComponent object which describes the plug-in or tool extension that produced the report.",
          "minimum": -1,
          "type": "integer"
        },
        "notificationIndex": {
          "default": -1,
          "description": "The index within the toolComponent.notificationDescriptors array of the reportingDescriptor associated with this override.",
          "minimum": -1,
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the reporting configuration."
        },
        "ruleIndex": {
          "default": -1,
          "description": "The index within the toolComponent.ruleDescriptors array of the reportingDescriptor associated with this override.",
          "minimum": -1,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "reportingDescriptor": {
      "additionalProperties": false,
      "description": "Metadata that describes a specific report produced by the tool, as part of the analysis it provides or its runtime reporting.",
      "properties": {
        "defaultConfiguration": {
          "$ref": "#/definitions/reportingConfiguration",
          "description": "Default reporting configuration information."
        },
        "deprecatedIds": {
          "description": "An array of stable, opaque identifiers by which this report was known in some previous version of the analysis tool.",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "fullDescription": {
          "$ref": "#/definitions/message",
          "description": "A description of the report. Should, as far as possible, provide details sufficient to enable resolution of any problem indicated by the result."
        },
        "help": {
          "$ref": "#/definitions/message",
          "description": "Provides the primary documentation for the report, useful when there is no online documentation."
        },
        "helpUri": {
          "description": "A URI where the primary documentation for the report can be found.",
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "A stable, opaque identifier for the report.",
          "type": "string"
        },
        "messageStrings": {
          "additionalProperties": {
            "$ref": "#/definitions/multiformatMessageString"
          },
          "description": "A set of name/value pairs with arbitrary names. Each value is a multiformatMessageString object, which holds message strings in plain text and (optionally) Markdown format. The strings can include placeholders, which can be used to construct a message in combination with an arbitrary number of additional string arguments.",
          "type": "object"
        },
        "name": {
          "$ref": "#/definitions/message",
          "description": "A report identifier that is understandable to an end user."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the report."
        },
        "shortDescription": {
          "$ref": "#/definitions/message",
          "description": "A concise description of the report. Should be a single sentence that is understandable when visible space is limited to a single line of text."
        }
      },
      "type": "object"
    },
    "result": {
      "additionalProperties": false,
      "description": "A result produced by an analysis tool.",
      "properties": {
        "analysisTarget": {
          "$ref": "#/definitions/artifactLocation",
          "description": "Identifies the artifact that the analysis tool was instructed to scan. This need not be the same as the artifact where the result actually occurred."
        },
        "attachments": {
          "default": [],
          "description": "A set of artifacts relevant to the result.",
          "items": {
            "$ref": "#/definitions/attachment"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "baselineState": {
          "description": "The state of a result relative to a baseline of a previous run.",
          "enum": ["new", "unchanged", "updated", "absent"]
        },
        "codeFlows": {
          "default": [],
          "description": "An array of 'codeFlow' objects relevant to the result.",
          "items": {
            "$ref": "#/definitions/codeFlow"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "correlationGuid": {
          "description": "A stable, unique identifier for the equivalence class of logically identical results to which this result belongs, in the form of a GUID.",
          "type": "string"
        },
        "fingerprints": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A set of strings each of which individually defines a stable, unique identity for the result.",
          "type": "object"
        },
        "fixes": {
          "default": [],
          "description": "An array of 'fix' objects, each of which represents a proposed fix to the problem indicated by the result.",
          "items": {
            "$ref": "#/definitions/fix"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "graphTraversals": {
          "description": "An array of one or more unique 'graphTraversal' objects.",
          "items": {
            "$ref": "#/definitions/graphTraversal"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "graphs": {
          "additionalProperties": {
            "$ref": "#/definitions/graph"
          },
          "description": "A dictionary, each of whose keys is the id of a graph and each of whose values is a 'graph' object with that id.",
          "type": "object"
        },
        "hostedViewerUri": {
          "description": "An absolute URI at which the result can be viewed.",
          "format": "uri",
          "type": "string"
        },
        "instanceGuid": {
          "description": "A stable, unique identifier for the result in the form of a GUID.",
          "type": "string"
        },
        "kind": {
          "default": "fail",
          "description": "A value that categorizes results by evaluation state.",
          "enum": ["notApplicable", "pass", "fail", "review", "open"]
        },
        "level": {
          "default": "warning",
          "description": "A value specifying the severity level of the result.",
          "enum": ["none", "note", "warning", "error"]
        },
        "locations": {
          "default": [],
          "description": "The set of locations where the result was detected. Specify only one location unless the problem indicated by the result can only be corrected by making a change at every specified location.",
          "items": {
            "$ref": "#/definitions/location"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message that describes the result. The first sentence of the message only will be displayed when visible space is limited."
        },
        "occurrenceCount": {
          "description": "A positive integer specifying the number of times this logically unique result was observed in this run.",
          "minimum": 1,
          "type": "integer"
        },
        "partialFingerprints": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A set of strings that contribute to the stable, unique identity of the result.",
          "type": "object"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the result."
        },
        "provenance": {
          "$ref": "#/definitions/resultProvenance",
          "description": "Information about how and when the result was detected."
        },
        "rank": {
          "default": -1,
          "description": "A number representing the priority or importance of the result.",
          "maximum": 100,
          "minimum": -1,
          "type": "number"
        },
        "relatedLocations": {
          "default": [],
          "description": "A set of locations relevant to this result.",
          "items": {
            "$ref": "#/definitions/location"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "ruleExtensionIndex": {
          "default": -1,
          "description": "The index within the run.tool.extensions array of the tool component object which describes the plug-in or tool extension that produced the result.",
          "minimum": -1,
          "type": "integer"
        },
        "ruleId": {
          "description": "The stable, unique identifier of the rule, if any, to which this notification is relevant. This member can be used to retrieve rule metadata from the rules dictionary, if it exists.",
          "type": "string"
        },
        "ruleIndex": {
          "default": -1,
          "description": "The index within the run resources array of the rule object associated with this result.",
          "minimum": -1,
          "type": "integer"
        },
        "stacks": {
          "default": [],
          "description": "An array of 'stack' objects relevant to the result.",
          "items": {
            "$ref": "#/definitions/stack"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "suppressionStates": {
          "description": "A set of flags indicating one or more suppression conditions.",
          "items": {
            "enum": ["suppressedInSource", "suppressedExternally"]
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "workItemUris": {
          "description": "The URIs of the work items associated with this result.",
          "items": {
            "format": "uri",
            "type": "string"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": ["message"],
      "type": "object"
    },
    "resultProvenance": {
      "additionalProperties": false,
      "description": "Contains information about how and when a result was detected.",
      "properties": {
        "conversionSources": {
          "default": [],
          "description": "An array of physicalLocation objects which specify the portions of an analysis tool's output that a converter transformed into the result.",
          "items": {
            "$ref": "#/definitions/physicalLocation"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "firstDetectionRunInstanceGuid": {
          "description": "A GUID-valued string equal to the id.instanceGuid property of the run in which the result was first detected.",
          "type": "string"
        },
        "firstDetectionTimeUtc": {
          "description": "The Coordinated Universal Time (UTC) date and time at which the result was first detected. See \"Date/time properties\" in the SARIF spec for the required format.",
          "format": "date-time",
          "type": "string"
        },
        "invocationIndex": {
          "default": -1,
          "description": "The index within the run.invocations array of the invocation object which describes the tool invocation that detected the result.",
          "minimum": -1,
          "type": "integer"
        },
        "lastDetectionRunInstanceGuid": {
          "description": "A GUID-valued string equal to the id.instanceGuid property of the run in which the result was most recently detected.",
          "type": "string"
        },
        "lastDetectionTimeUtc": {
          "description": "The Coordinated Universal Time (UTC) date and time at which the result was most recently detected. See \"Date/time properties\" in the SARIF spec for the required format.",
          "format": "date-time",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the result."
        }
      },
      "type": "object"
    },
    "run": {
      "additionalProperties": false,
      "description": "Describes a single run of an analysis tool, and contains the reported output of that run.",
      "properties": {
        "aggregateIds": {
          "default": [],
          "description": "Automation details that describe the aggregate of runs to which this run belongs.",
          "items": {
            "$ref": "#/definitions/runAutomationDetails"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "artifacts": {
          "description": "An array of artifact objects relevant to the run.",
          "items": {
            "$ref": "#/definitions/artifact"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "baselineInstanceGuid": {
          "description": "The 'instanceGuid' property of a previous SARIF 'run' that comprises the baseline that was used to compute result 'baselineState' properties for the run.",
          "type": "string"
        },
        "columnKind": {
          "default": "unicodeCodePoints",
          "description": "Specifies the unit in which the tool measures columns.",
          "enum": ["utf16CodeUnits", "unicodeCodePoints"]
        },
        "conversion": {
          "$ref": "#/definitions/conversion",
          "description": "A conversion object that describes how a converter transformed an analysis tool's native reporting format into the SARIF format."
        },
        "defaultFileEncoding": {
          "description": "Specifies the default encoding for any artifact object that refers to a text file.",
          "type": "string"
        },
        "defaultSourceLanguage": {
          "description": "Specifies the default source language for any artifact object that refers to a text file that contains source code.",
          "type": "string"
        },
        "externalPropertyFiles": {
          "$ref": "#/definitions/externalPropertyFiles",
          "description": "References to external property files that should be inlined with the content of a root log file."
        },
        "graphs": {
          "additionalProperties": {
            "$ref": "#/definitions/graph"
          },
          "description": "A dictionary, each of whose keys is the id of a graph and each of whose values is a 'graph' object with that id.",
          "type": "object"
        },
        "id": {
          "$ref": "#/definitions/runAutomationDetails",
          "description": "Automation details that describe this run."
        },
        "invocations": {
          "default": [],
          "description": "Describes the invocation of the analysis tool.",
          "items": {
            "$ref": "#/definitions/invocation"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "logicalLocations": {
          "default": [],
          "description": "An array of logical locations such as namespaces, types or functions.",
          "items": {
            "$ref": "#/definitions/logicalLocation"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "markdownMessageMimeType": {
          "default": "text/markdown;variant=GFM",
          "description": "The MIME type of all Markdown text message properties in the run. Default: \"text/markdown;variant=GFM\"",
          "type": "string"
        },
        "newlineSequences": {
          "default": ["\r\n", "\n"],
          "description": "An ordered list of character sequences that were treated as line breaks when computing region information for the run.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "originalUriBaseIds": {
          "additionalProperties": {
            "$ref": "#/definitions/artifactLocation"
          },
          "description": "The artifact location specified by each uriBaseId symbol on the machine where the tool originally ran.",
          "type": "object"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the run."
        },
        "redactionToken": {
          "description": "The string used to replace sensitive information in a redaction-aware property.",
          "type": "string"
        },
        "results": {
          "description": "The set of results contained in an SARIF log. The results array can be omitted when a run is solely exporting rules metadata. It must be present (but may be empty) if a log file represents an actual scan.",
          "items": {
            "$ref": "#/definitions/result"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "tool": {
          "$ref": "#/definitions/tool",
          "description": "Information about the tool or tool pipeline that generated the results in this run. A run can only contain results produced by a single tool or tool pipeline. A run can aggregate results from multiple log files, as long as context around the tool run (tool command-line arguments and the like) is identical for all aggregated files."
        },
        "versionControlProvenance": {
          "default": [],
          "description": "Specifies the revision in version control of the artifacts that were scanned.",
          "items": {
            "$ref": "#/definitions/versionControlDetails"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": ["tool"],
      "type": "object"
    },
    "runAutomationDetails": {
      "additionalProperties": false,
      "description": "Information that describes a run's identity and role within an engineering system process.",
      "properties": {
        "correlationGuid": {
          "description": "A stable, unique identifier for the equivalence class of runs to which this object's containing run object belongs in the form of a GUID.",
          "type": "string"
        },
        "description": {
          "$ref": "#/definitions/message",
          "description": "A description of the identity and role played within the engineering system by this object's containing run object."
        },
        "instanceGuid": {
          "description": "A stable, unique identifier for this object's containing run object in the form of a GUID.",
          "type": "string"
        },
        "instanceId": {
          "description": "A hierarchical string that uniquely identifies this object's containing run object.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the run automation details."
        }
      },
      "type": "object"
    },
    "stack": {
      "additionalProperties": false,
      "description": "A call stack that is relevant to a result.",
      "properties": {
        "frames": {
          "description": "An array of stack frames that represents a sequence of calls, rendered in reverse chronological order, that comprise the call stack.",
          "items": {
            "$ref": "#/definitions/stackFrame"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message relevant to this call stack."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the stack."
        }
      },
      "required": ["frames"],
      "type": "object"
    },
    "stackFrame": {
      "additionalProperties": false,
      "description": "A function call within a stack trace.",
      "properties": {
        "address": {
          "description": "The address of the method or function that is executing.",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/location",
          "description": "The location to which this stack frame refers."
        },
        "module": {
          "description": "The name of the module that contains the code of this stack frame.",
          "type": "string"
        },
        "offset": {
          "description": "The offset from the method or function that is executing.",
          "type": "integer"
        },
        "parameters": {
          "default": [],
          "description": "The parameters of the call that is executing.",
          "items": {
            "default": [],
            "type": "string"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": false
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the stack frame."
        },
        "threadId": {
          "description": "The thread identifier of the stack frame.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "threadFlow": {
      "properties": {
        "id": {
          "description": "An string that uniquely identifies the threadFlow within the codeFlow in which it occurs.",
          "type": "string"
        },
        "locations": {
          "description": "A temporally ordered array of 'threadFlowLocation' objects, each of which describes a location visited by the tool while producing the result.",
          "items": {
            "$ref": "#/definitions/threadFlowLocation"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": false
        },
        "message": {
          "$ref": "#/definitions/message",
          "description": "A message relevant to the thread flow."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the thread flow."
        }
      },
      "required": ["locations"],
      "type": "object"
    },
    "threadFlowLocation": {
      "additionalProperties": false,
      "description": "A location visited by an analysis tool while simulating or monitoring the execution of a program.",
      "properties": {
        "executionOrder": {
          "description": "An integer representing the temporal order in which execution reached this location.",
          "type": "integer"
        },
        "executionTimeUtc": {
          "description": "The Coordinated Universal Time (UTC) date and time at which this location was executed.",
          "format": "date-time",
          "type": "string"
        },
        "importance": {
          "description": "Specifies the importance of this location in understanding the code flow in which it occurs. The order from most to least important is \"essential\", \"important\", \"unimportant\". Default: \"important\".",
          "enum": ["important", "essential", "unimportant"]
        },
        "kinds": {
          "default": [],
          "description": "A set of distinct strings that categorize the thread flow location. Well-known kinds include acquire, release, enter, exit, call, return, branch, implicit, false, true, caution, danger, unknown, unreachable, taint, function, handler, lock, memory, resource, and scope.",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "location": {
          "$ref": "#/definitions/location",
          "description": "The code location."
        },
        "module": {
          "description": "The name of the module that contains the code that is executing.",
          "type": "string"
        },
        "nestingLevel": {
          "description": "An integer representing a containment hierarchy within the thread flow.",
          "type": "integer"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the threadflow location."
        },
        "stack": {
          "$ref": "#/definitions/stack",
          "description": "The call stack leading to this location."
        },
        "state": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A dictionary, each of whose keys specifies a variable or expression, the associated value of which represents the variable or expression value. For an annotation of kind 'continuation', for example, this dictionary might hold the current assumed values of a set of global variables.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "tool": {
      "additionalProperties": false,
      "description": "The analysis tool that was run.",
      "properties": {
        "driver": {
          "$ref": "#/definitions/toolComponent",
          "description": "The analysis tool that was run."
        },
        "extensions": {
          "default": [],
          "description": "Tool extensions that contributed to or reconfigured the analysis tool that was run.",
          "items": {
            "$ref": "#/definitions/toolComponent"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "language": {
          "default": "en-US",
          "description": "The tool language (expressed as an ISO 649 two-letter lowercase culture code) and region (expressed as an ISO 3166 two-letter uppercase subculture code associated with a country or region).",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the tool."
        }
      },
      "required": ["driver"],
      "type": "object"
    },
    "toolComponent": {
      "additionalProperties": false,
      "description": "A component, such as a plug-in or the default driver, of the analysis tool that was run.",
      "properties": {
        "artifactIndex": {
          "default": -1,
          "description": "The index within the run artifacts array of the artifact object associated with the component.",
          "minimum": -1,
          "type": "integer"
        },
        "dottedQuadFileVersion": {
          "description": "The binary version of the component's primary executable file expressed as four non-negative integers separated by a period (for operating systems that express file versions in this way).",
          "pattern": "[0-9]+(\\.[0-9]+){3}",
          "type": "string"
        },
        "downloadUri": {
          "description": "The absolute URI from which the component can be downloaded.",
          "format": "uri",
          "type": "string"
        },
        "fullName": {
          "description": "The name of the component along with its version and any other useful identifying information, such as its locale.",
          "type": "string"
        },
        "globalMessageStrings": {
          "additionalProperties": {
            "$ref": "#/definitions/multiformatMessageString"
          },
          "description": "A dictionary, each of whose keys is a resource identifier and each of whose values is a multiformatMessageString object, which holds message strings in plain text and (optionally) Markdown format. The strings can include placeholders, which can be used to construct a message in combination with an arbitrary number of additional string arguments.",
          "type": "object"
        },
        "name": {
          "description": "The name of the component.",
          "type": "string"
        },
        "notificationDescriptors": {
          "default": [],
          "description": "An array of reportDescriptor objects relevant to the notifications related to the configuration and runtime execution of the component.",
          "items": {
            "$ref": "#/definitions/reportingDescriptor"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the component."
        },
        "ruleDescriptors": {
          "default": [],
          "description": "An array of reportDescriptor objects relevant to the analysis performed by the component.",
          "items": {
            "$ref": "#/definitions/reportingDescriptor"
          },
          "minItems": 0,
          "type": "array",
          "uniqueItems": true
        },
        "semanticVersion": {
          "description": "The component version in the format specified by Semantic Versioning 2.0.",
          "type": "string"
        },
        "version": {
          "description": "The component version, in whatever format the component natively provides.",
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "versionControlDetails": {
      "additionalProperties": false,
      "description": "Specifies the information necessary to retrieve a desired revision from a version control system.",
      "properties": {
        "asOfTimeUtc": {
          "description": "A Coordinated Universal Time (UTC) date and time that can be used to synchronize an enlistment to the state of the repository at that time.",
          "format": "date-time",
          "type": "string"
        },
        "branch": {
          "description": "The name of a branch containing the revision.",
          "type": "string"
        },
        "mappedTo": {
          "$ref": "#/definitions/artifactLocation",
          "description": "The location in the local file system to which the root of the repository was mapped at the time of the analysis."
        },
        "properties": {
          "$ref": "#/definitions/propertyBag",
          "description": "Key/value pairs that provide additional information about the version control details."
        },
        "repositoryUri": {
          "description": "The absolute URI of the repository.",
          "format": "uri",
          "type": "string"
        },
        "revisionId": {
          "description": "A string that uniquely and permanently identifies the revision within the repository.",
          "type": "string"
        },
        "revisionTag": {
          "description": "A tag that has been applied to the revision.",
          "type": "string"
        }
      },
      "required": ["repositoryUri"],
      "type": "object"
    }
  },
  "description": "Static Analysis Results Format (SARIF) Version 2.0.0-csd.2.beta-2019-01-24 JSON Schema: a standard format for the output of static analysis tools.",
  "properties": {
    "$schema": {
      "description": "The URI of the JSON schema corresponding to the version.",
      "format": "uri",
      "type": "string"
    },
    "properties": {
      "$ref": "#/definitions/propertyBag",
      "description": "Key/value pairs that provide additional information about the log file."
    },
    "runs": {
      "description": "The set of runs contained in this log file.",
      "items": {
        "$ref": "#/definitions/run"
      },
      "minItems": 0,
      "type": "array",
      "uniqueItems": false
    },
    "version": {
      "description": "The SARIF format version of this log file.",
      "enum": ["2.0.0-csd.2.beta.2019-01-24"]
    }
  },
  "required": ["version", "runs"],
  "title": "Static Analysis Results Format (SARIF) Version 2.0.0-csd.2.beta.2019-01-24 JSON Schema",
  "type": "object"
}
