{
  "$schema": "http://json-schema.org/draft-04/schema",
  "definitions": {
    "alias": {
      "description": "domain names (optionally including subdomains) added to the account, or a string for a suffixed URL using .now.sh or a Custom Deployment Suffix",
      "type": "string"
    },
    "env": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "environment keys and values",
      "type": "object"
    }
  },
  "description": "ZEIT Now project configuration file",
  "properties": {
    "alias": {
      "oneOf": [
        {
          "items": {
            "$ref": "#/definitions/alias"
          },
          "maxItems": 64,
          "type": "array"
        },
        {
          "$ref": "#/definitions/alias"
        }
      ]
    },
    "build": {
      "properties": {
        "env": {
          "$ref": "#/definitions/env",
          "description": "environment variables passed to the Build processes"
        }
      },
      "type": "object"
    },
    "builds": {
      "description": "a list of build descriptions whose src references valid source files",
      "items": {
        "description": "build description",
        "properties": {
          "config": {
            "description": "An object including arbitrary metadata to be passed to the Builder.",
            "type": "object"
          },
          "src": {
            "description": "A glob expression or pathname. If more than one file is resolved, one build will be created per matched file. It can include `*` and `**`.",
            "type": "string"
          },
          "use": {
            "description": "A npm module to be installed by the build process. It can include a semver compatible version (e.g.: `@org/proj@1`).",
            "type": "string"
          }
        },
        "required": ["src", "use"],
        "type": "object"
      },
      "type": "array"
    },
    "env": {
      "$ref": "#/definitions/env",
      "description": "environment variables passed to the invoked Serverless Functions"
    },
    "github": {
      "description": "Git integration options",
      "properties": {
        "autoAlias": {
          "default": true,
          "description": "When set to false, Now for GitHub will not apply the alias upon merge.",
          "type": "boolean"
        },
        "autoJobCancelation": {
          "default": true,
          "description": "When set to false, Now for GitHub will always build pushes in sequence without cancelling a build for the most recent commit.",
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "description": "When set to false, Now for GitHub will not deploy the given project regardless of the GitHub app being installed.",
          "type": "boolean"
        },
        "silent": {
          "default": false,
          "description": "When set to true, Now for GitHub will stop commenting on pull requests and commits.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "name": {
      "description": "name for the deployment",
      "maxLength": 52,
      "type": "string"
    },
    "public": {
      "description": "When set to true, both the source view and logs view will be publicly accessible (when the user is authenticated with ZEIT).",
      "type": "boolean"
    },
    "regions": {
      "description": "the deployment regions of the Serverless Functions that get created as a result of the build steps",
      "items": {
        "description": "region identifier",
        "type": "string"
      },
      "type": "array"
    },
    "routes": {
      "description": "a list of route definitions",
      "items": {
        "description": "route definition",
        "oneOf": [
          {
            "required": ["src"]
          },
          {
            "required": ["handle"]
          }
        ],
        "properties": {
          "continue": {
            "description": "A boolean to change matching behavior. If true, routing will continue even when the src is matched.",
            "type": "boolean"
          },
          "dest": {
            "description": "A destination pathname or full URL, including querystring, with the ability to embed capture groups as $1, $2â€¦",
            "type": "string"
          },
          "handle": {
            "enum": ["filesystem"],
            "type": "string"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A set of headers to apply for responses.",
            "type": "object"
          },
          "methods": {
            "description": "A set of HTTP method types. If no method is provided, requests with any HTTP method will be a candidate for the route.",
            "items": {
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "CONNECT",
                "OPTIONS",
                "TRACE",
                "PATCH"
              ]
            },
            "type": "array"
          },
          "src": {
            "description": "A PCRE-compatible regular expression that matches each incoming pathname (excluding querystring).",
            "type": "string"
          },
          "status": {
            "description": "A status code to respond with. Can be used in tandem with `Location:` header to implement redirects.",
            "maximum": 599,
            "minimum": 100,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "scope": {
      "description": "an ID or slug for teams, or an email address, username, or ID for users",
      "type": "string"
    },
    "version": {
      "default": 2,
      "description": "the Now Platform version that the deployment should use and is known to work with",
      "enum": [1, 2]
    }
  },
  "type": "object"
}
