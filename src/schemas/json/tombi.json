{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/tombi.json",
  "title": "Tombi",
  "description": "**Tombi** (é³¶) is a toolkit for TOML; providing a formatter/linter and language server.\nSee the [GitHub repository](https://github.com/tombi-toml/tombi) for more information.",
  "type": "object",
  "properties": {
    "toml-version": {
      "title": "TOML version.",
      "description": "TOML version to use if not specified in the schema.",
      "anyOf": [
        {
          "$ref": "#/definitions/TomlVersion"
        },
        {
          "type": "null"
        }
      ],
      "default": "v1.0.0"
    },
    "include": {
      "title": "Deprecated. Use `files.include` instead.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "deprecated": true,
      "minItems": 1
    },
    "exclude": {
      "title": "Deprecated. Use `files.exclude` instead.",
      "type": ["array", "null"],
      "items": {
        "type": "string"
      },
      "deprecated": true,
      "minItems": 1
    },
    "files": {
      "anyOf": [
        {
          "$ref": "#/definitions/FilesOptions"
        },
        {
          "type": "null"
        }
      ]
    },
    "format": {
      "title": "Formatter options.",
      "anyOf": [
        {
          "$ref": "#/definitions/FormatOptions"
        },
        {
          "type": "null"
        }
      ]
    },
    "lint": {
      "title": "Linter options.",
      "anyOf": [
        {
          "$ref": "#/definitions/LintOptions"
        },
        {
          "type": "null"
        }
      ]
    },
    "lsp": {
      "title": "Language Server Protocol options.",
      "anyOf": [
        {
          "$ref": "#/definitions/LspOptions"
        },
        {
          "type": "null"
        }
      ]
    },
    "server": {
      "title": "Deprecated. Use `lsp` instead.",
      "anyOf": [
        {
          "$ref": "#/definitions/LspOptions"
        },
        {
          "type": "null"
        }
      ],
      "deprecated": true
    },
    "schema": {
      "title": "Schema options.",
      "anyOf": [
        {
          "$ref": "#/definitions/SchemaOptions"
        },
        {
          "type": "null"
        }
      ]
    },
    "schemas": {
      "title": "Schema catalog items.",
      "type": ["array", "null"],
      "items": {
        "$ref": "#/definitions/Schema"
      }
    }
  },
  "additionalProperties": false,
  "x-tombi-toml-version": "v1.1.0-preview",
  "x-tombi-table-keys-order": "schema",
  "definitions": {
    "TomlVersion": {
      "title": "TOML version.",
      "type": "string",
      "enum": ["v1.0.0", "v1.1.0-preview"]
    },
    "FilesOptions": {
      "title": "Files options.",
      "type": "object",
      "properties": {
        "include": {
          "title": "File patterns to include.",
          "description": "The file match pattern to include in formatting and linting.\nSupports glob pattern.",
          "type": ["array", "null"],
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "default": ["**/*.toml"]
        },
        "exclude": {
          "title": "File patterns to exclude.",
          "description": "The file match pattern to exclude from formatting and linting.\nSupports glob pattern.",
          "type": ["array", "null"],
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      },
      "additionalProperties": false,
      "x-tombi-table-keys-order": "schema"
    },
    "FormatOptions": {
      "title": "Formatter options.",
      "description": "To avoid needless discussion of formatting rules,\nwe do not currently have a configuration item for formatting.",
      "type": "object",
      "additionalProperties": false,
      "x-tombi-table-keys-order": "schema"
    },
    "LintOptions": {
      "type": "object",
      "properties": {
        "rules": {
          "title": "Lint rules.",
          "anyOf": [
            {
              "$ref": "#/definitions/LintRules"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "x-tombi-table-keys-order": "schema"
    },
    "LintRules": {
      "type": "object",
      "properties": {
        "key-empty": {
          "title": "Key empty.",
          "description": "Check if the key is empty.\n\n```toml\n# VALID BUT DISCOURAGED\n\"\" = true\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultWarn"
            },
            {
              "type": "null"
            }
          ]
        },
        "dotted-keys-out-of-order": {
          "title": "Dotted keys out of order.",
          "description": "Check if dotted keys are defined out of order.\n\n```toml\n# VALID BUT DISCOURAGED\napple.type = \"fruit\"\norange.type = \"fruit\"\napple.skin = \"thin\"\norange.skin = \"thick\"\n\n# RECOMMENDED\napple.type = \"fruit\"\napple.skin = \"thin\"\norange.type = \"fruit\"\norange.skin = \"thick\"\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultWarn"
            },
            {
              "type": "null"
            }
          ]
        },
        "tables-out-of-order": {
          "title": "Tables out of order.",
          "description": "Check if tables are defined out of order.\n\n```toml\n# VALID BUT DISCOURAGED\n[fruit.apple]\n[animal]\n[fruit.orange]\n\n# RECOMMENDED\n[fruit.apple]\n[fruit.orange]\n[animal]\n```",
          "anyOf": [
            {
              "$ref": "#/definitions/SeverityLevelDefaultWarn"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "x-tombi-table-keys-order": "version-sort"
    },
    "SeverityLevelDefaultWarn": {
      "default": "warn",
      "allOf": [
        {
          "$ref": "#/definitions/SeverityLevel"
        }
      ]
    },
    "SeverityLevel": {
      "oneOf": [
        {
          "title": "Disable the Rule.",
          "type": "string",
          "const": "off"
        },
        {
          "title": "Display as Warning.",
          "type": "string",
          "const": "warn"
        },
        {
          "title": "Display as Error.",
          "type": "string",
          "const": "error"
        }
      ]
    },
    "LspOptions": {
      "type": "object",
      "properties": {
        "code-action": {
          "title": "Code Action Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspCodeAction"
            },
            {
              "type": "null"
            }
          ]
        },
        "completion": {
          "title": "Completion Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspCompletion"
            },
            {
              "type": "null"
            }
          ]
        },
        "diagnostics": {
          "title": "Diagnostics Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspDiagnostics"
            },
            {
              "type": "null"
            }
          ]
        },
        "document-link": {
          "title": "Document Link Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspDocumentLink"
            },
            {
              "type": "null"
            }
          ]
        },
        "formatting": {
          "title": "Formatting Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspFormatting"
            },
            {
              "type": "null"
            }
          ]
        },
        "goto-declaration": {
          "title": "Goto Declaration Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspGotoDefinition"
            },
            {
              "type": "null"
            }
          ]
        },
        "goto-definition": {
          "title": "Goto Definition Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspGotoDefinition"
            },
            {
              "type": "null"
            }
          ]
        },
        "goto-type-definition": {
          "title": "Goto Type Definition Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspGotoDefinition"
            },
            {
              "type": "null"
            }
          ]
        },
        "hover": {
          "title": "Hover Feature options.",
          "anyOf": [
            {
              "$ref": "#/definitions/LspHover"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "x-tombi-table-keys-order": "ascending"
    },
    "LspCodeAction": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable code action feature.",
          "description": "Whether to enable code action.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "BoolDefaultTrue": {
      "type": "boolean",
      "default": true
    },
    "LspCompletion": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable completion feature.",
          "description": "Whether to enable completion.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "LspDiagnostics": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable diagnostics feature.",
          "description": "Whether to enable diagnostics.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "LspDocumentLink": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable document link feature.",
          "description": "Whether to enable document link.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "LspFormatting": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable formatting feature.",
          "description": "Whether to enable formatting.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "LspGotoDefinition": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable goto definition feature.",
          "description": "Whether to enable goto definition.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "LspHover": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable hover feature.",
          "description": "Whether to enable hover.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "SchemaOptions": {
      "type": "object",
      "properties": {
        "enabled": {
          "title": "Enable or disable the schema.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        },
        "strict": {
          "title": "Enable or disable strict schema validation.",
          "description": "If `additionalProperties` is not specified in the JSON Schema,\nthe strict mode treats it as `additionalProperties: false`,\nwhich is different from the JSON Schema specification.",
          "anyOf": [
            {
              "$ref": "#/definitions/BoolDefaultTrue"
            },
            {
              "type": "null"
            }
          ]
        },
        "catalog": {
          "title": "Schema catalog options.",
          "anyOf": [
            {
              "$ref": "#/definitions/SchemaCatalog"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "x-tombi-table-keys-order": "schema"
    },
    "SchemaCatalog": {
      "anyOf": [
        {
          "$ref": "#/definitions/NewSchemaCatalog"
        },
        {
          "$ref": "#/definitions/SchemaCatalogOld"
        }
      ]
    },
    "NewSchemaCatalog": {
      "type": "object",
      "properties": {
        "paths": {
          "title": "The schema catalog path/url array.",
          "description": "The catalog is evaluated after the schemas specified by [[schemas]].\\\nSchemas are loaded in order from the beginning of the catalog list.",
          "type": ["array", "null"],
          "items": {
            "$ref": "#/definitions/SchemaCatalogPath"
          },
          "default": [
            "tombi:///json/catalog.json",
            "https://json.schemastore.org/api/json/catalog.json"
          ]
        }
      },
      "additionalProperties": false
    },
    "SchemaCatalogPath": {
      "description": "Generic value that can be either single or multiple",
      "type": "string"
    },
    "SchemaCatalogOld": {
      "type": "object",
      "properties": {
        "path": {
          "title": "The schema catalog path or url.",
          "description": "**ð§ Deprecated ð§**\\\nPlease use `schema.catalog.paths` instead.",
          "anyOf": [
            {
              "$ref": "#/definitions/OneOrMany"
            },
            {
              "type": "null"
            }
          ],
          "deprecated": true,
          "default": "https://json.schemastore.org/api/json/catalog.json"
        }
      },
      "additionalProperties": false
    },
    "OneOrMany": {
      "anyOf": [
        {
          "$ref": "#/definitions/SchemaCatalogPath"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaCatalogPath"
          }
        }
      ]
    },
    "Schema": {
      "anyOf": [
        {
          "$ref": "#/definitions/RootSchema"
        },
        {
          "$ref": "#/definitions/SubSchema"
        },
        {
          "$ref": "#/definitions/OldSubSchema"
        }
      ]
    },
    "RootSchema": {
      "title": "The schema for the root table.",
      "type": "object",
      "properties": {
        "toml-version": {
          "title": "The TOML version that the schema is available.",
          "anyOf": [
            {
              "$ref": "#/definitions/TomlVersion"
            },
            {
              "type": "null"
            }
          ]
        },
        "path": {
          "title": "The schema path.",
          "type": "string"
        },
        "include": {
          "title": "The file match pattern of the schema.",
          "description": "The file match pattern to include the target to apply the schema.\nSupports glob pattern.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      },
      "additionalProperties": false,
      "required": ["path", "include"],
      "x-tombi-table-keys-order": "schema"
    },
    "SubSchema": {
      "title": "The schema for the sub value.",
      "type": "object",
      "properties": {
        "root": {
          "title": "The accessors to apply the sub schema.",
          "type": "string",
          "examples": ["tools.tombi", "items[0].name"],
          "minLength": 1
        },
        "path": {
          "title": "The sub schema path.",
          "type": "string"
        },
        "include": {
          "title": "The file match pattern of the sub schema.",
          "description": "The file match pattern to include the target to apply the sub schema.\nSupports glob pattern.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      },
      "additionalProperties": false,
      "required": ["root", "path", "include"],
      "x-tombi-table-keys-order": "schema"
    },
    "OldSubSchema": {
      "title": "The schema for the old sub value.",
      "description": "This is for backward compatibility.",
      "type": "object",
      "properties": {
        "path": {
          "title": "The sub schema path.",
          "type": "string"
        },
        "include": {
          "title": "The file match pattern of the sub schema.",
          "description": "The file match pattern to include the target to apply the sub schema.\nSupports glob pattern.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "root-keys": {
          "title": "The keys to apply the sub schema.",
          "description": "**ð§ Deprecated ð§**\\\nPlease use `schemas[*].root` instead.",
          "type": "string",
          "deprecated": true,
          "minLength": 1
        }
      },
      "additionalProperties": false,
      "required": ["path", "include", "root-keys"],
      "x-tombi-table-keys-order": "schema"
    }
  }
}
