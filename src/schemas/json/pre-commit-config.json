{
  "$id": "https://json.schemastore.org/pre-commit-config.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "definitions": {
    "hook_definition": {
      "properties": {
        "additional_dependencies": {
          "description": "(optional) a list of dependencies that will be installed in the environment where this hook gets run. One useful application is to install plugins for hooks such as eslint.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "alias": {
          "description": "(optional) allows the hook to be referenced using an additional id when using pre-commit run <hookid>.",
          "type": "string"
        },
        "always_run": {
          "description": "(optional) if true, this hook will run even if there are no matching files.",
          "type": "boolean"
        },
        "args": {
          "description": "(optional) list of additional parameters to pass to the hook.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "entry": {
          "description": "(optional) Override default command to execute for the hook.",
          "type": "string"
        },
        "exclude": {
          "description": "(optional) file exclude pattern.",
          "type": "string"
        },
        "exclude_types": {
          "$ref": "https://json.schemastore.org/pre-commit-hooks.json#/definitions/file_types",
          "description": "(optional) file types to exclude."
        },
        "files": {
          "description": "(optional) override the default pattern for files to run on.",
          "type": "string"
        },
        "id": {
          "description": "which hook from the repository to use.",
          "type": "string"
        },
        "language": {
          "$ref": "https://json.schemastore.org/pre-commit-hooks.json#/definitions/language",
          "description": "(optional) Tells pre-commit on how to install the hook. See https://pre-commit.com/#supported-languages"
        },
        "language_version": {
          "description": "(optional) override the language version for the hook. See https://pre-commit.com/#overriding-language-version.",
          "type": "string"
        },
        "log_file": {
          "description": "(optional) if present, the hook output will additionally be written to a file.",
          "type": "string"
        },
        "name": {
          "description": "(optional) override the name of the hook - shown during hook execution.",
          "type": "string"
        },
        "pass_filenames": {
          "default": false,
          "description": "(optional) if false, this hook will be called only once without being called for each matching file.",
          "type": "boolean"
        },
        "stages": {
          "$ref": "https://json.schemastore.org/pre-commit-hooks.json#/definitions/stages",
          "description": "(optional) confines the hook to the commit, merge-commit, push, prepare-commit-msg, commit-msg, post-checkout, post-commit or manual stage. See https://pre-commit.com/#confining-hooks-to-run-at-certain-stages."
        },
        "types": {
          "$ref": "https://json.schemastore.org/pre-commit-hooks.json#/definitions/file_types",
          "description": "(optional) override the default file types to run on. See https://pre-commit.com/#filtering-files-with-types."
        },
        "types_or": {
          "$ref": "https://json.schemastore.org/pre-commit-hooks.json#/definitions/file_types",
          "description": "(optional) override the default file types to run on (OR). See Filtering files with types. new in 2.9.0."
        },
        "verbose": {
          "description": "(optional) if true, forces the output of the hook to be printed even when the hook passes.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "local_repo": {
      "properties": {
        "hooks": {
          "items": {
            "$ref": "#/definitions/hook_definition",
            "required": ["id", "name", "entry", "language"],
            "type": "object"
          },
          "type": "array"
        },
        "repo": {
          "default": "local",
          "description": "local hooks",
          "enum": ["local"],
          "type": "string"
        }
      },
      "type": "object"
    },
    "meta_repo": {
      "properties": {
        "hooks": {
          "items": {
            "properties": {
              "id": {
                "enum": [
                  "check-hooks-apply",
                  "check-useless-excludes",
                  "identity"
                ],
                "type": "string"
              }
            },
            "required": ["id"],
            "type": "object"
          },
          "type": "array"
        },
        "repo": {
          "default": "meta",
          "description": "meta hooks",
          "enum": ["meta"],
          "type": "string"
        }
      },
      "type": "object"
    },
    "uri_repo": {
      "properties": {
        "hooks": {
          "description": "A list of hook mappings. See https://pre-commit.com/#pre-commit-configyaml---hooks.",
          "items": {
            "$ref": "#/definitions/hook_definition",
            "type": "object"
          },
          "type": "array"
        },
        "repo": {
          "description": "the repository url to git clone from",
          "pattern": "^(?!.*(local|meta)).*$",
          "type": "string"
        },
        "rev": {
          "description": "the revision or tag to clone at (previously sha).",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "properties": {
    "ci": {
      "description": "pre-commit.ci specific settings. See https://pre-commit.ci/#configuration",
      "properties": {
        "autofix_commit_msg": {
          "default": "[pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci",
          "description": "custom commit message for PR autofixes",
          "type": "string"
        },
        "autofix_prs": {
          "default": true,
          "description": "whether to autofix pull requests. when disabled, comment \"pre-commit.ci autofix\" on a pull request to manually trigger auto-fixing",
          "type": "boolean"
        },
        "autoupdate_branch": {
          "default": "",
          "description": "branch to send autoupdate PRs to. by default, pre-commit.ci will update the default branch of the repository.",
          "type": "string"
        },
        "autoupdate_commit_msg": {
          "default": "[pre-commit.ci] pre-commit autoupdate",
          "description": "custom commit message for autoupdate PRs",
          "type": "string"
        },
        "autoupdate_schedule": {
          "default": "weekly",
          "description": "control when the autoupdate runs",
          "enum": ["weekly", "monthly", "quarterly"],
          "type": "string"
        },
        "skip": {
          "description": "which hook ids to be skipped when running under pre-commit.ci",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "submodules": {
          "default": false,
          "description": "whether to recursive check out submodules",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "default_language_version": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "(optional: default {}) a mapping from language to the default language_version that should be used for that language. This will only override individual hooks that do not set language_version.",
      "type": "object"
    },
    "default_stages": {
      "$ref": "https://json.schemastore.org/pre-commit-hooks.json#/definitions/stages",
      "description": "(optional: default (all stages)) a configuration-wide default for the stages property of hooks. This will only override individual hooks that do not set stages."
    },
    "exclude": {
      "default": "^$",
      "description": "(optional: default ^$) global file exclude pattern.",
      "type": "string"
    },
    "fail_fast": {
      "default": false,
      "description": "(optional: default false) set to true to have pre-commit stop running hooks after the first failure.",
      "type": "boolean"
    },
    "files": {
      "default": "",
      "description": "(optional: default '') global file include pattern.",
      "type": "string"
    },
    "minimum_pre_commit_version": {
      "default": "0",
      "description": "(optional: default '0') require a minimum version of pre-commit.",
      "type": "string"
    },
    "repos": {
      "description": "A list of repository mappings. See https://pre-commit.com/#pre-commit-configyaml---repos.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/meta_repo"
          },
          {
            "$ref": "#/definitions/local_repo"
          },
          {
            "$ref": "#/definitions/uri_repo"
          }
        ]
      },
      "type": "array"
    }
  },
  "required": ["repos"],
  "title": "JSON schema for .pre-commit-config.yaml",
  "type": "object"
}
