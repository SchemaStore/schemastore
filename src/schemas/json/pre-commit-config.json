{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "JSON schema for .pre-commit-config.yaml",
    "type": "object",
    "properties": {
        "repos": {
            "$comment": "A list of repository mappings. See https://pre-commit.com/#pre-commit-configyaml---repos.",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "repo": {
                        "$comment": "the repository url to git clone from",
                        "type": "string"
                    },
                    "rev": {
                        "$comment": "the revision or tag to clone at (previously sha).",
                        "type": "string"
                    },
                    "hooks": {
                        "$comment": "A list of hook mappings. See https://pre-commit.com/#pre-commit-configyaml---hooks.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$comment": "which hook from the repository to use.",
                                    "type": "string"
                                },
                                "alias": {
                                    "$comment": "(optional) allows the hook to be referenced using an additional id when using pre-commit run <hookid>.",
                                    "type": "string"
                                },
                                "name": {
                                    "$comment": "(optional) override the name of the hook - shown during hook execution.",
                                    "type": "string"
                                },
                                "language_version": {
                                    "$comment": "(optional) override the language version for the hook. See https://pre-commit.com/#overriding-language-version.",
                                    "type": "string"
                                },
                                "files": {
                                    "$comment": "(optional) override the default pattern for files to run on.",
                                    "type": "string"
                                },
                                "exclude": {
                                    "$comment": "(optional) file exclude pattern.",
                                    "type": "string"
                                },
                                "types": {
                                    "$comment": "(optional) override the default file types to run on. See https://pre-commit.com/#filtering-files-with-types.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "exclude_types": {
                                    "$comment": "(optional) file types to exclude.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "args": {
                                    "$comment": "(optional) list of additional parameters to pass to the hook.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "stages": {
                                    "$comment": "(optional) confines the hook to the commit, merge-commit, push, prepare-commit-msg, commit-msg, post-checkout, or manual stage. See https://pre-commit.com/#confining-hooks-to-run-at-certain-stages.",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": ["commit", "merge-commit", "push", "prepare-commit-msg", "commit-msg", "manual"]
                                    }
                                },
                                "additional_dependencies": {
                                    "$comment": "(optional) a list of dependencies that will be installed in the environment where this hook gets run. One useful application is to install plugins for hooks such as eslint.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "always_run": {
                                    "$comment": "(optional) if true, this hook will run even if there are no matching files.",
                                    "type": "boolean"
                                },
                                "verbose": {
                                    "$comment": "(optional) if true, forces the output of the hook to be printed even when the hook passes.",
                                    "type": "boolean"
                                },
                                "log_file": {
                                    "$comment": "(optional) if present, the hook output will additionally be written to a file.",
                                    "type": "string"
                                }
                            },
                            "required": ["id"]
                        }
                    }
                }
            }
        },
        "default_language_version": {
            "$comment": "(optional: default {}) a mapping from language to the default language_version that should be used for that language. This will only override individual hooks that do not set language_version.",
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "default_stages": {
            "$comment": "(optional: default (all stages)) a configuration-wide default for the stages property of hooks. This will only override individual hooks that do not set stages.",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "files": {
            "$comment": "(optional: default '') global file include pattern.",
            "type": "string",
            "default": ""
        },
        "exclude": {
            "$comment": "(optional: default ^$) global file exclude pattern.",
            "type": "string",
            "default": "^$"
        },
        "fail_fast": {
            "$comment": "(optional: default false) set to true to have pre-commit stop running hooks after the first failure.",
            "type": "boolean",
            "default": false
        },
        "minimum_pre_commit_version": {
            "$comment": "(optional: default '0') require a minimum version of pre-commit.",
            "type": "string",
            "default": "0"
        }
    },
    "required": ["repos"]
}