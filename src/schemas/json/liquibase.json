{
    "$schema": "http://json-schema.org/draft-07/schema",
    "definitions": {
        "catalogName": {
            "description": "The name of the catalog",
            "type": "string",
            "default": ""
        },
        "schemaName": {
            "description": "The name of the schema",
            "type": "string",
            "default": ""
        },
        "remarks": {
            "description": "The comments stored for the table/view/column",
            "type": "string",
            "default": ""
        },
        "tableName": {
            "description": "The name of the table",
            "type": "string",
            "default": ""
        },
        "where": {
            "description": "Allows to define the 'where' condition(s) string",
            "type": "string",
            "default": ""
        },
        "dbms": {
            "$comment": "https://www.liquibase.org/get-started/databases",
            "description": "Specifies logical expression of database type(s) on which the change must be applied. Valid database type names are listed on the supported databases page. It can be a comma-separated list of multiple databases or you can also specify that a change is not applicable to a particular database type by prefixing with !. The keywords all and none are also available.",
            "type": "string",
            "default": ""
        },
        "column": {
            "type": "object",
            "default": {},
            "properties": {
                "name": {
                    "description": "The name of the column.",
                    "type": "string",
                    "default": ""
                },
                "computed": {
                    "description": "The attribute which is used if the value in name isn't actually a column name but a function. Since 3.3.0",
                    "type": "boolean",
                    "default": false
                },
                "descending": {
                    "description": "The boolean attribute which allows you to specify that a column should be used in a descending order in the index if it is used in a createIndex command. Default value is false (in an ascending order) Since 3.4",
                    "type": "boolean",
                    "default": false
                },
                "type": {
                    "description": "The column data type.",
                    "type": "string",
                    "default": ""
                },
                "value": {
                    "description": "The value for which to set the column. The value will be surrounded by quote marks and nested quote marks will be escaped.",
                    "type": "string",
                    "default": ""
                },
                "valueNumeric": {
                    "description": "The numeric value to set the column to. The value will not be escaped and will not be nested in quote marks.",
                    "type": "number",
                    "default": ""
                },
                "valueBoolean": {
                    "description": "The boolean value to set the column to. The actual value string inserted will depend on the database implementation.",
                    "type": "boolean",
                    "default": ""
                },
                "valueDate": {
                    "description": "The date and time value to set the column to. The value is specified in one of the following forms: YYYY-MM-DD, hh:mm:ss, or YYYY-MM-DDThh:mm:ss.",
                    "type": "string",
                    "default": ""
                },
                "valueComputed": {
                    "description": "The value that is returned from a function or procedure call. This attribute will contain the function to call.",
                    "type": "string",
                    "default": ""
                },
                "valueSequenceCurrent": {
                    "$comment": "https://docs.liquibase.com/change-types/community/update.html",
                    "description": "The name of the sequence in which the current value is used.",
                    "type": "string",
                    "default": ""
                },
                "valueSequenceNext": {
                    "$comment": "https://docs.liquibase.com/change-types/community/update.html",
                    "description": "The name of the sequence in which the next value is used.",
                    "type": "string",
                    "default": ""
                },
                "valueBlobFile": {
                    "description": "The path to a file, whose contents will be written as a BLOB (i.e. chunk of binary data).\n\nThe path to the changelog file location must be either absolute or relative. An example of an absolute path is: /usr/local/somefile.dat on Unix or c:\\Directory\\somefile.dat on Windows.",
                    "type": "string",
                    "default": ""
                },
                "valueClobFile": {
                    "description": "The path to a file, whose contents will be written as a CLOB (i.e. chunk of character data).\nThe path to the changelog file location must be either absolute or relative. An example of an absolute path is: /usr/local/somefile.dat on Unix or c:\\Directory\\somefile.dat on Windows.",
                    "type": "string",
                    "default": ""
                },
                "defaultValue": {
                    "description": "The default value for column.",
                    "type": "string",
                    "default": ""
                },
                "defaultValueNumeric": {
                    "description": "The default numeric value for column.",
                    "type": "number",
                    "default": ""
                },
                "defaultValueDate": {
                    "description": "The default date and time value for column. The value is specified in one of the following forms: YYYY-MM-DD, hh:mm:ss, or YYYY-MM-DDThh:mm:ss.",
                    "type": "string",
                    "default": ""
                },
                "defaultValueBoolean": {
                    "description": "The default boolean value for column.",
                    "type": "boolean",
                    "default": false
                },
                "defaultValueComputed": {
                    "description": "The default value that is returned from a function or procedure call. This attribute will contain the function to call.",
                    "type": "string",
                    "default": ""
                },
                "defaultValueSequenceCurrent": {
                    "type": "string",
                    "default": ""
                },
                "defaultValueSequenceNext": {
                    "type": "string",
                    "default": ""
                },
                "defaultValueConstraintName": {
                    "type": "string",
                    "default": ""
                },
                "autoIncrement": {
                    "description": "The auto-increment column. Ignored on databases that do not support the autoincrement/identity functionality.",
                    "type": "boolean",
                    "default": false
                },
                "startWith": {
                    "description": "The value auto-increment start. Ignored on databases that do not support autoincrement/identity functionality.",
                    "type": "integer",
                    "default": 0
                },
                "incrementBy": {
                    "description": "The value of each step by auto-increment. Ignored on databases that do not support autoincrement/identity functionality.",
                    "type": "integer",
                    "default": 0
                },
                "generationType": {
                    "type": "string",
                    "default": ""
                },
                "defaultOnNull": {
                    "type": "boolean",
                    "default": false
                },
                "remarks": {
                    "description": "A short description of the column (column comment).",
                    "type": "string",
                    "default": ""
                },
                "encoding": {
                    "description": "The name of the encoding (specified in java.nio.Charset javadoc, e.g. \"UTF-8\") of the CLOB file (specified in valueClobFile) contents.",
                    "type": "string",
                    "default": ""
                },
                "beforeColumn": {
                    "$comment": "https://docs.liquibase.com/change-types/community/create-table.html",
                    "description": "The attribute that allows you to control where in the table column order the new column goes if it is used in an addColumn command. Only one of beforeColumn, afterColumn, or position is allowed. Since 3.1",
                    "type": "string",
                    "default": ""
                },
                "afterColumn": {
                    "$comment": "https://docs.liquibase.com/change-types/community/create-table.html",
                    "description": "The attribute that allows you to control where in the table column order the new column goes if it is used in an addColumn command. Only one of beforeColumn, afterColumn, or position is allowed. Since 3.1",
                    "type": "string",
                    "default": ""
                },
                "position": {
                    "$comment": "https://docs.liquibase.com/change-types/community/create-table.html",
                    "description": "The attribute that allows you to control where in the table column order the new column goes if it is used in an addColumn command. Only one of beforeColumn, afterColumn, or position is allowed. Uses one based index. Since 3.1",
                    "type": "number",
                    "default": ""
                },
                "constraints": {
                    "description": "Constraint definitions",
                    "type": "object",
                    "default": {},
                    "properties": {
                        "nullable": {
                            "description": "The attribute that defines whether the column is nullable.",
                            "type": "boolean",
                            "default": false
                        },
                        "notNullConstraintName": {
                            "description": "The not null constraint name.",
                            "type": "string",
                            "default": ""
                        },
                        "primaryKey": {
                            "description": "The attribute that defines whether the column is a primary key.",
                            "type": "boolean",
                            "default": false
                        },
                        "primaryKeyName": {
                            "description": "The primary key name Since 1.6.",
                            "type": "string",
                            "default": ""
                        },
                        "primaryKeyTablespace": {
                            "description": "The tablespace to use for the defined primary key.",
                            "type": "string",
                            "default": ""
                        },
                        "unique": {
                            "description": "The attribute that defines whether a unique clause should be applied.",
                            "type": "boolean",
                            "default": false
                        },
                        "uniqueConstraintName": {
                            "description": "The unique constraint name.",
                            "type": "string",
                            "default": ""
                        },
                        "references": {
                            "description": "The foreign key definition.",
                            "type": "string",
                            "default": ""
                        },
                        "referencedTableCatalogName": {
                            "description": "The name of the catalog.",
                            "type": "string",
                            "default": ""
                        },
                        "referencedTableSchemaName": {
                            "description": "The name of the schema.",
                            "type": "string",
                            "default": ""
                        },
                        "referencedTableName": {
                            "description": "The name of the table.",
                            "type": "string",
                            "default": ""
                        },
                        "referencedColumnNames": {
                            "description": "The name of the column.",
                            "type": "string",
                            "default": ""
                        },
                        "foreignKeyName": {
                            "description": "The foreign key name.",
                            "type": "string",
                            "default": ""
                        },
                        "deleteCascade": {
                            "description": "The attribute that sets delete cascade.",
                            "type": "boolean",
                            "default": false
                        },
                        "deferrable": {
                            "description": "The attribute that defines whether constraints are deferrable.",
                            "type": "boolean",
                            "default": false
                        },
                        "initiallyDeferred": {
                            "description": "The attribute that defines whether constraints are initially deferred.",
                            "type": "boolean",
                            "default": false
                        },
                        "checkConstraint": {
                            "description": "The attribute that defines whether to validate the defined check constraint.",
                            "type": "string",
                            "default": ""
                        },
                        "validateNullable": {
                            "description": "The attribute that defines whether to validate the defined not null constraint.",
                            "type": "boolean",
                            "default": false
                        },
                        "validateUnique": {
                            "description": "The attribute that defines whether to validate the defined unique constraint.",
                            "type": "boolean",
                            "default": false
                        },
                        "validatePrimaryKey": {
                            "description": "The attribute that defines whether to validate the defined primary key constraint.",
                            "type": "boolean",
                            "default": false
                        },
                        "validateForeignKey": {
                            "description": "The attribute that defines whether to validate the defined foreign key constraint.",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "additionalProperties": true
                }
            },
            "additionalProperties": true
        },
        "columns": {
            "description": "The column constraint and foreign key information. Setting the defaultValue attribute will specify a default value for the column. Setting the value attribute will set all rows existing to the specified value without modifying the column default.\nSee Information about the <column> tag section for more information.",
            "type": "array",
            "default": [],
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "column": {
                                "$ref": "#/definitions/column"
                            }
                        }
                    }
                ]
            }
        },
        "preConditions": {
            "type": "array",
            "default": [],
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "onFailMessage": {
                                "type": "string",
                                "default": ""
                            },
                            "onErrorMessage": {
                                "type": "string",
                                "default": ""
                            },
                            "onFail": {
                                "type": "string",
                                "default": ""
                            },
                            "onError": {
                                "type": "string",
                                "default": ""
                            },
                            "onSqlOutput": {
                                "type": "string",
                                "default": ""
                            }
                        },
                        "additionalProperties": true
                    }
                ]
            }
        },
        "createTable": {
            "$comment": "https://docs.liquibase.com/change-types/community/create-table.html",
            "description": "You can typically use the createTable Change Type when you want to create a table in your changelog file and then deploy it to your database. It can include columns and another values listed in this documentation.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "tablespace": {
                    "description": "The name of the tablespace in which the table is created",
                    "type": "string",
                    "default": ""
                },
                "remarks": {
                    "$ref": "#/definitions/remarks"
                },
                "columns": {
                    "description": "Column definitions",
                    "$ref": "#/definitions/columns"
                }
            },
            "additionalProperties": true
        },
        "createView": {
            "$comment": "https://docs.liquibase.com/change-types/community/create-view.html",
            "description": "Creates a new database view.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "viewName": {
                    "description": "\tName of the view to create",
                    "type": "string",
                    "default": ""
                },
                "remarks": {
                    "$ref": "#/definitions/remarks"
                },
                "replaceIfExists": {
                    "description": "Use 'create or replace' syntax",
                    "type": "boolean",
                    "default": false
                },
                "fullDefinition": {
                    "description": "Set to true if selectQuery is the entire view definition. False if the CREATE VIEW header should be added.",
                    "type": "boolean",
                    "default": false
                },
                "path": {
                    "description": "Path to file containing view definition",
                    "type": "string",
                    "default": ""
                },
                "encoding": {
                    "description": "Encoding used in the file defined in the `path` attribute",
                    "type": "string",
                    "default": ""
                },
                "relativeToChangelogFile": {
                    "description": "Whether the file path relative to the root changelog file rather than to the classpath.",
                    "type": "boolean",
                    "default": false
                },
                "#text": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "sql": {
            "$comment": "https://docs.liquibase.com/change-types/community/sql.html",
            "description": "It is useful for complex changes that aren't supported through Liquibase's automated Change Types and to work around bugs and limitations of Liquibase. The SQL contained in the <SQL> Change Type can be multi-line.",
            "type": "object",
            "default": {},
            "properties": {
                "stripComments": {
                    "description": "Set to true to remove any comments in the SQL before executing, otherwise false.",
                    "type": "boolean",
                    "default": false
                },
                "splitStatements": {
                    "description": "Set to false to not have Liquibase split statements on ;'s and GO's. Defaults to true if not set",
                    "type": "boolean",
                    "default": false
                },
                "endDelimiter": {
                    "description": "Indicates the end of the SQL statement and prevents incomplete SQL statements from being processed when the SQL files contain statements referencing a ; which Liquibase treats as the default end delimiter. You can use the endDelimiter when the changeset contains SQL to create a stored procedure or function that contains the default ; end delimiter to separate the statements inside the procedure.\nFor more information, see The endDelimiter SQL attribute.",
                    "type": "string",
                    "default": ""
                },
                "dbms": {
                    "$ref": "#/definitions/dbms"
                },
                "comment": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "update": {
            "$comment": "https://docs.liquibase.com/change-types/community/update.html",
            "description": "You can typically use the update Change Type when you want to update a table in your changelog file and then deploy this update to your database. It can include columns and another values listed in this documentation.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columns": {
                    "$ref": "#/definitions/columns"
                },
                "where": {
                    "$ref": "#/definitions/where"
                },
                "whereParams": {
                    "$ref": "#/definitions/whereParams"
                }
            },
            "additionalProperties": true
        },
        "delete": {
            "$comment": "https://docs.liquibase.com/change-types/community/delete.html",
            "description": "Deletes data from an existing table.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "where": {
                    "$ref": "#/definitions/where"
                },
                "whereParams": {
                    "$ref": "#/definitions/whereParams"
                }
            },
            "additionalProperties": true
        },
        "whereParams": {
            "$comment": "https://docs.liquibase.com/change-types/community/update.html",
            "$comment": "https://docs.liquibase.com/change-types/community/delete.html",
            "type": "array",
            "default": [],
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "param": {
                                "type": "object",
                                "default": {},
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "value": {
                                        "description": "Value of the attribute.\nNote: If not set, then the first valueXXX defined is used in the order they appear.",
                                        "type": "string",
                                        "default": ""
                                    },
                                    "valueNumeric": {
                                        "description": "integer value of the attribute.",
                                        "type": "number",
                                        "default": ""
                                    },
                                    "valueBoolean": {
                                        "description": "boolean value of the attribute.",
                                        "type": "boolean",
                                        "default": ""
                                    },
                                    "valueDate": {
                                        "description": "Date and/or Time value to set the attribute to. The value shall be specified in one of the following forms: \"YYYY-MM-DD\", \"hh:mm:ss\" or \"YYYY-MM-DDThh:mm:ss\".",
                                        "type": "string",
                                        "default": ""
                                    },
                                    "valueComputed": {
                                        "description": "A value that is returned from a function or procedure call. This attribute shall contain the function name to call.",
                                        "type": "string",
                                        "default": ""
                                    },
                                    "valueSequenceNext": {
                                        "description": "Name of the sequence which next value is used",
                                        "type": "string",
                                        "default": ""
                                    },
                                    "valueSequenceCurrent": {
                                        "description": "Name of the sequence which current value is used",
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "additionalProperties": true
                            }
                        },
                        "additionalProperties": true
                    }
                ]
            }
        },
        "tagDatabase": {
            "$comment": "https://docs.liquibase.com/change-types/community/tag-database.html",
            "description": "The tagDatabase Change Type applies a tag to the database for future update or rollback.",
            "type": "object",
            "default": {},
            "properties": {
                "tag": {
                    "description": "The tag to apply",
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "dropTable": {
            "$comment": "https://docs.liquibase.com/change-types/community/drop-table.html",
            "description": "Drops an existing table from your database.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "cascadeConstraints": {
                    "description": "Add the `CASCADE CONSTRAINTS` to the statement",
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": true
        },
        "renameView": {
            "$comment": "https://docs.liquibase.com/change-types/community/rename-view.html",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "oldViewName": {
                    "description": "Name of the view to rename",
                    "type": "string",
                    "default": ""
                },
                "newViewName": {
                    "description": "Name to rename the view to",
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "dropView": {
            "$comment": "https://docs.liquibase.com/change-types/community/drop-view.html",
            "description": "Drops an existing view.",
            "type": "object",
            "default": {},
            "properties": {
                "viewName": {
                    "description": "Name of the view to drop",
                    "type": "string",
                    "default": ""
                },
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                }
            },
            "additionalProperties": true
        },
        "insert": {
            "$comment": "https://docs.liquibase.com/change-types/community/insert.html",
            "description": "You can typically use the insert Change Type when you want to add and deploy the specific data or values to the existing table in your database. It can include columns and another attributes listed in this documentation.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "dbms": {
                    "$ref": "#/definitions/dbms"
                },
                "columns": {
                    "$ref": "#/definitions/columns"
                }
            },
            "additionalProperties": true
        },
        "addColumn": {
            "$comment": "https://docs.liquibase.com/change-types/community/add-column.html",
            "description": "You can typically use the addColumn Change Type when you want to add a new column and deploy it to the table in your database.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columns": {
                    "$ref": "#/definitions/columns"
                }
            },
            "additionalProperties": true
        },
        "createProcedure": {
            "$comment": "https://docs.liquibase.com/change-types/community/create-procedure.html",
            "description": "The createProcedure Change Type defines the definition for a stored procedure. This Change Type is better to use for creating procedures than the raw SQL command because it will not attempt to strip comments or break up lines.\n\nOften times it is best to use the CREATE OR REPLACE syntax along with setting runOnChange='true' on the enclosing changeset tag. That way if you need to make a change to your procedure, you can change your existing code rather than creating a new REPLACE PROCEDURE call. The advantage to this approach is that it keeps your changelog smaller and allows you to more easily see what has changed in your procedure code through your source control system's diff command.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "procedureText": {
                    "description": "The SQL creating the procedure. You need to define either this attribute or the path attribute. The procedureText attribute is not supported in the XML format; however, you can specify the procedure SQL within <createProcedure></<createProcedure> tags. See the XML example.",
                    "type": "string",
                    "default": ""
                },
                "procedureName": {
                    "description": "The name of the procedure. It is required if replaceIfExists= true",
                    "type": "string",
                    "default": ""
                },
                "path": {
                    "description": "The file containing the procedure text. Either this attribute or a nested procedure text is required.",
                    "type": "string",
                    "default": ""
                },
                "encoding": {
                    "description": "The encoding used in the file defined in the `path` attribute",
                    "type": "string",
                    "default": ""
                },
                "relativeToChangelogFile": {
                    "description": "Defines whether the file path is relative to the root changelog file rather than to the classpath.",
                    "type": "boolean",
                    "default": false
                },
                "dbms": {
                    "$ref": "#/definitions/dbms"
                },
                "replaceIfExists": {
                    "description": "If the stored procedure defined by procedureName already exits, alter it instead of creating it.",
                    "type": "boolean",
                    "default": ""
                },
                "comments": {
                    "description": "The comments you can specify in the changeset.",
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "dropProcedure": {
            "$comment": "https://docs.liquibase.com/change-types/community/drop-procedure.html",
            "description": "Drops an existing procedure",
            "type": "object",
            "default": {},
            "properties": {
                "procedureName": {
                    "description": "Name of the stored procedure to drop",
                    "type": "string",
                    "default": ""
                },
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                }
            },
            "additionalProperties": true
        },
        "sqlFile": {
            "$comment": "https://docs.liquibase.com/change-types/community/sql-file.html",
            "description": "The <sqlFile> Change Type is useful for complex changes that are not supported through Liquibase automated Change Types such as stored procedures. The SQL contained in the <sqlFile> Change Type can be multi-line.",
            "type": "object",
            "default": {},
            "properties": {
                "path": {
                    "description": "Specifies the file path of the SQL file to load.",
                    "type": "string",
                    "default": ""
                },
                "stripComments": {
                    "description": "Set to true to remove any comments in the SQL before executing, otherwise false.",
                    "type": "boolean",
                    "default": false
                },
                "splitStatements": {
                    "description": "Set to false to not have Liquibase split statements on ;'s and GO's. Defaults to true if not set.",
                    "type": "boolean",
                    "default": false
                },
                "encoding": {
                    "description": "Specifies encoding used in the file defined in the `path` attribute.",
                    "type": "string",
                    "default": ""
                },
                "endDelimiter": {
                    "description": "Indicates the end of the SQL statement and prevents incomplete SQL statements from being processed when the SQL files contain statements referencing a ; which Liquibase treats as the default end delimiter. You can use the endDelimiter when the changeset contains SQL to create a stored procedure or function that contains the default ; end delimiter to separate the statements inside the procedure.\nFor more information, see The endDelimiter SQL attribute.",
                    "type": "string",
                    "default": ""
                },
                "relativeToChangelogFile": {
                    "description": "Indicates whether the file path is relative to the root changelog file rather than to the classpath.",
                    "type": "boolean",
                    "default": false
                },
                "dbms": {
                    "$ref": "#/definitions/dbms"
                }
            },
            "additionalProperties": true
        },
        "renameTable": {
            "$comment": "https://docs.liquibase.com/change-types/community/rename-table.html",
            "description": "Renames an existing table.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "oldTableName": {
                    "description": "Name of the table to rename",
                    "type": "string",
                    "default": ""
                },
                "newTableName": {
                    "description": "New name for the table",
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "renameColumn": {
            "$comment": "https://docs.liquibase.com/change-types/community/rename-column.html",
            "description": "Renames an existing column.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "oldColumnName": {
                    "description": "Name of the existing column to rename",
                    "type": "string",
                    "default": ""
                },
                "newColumnName": {
                    "description": "Name to rename the column to",
                    "type": "string",
                    "default": ""
                },
                "columnDataType": {
                    "description": "Data type of the column",
                    "type": "string",
                    "default": ""
                },
                "remarks": {
                    "description": "Remarks of the column",
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "dropColumn": {
            "$comment": "https://docs.liquibase.com/change-types/community/drop-column.html",
            "description": "Drops an existing column(s).\n\nTo drop a single column, use the simple form of this element where the tableName and columnName are specified as attributes. To drop several columns, specify the tableName as an attribute, and then specify a set of nested <column> tags. If nested <column> tags are present, the columnName attribute will be ignored.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "description": "Name of the column to drop, if dropping a single column. Ignored if nested 'column's are defined",
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "$ref": "#/definitions/columns"
                }
            },
            "additionalProperties": true
        },
        "mergeColumns": {
            "$comment": "https://docs.liquibase.com/change-types/community/merge-columns.html",
            "description": "The mergeColumns Change Type concatenates the values in two columns and joins them with a string. The Change Type stores the resulting value in a new column.\nYou can typically use the mergeColumns Change Type when you want to combine the values from two columns into one.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "column1Name": {
                    "description": "The name of the column containing the first half of the data",
                    "type": "string",
                    "default": ""
                },
                "joinString": {
                    "description": "The string to place between the values from column1 and column2 (may be empty)",
                    "type": "string",
                    "default": ""
                },
                "column2Name": {
                    "description": "The name of the column containing the second half of the data",
                    "type": "string",
                    "default": ""
                },
                "finalColumnName": {
                    "description": "The name of the column to create",
                    "type": "string",
                    "default": ""
                },
                "finalColumnType": {
                    "description": "The data type of the column to create",
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "modifyDataType": {
            "$comment": "https://docs.liquibase.com/change-types/community/modify-data-type.html",
            "description": "Allows you to modify data types.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "description": "Name of the column",
                    "type": "string",
                    "default": ""
                },
                "newDataType": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "createSequence": {
            "$comment": "https://docs.liquibase.com/change-types/community/create-sequence.html",
            "description": "Creates a new database sequence.",
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "sequenceName": {
                    "description": "Name of the sequence to create",
                    "type": "string",
                    "default": ""
                },
                "startValue": {
                    "description": "\tThe first sequence number to be generated.",
                    "type": "integer",
                    "default": ""
                },
                "incrementBy": {
                    "description": "Interval between sequence numbers",
                    "type": "integer",
                    "default": ""
                },
                "maxValue": {
                    "description": "The maximum value of the sequence",
                    "type": "integer",
                    "default": ""
                },
                "minValue": {
                    "description": "The minimum value of the sequence",
                    "type": "integer",
                    "default": ""
                },
                "ordered": {
                    "description": "Does the sequence need to be guaranteed to be generated in the order of request?",
                    "type": "boolean",
                    "default": ""
                },
                "cacheSize": {
                    "description": "Number of values to fetch per query",
                    "type": "integer",
                    "default": ""
                },
                "dataType": {
                    "description": "Data type of the sequence",
                    "type": "string",
                    "default": ""
                },
                "cycle": {
                    "description": "Can the sequence cycle when it hits the max value?",
                    "type": "boolean",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "alterSequence": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "sequenceName": {
                    "type": "string",
                    "default": ""
                },
                "incrementBy": {
                    "type": "integer",
                    "default": ""
                },
                "maxValue": {
                    "type": "integer",
                    "default": ""
                },
                "minValue": {
                    "type": "integer",
                    "default": ""
                },
                "ordered": {
                    "type": "boolean",
                    "default": ""
                },
                "cacheSize": {
                    "type": "integer",
                    "default": ""
                },
                "dataType": {
                    "type": "string",
                    "default": ""
                },
                "cycle": {
                    "type": "boolean",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "dropSequence": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "sequenceName": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "renameSequence": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "oldSequenceName": {
                    "type": "string",
                    "default": ""
                },
                "newSequenceName": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "createIndex": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "indexName": {
                    "type": "string",
                    "default": ""
                },
                "associatedWith": {
                    "type": "string",
                    "default": ""
                },
                "unique": {
                    "type": "boolean",
                    "default": false
                },
                "clustered": {
                    "type": "boolean",
                    "default": false
                },
                "tablespace": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "$ref": "#/definitions/columns"
                }
            },
            "additionalProperties": true
        },
        "dropIndex": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "indexName": {
                    "type": "string",
                    "default": ""
                },
                "associatedWith": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "addNotNullConstraint": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "type": "string",
                    "default": ""
                },
                "defaultNullValue": {
                    "type": "string",
                    "default": ""
                },
                "columnDataType": {
                    "type": "string",
                    "default": ""
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                },
                "validate": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": true
        },
        "dropNotNullConstraint": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "type": "string",
                    "default": ""
                },
                "columnDataType": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "addForeignKeyConstraint": {
            "type": "object",
            "default": {},
            "properties": {
                "baseTableCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "baseTableSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "baseTableName": {
                    "type": "string",
                    "default": ""
                },
                "baseColumnNames": {
                    "type": "string",
                    "default": ""
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                },
                "referencedTableCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "referencedTableSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "referencedTableName": {
                    "type": "string",
                    "default": ""
                },
                "referencedColumnNames": {
                    "type": "string",
                    "default": ""
                },
                "deferrable": {
                    "type": "boolean",
                    "default": false
                },
                "initiallyDeferred": {
                    "type": "boolean",
                    "default": false
                },
                "deleteCascade": {
                    "type": "boolean",
                    "default": false
                },
                "onDelete": {
                    "type": "string",
                    "default": ""
                },
                "onUpdate": {
                    "type": "string",
                    "default": ""
                },
                "referencesUniqueColumn": {
                    "type": "boolean",
                    "default": false
                },
                "validate": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": true
        },
        "dropForeignKeyConstraint": {
            "type": "object",
            "default": {},
            "properties": {
                "baseTableCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "baseTableSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "baseTableName": {
                    "type": "string",
                    "default": ""
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "dropAllForeignKeyConstraints": {
            "type": "object",
            "default": {},
            "properties": {
                "baseTableCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "baseTableSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "baseTableName": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "addPrimaryKey": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnNames": {
                    "type": "string",
                    "default": ""
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                },
                "tablespace": {
                    "type": "string",
                    "default": ""
                },
                "clustered": {
                    "type": "boolean",
                    "default": false
                },
                "forIndexCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "forIndexSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "forIndexName": {
                    "type": "string",
                    "default": ""
                },
                "validate": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": true
        },
        "dropPrimaryKey": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "addLookupTable": {
            "type": "object",
            "default": {},
            "properties": {
                "existingTableCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "existingTableSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "existingTableName": {
                    "type": "string",
                    "default": ""
                },
                "existingColumnName": {
                    "type": "string",
                    "default": ""
                },
                "newTableCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "newTableSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "newTableName": {
                    "type": "string",
                    "default": ""
                },
                "newColumnName": {
                    "type": "string",
                    "default": ""
                },
                "newColumnDataType": {
                    "type": "string",
                    "default": ""
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "addAutoIncrement": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "type": "string",
                    "default": ""
                },
                "columnDataType": {
                    "type": "string",
                    "default": ""
                },
                "startWith": {
                    "type": "integer",
                    "default": 0
                },
                "incrementBy": {
                    "type": "integer",
                    "default": 0
                }
            },
            "additionalProperties": true
        },
        "addDefaultValue": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "type": "string",
                    "default": ""
                },
                "columnDataType": {
                    "type": "string",
                    "default": ""
                },
                "defaultValue": {
                    "type": "string",
                    "default": ""
                },
                "defaultValueNumeric": {
                    "type": "number",
                    "default": ""
                },
                "defaultValueDate": {
                    "type": "string",
                    "default": ""
                },
                "defaultValueBoolean": {
                    "type": "boolean",
                    "default": ""
                },
                "defaultValueComputed": {
                    "type": "string",
                    "default": ""
                },
                "defaultValueSequenceNext": {
                    "type": "string",
                    "default": ""
                },
                "defaultValueConstraintName": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "dropDefaultValue": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "type": "string",
                    "default": ""
                },
                "columnDataType": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "addUniqueConstraint": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnNames": {
                    "type": "string",
                    "default": ""
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                },
                "tablespace": {
                    "type": "string",
                    "default": ""
                },
                "disabled": {
                    "type": "boolean",
                    "default": false
                },
                "deferrable": {
                    "type": "boolean",
                    "default": false
                },
                "initiallyDeferred": {
                    "type": "boolean",
                    "default": false
                },
                "forIndexCatalogName": {
                    "type": "string",
                    "default": ""
                },
                "forIndexSchemaName": {
                    "type": "string",
                    "default": ""
                },
                "forIndexName": {
                    "type": "string",
                    "default": ""
                },
                "clustered": {
                    "type": "boolean",
                    "default": false
                },
                "validate": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": true
        },
        "dropUniqueConstraint": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "constraintName": {
                    "type": "string",
                    "default": ""
                },
                "uniqueColumns": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "setTableRemarks": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "remarks": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "setColumnRemarks": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "columnName": {
                    "type": "string",
                    "default": ""
                },
                "remarks": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "customChange": {
            "type": "object",
            "default": {},
            "properties": {
                "class": {
                    "type": "string",
                    "default": ""
                },
                "param": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "name": {
                            "type": "string",
                            "default": ""
                        },
                        "value": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    "additionalProperties": true
                }
            },
            "additionalProperties": true
        },
        "loadData": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "file": {
                    "type": "string",
                    "default": ""
                },
                "relativeToChangelogFile": {
                    "type": "boolean",
                    "default": false
                },
                "usePreparedStatements": {
                    "type": "boolean",
                    "default": false
                },
                "encoding": {
                    "type": "string",
                    "default": ""
                },
                "separator": {
                    "type": "string",
                    "default": ""
                },
                "quotchar": {
                    "type": "string",
                    "default": ""
                },
                "commentLineStartsWith": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "$ref": "#/definitions/columns"
                }
            },
            "additionalProperties": true
        },
        "loadUpdateData": {
            "type": "object",
            "default": {},
            "properties": {
                "catalogName": {
                    "$ref": "#/definitions/catalogName"
                },
                "schemaName": {
                    "$ref": "#/definitions/schemaName"
                },
                "tableName": {
                    "$ref": "#/definitions/tableName"
                },
                "file": {
                    "type": "string",
                    "default": ""
                },
                "relativeToChangelogFile": {
                    "type": "boolean",
                    "default": false
                },
                "encoding": {
                    "type": "string",
                    "default": ""
                },
                "primaryKey": {
                    "type": "string",
                    "default": ""
                },
                "onlyUpdate": {
                    "type": "boolean",
                    "default": ""
                },
                "separator": {
                    "type": "string",
                    "default": ""
                },
                "quotchar": {
                    "type": "string",
                    "default": ""
                },
                "columns": {
                    "$ref": "#/definitions/columns"
                }
            },
            "additionalProperties": true
        },
        "executeCommand": {
            "type": "object",
            "default": {},
            "properties": {
                "executable": {
                    "type": "string",
                    "default": ""
                },
                "os": {
                    "type": "string",
                    "default": ""
                },
                "timeout": {
                    "type": "string",
                    "default": ""
                },
                "arg": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "value": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    "additionalProperties": true
                },
                "args": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "value": {
                                        "type": "string",
                                        "default": ""
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "additionalProperties": true
        },
        "output": {
            "type": "object",
            "default": {},
            "properties": {
                "target": {
                    "type": "string",
                    "default": ""
                }
            },
            "additionalProperties": true
        },
        "changes": {
            "type": "array",
            "default": [],
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "tagDatabase": {
                                "$ref": "#/definitions/tagDatabase"
                            },
                            "createTable": {
                                "$ref": "#/definitions/createTable"
                            },
                            "dropTable": {
                                "$ref": "#/definitions/dropTable"
                            },
                            "createView": {
                                "$ref": "#/definitions/createView"
                            },
                            "renameView": {
                                "$ref": "#/definitions/renameView"
                            },
                            "dropView": {
                                "$ref": "#/definitions/dropView"
                            },
                            "insert": {
                                "$ref": "#/definitions/insert"
                            },
                            "addColumn": {
                                "$ref": "#/definitions/addColumn"
                            },
                            "sql": {
                                "$ref": "#/definitions/sql"
                            },
                            "createProcedure": {
                                "$ref": "#/definitions/createProcedure"
                            },
                            "dropProcedure": {
                                "$ref": "#/definitions/dropProcedure"
                            },
                            "sqlFile": {
                                "$ref": "#/definitions/sqlFile"
                            },
                            "renameTable": {
                                "$ref": "#/definitions/renameTable"
                            },
                            "renameColumn": {
                                "$ref": "#/definitions/renameColumn"
                            },
                            "dropColumn": {
                                "$ref": "#/definitions/dropColumn"
                            },
                            "mergeColumns": {
                                "$ref": "#/definitions/mergeColumns"
                            },
                            "modifyDataType": {
                                "$ref": "#/definitions/modifyDataType"
                            },
                            "createSequence": {
                                "$ref": "#/definitions/createSequence"
                            },
                            "alterSequence": {
                                "$ref": "#/definitions/alterSequence"
                            },
                            "dropSequence": {
                                "$ref": "#/definitions/dropSequence"
                            },
                            "renameSequence": {
                                "$ref": "#/definitions/renameSequence"
                            },
                            "createIndex": {
                                "$ref": "#/definitions/createIndex"
                            },
                            "dropIndex": {
                                "$ref": "#/definitions/dropIndex"
                            },
                            "addNotNullConstraint": {
                                "$ref": "#/definitions/addNotNullConstraint"
                            },
                            "dropNotNullConstraint": {
                                "$ref": "#/definitions/dropNotNullConstraint"
                            },
                            "addForeignKeyConstraint": {
                                "$ref": "#/definitions/addForeignKeyConstraint"
                            },
                            "dropForeignKeyConstraint": {
                                "$ref": "#/definitions/dropForeignKeyConstraint"
                            },
                            "dropAllForeignKeyConstraints": {
                                "$ref": "#/definitions/dropAllForeignKeyConstraints"
                            },
                            "addPrimaryKey": {
                                "$ref": "#/definitions/addPrimaryKey"
                            },
                            "dropPrimaryKey": {
                                "$ref": "#/definitions/dropPrimaryKey"
                            },
                            "addLookupTable": {
                                "$ref": "#/definitions/addLookupTable"
                            },
                            "addAutoIncrement": {
                                "$ref": "#/definitions/addAutoIncrement"
                            },
                            "addDefaultValue": {
                                "$ref": "#/definitions/addDefaultValue"
                            },
                            "dropDefaultValue": {
                                "$ref": "#/definitions/dropDefaultValue"
                            },
                            "addUniqueConstraint": {
                                "$ref": "#/definitions/addUniqueConstraint"
                            },
                            "dropUniqueConstraint": {
                                "$ref": "#/definitions/dropUniqueConstraint"
                            },
                            "setTableRemarks": {
                                "$ref": "#/definitions/setTableRemarks"
                            },
                            "setColumnRemarks": {
                                "$ref": "#/definitions/setColumnRemarks"
                            },
                            "customChange": {
                                "$ref": "#/definitions/customChange"
                            },
                            "update": {
                                "$ref": "#/definitions/update"
                            },
                            "delete": {
                                "$ref": "#/definitions/delete"
                            },
                            "loadData": {
                                "$ref": "#/definitions/loadData"
                            },
                            "loadUpdateData": {
                                "$ref": "#/definitions/loadUpdateData"
                            },
                            "executeCommand": {
                                "$ref": "#/definitions/executeCommand"
                            },
                            "output": {
                                "$ref": "#/definitions/output"
                            }
                        },
                        "additionalProperties": true
                    }
                ]
            }
        }
    },
    "type": "object",
    "default": {},
    "required": [
        "databaseChangeLog"
    ],
    "properties": {
        "databaseChangeLog": {
            "type": "array",
            "default": [],
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "default": {},
                        "properties": {
                            "logicalFilePath": {
                                "type": "string",
                                "default": ""
                            },
                            "context": {
                                "type": "string",
                                "default": ""
                            },
                            "objectQuotingStrategy": {
                                "type": "string",
                                "default": ""
                            },
                            "property": {
                                "type": "object",
                                "default": {},
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "name": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "value": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "dbms": {
                                        "$ref": "#/definitions/dbms"
                                    },
                                    "context": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "labels": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "global": {
                                        "type": "boolean",
                                        "default": true
                                    },
                                    "target": {
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "additionalProperties": true
                            },
                            "preConditions": {
                                "$ref": "#/definitions/preConditions"
                            },
                            "changeSet": {
                                "type": "object",
                                "default": {},
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "author": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "context": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "labels": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "dbms": {
                                        "$ref": "#/definitions/dbms"
                                    },
                                    "runOnChange": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "runAlways": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "failOnError": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "onValidationFail": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "runInTransaction": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "logicalFilePath": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "objectQuotingStrategy": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "created": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "runOrder": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "ignore": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "runWith": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "validCheckSum": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "preConditions": {
                                        "$ref": "#/definitions/preConditions"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "changes": {
                                        "$ref": "#/definitions/changes"
                                    },
                                    "rollback": {
                                        "$ref": "#/definitions/changes"
                                    },
                                    "modifySql": {
                                        "type": "array",
                                        "default": [],
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "type": "object",
                                                    "default": {},
                                                    "properties": {
                                                        "dbms": {
                                                            "$ref": "#/definitions/dbms"
                                                        },
                                                        "context": {
                                                            "type": "string",
                                                            "default": ""
                                                        },
                                                        "labels": {
                                                            "type": "string",
                                                            "default": ""
                                                        },
                                                        "applyToRollback": {
                                                            "type": "boolean",
                                                            "default": false
                                                        }
                                                    },
                                                    "additionalProperties": true
                                                }
                                            ]
                                        }
                                    }
                                },
                                "additionalProperties": true
                            },
                            "include": {
                                "type": "object",
                                "default": {},
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "author": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "file": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "relativeToChangelogFile": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "context": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "labels": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "ignore": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "created": {
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "additionalProperties": true
                            },
                            "includeAll": {
                                "type": "object",
                                "default": {},
                                "properties": {
                                    "path": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "errorIfMissingOrEmpty": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "relativeToChangelogFile": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "resourceComparator": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "filter": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "context": {
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "additionalProperties": true
                            }
                        },
                        "additionalProperties": true
                    }
                ]
            }
        }
    },
    "additionalProperties": true
}
