{
  "$comment": "https://minecraft.fandom.com/wiki/Biome/JSON_format",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Configuration file defining a biome for a data pack for Minecraft.",
  "properties": {
    "carvers": {
      "description": "The carvers to use.",
      "properties": {
        "air": {
          "description": "List of carvers used during the air generation step.",
          "items": {
            "description": "The namespaced id of a configured carver.",
            "type": "string"
          },
          "title": "Air",
          "type": "array"
        },
        "liquid": {
          "description": "List of carvers used during the liquid generation step",
          "items": {
            "description": "The namespaced id of a configured carver.",
            "type": "string"
          },
          "title": "Liquids",
          "type": "array"
        }
      },
      "title": "Carvers",
      "type": "object"
    },
    "category": {
      "enum": [
        "none",
        "taiga",
        "extreme_hills",
        "jungle",
        "mesa",
        "plains",
        "savanna",
        "icy",
        "the_end",
        "beach",
        "forest",
        "ocean",
        "desert",
        "river",
        "swamp",
        "mushroom",
        "nether"
      ],
      "title": "Category",
      "type": "string"
    },
    "creature_spawn_friendly": {
      "description": "Spawns passive mobs as long as random value is less than this.",
      "maximum": 1,
      "minimum": 0,
      "title": "Creature Spawn Friendly",
      "type": "number"
    },
    "depth": {
      "description": "Used for terrain noise generation. Biomes with positive depth are considered land, biomes with negative depth are oceans.",
      "title": "Depth",
      "type": "number"
    },
    "downfall": {
      "description": "Controls grass and foliage color, a value above 0.85 also makes fire burn out faster.",
      "title": "Downfall",
      "type": "number"
    },
    "effects": {
      "description": "Ambient effects in this biome.",
      "properties": {
        "additions_sound": {
          "description": "Settings for additions sound.",
          "properties": {
            "sound": {
              "description": "Sound event to use.",
              "title": "Sound",
              "type": "string"
            },
            "tick_chance": {
              "title": "Tick Chance",
              "type": "integer"
            }
          },
          "title": "Additions Sound",
          "type": "object"
        },
        "ambient_sound": {
          "description": "Sound event to use for ambient sound.",
          "title": "Ambient Sound",
          "type": "string"
        },
        "fog_color": {
          "description": "Decimal value converted from Hex color to use for fog.",
          "title": "Fog Color",
          "type": "integer"
        },
        "foliage_color": {
          "description": "Decimal value converted from Hex color to use for tree leaves and vines. If not present, the value depends on humidity and temperature.",
          "title": "Foliage Color",
          "type": "integer"
        },
        "grass_color": {
          "description": "Decimal value converted from Hex color to use for grass blocks, grass, tall grass, ferns, tall ferns, and sugar cane. If not present, the value depends on humidity and temperature.",
          "title": "Grass Color",
          "type": "integer"
        },
        "grass_color_modifier": {
          "enum": ["none", "dark_forest", "swamp"],
          "title": "Grass Color Modifier",
          "type": "string"
        },
        "mood_sound": {
          "description": "Settings for mood sound.",
          "properties": {
            "block_search_context": {
              "description": "Determines the cubic range of possible positions to play the mood sound. The player is at the center of the cubic range, and the edge length is 2 * block_search_extent + 1.",
              "title": "Block Search Context",
              "type": "integer"
            },
            "offset": {
              "title": "Offset",
              "type": "integer"
            },
            "sound": {
              "description": "Sound event to use.",
              "title": "Sound",
              "type": "string"
            },
            "tick_delay": {
              "title": "Tick Delay",
              "type": "integer"
            }
          },
          "title": "Mood Sound",
          "type": "object"
        },
        "music": {
          "description": "Specific music that should be played in the biome.",
          "properties": {
            "max_delay": {
              "title": "Max Delay",
              "type": "integer"
            },
            "min_delay": {
              "title": "Minimum Delay",
              "type": "integer"
            },
            "replace_current_music": {
              "description": "Whether or not to replace music which is already playing.",
              "title": "Replace Current Music",
              "type": "boolean"
            },
            "sound": {
              "description": "Sound event to use.",
              "title": "Sound",
              "type": "string"
            }
          },
          "title": "Music",
          "type": "object"
        },
        "particle": {
          "description": "The particle to use throughout this biome.",
          "properties": {
            "options": {
              "description": "Controls what particle to use.",
              "title": "Options",
              "type": "object"
            },
            "probability": {
              "description": "Controls how often the particle spawns.",
              "title": "Probability",
              "type": "number"
            }
          },
          "title": "Particle",
          "type": "object"
        },
        "sky_color": {
          "description": "Decimal value converted from Hex color to use for the sky.",
          "title": "Sky Color",
          "type": "integer"
        },
        "water_color": {
          "description": "Decimal value converted from Hex color to use for water blocks and cauldrons.",
          "title": "Water Color",
          "type": "integer"
        },
        "water_fog_color": {
          "description": "Decimal value converted from Hex color to use for fog.",
          "title": "Water Fog Color",
          "type": "integer"
        }
      },
      "title": "Effects",
      "type": "object"
    },
    "features": {
      "description": "A list of 10 lists of features. In vanilla, each of the 10 lists corresponds to a different type of feature: the feature lists are applied to each chunk in order from top to bottom. The index of the list which the feature is placed in is also used to generate part of the feature seed, so moving features to a different list definitely has some effect on generation. Each element of each list is a namespaced ID of a configured feature. Can be a empty list.",
      "items": {
        "type": "array"
      },
      "title": "Features",
      "type": "array"
    },
    "player_spawn_friendly": {
      "title": "Player Spawn Friendly",
      "type": "boolean"
    },
    "precipitation": {
      "description": "The type of precipitation found in this biome. If snow, rabbits spawning in this biome will be white or black-and-white.",
      "enum": ["none", "rain", "snow"],
      "title": "Precipitation",
      "type": "string"
    },
    "scale": {
      "description": "Used for terrain noise generation. Vertically stretches the terrain. Lower values produce flatter terrain.",
      "title": "Scale",
      "type": "number"
    },
    "spawn_costs": {
      "additionalProperties": {
        "properties": {
          "charge": {
            "title": "Charge",
            "type": "integer"
          },
          "energy_budget": {
            "title": "Energy Budget",
            "type": "integer"
          }
        }
      },
      "description": "List of entity IDs.",
      "title": "Spawn Costs"
    },
    "spawners": {
      "description": "Entity spawning settings.",
      "title": "Spawners",
      "type": "object"
    },
    "starts": {
      "description": "The structures to generate in this biome.",
      "items": {
        "description": "The namespaced ID of a configured structure feature.",
        "type": "string"
      },
      "title": "Starts",
      "type": "array"
    },
    "surface_builder": {
      "description": "The namespaced id of the configured surface builder to use.",
      "title": "Surface Builder",
      "type": "string"
    },
    "temperature": {
      "description": "Controls gameplay features like grass and foliage color and whether snow golems take damage.",
      "title": "Temperature",
      "type": "number"
    },
    "temperature_modifier": {
      "enum": ["none", "frozen"],
      "title": "Temperature Modifier",
      "type": "string"
    }
  },
  "title": "Minecraft Data Pack Biome",
  "type": "object"
}
