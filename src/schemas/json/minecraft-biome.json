{
  "$comment": "https://minecraft.fandom.com/wiki/Biome/JSON_format",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Configuration file defining a biome for a data pack for Minecraft.",
  "properties": {
    "depth": {
      "description": "Used for terrain noise generation. Biomes with positive depth are considered land, biomes with negative depth are oceans.",
      "type": "number"
    },
    "scale": {
      "description": "Used for terrain noise generation. Vertically stretches the terrain. Lower values produce flatter terrain.",
      "type": "number"
    },
    "precipitation": {
      "description": "The type of precipitation found in this biome. If snow, rabbits spawning in this biome will be white or black-and-white.",
      "type": "string",
      "enum": [
        "none",
        "rain",
        "snow"
      ]
    },
    "category": {
      "type": "string",
      "enum": [
        "none",
        "taiga",
        "extreme_hills",
        "jungle",
        "mesa",
        "plains",
        "savanna",
        "icy",
        "the_end",
        "beach",
        "forest",
        "ocean",
        "desert",
        "river",
        "swamp",
        "mushroom",
        "nether"
      ]
    },
    "temperature": {
      "description": "Controls gameplay features like grass and foliage color and whether snow golems take damage.",
      "type": "number"
    },
    "temperature_modifier": {
      "type": "string",
      "enum": [
        "none",
        "frozen"
      ]
    },
    "downfall": {
      "description": "Controls grass and foliage color, a value above 0.85 also makes fire burn out faster.",
      "type": "number"
    },
    "player_spawn_friendly": {
      "type": "boolean"
    },
    "creature_spawn_friendly": {
      "description": "Spawns passive mobs as long as random value is less than this.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "effects": {
      "title": "Effects",
      "description": "Ambient effects in this biome.",
      "type": "object",
      "properties": {
        "fog_color": {
          "description": "Decimal value converted from Hex color to use for fog.",
          "type": "integer"
        },
        "foliage_color": {
          "description": "Decimal value converted from Hex color to use for tree leaves and vines. If not present, the value depends on humidity and temperature.",
          "type": "integer"
        },
        "grass_color": {
          "description": "Decimal value converted from Hex color to use for grass blocks, grass, tall grass, ferns, tall ferns, and sugar cane. If not present, the value depends on humidity and temperature.",
          "type": "integer"
        },
        "sky_color": {
          "description": "Decimal value converted from Hex color to use for the sky.",
          "type": "integer"
        },
        "water_color": {
          "description": "Decimal value converted from Hex color to use for water blocks and cauldrons.",
          "type": "integer"
        },
        "water_fog_color": {
          "description": "Decimal value converted from Hex color to use for fog.",
          "type": "integer"
        },
        "grass_color_modifier": {
          "type": "string",
          "enum": [
            "none",
            "dark_forest",
            "swamp"
          ]
        },
        "particle": {
          "title": "Particle",
          "description": "The particle to use throughout this biome.",
          "type": "object",
          "properties": {
            "probability": {
              "description": "Controls how often the particle spawns.",
              "type": "number"
            },
            "options": {
              "title": "Options",
              "description": "Controls what particle to use.",
              "type": "object"
            }
          }
        },
        "ambient_sound": {
          "description": "Sound event to use for ambient sound.",
          "type": "string"
        },
        "mood_sound": {
          "title": "Mood Sound",
          "description": "Settings for mood sound.",
          "type": "object",
          "properties": {
            "sound": {
              "description": "Sound event to use.",
              "type": "string"
            },
            "tick_delay": {
              "type": "integer"
            },
            "block_search_context": {
              "description": "Determines the cubic range of possible positions to play the mood sound. The player is at the center of the cubic range, and the edge length is 2 * block_search_extent + 1.",
              "type": "integer"
            },
            "offset": {
              "type": "integer"
            }
          }
        },
        "additions_sound": {
          "title": "Additions Sound",
          "description": "Settings for additions sound.",
          "type": "object",
          "properties": {
            "sound": {
              "description": "Sound event to use.",
              "type": "string"
            },
            "tick_chance": {
              "title": "Tick Chance",
              "type": "integer"
            }
          }
        },
        "music": {
          "title": "Music",
          "description": "Specific music that should be played in the biome.",
          "type": "object",
          "properties": {
            "sound": {
              "description": "Sound event to use.",
              "type": "string"
            },
            "min_delay": {
              "type": "integer"
            },
            "max_delay": {
              "type": "integer"
            },
            "replace_current_music": {
              "description": "Whether or not to replace music which is already playing.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "surface_builder": {
      "description": "The namespaced id of the configured surface builder to use.",
      "type": "string"
    },
    "carvers": {
      "title": "Carvers",
      "description": "The carvers to use.",
      "type": "object",
      "properties": {
        "air": {
          "description": "List of carvers used during the air generation step.",
          "type": "array",
          "items": {
            "description": "The namespaced id of a configured carver.",
            "type": "string"
          }
        },
        "liquid": {
          "description": "List of carvers used during the liquid generation step",
          "type": "array",
          "items": {
            "description": "The namespaced id of a configured carver.",
            "type": "string"
          }
        }
      }
    },
    "features": {
      "description": "A list of 10 lists of features. In vanilla, each of the 10 lists corresponds to a different type of feature: the feature lists are applied to each chunk in order from top to bottom. The index of the list which the feature is placed in is also used to generate part of the feature seed, so moving features to a different list definitely has some effect on generation. Each element of each list is a namespaced ID of a configured feature. Can be a empty list.",
      "type": "array",
      "items": {
        "type": "array"
      }
    },
    "starts": {
      "description": "The structures to generate in this biome.",
      "type": "array",
      "items": {
        "description": "The namespaced ID of a configured structure feature.",
        "type": "string"
      }
    },
    "spawners": {
      "title": "Spawners",
      "description": "Entity spawning settings.",
      "type": "object"
    },
    "spawn_costs": {
      "title": "Spawn Costs",
      "description": "List of entity IDs.",
      "additionalProperties": {
        "properties": {
          "energy_budget": {
            "type": "integer"
          },
          "charge": {
            "type": "integer"
          }
        }
      }
    }
  },
  "title": "Minecraft Data Pack Biome",
  "type": "object"
}
