{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "BSH.G config schema",
  "description": "A schema for BSH.G config files",
  "type": "object",
  "additionalProperties": false,
  "definitions": {
    "validPackageAndVariableNaming": {
      "pattern": "^[a-z]+$"
    },
    "namingTemplate": {
      "pattern": "^[\\w-_.]*(\\{[LlCcUuKkSs]})[\\w-_.]*$"
    },
    "integer": {
      "type": "integer",
      "minimum": 0
    },
    "fieldDef": {
      "type": "string",
      "default": "str",
      "pattern": "^((enum-|list-)?[A-Za-z][a-zA-Z0-9_]+)?(\\{(ManyToOne|OneToOne|OneToMany|ManyToMany)})?(_OPT)?$"
    },
    "packagingProper": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "entity": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "entity",
          "anyOf": [
            {
              "const": "entity"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "validators": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "validators",
          "anyOf": [
            {
              "const": "validators"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "enums": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "enums",
          "anyOf": [
            {
              "const": "enums"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "repository": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "repository",
          "anyOf": [
            {
              "const": "repository"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "exceptions": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "exception",
          "anyOf": [
            {
              "const": "exception"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "service": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "service",
          "anyOf": [
            {
              "const": "service"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "process": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "sprocess",
          "anyOf": [
            {
              "const": "sprocess"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "webservice": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "ws",
          "anyOf": [
            {
              "const": "ws"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "converter": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "converter",
          "anyOf": [
            {
              "const": "converter"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "dto": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "dto",
          "anyOf": [
            {
              "const": "dto"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "controller": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "restapi",
          "anyOf": [
            {
              "const": "restapi"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "security": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "security",
          "anyOf": [
            {
              "const": "zsecurity"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "utils": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "zutils",
          "anyOf": [
            {
              "const": "zutils"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "mail": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "zmail",
          "anyOf": [
            {
              "const": "zmail"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "config": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "zconfigs",
          "anyOf": [
            {
              "const": "zconfigs"
            },
            {
              "pattern": ".+"
            }
          ]
        },
        "chat": {
          "type": "string",
          "$ref": "#/definitions/validPackageAndVariableNaming",
          "default": "zchat",
          "anyOf": [
            {
              "const": "zchat"
            },
            {
              "pattern": ".+"
            }
          ]
        }
      }
    },
    "namingTemplateProper": {
      "type": "object",
      "description": "configure how to name the classes",
      "additionalProperties": false,
      "properties": {
        "entity": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}"
        },
        "validator": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}Validator"
        },
        "repository": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}Repository"
        },
        "service": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}Service"
        },
        "injector": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}Injector"
        },
        "converter": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}Converter"
        },
        "dto": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}Dto"
        },
        "controller": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}Controller"
        }
      },
      "patternProperties": {
        "^service[-_]?[Ii]mpl$": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}ServiceImpl"
        },
        "^create[-_]?[Pp]rocess$": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}CreateProcess"
        },
        "^delete[-_]?[Pp]rocess$": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}DeleteProcess"
        },
        "^update[-_]?[Pp]rocess$": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}UpdateProcess"
        },
        "^createProcess[-_]?[Ii]mpl$": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}CreateProcessImpl"
        },
        "^deleteProcess[-_]?[Ii]mpl$": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}DeleteProcessImpl"
        },
        "^updateProcess[-_]?[Ii]mpl$": {
          "type": "string",
          "$ref": "#/definitions/namingTemplate",
          "default": "{C}UpdateProcessImpl"
        }
      }
    }
  },
  "required": [
    "name",
    "description",
    "technology",
    "packages"
  ],
  "properties": {
    "name": {
      "type": "string",
      "default": "demo"
    },
    "description": {
      "type": "string",
      "default": "your project description"
    },
    "roles": {
      "type": "array",
      "uniqueItems": true,
      "additionalItems": true,
      "items": {
        "type": "string",
        "pattern": "^[A-Z_][A-Z0-9_]+$",
        "uniqueItems": true,
        "additionalItems": true,
        "anyOf": [
          {
            "const": "ADMIN"
          },
          {
            "const": "SUPERADMIN"
          },
          {
            "const": "USER"
          },
          {
            "const": "MANAGER"
          },
          {
            "pattern": ".+"
          }
        ]
      }
    },
    "enums": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_]+$": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]+(=.+)?$"
          }
        }
      }
    },
    "database": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "mysql": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "host": {
              "type": "string",
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]+$",
              "default": "localhost"
            },
            "port": {
              "$ref": "#/definitions/integer",
              "default": 3306
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]+$",
              "default": "database_name"
            },
            "username": {
              "type": "string",
              "default": "root"
            },
            "password": {
              "type": "string",
              "default": "password"
            },
            "driver": {
              "type": "string",
              "default": "com.mysql.cj.jdbc.Driver"
            },
            "dialect": {
              "type": "string",
              "default": "org.hibernate.dialect.MySQLDialect"
            }
          }
        },
        "postgresql": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "host": {
              "type": "string",
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]+$",
              "default": "localhost"
            },
            "port": {
              "$ref": "#/definitions/integer",
              "default": 5432
            },
            "name": {
              "type": "string",
              "pattern": "^[a-zA-Z_][a-zA-Z0-9_]+$",
              "default": "database_name"
            },
            "username": {
              "type": "string",
              "default": "postgres"
            },
            "password": {
              "type": "string",
              "default": "password"
            },
            "driver": {
              "type": "string",
              "default": "org.postgresql.Driver"
            },
            "dialect": {
              "type": "string",
              "default": "org.hibernate.dialect.PostgreSQLDialect"
            }
          }
        },
        "mongodb": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "host": {
              "type": "string",
              "default": "localhost"
            },
            "port": {
              "$ref": "#/definitions/integer",
              "default": 27017
            },
            "name": {
              "type": "string",
              "default": "database_name"
            },
            "username": {
              "type": "string",
              "default": "username"
            },
            "password": {
              "type": "string",
              "default": "password"
            },
            "driver": {
              "type": "string"
            },
            "dialect": {
              "type": "string"
            }
          }
        }
      }
    },
    "packaging": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "angular": {
          "$ref": "#/definitions/packagingProper"
        }
      },
      "patternProperties": {
        "^[Ss]pring[-_]?[bB]oot$": {
          "$ref": "#/definitions/packagingProper"
        },
        "^react[-_]?[Jj]s$": {
          "$ref": "#/definitions/packagingProper"
        }
      }
    },
    "delivery": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "send": {
          "type": "boolean",
          "default": true
        },
        "mail": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string"
            }
          },
          "patternProperties": {
            "^full[-_]?[Nn]ame$": {
              "type": "string",
              "pattern": "[\\w ]+"
            }
          }
        },
        "github": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "username",
            "token",
            "email"
          ],
          "properties": {
            "username": {
              "type": "string",
              "description": "your username",
              "default": "username"
            },
            "token": {
              "type": "string",
              "description": "your github token",
              "default": "token"
            },
            "email": {
              "type": "string",
              "description": "your email to notified",
              "default": "example@mail.com"
            },
            "description": {
              "type": "string",
              "description": "your repo description",
              "default": "description fot created repo"
            },
            "override": {
              "type": "boolean",
              "description": "override existing repo",
              "default": false
            }
          },
          "patternProperties": {
            "^repo[-_]?[Nn]ame$": {
              "type": "string",
              "description": "your repo name",
              "default": "repository_name"
            }
          }
        }
      }
    },
    "packages": {
      "type": "object",
      "minProperties": 1,
      "additionalProperties": false,
      "patternProperties": {
        "^(^[a-zA-Z][a-zA-Z0-9_]*$)|_$": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "_packages": {
              "$ref": "#/properties/packages"
            }
          },
          "patternProperties": {
            "^[A-Z][a-zA-Z0-9_]+(#user)?(\\[(\\w+,?)+])?$": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "_authority": {
                  "type": "string",
                  "default": "get(...) delete(...) update(...) create(...)"
                },
                "_table": {
                  "type": "string",
                  "pattern": "^[a-zA-Z_]+$"
                },
                "_associations": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "_name": {
                        "type": "string",
                        "pattern": "^[A-Z][a-zA-Z0-9_]+$",
                        "default": "AssociationName"
                      },
                      "_with": {
                        "type": "string",
                        "pattern": "^[A-Z][a-zA-Z0-9_]+$",
                        "default": "AssociationName"
                      }
                    },
                    "patternProperties": {
                      "^_with[-_]?[Ll]ist$": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string",
                          "pattern": "^[A-Z][a-zA-Z0-9_]+$",
                          "default": "AssociationName"
                        }
                      },
                      "^[a-z][\\w_]+$": {
                        "$ref": "#/definitions/fieldDef"
                      }
                    }
                  }
                }
              },
              "patternProperties": {
                "^[a-z][\\w_]+$": {
                  "$ref": "#/definitions/fieldDef"
                }
              }
            }
          }
        }
      }
    },
    "technology": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "backend": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^spring([_-]?[bB])oot$": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "default": "backend"
                },
                "suffix": {
                  "type": "string",
                  "default": "-backend"
                },
                "template": {
                  "type": "string",
                  "default": ""
                },
                "version": {
                  "type": "string",
                  "pattern": "\\d+\\.\\d+\\.\\d+",
                  "default": "3.3.0"
                },
                "port": {
                  "type": "number",
                  "default": 8080
                },
                "domain": {
                  "type": "string",
                  "pattern": "^[A-Za-z]\\w*",
                  "default": "com"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "structure": {
                      "type": "string",
                      "default": "technical",
                      "additionalItems": false,
                      "description": "Select project structuring approach (only for spring-boot)",
                      "enum": [
                        "domain",
                        "technical",
                        "mixed"
                      ]
                    }
                  },
                  "patternProperties": {
                    "^java[-_][Nn]amespace$": {
                      "type": "string",
                      "default": "jakarta",
                      "enum": [
                        "javax",
                        "jakarta"
                      ]
                    },
                    "^build[-_]?[Tt]ool$": {
                      "type": "string",
                      "default": "maven",
                      "description": "Select your prefer build tool (only for spring-boot)",
                      "enum": [
                        "maven",
                        "gradle"
                      ]
                    }
                  }
                }
              },
              "patternProperties": {
                "^group[-_]?[Ii]d$": {
                  "type": "string",
                  "pattern": "^[A-Za-z]\\w*",
                  "default": "example"
                }
              }
            }
          }
        },
        "frontend": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "angular": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "default": "frontend"
                },
                "suffix": {
                  "type": "string",
                  "default": "-frontend"
                },
                "template": {
                  "type": "string",
                  "default": "simple",
                  "enum": [
                    "simple",
                    "coreui@v5"
                  ]
                },
                "version": {
                  "type": "string",
                  "pattern": "\\d+\\.\\d+\\.\\d+",
                  "default": "17.0.0"
                },
                "port": {
                  "type": "number",
                  "default": 4200
                }
              }
            }
          },
          "patternProperties": {
            "^react[-_]?[Jj]s$": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "default": "frontend"
                },
                "suffix": {
                  "type": "string",
                  "default": "-frontend"
                },
                "template": {
                  "type": "string",
                  "default": "coreui@v5",
                  "enum": [
                    "coreui@v5"
                  ]
                },
                "version": {
                  "type": "string",
                  "pattern": "\\d+\\.\\d+\\.\\d+",
                  "default": "18.0.0"
                },
                "port": {
                  "type": "number",
                  "default": 3000
                }
              }
            }
          }
        }
      }
    }
  },
  "patternProperties": {
    "^generate[-_]?[wW]ith$": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "security": {
          "type": "boolean",
          "default": false,
          "description": "Generate the security within the project"
        },
        "chat": {
          "type": "boolean",
          "default": false,
          "description": "Generate a Chat App within the project"
        },
        "test": {
          "type": "boolean",
          "default": false,
          "description": "Generate tests for the project"
        },
        "validation": {
          "type": "boolean",
          "default": false,
          "description": "Generate the project with the validations"
        }
      },
      "patternProperties": {
        "^data[-_]?[Ll]oader$": {
          "type": "boolean",
          "default": false,
          "description": "Generate a DataLoader to load sample data for development"
        },
        "^docker[-_][Cc]ompose$": {
          "type": "boolean",
          "default": false,
          "description": "add a docker-compose to the generated project"
        }
      }
    },
    "^naming[-_]?[Tt]emplate$": {
      "type": "object",
      "description": "configure how to name the classes",
      "additionalProperties": false,
      "properties": {
        "angular": {
          "$ref": "#/definitions/namingTemplateProper"
        }
      },
      "patternProperties": {
        "^[Ss]pring[-_]?[bB]oot$": {
          "$ref": "#/definitions/namingTemplateProper"
        },
        "^react[-_]?[Jj]s$": {
          "$ref": "#/definitions/namingTemplateProper"
        }
      }
    },
    "^spring[-_]?[bB]oot$": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "jpa": {
          "type": "object",
          "description": "set some configuration for jpa (only in spring-boot apps)",
          "additionalProperties": false,
          "patternProperties": {
            "^generate[-_]?[Ss]trategy$": {
              "type": "string",
              "default": "SEQUENCE",
              "description": "Choose the generate strategy to be used when generating the entities",
              "enum": [
                "TABLE",
                "SEQUENCE",
                "IDENTITY",
                "AUTO"
              ]
            },
            "^inheritance[-_]?[Ss]trategy$": {
              "type": "string",
              "default": "JOINED",
              "description": "Choose the inheritance strategy to be used when generating the entities",
              "enum": [
                "SINGLE_TABLE",
                "TABLE_PER_CLASS",
                "JOINED"
              ]
            }
          }
        },
        "properties": {
          "description": "configure the generated configuration file",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "frontend": {
              "type": "string",
              "default": "http://localhost:4200",
              "anyOf": [
                {
                  "const": "http://localhost:4200"
                },
                {
                  "const": "http://localhost:3000"
                },
                {
                  "pattern": ".+"
                }
              ]
            },
            "frontends": {
              "type": "array",
              "items": {
                "type": "string",
                "default": "http://localhost:4200",
                "anyOf": [
                  {
                    "const": "http://localhost:4200"
                  },
                  {
                    "const": "http://localhost:3000"
                  },
                  {
                    "pattern": ".+"
                  }
                ]
              }
            }
          },
          "patternProperties": {
            "^load[-_]?[Dd]ata$": {
              "type": "boolean",
              "default": false,
              "description": "Assign a value to load-data in the properties file"
            },
          }
        }
      }
    }
  }
}