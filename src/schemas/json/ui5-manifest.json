{
  "title": "JSON schema for UI5 manifest.json project declaration",
  "description": "Schema for UI5/OPENUI5 manifest.json",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "definitions": {
    "sap.ui.core.CSSSize": {
      "type": "string",
      "pattern": "(\\d+\\s*(em|ex|rem|cm|mm|in|pc|pt|px|%)|calc\\(.*\\)|auto|inherit)",
      "description": "A string type that represents CSS size values. See [Documentation](https://openui5.hana.ondemand.com/#docs/api/symbols/sap.ui.core.CSSSize.html) for further information."
    },
    "sap.ui.core.mvc.view": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the View. Give just the name, if view is an XML view.",
          "type": "string",
          "enum": [
            "HTML",
            "JS",
            "JSON",
            "Template",
            "XML"
          ]
        },
        "width": {
          "$ref": "#/definitions/sap.ui.core.CSSSize",
          "default": "100%"
        },
        "height": {
          "$ref": "#/definitions/sap.ui.core.CSSSize"
        },
        "displayBlock": {
          "description": "Gets current value of property displayBlock.\nWhether the CSS display should be set to \"block\". Set this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height. Do not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line). ",
          "type": "boolean",
          "default": false
        }
      }
    },
    "transition": {
      "type": "string",
      "description": "defines how the transition happens; you can choose between slide (default), flip, fade, and show.",
      "enum": [
        "slide",
        "flip",
        "fade",
        "show"
      ],
      "default": "slide"
    },
    "models": {
      "type": "object",
      "base": {
        "properties": {
          "type": {
            "type": "string",
            "description": "Model class name",
            "enum": [
              "sap.ui.model.resource.ResourceModel",
              "sap.ui.model.odata.v4.ODataModel",
              "sap.ui.model.odata.v2.ODataModel",
              "sap.ui.model.json.JSONModel"
            ]
          },
          "uri": {
            "type": "string",
            "description": "Relative URL in the component, taking embeddedBy into account if filled, or server for absolute model"
          },
          "settings": {
            "type": "object",
            "description": "Object that is passed to the model constructor"
          },
          "dataSource": {
            "type": "string",
            "description": "String of key or alias from sap.app dataSources to reference an existing data source; the type, uri and settings properties are set according to the data source's type, uri and settings (if not already defined). If the type under sap.app dataSources is OData, an OData Model V2 is created automatically. If you need an OData Model V1, specify the type as well."
          }
        }
      }
    },
    "modules": {
      "type": "object",
      "properties": {
        "minVersion": {
          "type": "string",
          "description": "Minimum version of the module, if your app requires a minimum version",
          "pattern": "\\d+\\.\\d+\\.\\d+"
        },
        "lazy": {
          "type": "boolean",
          "description": "Specify lazy to indicate that the lib shall be lazy loaded",
          "default": true
        }
      }
    }
  },
  "properties": {
    "start_url": {
      "type": "string",
      "description": "Start page of your app, if available"
    },
    "_version": {
      "type": "string",
      "description": "mandatory descriptor format version (not w3c)"
    },
    "sap.app": {
      "type": "object",
      "title": "SAP app settings",
      "required": [
        "applicationVersion",
        "title"
      ],
      "properties": {
        "_version": {
          "type": "string",
          "description": "SAP app version"
        },
        "id": {
          "type": "string",
          "maxLength": 70,
          "description": "Mandatory attribute: Unique identifier of the app, which must correspond to the component name\r\nThe ID must not exceed 70 characters. It must be unique and must correspond to the component name. "
        },
        "type": {
          "type": "string",
          "description": "Type of the application",
          "enum": [
            "application",
            "component",
            "library"
          ]
        },
        "i18n": {
          "type": "string",
          "maxLength": 100,
          "default": "i18n.properties",
          "description": "Relative URL to the properties file that contains the text symbols for the descriptor (The path to the i18n file must not exceed 100 characters)"
        },
        "applicationVersion": {
          "type": "object",
          "description": "The version of the application",
          "properties": {
            "version": {
              "type": "string",
              "description": "The version string",
              "default": "1.0.0"
            }
          }
        },
        "embeds": {
          "type": "array",
          "description": "Array of relative paths to the nested manifest.json files. Attribute is mandatory if a nested manifest.json exists."
        },
        "embeddedBy": {
          "type": "string",
          "description": "Relative path back to the manifest.json file of an embedding component or library. Attribute is mandatory for a nested manifest.json."
        },
        "title": {
          "type": "string",
          "default": "{{title}}",
          "description": "The entry is language-dependent and specified via {{…}} syntax",
          "pattern": "\\{\\{.*\\}\\}"
        },
        "subTitle": {
          "type": "string",
          "default": "{{subTitle}}",
          "description": "Subtitle of your application. Language-dependent entry for a subtitle; specified via {{...}} syntax",
          "pattern": "\\{\\{.*\\}\\}"
        },
        "description": {
          "type": "string",
          "description": "Description for your application. Language-dependent entry that is specified via {{…}} syntax",
          "pattern": "\\{\\{.*\\}\\}"
        },
        "tags": {
          "type": "object",
          "description": "Containing an array of language-dependent keywords that are specified via {{…}} syntax",
          "required": [
            "keywords"
          ],
          "properties": {
            "keywords": {
              "type": "array",
              "description": "Array with tag keywords for example 'keywords': ['{{keyWord1}}','{{keyWord2}}']",
              "items": {
                "type": "string",
                "pattern": "\\{\\{.*\\}\\}"
              }
            }
          }
        },
        "ach": {
          "type": "string",
          "description": "Application component hierarchy (SAP's component names for bug reports); attribute is mandatory for SAP apps, but is not used so far for apps developed outside SAP."
        },
        "dataSources": {
          "type": "object",
          "description": "Unique key/alias for specifying the used data sources",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string",
                "description": "Mandatory relative URL in the component; takes embeddedBy into account, if filled, or the server absolute of the data source, for example \"/sap/opu/odata/snce/PO_S_SRV;v=2/\""
              },
              "type": {
                "type": "string",
                "description": "The type of the data source",
                "enum": [
                  "OData",
                  "ODataAnnotation",
                  "XML",
                  "INA",
                  "JSON"
                ],
                "default": "OData"
              },
              "settings": {
                "type": "object",
                "description": "Data source type-specific attributes",
                "properties": {
                  "odataVersion": {
                    "type": "string",
                    "description": "The version your odata model should use.",
                    "enum": [
                      "2.0",
                      "4.0"
                    ],
                    "default": "2.0"
                  },
                  "localUri": {
                    "type": "string",
                    "description": "Relative URL to local metadata document or annotation uri"
                  },
                  "annotations": {
                    "type": "array",
                    "description": "Array of annotations which references an existing data source of type \"ODataAnnotation\" under sap.app/dataSources"
                  },
                  "maxAge": {
                    "type": "integer",
                    "description": "Indicates the number of seconds the client is willing to accept with regard to the age of the data that is requested."
                  }
                }
              },
              "cdsViews": {
                "type": "array",
                "description": "Array of directly used CDS views. This attribute is optional and only added if used via INA protocol directly, not if used via OData service."
              },
              "offline": {
                "type": "boolean",
                "description": "Indicates whether the app is running offline; default is false (online)",
                "default": false
              },
              "sourceTemplate": {
                "type": "object",
                "description": "If an app has been generated from a template, this attribute is filled automatically by the generation tool (SAP Web IDE)",
                "required": [
                  "id",
                  "version"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Mandatory ID of the template from which the app was generated"
                  },
                  "version": {
                    "type": "string",
                    "description": "Mandatory version of the template from which the app was generated"
                  },
                  "packagedWithMySelf": {
                    "type": "boolean",
                    "description": "Indicates if the open source component is part of the app (true) or not (false)"
                  }
                }
              },
              "crossNavigation": {
                "type": "object",
                "description": "Cross-navigation for specifying inbounds and outbounds",
                "required": [
                  "inbounds"
                ],
                "properties": {
                  "scopes": {
                    "type": "object",
                    "description": "Scope of a site",
                    "properties": {
                      "sapSite": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "unique ID of a site. The scope is set in runtime programmatically or by specific property. Which scope and scope value to set will be detailed in the documentation or applied by a tool."
                          }
                        }
                      }
                    }
                  },
                  "inbounds": {
                    "type": "object",
                    "description": "Unique key or alias to specify inbounds (mandatory)",
                    "required": [
                      "semanticObject",
                      "action"
                    ],
                    "properties": {
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "sap.ui": {
      "type": "object",
      "required": [
        "technology",
        "deviceTypes"
      ],
      "properties": {
        "technology": {
          "type": "string",
          "description": "Specifies the UI technology; value is UI5",
          "enum": [
            "UI5"
          ],
          "default": "UI5"
        },
        "icons": {
          "type": "object",
          "description": "Contains object with app-specific icons",
          "properties": {
            "icon": {
              "type": "string",
              "description": "Icon of the app"
            },
            "favIcon": {
              "type": "string",
              "description": "ICO file to be used inside the browser and for desktop shortcuts"
            },
            "phone": {
              "type": "string",
              "description": "57x57 pixel version for non-retina iPhones"
            },
            "phone@2": {
              "type": "string",
              "description": "114x114 pixel version for retina iPhones"
            },
            "tablet": {
              "type": "string",
              "description": "72x72 pixel version for non-retina iPads"
            },
            "tablet@2": {
              "type": "string",
              "description": "144x144 pixel version for retina iPads"
            }
          }
        },
        "deviceTypes": {
          "type": "object",
          "description": "Contains objects with device types on which the app is running",
          "required": [
            "desktop",
            "tablet",
            "phone"
          ],
          "properties": {
            "desktop": {
              "type": "boolean",
              "description": "Indicator for whether desktop devices are supported"
            },
            "tablet": {
              "type": "boolean",
              "description": "Indicator for whether tablet devices are supported"
            },
            "phone": {
              "type": "boolean",
              "description": "Indicator for whether phone devices are supported"
            }
          }
        },
        "supportedThemes": {
          "type": "array",
          "uniqueItems": true,
          "description": "array of supported SAP themes, such as sap_hcb, sap_belize",
          "default": [
            "sap_hcb",
            "sap_belize"
          ]
        },
        "fullWidth": {
          "type": "boolean",
          "description": "Indicates whether an app shall run in full screen mode",
          "default": false
        }
      }
    },
    "sap.ui5": {
      "type": "object",
      "required": [
        "dependencies",
        "contentDensities"
      ],
      "properties": {
        "resources": {
          "type": "object",
          "description": "Relative URLs in the component, taking embeddedBy into account if filled, pointing to js (JavaScript) and css resources that are needed by the app for specifying the mandatory uri and an id (optional) for CSS. The JavaScript files are loaded by the require mechanism. The CSS files are added to the head of the HTML page as a link tag. The resources are resolved relative to the location of the manifest.json file.",
          "additionalProperties": {
            "type": "array",
            "required": [
              "uri"
            ],
            "properties": {
              "uri": {
                "type": "string",
                "description": "URI to the file (relative)"
              },
              "id": {
                "type": "string",
                "description": "optional ID"
              }
            }
          },
          "default": {
            "js": [
              {
                "uri": "component.js"
              }
            ],
            "css": [
              {
                "uri": "component.css",
                "id": "componentcss"
              }
            ]
          }
        },
        "dependencies": {
          "type": "object",
          "description": "specifies the external dependencies that are loaded by the OpenUI5 core during the initialization phase of the component and used afterwards, such as libraries or components",
          "required": [
            "minUI5Version"
          ],
          "properties": {
            "minUI5Version": {
              "type": "string",
              "description": "Minimum version of OpenUI5 that your component requires; this information ensures that the features of the OpenUI5 runtime version of the component are available. As OpenUI5 does not currently enforce use of the correct version, the minUI5Version is used for information purposes only. If the minimum SAPUI5 version criteria is not fulfilled, a warning is issued in the console log.",
              "pattern": "\\d*\\.\\d*\\.\\d*"
            },
            "libs": {
              "type": "object",
              "description": "ID (namespace) of the libraries that the OpenUI5 core should load for use in the component.",
              "patternProperties": {
                "^(\\w+\\.?)+\\w+$": {
                  "$ref": "#/definitions/modules"
                }
              }
            },
            "components": {
              "type": "object",
              "description": "ID (namespace) of the libraries that the OpenUI5 core should load for use in the component.",
              "patternProperties": {
                "^(\\w+\\.?)+\\w+$": {
                  "$ref": "#/definitions/modules"
                }
              }
            }
          }
        },
        "models": {
          "type": "object",
          "description": "Defines models that should be created or destroyed along the component's lifecycle. The key represents the model name.\nUse an empty string (\"\") for the default model.",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Model class name"
              },
              "uri": {
                "type": "string",
                "description": "Relative URL in the component, taking embeddedBy into account if filled, or server for absolute model"
              },
              "dataSource": {
                "type": "string",
                "description": "String of key or alias from sap.app dataSources to reference an existing data source.\nThe type, uri and settings properties are set according to the data source's type, uri and settings (if not already defined). If the type under sap.app dataSources is OData, an OData Model V2 is created automatically. If you need an OData Model V1, specify the type as well."
              },
              "preload": {
                "type": "boolean",
                "description": "Defines whether or not the model is initialized (preloaded) before the component instance is created and while loading the component preload and its dependencies.",
                "default": false
              },
              "settings": {
                "type": "object",
                "description": "Additional settings"
              }
            }
          }
        },
        "rootView": {
          "type": [
            "string",
            "object"
          ],
          "description": "Specifies the root view that shall be opened; can be the view name as a string for XML views, or the view configuration object with viewName for the view name as a string and type for the type (enumeration of sap.ui.core.mvc.ViewType) and other properties of sap.ui.core.mvc.view.",
          "pattern": "^(\\w+\\.?)+\\w+$",
          "$ref": "#/definitions/sap.ui.core.mvc.view"
        },
        "handleValidation": {
          "type": "boolean",
          "description": "Used to enable or disable validation handling by the message manager for this component.",
          "default": false
        },
        "config": {
          "type": "object",
          "description": "Static configuration; specify the name-value pairs that you need in your component."
        },
        "routing": {
          "properties": {
            "config": {
              "type": "object",
              "description": "Provides configuration parameters for route and router",
              "properties": {
                "routerClass": {
                  "type": "string",
                  "description": "router class to use",
                  "default": "sap.ui.core.routing.Router",
                  "enum": [
                    "sap.ui.core.routing.Router",
                    "sap.m.routing.Router"
                  ]
                },
                "async": {
                  "type": "boolean",
                  "description": "Async routing",
                  "default": false
                },
                "viewType": {
                  "type": "string",
                  "description": "Type of the view",
                  "enum": [
                    "XML",
                    "JSON",
                    "JavaScript",
                    "HTML"
                  ]
                },
                "viewPath": {
                  "type": "string",
                  "description": "where the view is located in the app (Namespace synthax e.g. 'myapp.views'"
                },
                "controlId": {
                  "type": "string",
                  "description": "controlId of the control that is used to display the view (e.g. app)"
                },
                "viewLevel": {
                  "type": "integer",
                  "description": "if you have different levels of navigation, especially for flip and slide transitions, where, for example, it is important to know whether the slide animation should go from left to right or vice versa"
                },
                "controlAggregation": {
                  "type": "string",
                  "description": "target aggregation to which the view is added. The NavContainer control, for example, has an aggregation called Pages and the shell container has Content"
                },
                "targetParent": {
                  "type": "string",
                  "description": "where the control is located"
                },
                "transition": {
                  "$ref": "#/definitions/transition"
                },
                "bypassed": {
                  "type": "object",
                  "description": "Using the bypassed parameter, you specify the navigation target that is used whenever no navigation pattern is matched. If you use this setting, you also have to define a corresponding target in the targets section.",
                  "properties": {
                    "target": {
                      "type": "string",
                      "description": "description",
                      "default": "notFound"
                    }
                  }
                }
              }
            },
            "routes": {
              "type": "array",
              "description": "Each route defines a name, a pattern, and optionally one or more targets to which to navigate when the route has been matched.",
              "items": {
                "type": "object",
                "uniqueItems": true,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the route (unique within one router instance)"
                  },
                  "pattern": {
                    "type": "string",
                    "description": "The pattern as hash part of the URL that matches the route"
                  },
                  "target": {
                    "type": [
                      "string",
                      "array"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "description": "The navigation target as defined in the targets section. If you want to load multiple views at the same time, you can assign multiple targets."
                  },
                  "parent": {
                    "type": "string",
                    "description": "The parent to specify a route reference in a parent component (in nested components)"
                  }
                }
              }
            },
            "targets": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "viewName": {
                    "type": "string",
                    "description": "Address of the view to be targeted (namespace, e.g. 'myapp.views.myview')"
                  },
                  "viewPath": {
                    "type": "string",
                    "description": "where the view is located in the app"
                  },
                  "viewId": {
                    "type": "string",
                    "description": "Id of the view instance"
                  },
                  "viewLevel": {
                    "type": "integer",
                    "description": "if you have different levels of navigation, especially for flip and slide transitions, where, for example, it is important to know whether the slide animation should go from left to right or vice versa"
                  },
                  "controlId": {
                    "type": "string",
                    "description": "controlId of the control that is used to display the view (e.g. app)"
                  },
                  "targetParent": {
                    "type": "string",
                    "description": "where the control is located"
                  },
                  "controlAggregation": {
                    "type": "string",
                    "description": "target aggregation to which the view is added. The NavContainer control, for example, has an aggregation called Pages and the shell container has Content."
                  },
                  "clearAggregation": {
                    "type": "string",
                    "description": "clearAggregation specifies whether the aggregation should be cleared before adding the new view instance."
                  },
                  "transition": {
                    "$ref": "#/definitions/transition"
                  },
                  "parent": {
                    "type": "string",
                    "description": "The view is created and added before the target view is added"
                  }
                }
              },
              "description": "A target defines the view that is displayed. It is associated with one or more routes or it can be displayed manually from within the app. Whenever a target is displayed, the corresponding view is loaded and added to the aggregation configured with the controlAggregation option of the control."
            },
            "owner": {
              "type": "string",
              "description": "The owner parameter defines the owner of all views that are created by the router. This is typically a UIComponent. This parameter is set automatically if the router instance is instantiated by a component."
            }
          }
        },
        "extends": {
          "type": "object",
          "properties": {
            "component": {
              "type": "string",
              "description": " ID (namespace) of the component being extended",
              "pattern": "^(\\w+\\.?)+\\w+$"
            },
            "minVersion": {
              "type": "string",
              "description": "Specifies the minimum version of the component being extended, for information purposes if your app requires a minimum version of the component.",
              "pattern": "\\d*\\.\\d*\\.\\d*"
            },
            "extensions": {
              "type": "object",
              "description": "Component or view extensions, which enable you to replace and extend views and controllers and also to modify the views"
            }
          }
        },
        "contentDensities": {
          "type": "object",
          "description": "Contains an object with the content density modes that the app supports",
          "required": [
            "compact",
            "cozy"
          ],
          "properties": {
            "compact": {
              "type": "boolean",
              "description": "indicates whether compact mode is supported"
            },
            "cozy": {
              "type": "boolean",
              "description": "indicates whether cozy mode is supported"
            }
          }
        },
        "resourceRoots": {
          "type": "object",
          "description": "Map of URL locations keyed by a resource name prefix; only relative paths inside the component are allowed and no \"..\" characters.\n\nThis attribute is intended for actual sub-packages of the component only, meaning that it must not be used for the component namespace itself. The defined resource roots will be registered after the component controller is loaded and do not affect the modules being declared as dependencies in the component controller.",
          "patternProperties": {
            "^\\.{1}\\/(\\w+\\/?)+": {
              "type": "string",
              "pattern": "^\\.{1}\\/(\\w+\\/?)+"
            }
          }
        },
        "componentName": {
          "type": "string",
          "description": "Name of the component"
        },
        "autoPrefixId": {
          "type": "boolean",
          "description": "Enables the auto-prefixing of IDs of ManagedObjects (controls and events) which are created in the context of the createContent function or any other invocation of the Component.prototype.runAsOwner() function",
          "default": false
        }
      }
    },
    "sap.platform.abap": {
      "type": "object",
      "description": "Specifies the app's URI in the ABAP system, for example /sap/bc/ui5_ui5/sap/appName",
      "properties": {
        "uri": {
          "type": "string",
          "description": "uri of the app in the ABAP system"
        },
        "uriNwbc": {
          "type": "string",
          "description": "represents alternative uri for starting application for legacy apps, such as WDA/SAP GUI, generated by export tool"
        }
      }
    },
    "sap.platform.hcp": {
      "type": "object",
      "description": "HANA-Cloud-Platform-specific attributes"
    },
    "sap.mobile": {
      "type": "object",
      "description": "in Mobile responsibility"
    },
    "sap.flp": {
      "type": "object",
      "description": "in FLP responsibility"
    },
    "sap.ui.generic.app": {
      "type": "object",
      "description": "in SAP Fiori responsibility"
    },
    "sap.ovp": {
      "type": "object",
      "description": "in Overview Page responsibility"
    },
    "sap.smartbusiness.app": {
      "type": "object",
      "description": "in Smart Business responsibility"
    },
    "sap.wda": {
      "type": "object",
      "description": "in Web Dynpro ABAP responsibility"
    },
    "sap.gui": {
      "type": "object",
      "description": "in SAP GUI responsibility"
    },
    "sap.cloud.portal": {
      "type": "object",
      "description": "in SAP Cloud Portal responsibility"
    },
    "sap.apf": {
      "type": "object",
      "description": "in analysis path framework responsibility"
    }
  }
}