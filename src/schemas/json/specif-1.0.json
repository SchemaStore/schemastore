{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "alternativeIds": {
      "description": "The list of consolidated items which can be used in case a consolidated item shall be updated.",
      "items": {
        "description": "A list of pointers to resources resp statements which have been merged to this one.",
        "oneOf": [
          {
            "$ref": "#/definitions/id",
            "description": "A string with a valid identifier of a model-element; where the last revision (i.e. revision=0) is implied."
          },
          {
            "properties": {
              "id": {
                "$ref": "#/definitions/id",
                "description": "A string with a valid identifier of a model-element"
              },
              "project": {
                "$ref": "#/definitions/id",
                "description": "A string with a valid project identifier"
              },
              "revision": {
                "$ref": "#/definitions/revision"
              }
            },
            "required": ["id"],
            "type": "object"
          }
        ]
      },
      "type": "array",
      "uniqueItems": true
    },
    "dateTime": {
      "description": "An ISO-8601 dateTime string. For reduced accuracy, any number of values may be dropped, but only from right to left.",
      "format": "date-time",
      "type": "string"
    },
    "icon": {
      "description": "A symbol for display as a prefix to titles; applicable to all instances of the class. Is usually a XML-encoded UTF-8 symbol, can be an URL or dataURL.",
      "type": "string"
    },
    "id": {
      "description": "A globally unique identifier.",
      "pattern": "^[_a-zA-Z]{1}[_a-zA-Z0-9.-]*$",
      "type": "string"
    },
    "instantiation": {
      "description": "Indicates whether an instance of the class is created automatically, manually or both. All is allowed, if the property is omitted. The class is abstract and cannot be instantiated, if the property list is present, but empty.",
      "items": {
        "enum": ["auto", "user"],
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "key": {
      "description": "A unique key for a particular revision of an identifiable item, e.g. of a resource.",
      "oneOf": [
        {
          "$ref": "#/definitions/id",
          "description": "A string with a valid identifier; where the last revision (i.e. revision=0) is implied."
        },
        {
          "description": "A key consisting of a globally unique identifier and a revision. No or an undefined revision means the latest revision of the identified item.",
          "properties": {
            "id": {
              "$ref": "#/definitions/id"
            },
            "revision": {
              "$ref": "#/definitions/revision"
            }
          },
          "required": ["id"],
          "type": "object"
        }
      ]
    },
    "nodes": {
      "description": "A list of pointers to resources; may be nested to build a tree, i.e. a hierarchy of pointers.",
      "items": {
        "properties": {
          "changedAt": {
            "$ref": "#/definitions/dateTime"
          },
          "changedBy": {
            "type": "string"
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "nodes": {
            "$ref": "#/definitions/nodes",
            "description": "The next hierarchy level."
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "resource": {
            "$ref": "#/definitions/key",
            "description": "The pointer to the resource to be displayed at this position."
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "title": {
            "$ref": "#/definitions/value",
            "description": "The node's label; if missing, the title of the referenced resource is applied."
          }
        },
        "required": ["id", "resource", "changedAt"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "properties": {
      "description": "A list of properties of a resource or statement.",
      "items": {
        "properties": {
          "changedAt": {
            "$ref": "#/definitions/dateTime",
            "description": "Without change information, the parent's change information applies."
          },
          "changedBy": {
            "type": "string"
          },
          "class": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of propertyClasses. In addition, it must be listed in the propertyClasses of the parent's class."
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "title": {
            "$ref": "#/definitions/value",
            "description": "The property's label; if missing, the title of the property's class is applied."
          },
          "value": {
            "$ref": "#/definitions/value",
            "description": "If the value is unknown, omit the whole property. By default, the class' value applies."
          }
        },
        "required": ["class", "value"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "replaces": {
      "description": "For change and configuration management; the first revision has 0 entries, a simple modification has 1 entry and the result of a merge has 2 entries.",
      "items": {
        "$ref": "#/definitions/revision"
      },
      "maxItems": 2,
      "type": "array",
      "uniqueItems": true
    },
    "revision": {
      "description": "A globally unique revision tag with one or multiple blocks with alphanumeric characters separated by a special character [.:,;/-]. Sequential as well as branching/merging notations are possible.",
      "pattern": "^(?:[0-9a-zA-Z]+[.:,;/-])*[0-9a-zA-Z]+$",
      "type": "string"
    },
    "value": {
      "description": "A property value according to the property class.",
      "oneOf": [
        {
          "description": "A string containing some text or a special value.",
          "type": "string"
        },
        {
          "description": "A list of items with text and language properties. Thus, the information can be given in multiple languages.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "language": {
                "description": "An IETF language tag such as 'en', 'en-US, 'fr' or 'de'.",
                "type": "string"
              },
              "text": {
                "description": "A string containing some text.",
                "type": "string"
              }
            },
            "required": ["text", "language"],
            "type": "object"
          },
          "type": "array",
          "uniqueItems": true
        }
      ]
    }
  },
  "description": "The Specification Integration Facility (SpecIF) integrates partial system models from different methods and tools in a semantic net. Collaborators shall browse, search and audit engineering results in a common context. Also, the exchange of model information between organizations and tools is facilitated. SpecIF represents the visible, i.e. the diagrams and the text, as well as the semantics of system specifications.",
  "id": "http://specif.de/v1.0/schema#",
  "properties": {
    "$schema": {
      "description": "An absolute URL pointing to this SpecIF schema.",
      "format": "uri",
      "pattern": "^https?:\\/\\/(specif\\.de\\/v1\\.0\\/schema|.+\\/specif-1\\.0)\\.json$",
      "type": "string"
    },
    "createdAt": {
      "$ref": "#/definitions/dateTime"
    },
    "createdBy": {
      "description": "The creator of the SpecIF data-set (file). If specified, at least an e-mail address must be given.",
      "properties": {
        "email": {
          "properties": {
            "type": {
              "type": "string"
            },
            "value": {
              "format": "email",
              "type": "string"
            }
          },
          "required": ["value"],
          "type": "object"
        },
        "familyName": {
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "org": {
          "properties": {
            "organizationName": {
              "type": "string"
            }
          },
          "required": ["organizationName"],
          "type": "object"
        }
      },
      "required": ["email"],
      "type": "object"
    },
    "dataTypes": {
      "description": "The base data types for use by property class definitions.",
      "items": {
        "oneOf": [
          {
            "additionalProperties": false,
            "properties": {
              "changedAt": {
                "$ref": "#/definitions/dateTime"
              },
              "changedBy": {
                "type": "string"
              },
              "description": {
                "$ref": "#/definitions/value"
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "replaces": {
                "$ref": "#/definitions/replaces"
              },
              "revision": {
                "$ref": "#/definitions/revision"
              },
              "title": {
                "$ref": "#/definitions/value"
              },
              "type": {
                "description": "The corresponding definition in https://www.w3.org/TR/xmlschema-2/ applies.",
                "enum": ["xs:boolean", "xs:dateTime"],
                "title": "Data-type 'Boolean' or 'dateTime'",
                "type": "string"
              }
            },
            "required": ["id", "title", "type", "changedAt"],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "changedAt": {
                "$ref": "#/definitions/dateTime"
              },
              "changedBy": {
                "type": "string"
              },
              "description": {
                "$ref": "#/definitions/value"
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "maxInclusive": {
                "description": "Optional use by dataTypes 'xs:integer' and 'xs:double'.",
                "title": "Maximum Value of a Number",
                "type": "number"
              },
              "minInclusive": {
                "description": "Optional use by dataTypes 'xs:integer' and 'xs:double'.",
                "title": "Minimum Value of a Number",
                "type": "number"
              },
              "replaces": {
                "$ref": "#/definitions/replaces"
              },
              "revision": {
                "$ref": "#/definitions/revision"
              },
              "title": {
                "$ref": "#/definitions/value"
              },
              "type": {
                "description": "The corresponding definition in https://www.w3.org/TR/xmlschema-2/ applies.",
                "enum": ["xs:integer"],
                "title": "Data-type 'Integer'",
                "type": "string"
              }
            },
            "required": ["id", "title", "type", "changedAt"],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "changedAt": {
                "$ref": "#/definitions/dateTime"
              },
              "changedBy": {
                "type": "string"
              },
              "description": {
                "$ref": "#/definitions/value"
              },
              "fractionDigits": {
                "description": "Optional use by dataType 'xs:double', indicates the number of decimals.",
                "minimum": 1,
                "title": "Number of fraction digits of a Decimal Number",
                "type": "integer"
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "maxInclusive": {
                "description": "Optional use by dataTypes 'xs:integer' and 'xs:double'.",
                "title": "Maximum Value of a Number",
                "type": "number"
              },
              "minInclusive": {
                "description": "Optional use by dataTypes 'xs:integer' and 'xs:double'.",
                "title": "Minimum Value of a Number",
                "type": "number"
              },
              "replaces": {
                "$ref": "#/definitions/replaces"
              },
              "revision": {
                "$ref": "#/definitions/revision"
              },
              "title": {
                "$ref": "#/definitions/value"
              },
              "type": {
                "description": "The corresponding definition in https://www.w3.org/TR/xmlschema-2/ applies.",
                "enum": ["xs:double"],
                "title": "Data-type 'Double'",
                "type": "string"
              }
            },
            "required": ["id", "title", "type", "changedAt"],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "changedAt": {
                "$ref": "#/definitions/dateTime"
              },
              "changedBy": {
                "type": "string"
              },
              "description": {
                "$ref": "#/definitions/value"
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "maxLength": {
                "description": "Optional use by dataTypes 'xs:string' and 'xhtml'.",
                "minimum": 0,
                "title": "Maximum String Length",
                "type": "integer"
              },
              "replaces": {
                "$ref": "#/definitions/replaces"
              },
              "revision": {
                "$ref": "#/definitions/revision"
              },
              "title": {
                "$ref": "#/definitions/value"
              },
              "type": {
                "description": "The corresponding definition in https://www.w3.org/TR/xmlschema-2/ resp. https://www.w3.org/TR/xhtml1/ applies.",
                "enum": ["xs:string", "xhtml"],
                "title": "Data-type 'String' or 'Formatted Text'",
                "type": "string"
              }
            },
            "required": ["id", "title", "type", "changedAt"],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "changedAt": {
                "$ref": "#/definitions/dateTime"
              },
              "changedBy": {
                "type": "string"
              },
              "description": {
                "$ref": "#/definitions/value"
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "multiple": {
                "description": "Optional use by dataType 'xs:enumeration'. Indicates whether multiple values can be chosen; by default the value is 'false'.",
                "type": "boolean"
              },
              "replaces": {
                "$ref": "#/definitions/replaces"
              },
              "revision": {
                "$ref": "#/definitions/revision"
              },
              "title": {
                "$ref": "#/definitions/value"
              },
              "type": {
                "description": "The corresponding definition in https://www.w3.org/TR/xmlschema-2/ applies.",
                "enum": ["xs:enumeration"],
                "title": "Data-type 'Enumeration'",
                "type": "string"
              },
              "values": {
                "description": "Mandatory use by dataType 'xs:enumeration'. If 'multiple' is true 0..n options may be selected, otherwise exactly one must be selected.",
                "items": {
                  "properties": {
                    "id": {
                      "$ref": "#/definitions/id"
                    },
                    "value": {
                      "$ref": "#/definitions/value"
                    }
                  },
                  "required": ["id", "value"],
                  "type": "object"
                },
                "title": "Enumerated Values",
                "type": "array",
                "uniqueItems": true
              }
            },
            "required": ["id", "title", "type", "changedAt"],
            "type": "object"
          }
        ]
      },
      "type": "array",
      "uniqueItems": true
    },
    "description": {
      "$ref": "#/definitions/value"
    },
    "files": {
      "description": "A list of files being referenced by a resource's or statement's property of dataType XHTML using an <object> tag. A file should have a media type as defined by IANA (see below).",
      "items": {
        "properties": {
          "changedAt": {
            "$ref": "#/definitions/dateTime"
          },
          "changedBy": {
            "type": "string"
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "title": {
            "$ref": "#/definitions/value",
            "description": "In case of a file, the title is the absolute or relative URL."
          },
          "type": {
            "description": "The file's media type (formerly MIME-type) according to https://www.iana.org/assignments/media-types/media-types.xhtml.",
            "type": "string"
          }
        },
        "required": ["id", "title", "type", "changedAt"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "generator": {
      "type": "string"
    },
    "generatorVersion": {
      "type": "string"
    },
    "hierarchies": {
      "$ref": "#/definitions/nodes",
      "description": "A list of hierarchies with pointers to resources; may be nested to build a tree, i.e. a hierarchy of pointers."
    },
    "id": {
      "$ref": "#/definitions/id"
    },
    "isExtension": {
      "description": "Indicates that the project is not schema-compliant on its own; by default the value is 'false'. Of course, it is expected that once extended the project is schema-compliant.",
      "type": "boolean"
    },
    "language": {
      "description": "An IETF language tag such as 'en', 'en-US, 'fr' or 'de' showing the used language of simple property values. Is superseded by a resource's, statement's or property's language value.",
      "type": "string"
    },
    "propertyClasses": {
      "description": "Class definition of a property for resources or statements. Is a sub-element of the respective resourceClass or statementClass. If no revision or change information is specified, the respective values of the parent element apply.",
      "items": {
        "properties": {
          "changedAt": {
            "$ref": "#/definitions/dateTime"
          },
          "changedBy": {
            "type": "string"
          },
          "dataType": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of dataTypes."
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "multiple": {
            "description": "Optional use by a propertyClass with dataType 'xs:enumeration'. Indicates whether multiple values can be chosen. If omitted, the 'multiple' property of the dataType applies; by default the value is 'false'.",
            "type": "boolean"
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "title": {
            "$ref": "#/definitions/value"
          },
          "value": {
            "$ref": "#/definitions/value",
            "description": "An optional default value in case the instantiated resource's or statement's property is missing."
          }
        },
        "required": ["id", "title", "dataType", "changedAt"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "resourceClasses": {
      "description": "The class definitions for resources.",
      "items": {
        "properties": {
          "changedAt": {
            "$ref": "#/definitions/dateTime"
          },
          "changedBy": {
            "type": "string"
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "extends": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of resourceClasses."
          },
          "icon": {
            "$ref": "#/definitions/icon"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "instantiation": {
            "$ref": "#/definitions/instantiation"
          },
          "isHeading": {
            "type": "boolean"
          },
          "propertyClasses": {
            "description": "A collection of keys of eligible property classes",
            "items": {
              "$ref": "#/definitions/key",
              "description": "Must be a member of propertyClasses."
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "title": {
            "$ref": "#/definitions/value"
          }
        },
        "required": ["id", "title", "changedAt"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "resources": {
      "description": "The resources such as diagrams, model elements or requirements.",
      "items": {
        "properties": {
          "alternativeIds": {
            "$ref": "#/definitions/alternativeIds"
          },
          "changedAt": {
            "$ref": "#/definitions/dateTime"
          },
          "changedBy": {
            "type": "string"
          },
          "class": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of resourceClasses."
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "language": {
            "description": "An IETF language tag such as 'en', 'en-US, 'fr' or 'de' showing the used language of simple property values. Is superseded by a property's language value.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/definitions/properties"
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "title": {
            "$ref": "#/definitions/value"
          }
        },
        "required": ["id", "title", "class", "changedAt"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "rights": {
      "properties": {
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": ["title", "type", "url"],
      "type": "object"
    },
    "statementClasses": {
      "description": "The class definitions for statements in subject-predicate-object statements, where subject and object are resources.",
      "items": {
        "properties": {
          "changedAt": {
            "$ref": "#/definitions/dateTime"
          },
          "changedBy": {
            "type": "string"
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "extends": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of statementClasses."
          },
          "icon": {
            "$ref": "#/definitions/icon"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "instantiation": {
            "$ref": "#/definitions/instantiation"
          },
          "isUndirected": {
            "description": "Indicates that an instance's subject and object are equivalent and can be exchanged without changing its meaning. Is superseded by a statement's definition.",
            "type": "boolean"
          },
          "objectClasses": {
            "description": "A collection of id's of eligible resource and statement classes; if 'objectClasses' is missing, all resource or statement classes are eligible.",
            "items": {
              "$ref": "#/definitions/key",
              "description": "Must be a member of resourceClasses or statementClasses."
            },
            "minItems": 1,
            "title": "Resource and statement classes eligible as object",
            "type": "array",
            "uniqueItems": true
          },
          "propertyClasses": {
            "description": "A collection of keys of eligible property classes",
            "items": {
              "$ref": "#/definitions/key",
              "description": "Must be a member of propertyClasses."
            },
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "subjectClasses": {
            "description": "A collection of id's of eligible resource and statement classes; if 'subjectClasses' is missing, all resource or statement classes are eligible.",
            "items": {
              "$ref": "#/definitions/key",
              "description": "Must be a member of resourceClasses or statementClasses."
            },
            "minItems": 1,
            "title": "Resource and statement classes eligible as subject",
            "type": "array",
            "uniqueItems": true
          },
          "title": {
            "$ref": "#/definitions/value"
          }
        },
        "required": ["id", "title", "changedAt"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "statements": {
      "description": "Subject-predicate-Object statements, where subject and object are resources. In other terms, statements are directed relations between two resources building a semantic net.",
      "items": {
        "properties": {
          "alternativeIds": {
            "$ref": "#/definitions/alternativeIds"
          },
          "changedAt": {
            "$ref": "#/definitions/dateTime"
          },
          "changedBy": {
            "type": "string"
          },
          "class": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of statementClasses."
          },
          "description": {
            "$ref": "#/definitions/value"
          },
          "id": {
            "$ref": "#/definitions/id"
          },
          "language": {
            "description": "An IETF language tag such as 'en', 'en-US, 'fr' or 'de' showing the used language of simple property values. Is superseded by a property's language value.",
            "type": "string"
          },
          "object": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of resources or statements."
          },
          "properties": {
            "$ref": "#/definitions/properties"
          },
          "replaces": {
            "$ref": "#/definitions/replaces"
          },
          "revision": {
            "$ref": "#/definitions/revision"
          },
          "subject": {
            "$ref": "#/definitions/key",
            "description": "Must be a member of resources or statements."
          },
          "title": {
            "$ref": "#/definitions/value",
            "description": "The statement's appelation; if missing, the statementClass' title applies."
          }
        },
        "required": ["id", "class", "subject", "object", "changedAt"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "title": {
      "$ref": "#/definitions/value"
    }
  },
  "required": [
    "$schema",
    "id",
    "title",
    "resourceClasses",
    "statementClasses",
    "resources",
    "statements",
    "hierarchies"
  ],
  "title": "JSON-Schema for SpecIF v1.0",
  "type": "object"
}
