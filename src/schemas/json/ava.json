{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": false,
  "definitions": {
    "array-of-paths": {
      "items": {
        "$ref": "#/definitions/path"
      },
      "type": "array"
    },
    "array-of-strings": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "path": {
      "minLength": 1,
      "type": "string"
    }
  },
  "description": "Configuration Schema for the JavaScript test runner AVA",
  "id": "https://json.schemastore.org/ava.json",
  "properties": {
    "cache": {
      "default": true,
      "description": "Defaults to `true` to cache compiled files under `node_modules/.cache/ava.` If `false`, files are cached in a temporary directory instead",
      "type": "boolean"
    },
    "concurrency": {
      "description": "Max number of test files running at the same time (default: CPU cores)",
      "type": "number"
    },
    "environmentVariables": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "Specifies environment variables to be made available to the tests. The environment variables defined here override the ones from `process.env`",
      "type": "object"
    },
    "extensions": {
      "anyOf": [
        {
          "$ref": "#/definitions/array-of-strings"
        },
        {
          "additionalProperties": {
            "enum": ["commonjs", "module"]
          },
          "patternProperties": {
            "^(c|m)?js$": {
              "enum": [true]
            }
          },
          "type": "object"
        }
      ],
      "default": ["cjs", "mjs", "js"],
      "description": "Extensions of test files. Setting this overrides the default `[\"cjs\", \"mjs\", \"js\"]` value, so make sure to include those extensions in the list. Experimentally you can configure how files are loaded"
    },
    "failFast": {
      "default": false,
      "description": "Stop running further tests once a test fails",
      "type": "boolean"
    },
    "failWithoutAssertions": {
      "default": true,
      "description": "If `false`, does not fail a test if it doesn't run assertions",
      "type": "boolean"
    },
    "files": {
      "$ref": "#/definitions/array-of-paths",
      "description": "An array of glob patterns to select test files. Files with an underscore prefix are ignored. By default only selects files with `cjs`, `mjs` & `js` extensions, even if the pattern matches other files. Specify `extensions` to allow other file extensions"
    },
    "ignoredByWatcher": {
      "$ref": "#/definitions/array-of-paths",
      "description": "An array of glob patterns to match files that, even if changed, are ignored by the watcher"
    },
    "match": {
      "$ref": "#/definitions/array-of-paths",
      "description": "Not typically useful in the `package.json` configuration, but equivalent to specifying `--match` on the CLI"
    },
    "nodeArguments": {
      "$ref": "#/definitions/array-of-strings",
      "description": "Configure Node.js arguments used to launch worker processes"
    },
    "require": {
      "$ref": "#/definitions/array-of-paths",
      "description": "Extra modules to require before tests are run. Modules are required in the worker processes"
    },
    "snapshotDir": {
      "$ref": "#/definitions/path",
      "description": "Specifies a fixed location for storing snapshot files. Use this if your snapshots are ending up in the wrong location"
    },
    "tap": {
      "default": false,
      "description": "If `true`, enables the TAP reporter",
      "type": "boolean"
    },
    "timeout": {
      "anyOf": [
        {
          "minimum": 0,
          "type": "number"
        },
        {
          "pattern": "^(\\d+)(s|m)$",
          "type": "string"
        }
      ],
      "default": "10s",
      "description": "Timeouts in AVA behave differently than in other test frameworks. AVA resets a timer after each test, forcing tests to quit if no new test results were received within the specified timeout. This can be used to handle stalled tests. See our timeout documentation for more options"
    },
    "typescript": {
      "description": "Configures @ava/typescript for projects that precompile TypeScript. Alternatively, you can use `ts-node` to do live testing without transpiling, in which case you shouldn't use the `typescript` property",
      "properties": {
        "compile": {
          "default": false,
          "description": "If `false`, AVA will assume you have already compiled your project. If set to `'tsc'`, AVA will run the TypeScript compiler before running your tests. This can be inefficient when using AVA in watch mode",
          "enum": [false, "tsc"]
        },
        "extensions": {
          "$ref": "#/definitions/array-of-paths",
          "default": ["ts"],
          "description": "You can configure AVA to recognize additional file extensions as TypeScript (e.g., `[\"ts\", \"tsx\"]` to add partial JSX support). Note that the preserve mode for JSX is not (yet) supported. See also AVA's `extensions` object"
        },
        "rewritePaths": {
          "description": "AVA searches your entire project for `*.js`, `*.cjs`, `*.mjs` and `*.ts` files (or other extensions you've configured). It will ignore such files found in the `rewritePaths` targets (e.g. `build/`). If you use more specific paths, for instance `build/main/`, you may need to change AVA's `files` configuration to ignore other directories. Paths are relative to your project directory",
          "patternProperties": {
            "/$": {
              "pattern": "/$",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "utilizeParallelBuilds": {
      "default": true,
      "description": "If `false`, disable parallel builds (default: `true`)",
      "type": "boolean"
    },
    "verbose": {
      "default": false,
      "description": "If `true`, enables verbose output (though currently non-verbose output is not supported)",
      "type": "boolean"
    },
    "workerThreads": {
      "default": true,
      "description": "Use worker threads to run tests (enabled by default). If `false`, tests will run in child processes",
      "type": "boolean"
    }
  },
  "title": "AVA Config Schema",
  "type": "object"
}
