{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Jekyll Static Site Generator config file schema",
  "definitions": {
    "string-array": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "front-matter-default": {
      "type": "object",
      "title": "Front Matter Default",
      "properties": {
        "scope": { "$ref": "#/definitions/scope" },
        "values": { "$ref": "#/definitions/values" }
      }
    },
    "scope": {
      "type": "object",
      "required": [ "path" ],
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string",
          "title": "File path for this scope"
        },
        "type": {
          "type": "string",
          "enum": [
            "pages",
            "posts",
            "drafts"
          ]
        }
      }
    },
    "values": {
      "type": "object",
      "title": "Front Matter Default Values",
      "description": "Values that are set for the given scope. Can be overridden in the files front matter.",
      "properties": {
        "layout": {
          "type": "string",
          "title": "The layout to use.",
          "description": "A file from the directory specified by `layouts_dir`"
        },
        "output": {
          "type": "boolean"
        },
        "permalink": { "$ref": "#/definitions/permalink" }
      }
    },
    "permalink": {
      "type": "string",
      "title": "Permalink Format",
      "description": "Permalinks are the output path for your pages, posts, or collections.\nThey allow you to structure the directories of your source code different from the directories in your output.",
      "default": "date",
      "examples": [
        "date",
        "pretty",
        "ordinal",
        "weekdate",
        "none",
        "/:categories/:year/:month/:day/:title:output_ext"
      ]
    },
    "sequence-collection": { "$ref": "#/definitions/string-array" },
    "mapped-collection": {
      "type": "object",
      "properties": {
        "output": {
          "type": "boolean",
          "title": "Let Jekyll render the collection output"
        },
        "permalink": { "$ref": "#/definitions/permalink" },
        "sort_by": {
          "type": "string",
          "title": "Sort documents by front matter key"
        },
        "order": {
          "$ref": "#/definitions/string-array",
          "title": "Manually order documents as listed",
          "description": "If `sort_by` metadata key has also been defined properly, `order` list takes precedence."
        }
      }
    },
    "collections": {
      "oneOf": [
        { "$ref": "#/definitions/sequence-collection"},
        { "$ref": "#/definitions/mapped-collection"}
      ]
    }
  },
  "properties": {
    "source": {
      "type": "string",
      "title": "Site Source",
      "description": "Change the directory where Jekyll will read files",
      "default": "."
    },
    "destination": {
      "type": "string",
      "title": "Site Destination",
      "description": "Change the directory where Jekyll will write files",
      "default": "./_site"
    },
    "safe": {
      "type": "boolean",
      "default": false,
      "title": "Safe",
      "description": "Disable custom plugins, and ignore symbolic links"
    },
    "exclude": {
      "$ref": "#/definitions/string-array",
      "title": "Exclude",
      "description": "Exclude directories and/or files from the conversion. These exclusions are relative to the site's source directory and cannot be outside the source directory."
    },
    "include": {
      "$ref": "#/definitions/string-array",
      "title": "Include",
      "description": "Force inclusion of directories and/or files in the conversion. `.htaccess` is a good example since dotfiles are excluded by default."
    },
    "keep_files": {
      "$ref": "#/definitions/string-array",
      "title": "Keep files",
      "description": "When clobbering the site destination, keep the selected files. Useful for files that are not generated by jekyll; e.g. files or assets that are generated by your build tool. The paths are relative to the `destination`."
    },
    "timezone": {
      "type": "string",
      "title": "Time Zone",
      "description": "Set the time zone for site generation. This sets the `TZ` environment variable, which Ruby uses to handle time and date creation and manipulation. Any entry from the IANA Time Zone Database is valid, e.g. `America/New_York`.\nWhen serving on a local machine, the default time zone is set by your operating system. But when served on a remote host/server, the default time zone depends on the server's setting or location."
    },
    "encoding": {
      "type": "string",
      "title": "Encoding",
      "description": "Set the encoding of files by name (only available for Ruby 1.9 or later). The default value is `utf-8` starting in 2.0.0, and `nil` before 2.0.0, which will yield the Ruby default of `ASCII-8BIT`. Available encodings can be shown by the command `ruby -e 'puts Encoding::list.join(\"\n\")'`.",
      "default": "utf-8"
    },
    "defaults": {
      "type": "array",
      "title": "Front Matter Defaults",
      "items": { "$ref": "#/definitions/front-matter-default" }
    },
    "show_drafts": {
      "type": "boolean",
      "title": "Drafts",
      "description": "Process and render draft posts.",
      "default": false
    },
    "future": {
      "type": "boolean",
      "title": "Future",
      "description": "Publish posts or collection documents with a future date.",
      "default": false
    },
    "unpublished": {
      "type": "boolean",
      "title": "Unpublished",
      "description": "Render posts that were marked as unpublished."
    },
    "lsi": {
      "type": "boolean",
      "title": "LSI",
      "description": "Produce an index for related posts. Requires the `classifier-reborn` plugin."
    },
    "limit_posts": {
      "type": "integer",
      "title": "Limit Posts",
      "description": "Limit the number of posts to parse and publish."
    },
    "incremental": {
      "type": "boolean",
      "title": "Incremental build",
      "description": "Enable the experimental incremental build feature. Incremental build only re-builds posts and pages that have changed, resulting in significant performance improvements for large sites, but may also break site generation in certain cases."
    },
    "profile": {
      "type": "boolean",
      "title": "Liquid profiler",
      "description": "Generate a Liquid rendering profile to help you identify performance bottlenecks."
    },
    "strict_front_matter": {
      "type": "boolean",
      "title": "Strict Front Matter",
      "description": "Cause a build to fail if there is a YAML syntax error in a page's front matter."
    },
    "port": {
      "type": "integer",
      "title": "Local Server Port",
      "description": "Listen on the given port."
    },
    "host": {
      "type": "string",
      "title": "Local Server Hostname",
      "description": "Listen at the given hostname."
    },
    "baseurl": {
      "type": "string",
      "title": "Base URL",
      "description": "Serve the website from the given base URL.\n\nFor a site designed to be mounted at URL `https://example.com/`, the recommended values are nil, '' or '/'.\nFor a site designed to be mounted at URL `https://example.com/blog/`, the recommended values are just 'blog', '/blog', or '/blog/'"
    },
    "livereload": {
      "type": "boolean",
      "title": "Live Reload",
      "description": "Reload a page automatically on the browser when its content is edited.",
      "default": false
    },
    "detach": {
      "type": "boolean",
      "title": "Detach",
      "description": "Detach the server from the terminal."
    },
    "collections": {
      "$ref": "#/definitions/collections"
    },
    "collections_dir": {
      "type": "string",
      "title": "Collections Dir",
      "description": "Directory to store all your collections in the same place.",
      "default": "."
    },
    "plugins_dir": {
      "type": "string",
      "title": "Plugin Directory",
      "default": "_plugins"
    },
    "layouts_dir": {
      "type": "string",
      "title": "Layouts Directory",
      "default": "_layouts"
    },
    "data_dir": {
      "type": "string",
      "title": "Data Directory",
      "default": "_data"
    },
    "includes_dir": {
      "type": "string",
      "title": "Includes Directory",
      "default": "_includes"
    },
    "markdown_ext": {
      "type": "string",
      "title": "Markdown Extensions",
      "default": "markdown,mkdown,mkdn,mkd,md"
    },
    "whitelist": {
      "$ref": "#/definitions/string-array",
      "title": "Plugin Whitelist"
    },
    "plugins": {
      "$ref": "#/definitions/string-array",
      "title": "List of plugins to use"
    },
    "markdown": {
      "type": "string",
      "title": "Markdown Processor",
      "default": "kramdown"
    },
    "highlighter": {
      "type": "string",
      "title": "Syntax Highlighter",
      "default": "rouge"
    },
    "excerpt_separator": {
      "type": "string",
      "title": "Posts excerpt separator",
      "description": "Used for liquid filter `excerpt`.",
      "default": "\n\n"
    },
    "show_dir_listing": {
      "type": "boolean",
      "title": "Allow directory listing",
      "description": "Only works locally. GitHub ignores it.",
      "default": false
    },
    "permalink": { "$ref": "#/definitions/permalink" },
    "paginate_path": {
      "default": "/page:num"
    },
    "quiet": {
      "type": "boolean",
      "default": false
    },
    "verbose": {
      "type": "boolean",
      "default": false
    },
    "liquid": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "error_mode"
          ],
          "properties": {
            "error_mode": {
              "type": "string",
              "enum": [
                "lax",
                "warn",
                "strict"
              ],
              "default": "warn"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "strict_filters": {
              "type": "boolean",
              "title": "Strict Filters",
              "description": "Catch non-existing filters.",
              "default": false
            },
            "strict_variables": {
              "type": "boolean",
              "title": "Strict Variables",
              "description": "Catch non-assigned variables.",
              "default": false
            }
          }
        }
      ]
    },
    "rdiscount": {
      "type": "object",
      "properties": {
        "extensions": {
          "$ref": "#/definitions/string-array"
        }
      }
    },
    "redcarpet": {
      "type": "object",
      "properties": {
        "extensions": {
          "$ref": "#/definitions/string-array"
        }
      }
    },
    "kramdown": {
      "type": "object",
      "properties": {
        "auto_id_prefix": {
          "type": "string",
          "title": "Prefix used for automatically generated header IDs",
          "default": ""
        },
        "auto_id_stripping": {
          "type": "boolean",
          "title": "Strip all formatting from header text for automatic ID generation",
          "default": false
        },
        "auto_ids": {
          "type": "boolean",
          "title": "Use automatic header ID generation",
          "default": true
        },
        "coderay_bold_every": {
          "type": "integer",
          "title": "Defines how often a line number should be made bold"
        },
        "coderay_css": {
          "type": "string",
          "title": "Defines how the highlighted code gets styled"
        },
        "coderay_default_lang": {
          "type": "string",
          "title": "Sets the default language for highlighting code blocks"
        },
        "coderay_line_number_start": {
          "type": "integer",
          "title": "The start value for the line numbers"
        },
        "coderay_line_numbers": {
          "type": "string",
          "title": "Defines how and if line numbers should be shown"
        },
        "coderay_tab_width": {
          "type": "integer",
          "title": "The tab width used in highlighted code"
        },
        "coderay_wrap": {
          "type": "string",
          "title": "Defines how the highlighted code should be wrapped"
        },
        "enable_coderay": {
          "type": "boolean",
          "title": "Use coderay for syntax highlighting"
        },
        "entity_output": {
          "type": "string",
          "title": "Defines how entities are output",
          "enum": [
            "as_char",
            "as_input",
            "numeric",
            "symbolic"
          ],
          "default": "as_char"
        },
        "footnote_backlink": {
          "type": "string",
          "title": "Defines the text that should be used for the footnote backlinks",
          "description": "The footnote backlink is just text, so any special HTML characters will be escaped.\n\nIf the footnote backlint text is an empty string, no footnote backlinks will be generated.",
          "default": "&#8617;"
        },
        "footnote_backlink_inline": {
          "type": "boolean",
          "title": "Specifies whether the footnote backlink should always be inline",
          "description": "With the default of false the footnote backlink is placed at the end of the last paragraph if there is one, or an extra paragraph with only the footnote backlink is created.",
          "default": false
        },
        "footnote_nr": {
          "type": "integer",
          "title": "The number of the first footnote",
          "description": "This option can be used to specify the number that is used for the first footnote.",
          "default": 1
        },
        "gfm_quirks": {
          "type": "boolean",
          "title": "Enables a set of GFM specific quirks"
        },
        "hard_wrap": {
          "type": "boolean",
          "default": false
        },
        "header_offset": {
          "type": "integer",
          "title": "Sets the output offset for headers",
          "description": "If this option is c (may also be negative) then a header with level n will be output as a header with level c+n. If c+n is lower than 1, level 1 will be used. If c+n is greater than 6, level 6 will be used.",
          "default": 0
        },
        "html_to_native": {
          "type": "boolean",
          "title": "Convert HTML elements to native elements",
          "default": false
        },
        "input": {
          "type": "string",
          "default": "GFM"
        },
        "line_width": {
          "type": "integer",
          "title": "Defines the line width to be used when outputting a document",
          "default": 72
        },
        "link_defs": {
          "type": "object",
          "title": "Pre-defines link definitions",
          "description": "Values are two element Arrays with the link URL and the link title",
          "additionalProperties": {
            "$ref": "#/definitions/string-array",
            "minItems": 2,
            "maxItems": 2
          }
        },
        "math_engine": {
          "type": "string",
          "title": "Set the math engine",
          "description": "Specifies the math engine that should be used for converting math blocks/spans. If this option is set to `nil`, no math engine is used and the math blocks/spans are output as is."
        },
        "math_engine_opts": {
          "type": "object",
          "title": "Set the math engine options",
          "description": "Specifies options for the math engine set via the math_engine configuration option."
        },
        "parse_block_html": {
          "type": "boolean",
          "title": "Process kramdown syntax in block HTML tags",
          "default": false
        },
        "parse_span_html": {
          "type": "boolean",
          "title": "Process kramdown syntax in span HTML tags",
          "default": true
        },
        "smart_quotes": {
          "type": "string",
          "title": "Defines the HTML entity names or code points for smart quote output",
          "description": "The entities identified by entity name or code point that should be used for, in order, a left single quote, a right single quote, a left double and a right double quote are specified by separating them with commas.",
          "default": "lsquo,rsquo,ldquo,rdquo"
        },
        "syntax_highlighter": {
          "type": ["string", "null"],
          "title": "Set the syntax highlighter",
          "description": "Specifies the syntax highlighter that should be used for highlighting code blocks and spans. If this option is set to `nil`, no syntax highlighting is done.",
          "default": "rouge"
        },
        "syntax_highlighter_opts": {
          "type": "object",
          "title": "Set the syntax highlighter options",
          "description": "Specifies options for the syntax highlighter set via the syntax_highlighter configuration option."
        },
        "toc_levels": {
          "type": "integer",
          "title": "Defines the levels that are used for the table of contents",
          "description": "The individual levels can be specified by separating them with commas (e.g. 1,2,3) or by using the range syntax (e.g. 1..3). Only the specified levels are used for the table of contents.",
          "enum": [1,2,3,4,5,6]
        },
        "transliterated_header_ids": {
          "type": "boolean",
          "title": "Transliterate the header text before generating the ID"
        },
        "typographic_symbols": {
          "type": "object",
          "title": "Defines a mapping from typographical symbol to output characters",
          "description": "Typographical symbols are normally output using their equivalent Unicode codepoint. However, sometimes one wants to change the output, mostly to fallback to a sequence of ASCII characters."
        },
        "show_warnings": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "webrick": {
      "type": "object",
      "title": "WEBrick Options",
      "description": "You can provide custom headers for your site.",
      "additionalProperties": false,
      "properties": {
        "headers": {
          "type": "object"
        }
      }
    }
  }
}
