{
  "$comment": "https://github.com/GoogleContainerTools/container-structure-test",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "envVar": {
      "$id": "#/definitions/envVar",
      "additionalProperties": false,
      "properties": {
        "key": {
          "description": "The name of the environment variables",
          "type": "string"
        },
        "value": {
          "description": "The value of the environment variable",
          "type": "string"
        }
      },
      "required": ["key", "value"],
      "type": "object"
    },
    "label": {
      "$id": "#/definitions/label",
      "additionalProperties": false,
      "properties": {
        "isRegex": {
          "description": "Interpreted the value as regex",
          "type": "boolean"
        },
        "key": {
          "description": "The name of the label",
          "type": "string"
        },
        "value": {
          "description": "The value of the label",
          "type": "string"
        }
      },
      "required": ["key", "value"],
      "type": "object"
    }
  },
  "description": "The Container Structure Tests provide a powerful framework to validate the structure of a container image. These tests can be used to check the output of commands in an image, as well as verify metadata and contents of the filesystem",
  "properties": {
    "commandTests": {
      "description": "A list of command tests",
      "items": {
        "properties": {
          "args": {
            "description": "The arguments to pass to the command.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "command": {
            "description": "The command to run in the test.",
            "type": "string"
          },
          "envVars": {
            "items": {
              "$ref": "#/definitions/envVar"
            },
            "type": "array"
          },
          "excludedError": {
            "description": "List of regexes that should not match the stderr from running the command.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "excludedOutput": {
            "description": "List of regexes that should not match the stdout from running the command..",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "exitCode": {
            "description": "Exit code that the command should exit with.",
            "type": "integer"
          },
          "expectedError": {
            "description": "List of regexes that should match the stderr from running the command.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "expectedOutput": {
            "description": "List of regexes that should match the stdout from running the command.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "name": {
            "description": "The name of the test",
            "type": "string"
          },
          "setup": {
            "description": "A list of commands (each with optional flags) to run before the actual command under test.",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          },
          "teardown": {
            "description": "A list of commands (each with optional flags) to run after the actual command under test.",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          }
        },
        "required": ["name", "command"],
        "type": "object"
      },
      "type": "array"
    },
    "fileContentTests": {
      "description": "File content tests open a file on the file system and check its contents. These tests assume the specified file is a file, and that it exists",
      "items": {
        "properties": {
          "excludedContents": {
            "description": "List of regexes that should not match the contents of the file",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "expectedContents": {
            "description": "List of regexes that should match the contents of the file",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          },
          "name": {
            "description": "The name of the test",
            "type": "string"
          },
          "path": {
            "description": "Path to the file under test",
            "type": "string"
          }
        },
        "required": ["name", "path"],
        "type": "object"
      },
      "type": "array"
    },
    "fileExistenceTests": {
      "description": "File existence tests check to make sure a specific file (or directory) exist within the file system of the image. No contents of the files or directories are checked. These tests can also be used to ensure a file or directory is not present in the file system.",
      "items": {
        "properties": {
          "gid": {
            "description": "The expected Unix group ID of the owner of the file or directory.",
            "type": "number"
          },
          "isExecutableBy": {
            "description": "Checks if file is executable by a given user. ",
            "enum": ["owner", "group", "any", "other"],
            "type": "string"
          },
          "name": {
            "description": "The name of the test",
            "type": "string"
          },
          "path": {
            "default": "/",
            "description": "Path to the file or directory under test",
            "type": "string"
          },
          "permissions": {
            "description": "The expected Unix permission string (e.g. drwxrwxrwx) of the files or directory.",
            "type": "string"
          },
          "shouldExist": {
            "default": true,
            "description": "Whether or not the specified file or directory should exist in the file system",
            "type": "boolean"
          },
          "uid": {
            "description": "The expected Unix user ID of the owner of the file or directory.",
            "type": "number"
          }
        },
        "required": ["name", "path", "shouldExist"],
        "type": "object"
      },
      "type": "array"
    },
    "globalEnvVars": {
      "description": "A list of environment variables can optionally be specified as part of the test setup. ",
      "items": {
        "$ref": "#/definitions/envVar"
      },
      "minItems": 1,
      "type": "array"
    },
    "licenseTests": {
      "description": "License tests check a list of copyright files and makes sure all licenses are allowed at Google. By default it will look at where Debian lists all copyright files, but can also look at an arbitrary list of files.",
      "items": {
        "properties": {
          "debian": {
            "default": true,
            "description": "if the image is based on Debian, check where Debian lists all licenses.",
            "type": "boolean"
          },
          "files": {
            "description": "A list of other files to check.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": ["debian"],
        "type": "object"
      },
      "type": "array"
    },
    "metadataTest": {
      "properties": {
        "cmd": {
          "description": "The CMD specified in the container",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "entrypoint": {
          "description": "The entrypoint of the container",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "env": {
          "description": "A list of environment variable key/value pairs that should be set in the container.",
          "items": {
            "$ref": "#/definitions/envVar"
          },
          "minItems": 1,
          "type": "array"
        },
        "exposedPorts": {
          "description": "The ports exposed in the container.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "labels": {
          "description": "A list of image labels key/value pairs that should be set on the container.",
          "items": {
            "$ref": "#/definitions/label"
          },
          "minItems": 1,
          "type": "array"
        },
        "unexposedPorts": {
          "description": "The ports NOT exposed in the container.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "unmountedVolumes": {
          "description": "The volumes NOT exposed in the container",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "volumes": {
          "description": "The volumes exposed in the container.",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "workdir": {
          "description": "The default working directory of the container.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "schemaVersion": {
      "default": "2.0.0",
      "description": "The schema version of Structure Tests.",
      "type": "string"
    }
  },
  "required": ["schemaVersion"],
  "title": "Container Structure Tests",
  "type": "object"
}
