{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "JSON Schema for typedoc.json",
  "type": "object",
  "properties": {
    "disableOutputCheck": {
      "default": false,
      "description": "Should TypeDoc disable the testing and cleaning of the output directory?",
      "type": "boolean"
    },
    "entryPoint": {
      "default": "./",
      "description": "Specifies the fully qualified name of the root symbol.",
      "type": "string"
    },
    "exclude": {
      "description": "Exclude files by the given pattern when a path is provided as source. Supports minimatch patterns.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "excludeExternals": {
      "default": false,
      "description": "Prevent externally resolved TypeScript files from being documented.",
      "type": "boolean"
    },
    "excludeNotExported": {
      "default": false,
      "description": "Prevent symbols that are not exported from being documented.",
      "type": "boolean"
    },
    "excludePrivate": {
      "default": false,
      "description": "Ignores private variables and methods",
      "type": "boolean"
    },
    "excludeProtected": {
      "default": false,
      "description": "Ignores protected variables and methods",
      "type": "boolean"
    },
    "externalPattern": {
      "description": "Define a pattern for files that should be considered being external.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "gaID": {
      "description": "Set the Google Analytics tracking ID and activate tracking code.",
      "type": "string"
    },
    "gaSite": {
      "default": "auto",
      "description": "Set the site name for Google Analytics.",
      "type": "string"
    },
    "gitRevision": {
      "description": "Use specified revision or branch instead of the last revision for linking to GitHub source files.",
      "type": "string"
    },
    "hideGenerator": {
      "default": false,
      "description": "Do not print the TypeDoc link at the end of the page.",
      "type": "boolean"
    },
    "ignoreCompilerErrors": {
      "default": false,
      "description": "Generates documentation, even if the project does not TypeScript compile.",
      "type": "boolean"
    },
    "includeDeclarations": {
      "default": false,
      "description": "Turn on parsing of .d.ts declaration files.",
      "type": "boolean"
    },
    "includes": {
      "description": "Specifies the location to look for included documents (use [[include:FILENAME]] in comments).",
      "type": "string"
    },
    "inputFiles": {
      "description": "The sources files from which to build documentation.",
      "type": "array",
      "items": { "type": "string" }
    },
    "json": {
      "description": "Specifies the location to output a JSON file containing all of the reflection data.",
      "type": "string"
    },
    "listInvalidSymbolLinks": {
      "default": false,
      "description": "Emits a list of broken symbol [[navigation]] links after documentation generation",
      "type": "boolean"
    },
    "logger": {
      "default": "console",
      "description": "Specify the logger that should be used.",
      "enum": ["console", "none"]
    },
    "media": {
      "description": "Specifies the location with media files that should be copied to the output directory.",
      "type": "string"
    },
    "mode": {
      "default": "modules",
      "description": "Specifies the output mode the project is used to be compiled with.",
      "enum": ["file", "modules"]
    },
    "name": {
      "description": "Set the name of the project that will be used in the header of the template.",
      "type": "string"
    },
    "out": {
      "description": "Specifies the location the documentation should be written to.",
      "type": "string"
    },
    "plugin": {
      "description": "Specify the npm plugins that should be loaded. Omit to load all installed plugins.",
      "oneOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array",
          "default": ["none"]
        }
      ]
    },
    "includeVersion": {
      "description": "Add the package version according to package.json to the projects name.",
      "type": "boolean",
      "default": false
    },
    "excludeTags": {
      "description": "Specify tags that should be removed from doc comments when parsing.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "readme": {
      "description": "Path to the readme file that should be displayed on the index page. Pass none to disable the index page and start the documentation on the globals page.",
      "oneOf": [
        {
          "enum": ["none"]
        },
        {
          "type": "string"
        }
      ]
    },
    "src": {
      "description": "The sources files from which to build documentation.\nDEPRECATED: Use inputFiles instead.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": { "type": "string" }
        }
      ]
    },
    "stripInternal": {
      "default": false,
      "description": "Remove reflections annotated with @internal",
      "type": "boolean"
    },
    "theme": {
      "description": "Specify the path to the theme that should be used.",
      "oneOf": [
        {
          "enum": ["default", "minimal"]
        },
        {
          "type": "string"
        }
      ]
    },
    "toc": {
      "description": "Specifies the top level table of contents.",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "tsconfig": {
      "default": "./tsconfig.json",
      "description": "Specify a typescript config file that should be loaded. If not specified TypeDoc will look for 'tsconfig.json' in the current directory.",
      "type": "string"
    }
  }
}
