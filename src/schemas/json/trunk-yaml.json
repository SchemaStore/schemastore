{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://json.schemastore.org/trunk-yaml",
  "title": "Configuration schema for trunk, a powerful linter runner - https://docs.trunk.io",
  "description": "The last linter you'll ever need",
  "type": "object",
  "definitions": {
    "template_string": {
      "type": "string",
      "description": "String where \"${key1} ${key2}\" will be expanded into \"value1 value2\""
    },
    "filetype_list": {
      "type": "array",
      "description": "List of filetypes\nNote: use [ALL] to refer to all filetypes",
      "items": {
        "type": "string",
        "enum": [
          "ALL",
          "bazel-build",
          "bazel-workspace",
          "c",
          "c++",
          "c++-header",
          "c++-source",
          "c-header",
          "c-source",
          "c/c++",
          "c/c++-source",
          "css",
          "docker",
          "go",
          "html",
          "javascript",
          "json",
          "markdown",
          "proto",
          "python",
          "rust",
          "sass",
          "shell",
          "starlark",
          "terraform",
          "typescript",
          "yaml"
        ]
      }
    },
    "linter_list": {
      "type": "array",
      "description": "List of linter IDs\nNote: use [ALL] to refer to all linters",
      "items": {
        "type": "string",
        "enum": [
          "ALL",
          "actionlint",
          "ansible-lint",
          "autopep8",
          "bandit",
          "black-py",
          "buf-breaking",
          "buf-lint",
          "buildifier",
          "cfnlint",
          "clang-format",
          "clang-tidy",
          "clippy",
          "eslint",
          "flake8",
          "gitleaks",
          "gofmt",
          "golangci-lint",
          "hadolint",
          "isort",
          "markdownlint",
          "mypy",
          "prettier",
          "pylint",
          "rustfmt",
          "semgrep",
          "shellcheck",
          "shfmt",
          "terraform-fmt"
        ]
      }
    }
  },
  "properties": {
    "lint": {
      "type": "object",
      "properties": {
        "runtimes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["go", "node", "python", "ruby", "rust"]
              },
              "download": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "min_system_version": {
                "type": "string"
              },
              "environment": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "linters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Linter ID; use this in fields like `enabled` to reference this linter"
              },
              "type": {
                "type": "string",
                "enum": ["pass_fail", "lsp_json"],
                "description": "What type of linter this is; controls how `trunk` runs it and parses its output"
              },
              "command": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/template_string",
                  "examples": [
                    "\"${path}\" will expand to $PATH",
                    "\"${home}\" will expand to $HOME",
                    "\"${linter}\" will expand to the directory a linter is installed into, e.g. \"${linter}/node_modules/.bin\" is appended to the `PATH` of any linter with `runtime: node`",
                    "\"${runtime}\" will expand to the directory a runtime is installed into, e.g. with `runtime: node`, \"${runtime}/bin/npm\" will yield the path to the installed NPM binary",
                    "\"${linter}\" will expand to the directory a linter is installed into, e.g. \"${linter}/node_modules/.bin\" is appended to the `PATH` of any linter with `runtime: node`",
                    "\"${runtime}\" will expand to the directory a runtime is installed into, e.g. with `runtime: node`, \"${runtime}/bin/npm\" will yield the path to the installed NPM binary"
                  ]
                },
                "description": "Command to invoke the linter with"
              },
              "success_codes": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Exit codes corresponding to no issues found or issues found"
              },
              "error_codes": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Exit codes implying the linter experienced an internal error"
              },
              "files": {
                "$ref": "#/definitions/filetype_list",
                "description": "Filetypes to run this linter on"
              },
              "include_lfs": {
                "type": "boolean",
                "description": "Whether or not this linter can handle LFS files; default: false"
              },
              "stdin": {
                "type": "boolean",
                "description": "Whether or not this linter takes its input from stdin; default: false"
              },
              "environment": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "$ref": "#/definitions/template_string",
                      "examples": [
                        "\"${path}\" will expand to $PATH",
                        "\"${home}\" will expand to $HOME",
                        "\"${linter}\" will expand to the directory a linter is installed into, e.g. \"${linter}/node_modules/.bin\" is appended to the `PATH` of any linter with `runtime: node`",
                        "\"${runtime}\" will expand to the directory a runtime is installed into, e.g. with `runtime: node`, \"${runtime}/bin/npm\" will yield the path to the installed NPM binary"
                      ]
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/template_string",
                        "examples": [
                          "\"${path}\" will expand to $PATH",
                          "\"${home}\" will expand to $HOME",
                          "\"${linter}\" will expand to the directory a linter is installed into, e.g. \"${linter}/node_modules/.bin\" is appended to the `PATH` of any linter with `runtime: node`",
                          "\"${runtime}\" will expand to the directory a runtime is installed into, e.g. with `runtime: node`, \"${runtime}/bin/npm\" will yield the path to the installed NPM binary"
                        ]
                      },
                      "description": "The envvar will be set to the `:`-joined list"
                    }
                  },
                  "oneOf": [
                    {
                      "required": ["name", "value"]
                    },
                    {
                      "required": ["name", "list"]
                    }
                  ]
                },
                "description": "Environment variables set when `trunk` runs the linter"
              },
              "run_linter_from": {
                "type": "string",
                "enum": ["directory", "parent_directory", "workspace"]
              },
              "formatter": {
                "type": "boolean",
                "description": "Whether or not this linter is considered run by `trunk fmt`; default: false"
              },
              "allow_empty_files": {
                "type": "boolean",
                "description": "Whether or not this will be run on an empty file"
              },
              "runtime": {
                "type": "string",
                "enum": ["go", "node", "python", "ruby", "rust"],
                "description": "The runtime, toolchain, and package manager used to run and install a linter"
              },
              "package": {
                "type": "string",
                "description": "The package containing this linter; installed using the runtime's package manager"
              },
              "extra_packages": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Extra packages needed to run this linter; also installed using the runtime's package manager"
              },
              "download": {
                "type": "string",
                "description": "The download containing this linter (i.e. the `name` of an entry in `downloads`)"
              }
            },
            "dependencies": {
              "download": {
                "not": {
                  "required": ["runtime"]
                }
              },
              "runtime": {
                "not": {
                  "required": ["download"]
                }
              },
              "package": ["runtime"]
            }
          }
        },
        "enabled": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": ["gofmt@1.16.7", "pylint@2.8.1", "shellcheck@0.7.2"]
              },
              "packages": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": ["flake8-bugbear@21.4.3"]
                }
              }
            }
          }
        },
        "ignore": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "linters": {
                "$ref": "#/definitions/linter_list"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Paths to exclude from linting"
              }
            }
          }
        },
        "downloads": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "executable": {
                "type": "boolean"
              },
              "downloads": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "os": {
                      "type": "string",
                      "enum": ["linux", "macos"]
                    },
                    "cpu": {
                      "type": "string",
                      "enum": ["x86_64"]
                    },
                    "url": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "strip_components": {
                      "type": "integer"
                    },
                    "sha256": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "environments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "environment": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "required": ["version"]
}
