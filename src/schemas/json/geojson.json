{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "additionalProperties": true,
  "definitions": {
    "coordinates": {
      "items": {
        "oneOf": [
          {
            "type": "array"
          },
          {
            "type": "number"
          }
        ]
      },
      "title": "Coordinates",
      "type": "array"
    },
    "feature": {
      "description": "A GeoJSON object with the type `Feature` is a feature object.\n\n* A feature object must have a member with the name `geometry`. The value of the geometry member is a geometry object as defined above or a JSON null value.\n\n* A feature object must have a member with the name `properties`. The value of the properties member is an object (any JSON object or a JSON null value).\n\n* If a feature has a commonly used identifier, that identifier should be included as a member of the feature object with the name `id`.",
      "properties": {
        "geometry": {
          "oneOf": [
            {
              "$ref": "#/definitions/geometry"
            },
            {
              "type": "null"
            }
          ],
          "title": "Geometry"
        },
        "id": {},
        "properties": {
          "oneOf": [
            {
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "title": "Properties"
        },
        "type": {
          "enum": ["Feature"]
        }
      },
      "required": ["geometry", "properties"],
      "title": "Feature"
    },
    "geometry": {
      "description": "A geometry is a GeoJSON object where the type member's value is one of the following strings: `Point`, `MultiPoint`, `LineString`, `MultiLineString`, `Polygon`, `MultiPolygon`, or `GeometryCollection`.",
      "properties": {
        "type": {
          "enum": [
            "Point",
            "MultiPoint",
            "LineString",
            "MultiLineString",
            "Polygon",
            "MultiPolygon",
            "GeometryCollection"
          ]
        }
      },
      "title": "Geometry"
    },
    "lineStringCoordinates": {
      "allOf": [
        {
          "$ref": "#/definitions/coordinates"
        },
        {
          "items": {
            "$ref": "#/definitions/position"
          },
          "minLength": 2
        }
      ],
      "description": "For type `LineString`, the `coordinates` member must be an array of two or more positions.",
      "title": "Line String Coordinates"
    },
    "linearRingCoordinates": {
      "allOf": [
        {
          "$ref": "#/definitions/lineStringCoordinates"
        },
        {
          "minItems": 4
        }
      ],
      "description": "A LinearRing is closed LineString with 4 or more positions. The first and last positions are equivalent (they represent equivalent points). Though a LinearRing is not explicitly represented as a GeoJSON geometry type, it is referred to in the Polygon geometry type definition.",
      "title": "Linear Ring Coordinates"
    },
    "polygonCoordinates": {
      "allOf": [
        {
          "$ref": "#/definitions/coordinates"
        },
        {
          "items": {
            "$ref": "#/definitions/linearRingCoordinates"
          }
        }
      ],
      "description": "For type `Polygon`, the `coordinates` member must be an array of LinearRing coordinate arrays. For Polygons with multiple rings, the first must be the exterior ring and any others must be interior rings or holes.",
      "title": "Polygon Coordinates"
    },
    "position": {
      "description": "A position is the fundamental geometry construct. The `coordinates` member of a geometry object is composed of one position (in the case of a Point geometry), an array of positions (LineString or MultiPoint geometries), an array of arrays of positions (Polygons, MultiLineStrings), or a multidimensional array of positions (MultiPolygon).\n\nA position is represented by an array of numbers. There must be at least two elements, and may be more. The order of elements must follow x, y, z order (easting, northing, altitude for coordinates in a projected coordinate reference system, or longitude, latitude, altitude for coordinates in a geographic coordinate reference system). Any number of additional elements are allowed -- interpretation and meaning of additional elements is beyond the scope of this specification.",
      "items": {
        "type": "number"
      },
      "minItems": 2,
      "title": "Position",
      "type": "array"
    }
  },
  "description": "This object represents a geometry, feature, or collection of features.",
  "id": "https://json.schemastore.org/geojson",
  "oneOf": [
    {
      "allOf": [
        {
          "$ref": "#/definitions/geometry"
        }
      ],
      "description": "For type `Point`, the `coordinates` member must be a single position.",
      "properties": {
        "coordinates": {
          "allOf": [
            {
              "$ref": "#/definitions/coordinates"
            },
            {
              "$ref": "#/definitions/position"
            }
          ]
        },
        "type": {
          "enum": ["Point"]
        }
      },
      "required": ["coordinates"],
      "title": "Point"
    },
    {
      "allOf": [
        {
          "$ref": "#/definitions/geometry"
        }
      ],
      "description": "For type `MultiPoint`, the `coordinates` member must be an array of positions.",
      "properties": {
        "coordinates": {
          "allOf": [
            {
              "$ref": "#/definitions/coordinates"
            },
            {
              "items": {
                "$ref": "#/definitions/position"
              }
            }
          ]
        },
        "type": {
          "enum": ["MultiPoint"]
        }
      },
      "required": ["coordinates"],
      "title": "Multi Point Geometry"
    },
    {
      "allOf": [
        {
          "$ref": "#/definitions/geometry"
        }
      ],
      "description": "For type `LineString`, the `coordinates` member must be an array of two or more positions.\n\nA LinearRing is closed LineString with 4 or more positions. The first and last positions are equivalent (they represent equivalent points). Though a LinearRing is not explicitly represented as a GeoJSON geometry type, it is referred to in the Polygon geometry type definition.",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/lineStringCoordinates"
        },
        "type": {
          "enum": ["LineString"]
        }
      },
      "required": ["coordinates"],
      "title": "Line String"
    },
    {
      "allOf": [
        {
          "$ref": "#/definitions/geometry"
        }
      ],
      "description": "For type `MultiLineString`, the `coordinates` member must be an array of LineString coordinate arrays.",
      "properties": {
        "coordinates": {
          "allOf": [
            {
              "$ref": "#/definitions/coordinates"
            },
            {
              "items": {
                "$ref": "#/definitions/lineStringCoordinates"
              }
            }
          ]
        },
        "type": {
          "enum": ["MultiLineString"]
        }
      },
      "required": ["coordinates"],
      "title": "MultiLineString"
    },
    {
      "allOf": [
        {
          "$ref": "#/definitions/geometry"
        }
      ],
      "description": "For type `Polygon`, the `coordinates` member must be an array of LinearRing coordinate arrays. For Polygons with multiple rings, the first must be the exterior ring and any others must be interior rings or holes.",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/polygonCoordinates"
        },
        "type": {
          "enum": ["Polygon"]
        }
      },
      "required": ["coordinates"],
      "title": "Polygon"
    },
    {
      "allOf": [
        {
          "$ref": "#/definitions/geometry"
        }
      ],
      "description": "For type `MultiPolygon`, the `coordinates` member must be an array of Polygon coordinate arrays.",
      "properties": {
        "coordinates": {
          "allOf": [
            {
              "$ref": "#/definitions/coordinates"
            },
            {
              "items": {
                "$ref": "#/definitions/polygonCoordinates"
              }
            }
          ]
        },
        "type": {
          "enum": ["MultiPolygon"]
        }
      },
      "required": ["coordinates"],
      "title": "Multi-Polygon Geometry"
    },
    {
      "allOf": [
        {
          "$ref": "#/definitions/geometry"
        }
      ],
      "description": "A GeoJSON object with type `GeometryCollection` is a geometry object which represents a collection of geometry objects.\n\nA geometry collection must have a member with the name `geometries`. The value corresponding to `geometries` is an array. Each element in this array is a GeoJSON geometry object.",
      "properties": {
        "geometries": {
          "items": {
            "$ref": "#/definitions/geometry"
          },
          "title": "Geometries",
          "type": "array"
        },
        "type": {
          "enum": ["GeometryCollection"]
        }
      },
      "required": ["geometries"],
      "title": "Geometry Collection"
    },
    {
      "$ref": "#/definitions/feature"
    },
    {
      "description": "A GeoJSON object with the type `FeatureCollection` is a feature collection object.\n\nAn object of type `FeatureCollection` must have a member with the name `features`. The value corresponding to `features` is an array. Each element in the array is a feature object as defined above.",
      "properties": {
        "features": {
          "items": {
            "$ref": "#/definitions/feature"
          },
          "title": "Features",
          "type": "array"
        },
        "type": {
          "enum": ["FeatureCollection"]
        }
      },
      "required": ["features"],
      "title": "Feature Collection"
    }
  ],
  "properties": {
    "bbox": {
      "description": "To include information on the coordinate range for geometries, features, or feature collections, a GeoJSON object may have a member named `bbox`. The value of the bbox member must be a 2*n array where n is the number of dimensions represented in the contained geometries, with the lowest values for all axes followed by the highest values. The axes order of a bbox follows the axes order of geometries. In addition, the coordinate reference system for the bbox is assumed to match the coordinate reference system of the GeoJSON object of which it is a member.",
      "items": {
        "type": "number"
      },
      "minItems": 4,
      "title": "Bounding Box",
      "type": "array"
    },
    "crs": {
      "description": "The coordinate reference system (CRS) of a GeoJSON object is determined by its `crs` member (referred to as the CRS object below). If an object has no crs member, then its parent or grandparent object's crs member may be acquired. If no crs member can be so acquired, the default CRS shall apply to the GeoJSON object.\n\n* The default CRS is a geographic coordinate reference system, using the WGS84 datum, and with longitude and latitude units of decimal degrees.\n\n* The value of a member named `crs` must be a JSON object (referred to as the CRS object below) or JSON null. If the value of CRS is null, no CRS can be assumed.\n\n* The crs member should be on the top-level GeoJSON object in a hierarchy (in feature collection, feature, geometry order) and should not be repeated or overridden on children or grandchildren of the object.\n\n* A non-null CRS object has two mandatory members: `type` and `properties`.\n\n* The value of the type member must be a string, indicating the type of CRS object.\n\n* The value of the properties member must be an object.\n\n* CRS shall not change coordinate ordering.",
      "not": {
        "anyOf": [
          {
            "properties": {
              "properties": {
                "not": {
                  "properties": {
                    "name": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "required": ["name"]
                }
              },
              "type": {
                "enum": ["name"]
              }
            }
          },
          {
            "properties": {
              "properties": {
                "not": {
                  "properties": {
                    "href": {
                      "description": "The value of the required `href` member must be a dereferenceable URI.",
                      "format": "uri",
                      "title": "href",
                      "type": "string"
                    },
                    "type": {
                      "description": "The value of the optional `type` member must be a string that hints at the format used to represent CRS parameters at the provided URI. Suggested values are: `proj4`, `ogcwkt`, `esriwkt`, but others can be used.",
                      "title": "Link Object Type",
                      "type": "string"
                    }
                  },
                  "required": ["href"],
                  "title": "Link Object",
                  "type": "object"
                }
              },
              "type": {
                "enum": ["link"]
              }
            }
          }
        ]
      },
      "oneOf": [
        {
          "type": "null"
        },
        {
          "properties": {
            "properties": {
              "title": "CRS Properties",
              "type": "object"
            },
            "type": {
              "description": "The value of the type member must be a string, indicating the type of CRS object.",
              "minLength": 1,
              "title": "CRS Type",
              "type": "string"
            }
          },
          "required": ["type", "properties"],
          "type": "object"
        }
      ],
      "title": "Coordinate Reference System (CRS)"
    },
    "type": {
      "description": "The type of GeoJSON object.",
      "enum": [
        "Point",
        "MultiPoint",
        "LineString",
        "MultiLineString",
        "Polygon",
        "MultiPolygon",
        "GeometryCollection",
        "Feature",
        "FeatureCollection"
      ],
      "title": "Type",
      "type": "string"
    }
  },
  "required": ["type"],
  "title": "GeoJSON Object",
  "type": "object"
}
