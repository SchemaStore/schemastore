{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/specmatic.json",
  "title": "Specmatic Configuration",
  "description": "Configuration file for Specmatic, a contract-driven testing tool\nhttps://specmatic.io/documentation/",
  "type": "object",
  "required": ["version", "contracts"],
  "additionalProperties": false,
  "properties": {
    "version": {
      "type": "integer",
      "enum": [2],
      "description": "Configuration version for Specmatic"
    },
    "matchBranch": {
      "type": "boolean"
    },
    "contracts": {
      "type": "array",
      "description": "Array of contract configurations",
      "items": {
        "$ref": "#/definitions/ContractConfig"
      }
    },
    "auth": {
      "$ref": "#/definitions/Auth",
      "description": "Authentication configuration"
    },
    "pipeline": {
      "$ref": "#/definitions/Pipeline",
      "description": "Pipeline configuration for Azure DevOps"
    },
    "environments": {
      "type": "object",
      "description": "Environment-specific configurations",
      "additionalProperties": {
        "$ref": "#/definitions/Environment"
      }
    },
    "hooks": {
      "type": "object",
      "description": "Custom hooks configuration",
      "additionalProperties": { "type": "string" }
    },
    "repository": {
      "$ref": "#/definitions/RepositoryInfo",
      "description": "Repository information"
    },
    "report": {
      "$ref": "#/definitions/ReportConfigurationDetails",
      "description": "Report generation configuration"
    },
    "security": {
      "$ref": "#/definitions/SecurityConfiguration",
      "description": "Security configuration for API testing"
    },
    "test": {
      "$ref": "#/definitions/TestConfiguration",
      "description": "Test execution configuration"
    },
    "stub": {
      "$ref": "#/definitions/StubConfiguration",
      "description": "Stub/mock server configuration"
    },
    "virtualService": {
      "$ref": "#/definitions/VirtualServiceConfiguration",
      "description": "Virtual service configuration"
    },
    "examples": {
      "type": "array",
      "description": "List of example file paths",
      "items": { "type": "string" }
    },
    "workflow": {
      "$ref": "#/definitions/WorkflowConfiguration",
      "description": "Workflow configuration for ID management"
    },
    "ignoreInlineExamples": {
      "type": ["boolean", "null"],
      "description": "Whether to ignore inline examples in specifications"
    },
    "additionalExampleParamsFilePath": {
      "type": ["string", "null"],
      "description": "Path to additional example parameters file"
    },
    "attributeSelectionPattern": {
      "$ref": "#/definitions/AttributeSelectionPattern",
      "description": "Pattern for selecting attributes in responses"
    },
    "allPatternsMandatory": {
      "type": ["boolean", "null"],
      "description": "Whether all patterns are mandatory"
    },
    "defaultPatternValues": {
      "type": "object",
      "description": "Default values for patterns",
      "additionalProperties": true
    }
  },
  "definitions": {
    "ContractConfig": {
      "type": "object",
      "title": "ContractConfig",
      "description": "Defines a contract source and its provides/consumes configuration.",
      "additionalProperties": false,
      "properties": {
        "git": {
          "type": "object",
          "description": "Git contract source details.",
          "additionalProperties": false,
          "properties": {
            "url": {
              "type": ["string", "null"],
              "description": "URL of the git repository."
            },
            "branch": {
              "type": ["string", "null"],
              "description": "Branch name in the git repository."
            }
          },
          "required": []
        },
        "filesystem": {
          "type": "object",
          "description": "Filesystem contract source details.",
          "additionalProperties": false,
          "properties": {
            "directory": {
              "type": "string",
              "description": "Directory path for contract files."
            }
          },
          "required": []
        },
        "provides": {
          "type": "array",
          "description": "List of specs provided for testing. Each entry can be a string or an object.",
          "items": {
            "oneOf": [
              {
                "type": "string",
                "description": "Path to a spec file."
              },
              {
                "type": "object",
                "description": "Object describing provided specs and test configuration.",
                "additionalProperties": false,
                "properties": {
                  "specs": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "List of spec file paths."
                  },
                  "baseUrl": {
                    "type": "string",
                    "description": "Test base URL."
                  },
                  "host": {
                    "type": "string",
                    "description": "Host for the test base URL."
                  },
                  "port": {
                    "type": "integer",
                    "description": "Port for the test base URL."
                  },
                  "resiliencyTests": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "Resiliency test configuration.",
                    "properties": {
                      "enable": {
                        "type": "string",
                        "enum": ["all", "positiveOnly", "none"],
                        "description": "Resiliency test suite to enable."
                      }
                    },
                    "required": []
                  }
                },
                "required": ["specs"]
              }
            ]
          }
        },
        "consumes": {
          "type": "array",
          "description": "List of specs consumed for stubbing. Each entry can be a string or an object.",
          "items": {
            "oneOf": [
              {
                "type": "string",
                "description": "Path to a spec file."
              },
              {
                "type": "object",
                "additionalProperties": false,
                "description": "Object describing consumed specs and stub configuration.",
                "properties": {
                  "specs": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "List of spec file paths."
                  },
                  "baseUrl": {
                    "type": "string",
                    "description": "Full base URL for the stub."
                  },
                  "host": {
                    "type": "string",
                    "description": "Host for the stub base URL."
                  },
                  "port": {
                    "type": "integer",
                    "description": "Port for the stub base URL."
                  },
                  "basePath": {
                    "type": "string",
                    "description": "Base path for the stub base URL."
                  }
                },
                "required": ["specs"]
              }
            ]
          }
        }
      },
      "required": []
    },
    "Auth": {
      "type": "object",
      "additionalProperties": false,
      "description": "Authentication configuration",
      "properties": {
        "bearer-file": {
          "type": "string",
          "description": "Path to file containing bearer token"
        },
        "bearer-environment-variable": {
          "type": ["string", "null"],
          "description": "Environment variable name containing bearer token"
        }
      }
    },
    "Pipeline": {
      "type": "object",
      "additionalProperties": false,
      "description": "Azure DevOps pipeline configuration",
      "properties": {
        "provider": {
          "type": "string",
          "enum": ["azure"],
          "description": "Pipeline provider type"
        },
        "organization": {
          "type": "string",
          "description": "Azure DevOps organization name"
        },
        "project": {
          "type": "string",
          "description": "Azure DevOps project name"
        },
        "definitionId": {
          "type": "integer",
          "description": "Pipeline definition ID"
        }
      }
    },
    "Environment": {
      "type": "object",
      "additionalProperties": false,
      "description": "Environment-specific configuration",
      "properties": {
        "baseurls": {
          "type": ["object", "null"],
          "description": "Base URLs for different services",
          "additionalProperties": { "type": "string" }
        },
        "variables": {
          "type": ["object", "null"],
          "description": "Environment variables",
          "additionalProperties": { "type": "string" }
        }
      }
    },
    "RepositoryInfo": {
      "type": "object",
      "additionalProperties": false,
      "description": "Repository information",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Repository provider type"
        },
        "collectionName": {
          "type": "string",
          "description": "Name of the collection"
        }
      }
    },
    "ReportConfigurationDetails": {
      "type": "object",
      "additionalProperties": false,
      "description": "Report generation configuration",
      "properties": {
        "formatters": {
          "type": ["array", "null"],
          "description": "List of report formatters",
          "items": { "$ref": "#/definitions/ReportFormatterDetails" }
        },
        "types": { "$ref": "#/definitions/ReportTypes" }
      }
    },
    "ReportFormatterDetails": {
      "type": "object",
      "additionalProperties": false,
      "description": "Configuration for a specific report formatter",
      "properties": {
        "type": {
          "type": ["string", "null"],
          "enum": ["text", "html", "ctrf"],
          "description": "Type of report formatter"
        },
        "layout": {
          "type": ["string", "null"],
          "enum": ["table"],
          "description": "Layout style for the report"
        },
        "lite": {
          "type": ["boolean", "null"],
          "description": "Whether to generate a lite version of the report"
        },
        "title": {
          "type": ["string", "null"],
          "description": "Title for the report"
        },
        "logo": {
          "type": ["string", "null"],
          "description": "Path to logo image for the report"
        },
        "logoAltText": {
          "type": ["string", "null"],
          "description": "Alt text for the logo"
        },
        "heading": {
          "type": ["string", "null"],
          "description": "Heading for the report"
        },
        "outputDirectory": {
          "type": ["string", "null"],
          "description": "Directory to output the report"
        }
      }
    },
    "ReportTypes": {
      "type": "object",
      "additionalProperties": false,
      "description": "Configuration for different report types",
      "properties": {
        "APICoverage": { "$ref": "#/definitions/APICoverage" }
      }
    },
    "APICoverage": {
      "type": "object",
      "additionalProperties": false,
      "description": "API coverage report configuration",
      "properties": {
        "OpenAPI": { "$ref": "#/definitions/APICoverageConfiguration" }
      }
    },
    "APICoverageConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "description": "OpenAPI coverage configuration",
      "properties": {
        "successCriteria": { "$ref": "#/definitions/SuccessCriteria" },
        "excludedEndpoints": {
          "type": ["array", "null"],
          "description": "List of endpoints to exclude from coverage",
          "items": { "type": "string" }
        }
      }
    },
    "SuccessCriteria": {
      "type": "object",
      "additionalProperties": false,
      "description": "Success criteria for API coverage",
      "properties": {
        "minThresholdPercentage": {
          "type": ["integer", "null"],
          "description": "Minimum coverage percentage threshold"
        },
        "maxMissedEndpointsInSpec": {
          "type": ["integer", "null"],
          "description": "Maximum number of missed endpoints allowed"
        },
        "enforce": {
          "type": ["boolean", "null"],
          "description": "Whether to enforce the success criteria"
        }
      }
    },
    "SecurityConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "description": "Security configuration",
      "properties": {
        "OpenAPI": { "$ref": "#/definitions/OpenAPISecurityConfiguration" }
      }
    },
    "OpenAPISecurityConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "description": "OpenAPI security configuration",
      "properties": {
        "securitySchemes": {
          "type": "object",
          "description": "Security scheme configurations",
          "additionalProperties": {
            "$ref": "#/definitions/SecuritySchemeConfiguration"
          }
        }
      }
    },
    "SecuritySchemeConfiguration": {
      "type": "object",
      "description": "Configuration for a security scheme",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["oauth2", "basicAuth", "bearer", "apiKey"],
          "description": "Type of security scheme"
        },
        "token": {
          "type": ["string", "null"],
          "description": "Authentication token"
        },
        "value": {
          "type": ["string", "null"],
          "description": "Authentication value"
        }
      }
    },
    "TestConfiguration": {
      "type": "object",
      "description": "Test execution configuration",
      "additionalProperties": false,
      "properties": {
        "resiliencyTests": { "$ref": "#/definitions/ResiliencyTestsConfig" },
        "validateResponseValues": {
          "type": ["boolean", "null"],
          "description": "Whether to validate response values"
        },
        "allowExtensibleSchema": {
          "type": ["boolean", "null"],
          "description": "Whether to allow extensible schema validation"
        },
        "timeoutInMilliseconds": {
          "type": ["integer", "null"],
          "description": "Test timeout in milliseconds"
        }
      }
    },
    "ResiliencyTestsConfig": {
      "type": "object",
      "description": "Configuration for resiliency tests",
      "additionalProperties": false,
      "properties": {
        "enable": {
          "type": ["string", "null"],
          "enum": ["all", "positiveOnly", "none"],
          "description": "Level of resiliency tests to enable"
        }
      }
    },
    "StubConfiguration": {
      "type": "object",
      "description": "Stub/mock server configuration",
      "additionalProperties": false,
      "properties": {
        "generative": {
          "type": ["boolean", "null"],
          "description": "Whether to enable generative stubbing"
        },
        "delayInMilliseconds": {
          "type": ["integer", "null"],
          "description": "Delay to add to stub responses in milliseconds"
        },
        "dictionary": {
          "type": ["string", "null"],
          "description": "Path to dictionary file for generative stubbing"
        },
        "includeMandatoryAndRequestedKeysInResponse": {
          "type": ["boolean", "null"],
          "description": "Whether to include mandatory and requested keys in response"
        },
        "startTimeoutInMilliseconds": {
          "type": ["integer", "null"],
          "description": "Timeout for stub server startup in milliseconds"
        },
        "hotReload": {
          "type": ["string", "null"],
          "description": "Hot reload configuration"
        }
      }
    },
    "VirtualServiceConfiguration": {
      "type": "object",
      "description": "Virtual service configuration",
      "additionalProperties": false,
      "properties": {
        "nonPatchableKeys": {
          "type": "array",
          "description": "List of keys that cannot be patched",
          "items": { "type": "string" }
        }
      }
    },
    "WorkflowConfiguration": {
      "type": "object",
      "description": "Workflow configuration for ID management",
      "additionalProperties": false,
      "properties": {
        "ids": {
          "type": "object",
          "description": "ID operation configurations",
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowIDOperation"
          }
        }
      }
    },
    "WorkflowIDOperation": {
      "type": "object",
      "description": "Configuration for ID operations in workflow",
      "additionalProperties": false,
      "properties": {
        "extract": {
          "type": ["string", "null"],
          "description": "JSONPath expression to extract ID"
        },
        "use": {
          "type": ["string", "null"],
          "description": "JSONPath expression to use extracted ID"
        }
      }
    },
    "AttributeSelectionPattern": {
      "type": "object",
      "additionalProperties": false,
      "description": "Pattern for selecting attributes in API responses",
      "properties": {
        "default_fields": {
          "type": ["array", "null"],
          "description": "Default fields to include",
          "items": { "type": "string" }
        },
        "query_param_key": {
          "type": ["string", "null"],
          "description": "Query parameter key for field selection"
        }
      }
    }
  }
}
