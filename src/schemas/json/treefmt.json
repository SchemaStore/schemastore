{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://www.schemastore.org/treefmt.json",
  "title": "JSON schema for treefmt configuration files",
  "description": "https://treefmt.com",
  "type": "object",
  "properties": {
    "allow-missing-formatter": {
      "type": "boolean",
      "default": false,
      "description": "Do not exit with error if a configured formatter is missing"
    },
    "cpu-profile": {
      "type": "string",
      "description": "The file into which a cpu profile will be written"
    },
    "excludes": {
      "type": "array",
      "items": { "type": "string" },
      "description": "Exclude files or directories matching the specified globs"
    },
    "fail-on-change": {
      "type": "boolean",
      "description": "Exit with error if any changes were made during execution; useful for CI"
    },
    "formatters": {
      "type": "array",
      "items": { "type": "string" },
      "description": "A list of formatters to apply. Defaults to all configured formatters"
    },
    "on-unmatched": {
      "type": "string",
      "enum": ["debug", "info", "warn", "error", "fatal"],
      "description": "Log paths that did not match any formatters at the specified log level"
    },
    "tree-root": {
      "type": "string",
      "description": "The root directory from which treefmt will start walking the filesystem. Defaults to the root of the current git worktree. If not in a git repo, defaults to the directory containing the config file."
    },
    "tree-root-file": {
      "type": "string",
      "description": "File to search for to find the tree root (if tree-root is not set)"
    },
    "tree-root-cmd": {
      "type": "string",
      "description": "Command to run to find the tree root. It is parsed using shlex, to allow quoting arguments that contain whitespace. If you wish to pass arguments containing quotes, you should use nested quotes e.g. \"'\" or '\"'"
    },
    "verbose": {
      "type": "integer",
      "minimum": 0,
      "maximum": 2,
      "description": "Set the verbosity of logs (0 = warn, 1 = info, 2 = debug)"
    },
    "walk": {
      "type": "string",
      "enum": ["auto", "git", "filesystem"],
      "description": "The method used to traverse the files within the tree root"
    },
    "formatter": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_-]+$": {
          "type": "object",
          "properties": {
            "command": { "type": "string" },
            "options": {
              "type": "array",
              "items": { "type": "string" }
            },
            "includes": {
              "type": "array",
              "items": { "type": "string" }
            },
            "excludes": {
              "type": "array",
              "items": { "type": "string" }
            },
            "priority": {
              "type": "integer",
              "default": 0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": true,
  "x-taplo-info": {
    "patterns": ["^treefmt\\.toml?$"]
  }
}
