{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSON schema for web-types",
  "type": "object",
  "properties": {
    "framework": {
      "description": "Framework, for which the components are provided by the library",
      "type": "string",
      "enum": [
        "vue"
      ]
    },
    "name": {
      "description": "Name of the library",
      "type": "string"
    },
    "version": {
      "description": "Version of the library, for which web-types are provided",
      "type": "string"
    },
    "contributions": {
      "type": "object",
      "properties": {
        "html": {
          "$ref": "#/definitions/html"
        }
      }
    }
  },
  "required": [
    "framework",
    "name",
    "version",
    "contributions"
  ],
  "definitions": {
    "html": {
      "type": "object",
      "properties": {
        "types-syntax": {
          "description": "Language in which types as specified.",
          "type": "string",
          "enum": [
            "typescript"
          ]
        },
        "description-markup": {
          "description": "Markup language in which descriptions are formatted",
          "type": "string",
          "default": "none",
          "enum": [
            "html",
            "markdown",
            "none"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-tag"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-attribute"
          }
        },
        "vue-filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-vue-filter"
          }
        }
      },
      "additionalProperties": false
    },
    "html-tag": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-tag-attribute"
          }
        },
        "source": {
          "$ref": "#/definitions/source"
        },
        "events": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-tag-event"
          }
        },
        "slots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-tag-slot"
          }
        },
        "vue-scoped-slots": {
          "description": "Deprecated. Use regular 'slot' property instead and specify 'vue-properties' to provide slot scope information.",
          "type": "null",
          "additionalProperties": false
        },
        "vue-model": {
          "$ref": "#/definitions/html-tag-vue-model"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "html-tag-attribute": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "default": {
          "$ref": "#/definitions/html-attribute-default"
        },
        "required": {
          "$ref": "#/definitions/html-attribute-required"
        },
        "value": {
          "$ref": "#/definitions/html-attribute-value"
        },
        "type": {
          "description": "Deprecated. Use 'value' property instead. Specify only if type is 'boolean' for compatibility with WebStorm 2019.2.",
          "const": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "html-attribute": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "default": {
          "$ref": "#/definitions/html-attribute-default"
        },
        "required": {
          "$ref": "#/definitions/html-attribute-required"
        },
        "value": {
          "$ref": "#/definitions/html-attribute-value"
        },
        "source": {
          "$ref": "#/definitions/source"
        },
        "vue-argument": {
          "$ref": "#/definitions/html-attribute-vue-argument"
        },
        "vue-modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-attribute-vue-modifier"
          }
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "html-vue-filter-argument": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "optional": {
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "html-vue-filter": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "source": {
          "$ref": "#/definitions/source"
        },
        "accepts": {
          "description": "Type of expression on the left hand-side of the pipe of operator",
          "$ref": "#/definitions/type"
        },
        "returns": {
          "description": "Type of the result",
          "$ref": "#/definitions/type"
        },
        "arguments": {
          "description": "List of arguments accepted by the filter. All arguments are non-optional by default.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/html-vue-filter-argument"
          }
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "html-tag-event": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typed-entity"
          }
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "html-tag-slot": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "vue-properties": {
          "description": "Specify properties of the slot scope",
          "type": "array",
          "items": {
            "$ref": "#/definitions/typed-entity"
          }
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "html-tag-vue-model": {
      "type": "object",
      "properties": {
        "prop": {
          "default": "value",
          "type": "string"
        },
        "event": {
          "default": "input",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "html-attribute-value": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "const": "no-value"
            }
          },
          "required": [
            "kind"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "const": "number"
            }
          },
          "required": [
            "kind"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "const": "boolean"
            }
          },
          "required": [
            "kind"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "const": "enum"
            },
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "required": [
            "kind",
            "items"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "const": "expression"
            },
            "type": {
              "$ref": "#/definitions/type"
            }
          },
          "required": [
            "kind",
            "type"
          ],
          "additionalProperties": false
        }
      ]
    },
    "html-attribute-default": {
      "type": "string"
    },
    "html-attribute-required": {
      "type": "boolean"
    },
    "html-attribute-vue-argument": {
      "type": "object",
      "description": "Provide information about directive argument",
      "properties": {
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "required": {
          "description": "Whether directive requires an argument",
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "html-attribute-vue-modifier": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "typed-entity": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "description": {
          "$ref": "#/definitions/description"
        },
        "doc-url": {
          "$ref": "#/definitions/doc-url"
        },
        "type": {
          "$ref": "#/definitions/type"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "type": {
      "description": "Specify type according to selected language for type syntax. The type can be specified by a string expression, an object with list of imports and an expression, or an array of possible types.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/complex-type"
        },
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/complex-type"
              }
            ]
          }
        }
      ]
    },
    "complex-type": {
      "type": "object",
      "properties": {
        "imports": {
          "description": "List of import statements required to resolve symbol in the type expression.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string"
        }
      },
      "required": [
        "imports",
        "expression"
      ],
      "additionalProperties": false
    },
    "source": {
      "description": "Allows to specify the source of the entity. For Vue.js component this may be for instance a class.",
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "file": {
              "description": "Path to the file, relative to the web-types JSON.",
              "type": "string"
            },
            "offset": {
              "description": "Offset in the file under which the source symbol, like class name, is located.",
              "type": "integer"
            }
          },
          "required": [
            "file",
            "offset"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "module": {
              "description": "Name of module, which exports the symbol. May be omitted, in which case it's assumed to be the name of the library.",
              "type": "string"
            },
            "symbol": {
              "description": "Name of the exported symbol.",
              "type": "string"
            }
          },
          "required": [
            "symbol"
          ],
          "additionalProperties": false
        }
      ]
    },
    "name": {
      "type": "string"
    },
    "description": {
      "description": "Short description to be rendered in documentation popup. It will be rendered according to description-markup setting.",
      "type": "string"
    },
    "doc-url": {
      "description": "Link to online documentation.",
      "type": "string"
    },
    "pattern": {
      "description": "A RegEx pattern to match whole content. Syntax should work with at least ECMA, Java and Python implementations.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "regex": {
              "type": "string"
            },
            "case-sensitive": {
              "type": "boolean",
              "default": true
            }
          }
        }
      ]
    }
  }
}
