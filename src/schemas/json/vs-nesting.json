{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "ext-ext": {
      "additionalProperties": false,
      "patternProperties": {
        "^(\\.[^/\\\\]+|\\*)$": {
          "items": {
            "$ref": "#/definitions/fileExtension"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "file-ext": {
      "additionalProperties": false,
      "patternProperties": {
        "^([^/\\\\|:><\"?\\*]+|\\*)$": {
          "items": {
            "$ref": "#/definitions/fileExtension"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "file-file": {
      "additionalProperties": false,
      "patternProperties": {
        "^[^/\\\\|:><\"?\\*]+$": {
          "items": {
            "$ref": "#/definitions/fileName"
          },
          "type": "array",
          "uniqueItems": true
        }
      },
      "type": "object"
    },
    "fileExtension": {
      "pattern": "^\\.[^/\\\\]+$"
    },
    "fileName": {
      "pattern": "^[^/\\\\|:><\"?\\*]+$"
    },
    "providers": {
      "properties": {
        "addedExtension": {
          "description": "If this exist, files with an additional extension should nest under file without additional extension. Example: file.html.css nest under file.html",
          "maxProperties": 0,
          "type": "object"
        },
        "allExtensions": {
          "additionalProperties": false,
          "description": "A greedy version of 'extensionToExtension' and has * as the only child key",
          "properties": {
            "add": {
              "description": "Add nesting rules in the order to be applied by corresponding provider, where each rule entry has a form 'child: collection of potential parents'.",
              "properties": {
                ".*": {
                  "items": {
                    "$ref": "#/definitions/fileExtension"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "remove": {
              "description": "Remove specified nesting rules if they are merged from higher level nesting settings.",
              "oneOf": [
                {
                  "properties": {
                    ".*": {
                      "items": {
                        "$ref": "#/definitions/fileExtension"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                {
                  "enum": ["*"],
                  "type": "string"
                }
              ]
            }
          },
          "type": "object"
        },
        "extensionToExtension": {
          "additionalProperties": false,
          "description": "Nest files with specific extensions under other specific extensions",
          "properties": {
            "add": {
              "allOf": [
                {
                  "$ref": "#/definitions/ext-ext"
                }
              ],
              "description": "Add nesting rules in the order to be applied by corresponding provider, where each rule entry has a form 'child: collection of potential parents'."
            },
            "remove": {
              "description": "Remove specified nesting rules if they are merged from higher level nesting settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ext-ext"
                },
                {
                  "enum": ["*"]
                }
              ]
            }
          }
        },
        "fileSuffixToExtension": {
          "additionalProperties": false,
          "description": "Nest files with specified suffixes under files with specified extensions.",
          "properties": {
            "add": {
              "allOf": [
                {
                  "$ref": "#/definitions/file-ext"
                }
              ],
              "description": "Add nesting rules in the order to be applied by corresponding provider, where each rule entry has a form 'child: collection of potential parents'."
            },
            "remove": {
              "description": "Remove specified nesting rules if they are merged from higher level nesting settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/file-ext"
                },
                {
                  "enum": ["*"]
                }
              ]
            }
          }
        },
        "fileToFile": {
          "additionalProperties": false,
          "description": "Nest specific file names under other specific file names",
          "properties": {
            "add": {
              "allOf": [
                {
                  "$ref": "#/definitions/file-file"
                }
              ],
              "description": "Add nesting rules in the order to be applied by corresponding provider, where each rule entry has a form 'child: collection of potential parents'."
            },
            "remove": {
              "description": "Remove specified nesting rules if they are merged from higher level nesting settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/file-file"
                },
                {
                  "enum": ["*"]
                }
              ]
            }
          }
        },
        "pathSegment": {
          "additionalProperties": false,
          "description": "If this exists, files with \"extra\" extension part in the file name should nest under files without it, but having same name and last extension. Example: file.min.js nest under file.js.",
          "properties": {
            "add": {
              "description": "Add nesting rules in the order to be applied by corresponding provider, where each rule entry has a form 'child: collection of potential parents'.",
              "properties": {
                ".*": {
                  "items": {
                    "$ref": "#/definitions/fileExtension"
                  },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "remove": {
              "description": "Remove specified nesting rules if they are merged from higher level nesting settings.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "items": {
                      "$ref": "#/definitions/fileExtension"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  "type": "object"
                },
                {
                  "enum": ["*"]
                }
              ]
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "properties": {
    "dependentFileProviders": {
      "description": "Contains a collection of nesting rule providers specified in the order to be applied.",
      "properties": {
        "add": {
          "allOf": [
            {
              "$ref": "#/definitions/providers"
            }
          ],
          "description": "Add nesting rules in the order to be applied by corresponding provider, where each rule entry has a form 'child: collection of potential parents'."
        },
        "remove": {
          "description": "Remove specified nesting rules if they are merged from higher level nesting settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/providers"
            },
            {
              "enum": ["*"]
            }
          ]
        }
      },
      "type": "object"
    },
    "root": {
      "default": false,
      "description": "Determines if this is the root nesting config file and no further inheritance is required.",
      "type": "boolean"
    }
  },
  "title": "JSON schema for Visual Studio's file nesting feature",
  "type": "object"
}
