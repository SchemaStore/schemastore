{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "properties": {
    "tslint.alwaysShowRuleFailuresAsWarnings": {
      "default": false,
      "description": "Always show rule failures as warnings, independent of the tslint configuration.",
      "scope": "resource",
      "type": "boolean"
    },
    "tslint.autoFixOnSave": {
      "default": false,
      "description": "Turns auto fix on save on or off, or defines which rules (e.g. `no-var-keyword`) to auto fix on save.",
      "items": {
        "type": "string"
      },
      "scope": "resource",
      "type": ["boolean", "array"]
    },
    "tslint.configFile": {
      "default": "",
      "description": "The path to the rules configuration file",
      "scope": "resource",
      "type": "string"
    },
    "tslint.enable": {
      "default": true,
      "description": "Control whether tslint is enabled for TypeScript files or not.",
      "type": "boolean"
    },
    "tslint.exclude": {
      "description": "Configure glob patterns of file paths to exclude from linting",
      "items": {
        "type": "string"
      },
      "scope": "resource",
      "type": ["string", "array"]
    },
    "tslint.ignoreDefinitionFiles": {
      "default": true,
      "description": "Control if TypeScript definition files should be ignored",
      "scope": "resource",
      "type": "boolean"
    },
    "tslint.jsEnable": {
      "default": false,
      "description": "Control whether tslint is enabled for JavaScript files or not.",
      "scope": "resource",
      "type": "boolean"
    },
    "tslint.nodePath": {
      "default": "",
      "description": "A path added to NODE_PATH when resolving the tslint module.",
      "scope": "resource",
      "type": "string"
    },
    "tslint.rulesDirectory": {
      "default": "",
      "description": "An additional rules directory",
      "items": {
        "type": "string"
      },
      "scope": "resource",
      "type": ["string", "array"]
    },
    "tslint.run": {
      "default": "onType",
      "description": "Run the linter on save (onSave) or on type (onType)",
      "enum": ["onSave", "onType"],
      "scope": "window",
      "type": "string"
    },
    "tslint.validateWithDefaultConfig": {
      "default": false,
      "description": "Validate a file when there is only a default tslint configuration is found",
      "scope": "resource",
      "type": "boolean"
    }
  },
  "title": "JSON schema for Creatomic configuration file",
  "type": "object"
}
