{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/databricks-asset-bundles.json",
  "$defs": {
    "bool": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(resources(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(bundle(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(workspace(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(artifacts(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        }
      ]
    },
    "float64": {
      "oneOf": [
        {
          "type": "number"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(resources(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(bundle(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(workspace(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(artifacts(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        }
      ]
    },
    "github.com": {
      "databricks": {
        "cli": {
          "bundle": {
            "config": {
              "resources.App": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "active_deployment": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppDeployment",
                        "description": "The active deployment of the app. A deployment is considered active when it has been deployed\nto the app compute."
                      },
                      "app_status": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.ApplicationStatus"
                      },
                      "budget_policy_id": {
                        "$ref": "#/$defs/string"
                      },
                      "compute_status": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.ComputeStatus"
                      },
                      "config": {
                        "$ref": "#/$defs/map/interface"
                      },
                      "create_time": {
                        "$ref": "#/$defs/string",
                        "description": "The creation time of the app. Formatted timestamp in ISO 6801."
                      },
                      "creator": {
                        "$ref": "#/$defs/string",
                        "description": "The email of the user that created the app."
                      },
                      "default_source_code_path": {
                        "$ref": "#/$defs/string",
                        "description": "The default workspace file system path of the source code from which app deployment are\ncreated. This field tracks the workspace source code path of the last active deployment."
                      },
                      "description": {
                        "$ref": "#/$defs/string",
                        "description": "The description of the app."
                      },
                      "effective_budget_policy_id": {
                        "$ref": "#/$defs/string"
                      },
                      "effective_user_api_scopes": {
                        "$ref": "#/$defs/slice/string",
                        "description": "The effective api scopes granted to the user access token."
                      },
                      "id": {
                        "$ref": "#/$defs/string",
                        "description": "The unique identifier of the app."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the app. The name must contain only lowercase alphanumeric characters and hyphens.\nIt must be unique within the workspace."
                      },
                      "oauth2_app_client_id": {
                        "$ref": "#/$defs/string"
                      },
                      "oauth2_app_integration_id": {
                        "$ref": "#/$defs/string"
                      },
                      "pending_deployment": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppDeployment",
                        "description": "The pending deployment of the app. A deployment is considered pending when it is being prepared\nfor deployment to the app compute."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.AppPermission"
                      },
                      "resources": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/apps.AppResource",
                        "description": "Resources for the app."
                      },
                      "service_principal_client_id": {
                        "$ref": "#/$defs/string"
                      },
                      "service_principal_id": {
                        "$ref": "#/$defs/int64"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "source_code_path": {
                        "$ref": "#/$defs/string"
                      },
                      "update_time": {
                        "$ref": "#/$defs/string",
                        "description": "The update time of the app. Formatted timestamp in ISO 6801."
                      },
                      "updater": {
                        "$ref": "#/$defs/string",
                        "description": "The email of the user that last updated the app."
                      },
                      "url": {
                        "$ref": "#/$defs/string",
                        "description": "The URL of the app once it is deployed."
                      },
                      "user_api_scopes": {
                        "$ref": "#/$defs/slice/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["source_code_path", "name"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.AppPermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.AppPermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.AppPermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_MANAGE", "CAN_USE"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Cluster": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Contains a snapshot of the latest user specified settings that were used to create/edit the cluster.",
                    "properties": {
                      "apply_policy_default_values": {
                        "$ref": "#/$defs/bool",
                        "description": "When set to true, fixed and default values from the policy will be used for fields that are omitted. When set to false, only fixed values from the policy will be applied."
                      },
                      "autoscale": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AutoScale",
                        "description": "Parameters needed in order to automatically scale clusters up and down based on load.\nNote: autoscaling works best with DB runtime versions 3.0 or later."
                      },
                      "autotermination_minutes": {
                        "$ref": "#/$defs/int",
                        "description": "Automatically terminates the cluster after it is inactive for this time in minutes. If not set,\nthis cluster will not be automatically terminated. If specified, the threshold must be between\n10 and 10000 minutes.\nUsers can also set this value to 0 to explicitly disable automatic termination."
                      },
                      "aws_attributes": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AwsAttributes",
                        "description": "Attributes related to clusters running on Amazon Web Services.\nIf not specified at cluster creation, a set of default values will be used."
                      },
                      "azure_attributes": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AzureAttributes",
                        "description": "Attributes related to clusters running on Microsoft Azure.\nIf not specified at cluster creation, a set of default values will be used."
                      },
                      "cluster_log_conf": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.ClusterLogConf",
                        "description": "The configuration for delivering spark logs to a long-term storage destination.\nThree kinds of destinations (DBFS, S3 and Unity Catalog volumes) are supported. Only one destination can be specified\nfor one cluster. If the conf is given, the logs will be delivered to the destination every\n`5 mins`. The destination of driver logs is `$destination/$clusterId/driver`, while\nthe destination of executor logs is `$destination/$clusterId/executor`."
                      },
                      "cluster_name": {
                        "$ref": "#/$defs/string",
                        "description": "Cluster name requested by the user. This doesn't have to be unique.\nIf not specified at creation, the cluster name will be an empty string.\nFor job clusters, the cluster name is automatically set based on the job and job run IDs."
                      },
                      "custom_tags": {
                        "$ref": "#/$defs/map/string",
                        "description": "Additional tags for cluster resources. Databricks will tag all cluster resources (e.g., AWS\ninstances and EBS volumes) with these tags in addition to `default_tags`. Notes:\n\n- Currently, Databricks allows at most 45 custom tags\n\n- Clusters can only reuse cloud resources if the resources' tags are a subset of the cluster tags"
                      },
                      "data_security_mode": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.DataSecurityMode"
                      },
                      "docker_image": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.DockerImage"
                      },
                      "driver_instance_pool_id": {
                        "$ref": "#/$defs/string",
                        "description": "The optional ID of the instance pool for the driver of the cluster belongs.\nThe pool cluster uses the instance pool with id (instance_pool_id) if the driver pool is not\nassigned."
                      },
                      "driver_node_type_id": {
                        "$ref": "#/$defs/string",
                        "description": "The node type of the Spark driver.\nNote that this field is optional; if unset, the driver node type will be set as the same value\nas `node_type_id` defined above.\n\nThis field, along with node_type_id, should not be set if virtual_cluster_size is set.\nIf both driver_node_type_id, node_type_id, and virtual_cluster_size are specified, driver_node_type_id and node_type_id take precedence."
                      },
                      "enable_elastic_disk": {
                        "$ref": "#/$defs/bool",
                        "description": "Autoscaling Local Storage: when enabled, this cluster will dynamically acquire additional disk\nspace when its Spark workers are running low on disk space. This feature requires specific AWS\npermissions to function correctly - refer to the User Guide for more details."
                      },
                      "enable_local_disk_encryption": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether to enable LUKS on cluster VMs' local disks"
                      },
                      "gcp_attributes": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.GcpAttributes",
                        "description": "Attributes related to clusters running on Google Cloud Platform.\nIf not specified at cluster creation, a set of default values will be used."
                      },
                      "init_scripts": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/compute.InitScriptInfo",
                        "description": "The configuration for storing init scripts. Any number of destinations can be specified.\nThe scripts are executed sequentially in the order provided.\nIf `cluster_log_conf` is specified, init script logs are sent to `\u003cdestination\u003e/\u003ccluster-ID\u003e/init_scripts`."
                      },
                      "instance_pool_id": {
                        "$ref": "#/$defs/string",
                        "description": "The optional ID of the instance pool to which the cluster belongs."
                      },
                      "is_single_node": {
                        "$ref": "#/$defs/bool",
                        "description": "This field can only be used when `kind = CLASSIC_PREVIEW`.\n\nWhen set to true, Databricks will automatically set single node related `custom_tags`, `spark_conf`, and `num_workers`"
                      },
                      "kind": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.Kind"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "node_type_id": {
                        "$ref": "#/$defs/string",
                        "description": "This field encodes, through a single value, the resources available to each of\nthe Spark nodes in this cluster. For example, the Spark nodes can be provisioned\nand optimized for memory or compute intensive workloads. A list of available node\ntypes can be retrieved by using the :method:clusters/listNodeTypes API call."
                      },
                      "num_workers": {
                        "$ref": "#/$defs/int",
                        "description": "Number of worker nodes that this cluster should have. A cluster has one Spark Driver\nand `num_workers` Executors for a total of `num_workers` + 1 Spark nodes.\n\nNote: When reading the properties of a cluster, this field reflects the desired number\nof workers rather than the actual current number of workers. For instance, if a cluster\nis resized from 5 to 10 workers, this field will immediately be updated to reflect\nthe target size of 10 workers, whereas the workers listed in `spark_info` will gradually\nincrease from 5 to 10 as the new nodes are provisioned."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.ClusterPermission"
                      },
                      "policy_id": {
                        "$ref": "#/$defs/string",
                        "description": "The ID of the cluster policy used to create the cluster if applicable."
                      },
                      "remote_disk_throughput": {
                        "$ref": "#/$defs/int",
                        "description": "If set, what the configurable throughput (in Mb/s) for the remote disk is. Currently only supported for GCP HYPERDISK_BALANCED disks."
                      },
                      "runtime_engine": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.RuntimeEngine"
                      },
                      "single_user_name": {
                        "$ref": "#/$defs/string",
                        "description": "Single user name if data_security_mode is `SINGLE_USER`"
                      },
                      "spark_conf": {
                        "$ref": "#/$defs/map/string",
                        "description": "An object containing a set of optional, user-specified Spark configuration key-value pairs.\nUsers can also pass in a string of extra JVM options to the driver and the executors via\n`spark.driver.extraJavaOptions` and `spark.executor.extraJavaOptions` respectively."
                      },
                      "spark_env_vars": {
                        "$ref": "#/$defs/map/string",
                        "description": "An object containing a set of optional, user-specified environment variable key-value pairs.\nPlease note that key-value pair of the form (X,Y) will be exported as is (i.e.,\n`export X='Y'`) while launching the driver and workers.\n\nIn order to specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we recommend appending\nthem to `$SPARK_DAEMON_JAVA_OPTS` as shown in the example below. This ensures that all\ndefault databricks managed environmental variables are included as well.\n\nExample Spark environment variables:\n`{\"SPARK_WORKER_MEMORY\": \"28000m\", \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or\n`{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS -Dspark.shuffle.service.enabled=true\"}`"
                      },
                      "spark_version": {
                        "$ref": "#/$defs/string",
                        "description": "The Spark version of the cluster, e.g. `3.3.x-scala2.11`.\nA list of available Spark versions can be retrieved by using\nthe :method:clusters/sparkVersions API call."
                      },
                      "ssh_public_keys": {
                        "$ref": "#/$defs/slice/string",
                        "description": "SSH public key contents that will be added to each Spark node in this cluster. The\ncorresponding private keys can be used to login with the user name `ubuntu` on port `2200`.\nUp to 10 keys can be specified."
                      },
                      "total_initial_remote_disk_size": {
                        "$ref": "#/$defs/int",
                        "description": "If set, what the total initial volume size (in GB) of the remote disks should be. Currently only supported for GCP HYPERDISK_BALANCED disks."
                      },
                      "use_ml_runtime": {
                        "$ref": "#/$defs/bool",
                        "description": "This field can only be used when `kind = CLASSIC_PREVIEW`.\n\n`effective_spark_version` is determined by `spark_version` (DBR release), this field `use_ml_runtime`, and whether `node_type_id` is gpu node or not."
                      },
                      "workload_type": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.WorkloadType"
                      }
                    },
                    "additionalProperties": false,
                    "markdownDescription": "The cluster resource defines an [all-purpose cluster](https://docs.databricks.com/api/workspace/clusters/create)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.ClusterPermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.ClusterPermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.ClusterPermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_MANAGE", "CAN_RESTART", "CAN_ATTACH_TO"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Dashboard": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "create_time": {
                        "$ref": "#/$defs/string",
                        "description": "The timestamp of when the dashboard was created."
                      },
                      "dashboard_id": {
                        "$ref": "#/$defs/string",
                        "description": "UUID identifying the dashboard."
                      },
                      "display_name": {
                        "$ref": "#/$defs/string",
                        "description": "The display name of the dashboard."
                      },
                      "embed_credentials": {
                        "$ref": "#/$defs/bool"
                      },
                      "etag": {
                        "$ref": "#/$defs/string",
                        "description": "The etag for the dashboard. Can be optionally provided on updates to ensure that the dashboard\nhas not been modified since the last read.\nThis field is excluded in List Dashboards responses."
                      },
                      "file_path": {
                        "$ref": "#/$defs/string"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "lifecycle_state": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/dashboards.LifecycleState",
                        "description": "The state of the dashboard resource. Used for tracking trashed status."
                      },
                      "parent_path": {
                        "$ref": "#/$defs/string",
                        "description": "The workspace path of the folder containing the dashboard. Includes leading slash and no\ntrailing slash.\nThis field is excluded in List Dashboards responses."
                      },
                      "path": {
                        "$ref": "#/$defs/string",
                        "description": "The workspace path of the dashboard asset, including the file name.\nExported dashboards always have the file extension `.lvdash.json`.\nThis field is excluded in List Dashboards responses."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.DashboardPermission"
                      },
                      "serialized_dashboard": {
                        "$ref": "#/$defs/interface",
                        "description": "The contents of the dashboard in serialized string form.\nThis field is excluded in List Dashboards responses.\nUse the [get dashboard API](https://docs.databricks.com/api/workspace/lakeview/get)\nto retrieve an example response, which includes the `serialized_dashboard` field.\nThis field provides the structure of the JSON string that represents the dashboard's\nlayout and components."
                      },
                      "update_time": {
                        "$ref": "#/$defs/string",
                        "description": "The timestamp of when the dashboard was last updated by the user.\nThis field is excluded in List Dashboards responses."
                      },
                      "warehouse_id": {
                        "$ref": "#/$defs/string",
                        "description": "The warehouse ID used to run the dashboard."
                      }
                    },
                    "additionalProperties": false,
                    "markdownDescription": "The dashboard resource allows you to manage [AI/BI dashboards](https://docs.databricks.com/api/workspace/lakeview/create) in a bundle. For information about AI/BI dashboards, see [link](https://docs.databricks.com/dashboards/index.html)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.DashboardPermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.DashboardPermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.DashboardPermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_READ", "CAN_RUN", "CAN_EDIT", "CAN_MANAGE"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.DatabaseCatalog": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "create_database_if_not_exists": {
                        "$ref": "#/$defs/bool"
                      },
                      "database_instance_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the DatabaseInstance housing the database."
                      },
                      "database_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the database (in a instance) associated with the catalog."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the catalog in UC."
                      },
                      "uid": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "database_instance_name",
                      "database_name",
                      "name"
                    ]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.DatabaseInstance": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "A DatabaseInstance represents a logical Postgres instance, comprised of both compute and storage.",
                    "properties": {
                      "capacity": {
                        "$ref": "#/$defs/string",
                        "description": "The sku of the instance. Valid values are \"CU_1\", \"CU_2\", \"CU_4\", \"CU_8\"."
                      },
                      "child_instance_refs": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/database.DatabaseInstanceRef",
                        "description": "The refs of the child instances. This is only available if the instance is\nparent instance."
                      },
                      "creation_time": {
                        "$ref": "#/$defs/string",
                        "description": "The timestamp when the instance was created."
                      },
                      "creator": {
                        "$ref": "#/$defs/string",
                        "description": "The email of the creator of the instance."
                      },
                      "effective_enable_pg_native_login": {
                        "$ref": "#/$defs/bool",
                        "description": "xref AIP-129. `enable_pg_native_login` is owned by the client, while `effective_enable_pg_native_login` is owned by the server.\n`enable_pg_native_login` will only be set in Create/Update response messages if and only if the user provides the field via the request.\n`effective_enable_pg_native_login` on the other hand will always bet set in all response messages (Create/Update/Get/List)."
                      },
                      "effective_enable_readable_secondaries": {
                        "$ref": "#/$defs/bool",
                        "description": "xref AIP-129. `enable_readable_secondaries` is owned by the client, while `effective_enable_readable_secondaries` is owned by the server.\n`enable_readable_secondaries` will only be set in Create/Update response messages if and only if the user provides the field via the request.\n`effective_enable_readable_secondaries` on the other hand will always bet set in all response messages (Create/Update/Get/List)."
                      },
                      "effective_node_count": {
                        "$ref": "#/$defs/int",
                        "description": "xref AIP-129. `node_count` is owned by the client, while `effective_node_count` is owned by the server.\n`node_count` will only be set in Create/Update response messages if and only if the user provides the field via the request.\n`effective_node_count` on the other hand will always bet set in all response messages (Create/Update/Get/List)."
                      },
                      "effective_retention_window_in_days": {
                        "$ref": "#/$defs/int",
                        "description": "xref AIP-129. `retention_window_in_days` is owned by the client, while `effective_retention_window_in_days` is owned by the server.\n`retention_window_in_days` will only be set in Create/Update response messages if and only if the user provides the field via the request.\n`effective_retention_window_in_days` on the other hand will always bet set in all response messages (Create/Update/Get/List)."
                      },
                      "effective_stopped": {
                        "$ref": "#/$defs/bool",
                        "description": "xref AIP-129. `stopped` is owned by the client, while `effective_stopped` is owned by the server.\n`stopped` will only be set in Create/Update response messages if and only if the user provides the field via the request.\n`effective_stopped` on the other hand will always bet set in all response messages (Create/Update/Get/List)."
                      },
                      "enable_pg_native_login": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether the instance has PG native password login enabled. Defaults to true."
                      },
                      "enable_readable_secondaries": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether to enable secondaries to serve read-only traffic. Defaults to false."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the instance. This is the unique identifier for the instance."
                      },
                      "node_count": {
                        "$ref": "#/$defs/int",
                        "description": "The number of nodes in the instance, composed of 1 primary and 0 or more secondaries. Defaults to\n1 primary and 0 secondaries."
                      },
                      "parent_instance_ref": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.DatabaseInstanceRef",
                        "description": "The ref of the parent instance. This is only available if the instance is\nchild instance.\nInput: For specifying the parent instance to create a child instance. Optional.\nOutput: Only populated if provided as input to create a child instance."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.DatabaseInstancePermission"
                      },
                      "pg_version": {
                        "$ref": "#/$defs/string",
                        "description": "The version of Postgres running on the instance."
                      },
                      "read_only_dns": {
                        "$ref": "#/$defs/string",
                        "description": "The DNS endpoint to connect to the instance for read only access. This is only available if\nenable_readable_secondaries is true."
                      },
                      "read_write_dns": {
                        "$ref": "#/$defs/string",
                        "description": "The DNS endpoint to connect to the instance for read+write access."
                      },
                      "retention_window_in_days": {
                        "$ref": "#/$defs/int",
                        "description": "The retention window for the instance. This is the time window in days\nfor which the historical data is retained. The default value is 7 days.\nValid values are 2 to 35 days."
                      },
                      "state": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.DatabaseInstanceState",
                        "description": "The current state of the instance."
                      },
                      "stopped": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether the instance is stopped."
                      },
                      "uid": {
                        "$ref": "#/$defs/string",
                        "description": "An immutable UUID identifier for the instance."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["name"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.DatabaseInstancePermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.DatabaseInstancePermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.DatabaseInstancePermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_CREATE", "CAN_USE", "CAN_MANAGE"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Grant": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "principal": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the principal that will be granted privileges"
                      },
                      "privileges": {
                        "$ref": "#/$defs/slice/string",
                        "description": "The privileges to grant to the specified entity"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["privileges", "principal"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Job": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "budget_policy_id": {
                        "$ref": "#/$defs/string",
                        "description": "The id of the user specified budget policy to use for this job.\nIf not specified, a default budget policy may be applied when creating or modifying the job.\nSee `effective_budget_policy_id` for the budget policy used by this workload."
                      },
                      "continuous": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Continuous",
                        "description": "An optional continuous property for this job. The continuous property will ensure that there is always one run executing. Only one of `schedule` and `continuous` can be used."
                      },
                      "description": {
                        "$ref": "#/$defs/string",
                        "description": "An optional description for the job. The maximum length is 27700 characters in UTF-8 encoding."
                      },
                      "email_notifications": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobEmailNotifications",
                        "description": "An optional set of email addresses that is notified when runs of this job begin or complete as well as when this job is deleted."
                      },
                      "environments": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.JobEnvironment",
                        "description": "A list of task execution environment specifications that can be referenced by serverless tasks of this job.\nAn environment is required to be present for serverless tasks.\nFor serverless notebook tasks, the environment is accessible in the notebook environment panel.\nFor other serverless tasks, the task environment is required to be specified using environment_key in the task settings."
                      },
                      "git_source": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.GitSource",
                        "description": "An optional specification for a remote Git repository containing the source code used by tasks. Version-controlled source code is supported by notebook, dbt, Python script, and SQL File tasks.\n\nIf `git_source` is set, these tasks retrieve the file from the remote repository by default. However, this behavior can be overridden by setting `source` to `WORKSPACE` on the task.\n\nNote: dbt and SQL File tasks support only version-controlled sources. If dbt or SQL File tasks are used, `git_source` must be defined on the job."
                      },
                      "health": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthRules"
                      },
                      "job_clusters": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.JobCluster",
                        "description": "A list of job cluster specifications that can be shared and reused by tasks of this job. Libraries cannot be declared in a shared job cluster. You must declare dependent libraries in task settings."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "max_concurrent_runs": {
                        "$ref": "#/$defs/int",
                        "description": "An optional maximum allowed number of concurrent runs of the job.\nSet this value if you want to be able to execute multiple runs of the same job concurrently.\nThis is useful for example if you trigger your job on a frequent schedule and want to allow consecutive runs to overlap with each other, or if you want to trigger multiple runs which differ by their input parameters.\nThis setting affects only new runs. For example, suppose the job’s concurrency is 4 and there are 4 concurrent active runs. Then setting the concurrency to 3 won’t kill any of the active runs.\nHowever, from then on, new runs are skipped unless there are fewer than 3 active runs.\nThis value cannot exceed 1000. Setting this value to `0` causes all new runs to be skipped."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "An optional name for the job. The maximum length is 4096 bytes in UTF-8 encoding."
                      },
                      "notification_settings": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobNotificationSettings",
                        "description": "Optional notification settings that are used when sending notifications to each of the `email_notifications` and `webhook_notifications` for this job."
                      },
                      "parameters": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.JobParameterDefinition",
                        "description": "Job-level parameter definitions"
                      },
                      "performance_target": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PerformanceTarget",
                        "description": "The performance mode on a serverless job. This field determines the level of compute performance or cost-efficiency for the run.\n\n* `STANDARD`: Enables cost-efficient execution of serverless workloads.\n* `PERFORMANCE_OPTIMIZED`: Prioritizes fast startup and execution times through rapid scaling and optimized cluster performance."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.JobPermission"
                      },
                      "queue": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.QueueSettings",
                        "description": "The queue settings of the job."
                      },
                      "run_as": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobRunAs"
                      },
                      "schedule": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.CronSchedule",
                        "description": "An optional periodic schedule for this job. The default behavior is that the job only runs when triggered by clicking “Run Now” in the Jobs UI or sending an API request to `runNow`."
                      },
                      "tags": {
                        "$ref": "#/$defs/map/string",
                        "description": "A map of tags associated with the job. These are forwarded to the cluster as cluster tags for jobs clusters, and are subject to the same limitations as cluster tags. A maximum of 25 tags can be added to the job."
                      },
                      "tasks": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.Task",
                        "description": "A list of task specifications to be executed by this job.\nIt supports up to 1000 elements in write endpoints (:method:jobs/create, :method:jobs/reset, :method:jobs/update, :method:jobs/submit).\nRead endpoints return only 100 tasks. If more than 100 tasks are available, you can paginate through them using :method:jobs/get. Use the `next_page_token` field at the object root to determine if more results are available."
                      },
                      "timeout_seconds": {
                        "$ref": "#/$defs/int",
                        "description": "An optional timeout applied to each run of this job. A value of `0` means no timeout."
                      },
                      "trigger": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.TriggerSettings",
                        "description": "A configuration to trigger a run when certain conditions are met. The default behavior is that the job runs only when triggered by clicking “Run Now” in the Jobs UI or sending an API request to `runNow`."
                      },
                      "usage_policy_id": {
                        "$ref": "#/$defs/string",
                        "description": "The id of the user specified usage policy to use for this job.\nIf not specified, a default usage policy may be applied when creating or modifying the job.\nSee `effective_usage_policy_id` for the usage policy used by this workload.",
                        "x-databricks-preview": "PRIVATE",
                        "doNotSuggest": true
                      },
                      "webhook_notifications": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.WebhookNotifications",
                        "description": "A collection of system notification IDs to notify when runs of this job begin or complete."
                      }
                    },
                    "additionalProperties": false,
                    "markdownDescription": "The job resource allows you to define [jobs and their corresponding tasks](https://docs.databricks.com/api/workspace/jobs/create) in your bundle. For information about jobs, see [link](https://docs.databricks.com/jobs/index.html). For a tutorial that uses a Databricks Asset Bundles template to create a job, see [link](https://docs.databricks.com/dev-tools/bundles/jobs-tutorial.html)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.JobPermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.JobPermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.JobPermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "CAN_MANAGE",
                      "CAN_MANAGE_RUN",
                      "CAN_VIEW",
                      "IS_OWNER"
                    ]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Lifecycle": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "prevent_destroy": {
                        "$ref": "#/$defs/bool",
                        "description": "Lifecycle setting to prevent the resource from being destroyed."
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.MlflowExperiment": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "An experiment and its metadata.",
                    "properties": {
                      "artifact_location": {
                        "$ref": "#/$defs/string",
                        "description": "Location where artifacts for the experiment are stored."
                      },
                      "creation_time": {
                        "$ref": "#/$defs/int64",
                        "description": "Creation time"
                      },
                      "experiment_id": {
                        "$ref": "#/$defs/string",
                        "description": "Unique identifier for the experiment."
                      },
                      "last_update_time": {
                        "$ref": "#/$defs/int64",
                        "description": "Last update time"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "lifecycle_stage": {
                        "$ref": "#/$defs/string",
                        "description": "Current life cycle stage of the experiment: \"active\" or \"deleted\".\nDeleted experiments are not returned by APIs."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "Human readable name that identifies the experiment."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.MlflowExperimentPermission"
                      },
                      "tags": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/ml.ExperimentTag",
                        "description": "Tags: Additional metadata key-value pairs."
                      }
                    },
                    "additionalProperties": false,
                    "markdownDescription": "The experiment resource allows you to define [MLflow experiments](https://docs.databricks.com/api/workspace/experiments/createexperiment) in a bundle. For information about MLflow experiments, see [link](https://docs.databricks.com/mlflow/experiments.html)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.MlflowExperimentPermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.MlflowExperimentPermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.MlflowExperimentPermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_MANAGE", "CAN_EDIT", "CAN_READ"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.MlflowModel": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "description": {
                        "$ref": "#/$defs/string",
                        "description": "Optional description for registered model."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "Register models under this name"
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.MlflowModelPermission"
                      },
                      "tags": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/ml.ModelTag",
                        "description": "Additional metadata for registered model."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["name"],
                    "markdownDescription": "The model resource allows you to define [legacy models](https://docs.databricks.com/api/workspace/modelregistry/createmodel) in bundles. Databricks recommends you use Unity Catalog [registered models](https://docs.databricks.com/dev-tools/bundles/reference.html#registered-model) instead."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.MlflowModelPermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.MlflowModelPermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.MlflowModelPermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "CAN_EDIT",
                      "CAN_MANAGE",
                      "CAN_MANAGE_STAGING_VERSIONS",
                      "CAN_MANAGE_PRODUCTION_VERSIONS",
                      "CAN_READ"
                    ]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.ModelServingEndpoint": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "ai_gateway": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayConfig",
                        "description": "The AI Gateway configuration for the serving endpoint. NOTE: External model, provisioned throughput, and pay-per-token endpoints are fully supported; agent endpoints currently only support inference tables."
                      },
                      "budget_policy_id": {
                        "$ref": "#/$defs/string",
                        "description": "The budget policy to be applied to the serving endpoint."
                      },
                      "config": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.EndpointCoreConfigInput",
                        "description": "The core config of the serving endpoint."
                      },
                      "description": {
                        "$ref": "#/$defs/string"
                      },
                      "email_notifications": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.EmailNotifications",
                        "description": "Email notification settings."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the serving endpoint. This field is required and must be unique across a Databricks workspace.\nAn endpoint name can consist of alphanumeric characters, dashes, and underscores."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.ModelServingEndpointPermission"
                      },
                      "rate_limits": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/serving.RateLimit",
                        "description": "Rate limits to be applied to the serving endpoint. NOTE: this field is deprecated, please use AI Gateway to manage rate limits.",
                        "deprecationMessage": "This field is deprecated",
                        "deprecated": true
                      },
                      "route_optimized": {
                        "$ref": "#/$defs/bool",
                        "description": "Enable route optimization for the serving endpoint."
                      },
                      "tags": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/serving.EndpointTag",
                        "description": "Tags to be attached to the serving endpoint and automatically propagated to billing logs."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["name"],
                    "markdownDescription": "The model_serving_endpoint resource allows you to define [model serving endpoints](https://docs.databricks.com/api/workspace/servingendpoints/create). See [link](https://docs.databricks.com/machine-learning/model-serving/manage-serving-endpoints.html)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.ModelServingEndpointPermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.ModelServingEndpointPermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.ModelServingEndpointPermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_MANAGE", "CAN_QUERY", "CAN_VIEW"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Permission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the group that has the permission set in level."
                      },
                      "level": {
                        "$ref": "#/$defs/string",
                        "description": "The allowed permission for user, group, service principal defined for this permission."
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the service principal that has the permission set in level."
                      },
                      "user_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the user that has the permission set in level."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Pipeline": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "allow_duplicate_names": {
                        "$ref": "#/$defs/bool",
                        "description": "If false, deployment will fail if name conflicts with that of another pipeline."
                      },
                      "budget_policy_id": {
                        "$ref": "#/$defs/string",
                        "description": "Budget policy of this pipeline.",
                        "x-databricks-preview": "PRIVATE",
                        "doNotSuggest": true
                      },
                      "catalog": {
                        "$ref": "#/$defs/string",
                        "description": "A catalog in Unity Catalog to publish data from this pipeline to. If `target` is specified, tables in this pipeline are published to a `target` schema inside `catalog` (for example, `catalog`.`target`.`table`). If `target` is not specified, no data is published to Unity Catalog."
                      },
                      "channel": {
                        "$ref": "#/$defs/string",
                        "description": "DLT Release Channel that specifies which version to use."
                      },
                      "clusters": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/pipelines.PipelineCluster",
                        "description": "Cluster settings for this pipeline deployment."
                      },
                      "configuration": {
                        "$ref": "#/$defs/map/string",
                        "description": "String-String configuration for this pipeline execution."
                      },
                      "continuous": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether the pipeline is continuous or triggered. This replaces `trigger`."
                      },
                      "development": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether the pipeline is in Development mode. Defaults to false."
                      },
                      "edition": {
                        "$ref": "#/$defs/string",
                        "description": "Pipeline product edition."
                      },
                      "environment": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PipelinesEnvironment",
                        "description": "Environment specification for this pipeline used to install dependencies."
                      },
                      "event_log": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.EventLogSpec",
                        "description": "Event log configuration for this pipeline"
                      },
                      "filters": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.Filters",
                        "description": "Filters on which Pipeline packages to include in the deployed graph."
                      },
                      "gateway_definition": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.IngestionGatewayPipelineDefinition",
                        "description": "The definition of a gateway pipeline to support change data capture.",
                        "x-databricks-preview": "PRIVATE",
                        "doNotSuggest": true
                      },
                      "id": {
                        "$ref": "#/$defs/string",
                        "description": "Unique identifier for this pipeline."
                      },
                      "ingestion_definition": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.IngestionPipelineDefinition",
                        "description": "The configuration for a managed ingestion pipeline. These settings cannot be used with the 'libraries', 'schema', 'target', or 'catalog' settings."
                      },
                      "libraries": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/pipelines.PipelineLibrary",
                        "description": "Libraries or code needed by this deployment."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "Friendly identifier for this pipeline."
                      },
                      "notifications": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/pipelines.Notifications",
                        "description": "List of notification settings for this pipeline."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.PipelinePermission"
                      },
                      "photon": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether Photon is enabled for this pipeline."
                      },
                      "restart_window": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.RestartWindow",
                        "description": "Restart window of this pipeline.",
                        "x-databricks-preview": "PRIVATE",
                        "doNotSuggest": true
                      },
                      "root_path": {
                        "$ref": "#/$defs/string",
                        "description": "Root path for this pipeline.\nThis is used as the root directory when editing the pipeline in the Databricks user interface and it is\nadded to sys.path when executing Python sources during pipeline execution."
                      },
                      "run_as": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.RunAs",
                        "x-databricks-preview": "PRIVATE",
                        "doNotSuggest": true
                      },
                      "schema": {
                        "$ref": "#/$defs/string",
                        "description": "The default schema (database) where tables are read from or published to."
                      },
                      "serverless": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether serverless compute is enabled for this pipeline."
                      },
                      "storage": {
                        "$ref": "#/$defs/string",
                        "description": "DBFS root directory for storing checkpoints and tables."
                      },
                      "tags": {
                        "$ref": "#/$defs/map/string",
                        "description": "A map of tags associated with the pipeline.\nThese are forwarded to the cluster as cluster tags, and are therefore subject to the same limitations.\nA maximum of 25 tags can be added to the pipeline."
                      },
                      "target": {
                        "$ref": "#/$defs/string",
                        "description": "Target schema (database) to add tables in this pipeline to. Exactly one of `schema` or `target` must be specified. To publish to Unity Catalog, also specify `catalog`. This legacy field is deprecated for pipeline creation in favor of the `schema` field.",
                        "deprecationMessage": "This field is deprecated",
                        "deprecated": true
                      },
                      "trigger": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PipelineTrigger",
                        "description": "Which pipeline trigger to use. Deprecated: Use `continuous` instead.",
                        "deprecationMessage": "Use continuous instead",
                        "deprecated": true
                      }
                    },
                    "additionalProperties": false,
                    "markdownDescription": "The pipeline resource allows you to create Delta Live Tables [pipelines](https://docs.databricks.com/api/workspace/pipelines/create). For information about pipelines, see [link](https://docs.databricks.com/dlt/index.html). For a tutorial that uses the Databricks Asset Bundles template to create a pipeline, see [link](https://docs.databricks.com/dev-tools/bundles/pipelines-tutorial.html)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.PipelinePermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.PipelinePermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.PipelinePermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_MANAGE", "IS_OWNER", "CAN_RUN", "CAN_VIEW"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.QualityMonitor": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "assets_dir": {
                        "$ref": "#/$defs/string",
                        "description": "[Create:REQ Update:IGN] Field for specifying the absolute path to a custom directory to store data-monitoring\nassets. Normally prepopulated to a default user location via UI and Python APIs."
                      },
                      "baseline_table_name": {
                        "$ref": "#/$defs/string",
                        "description": "[Create:OPT Update:OPT] Baseline table name.\nBaseline data is used to compute drift from the data in the monitored `table_name`.\nThe baseline table and the monitored table shall have the same schema."
                      },
                      "custom_metrics": {
                        "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/catalog.MonitorMetric",
                        "description": "[Create:OPT Update:OPT] Custom metrics."
                      },
                      "data_classification_config": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorDataClassificationConfig",
                        "description": "[Create:OPT Update:OPT] Data classification related config.",
                        "x-databricks-preview": "PRIVATE",
                        "doNotSuggest": true
                      },
                      "inference_log": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorInferenceLog"
                      },
                      "latest_monitor_failure_msg": {
                        "$ref": "#/$defs/string",
                        "description": "[Create:ERR Update:IGN] The latest error message for a monitor failure."
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "notifications": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorNotifications",
                        "description": "[Create:OPT Update:OPT] Field for specifying notification settings."
                      },
                      "output_schema_name": {
                        "$ref": "#/$defs/string",
                        "description": "[Create:REQ Update:REQ] Schema where output tables are created. Needs to be in 2-level format {catalog}.{schema}"
                      },
                      "schedule": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorCronSchedule",
                        "description": "[Create:OPT Update:OPT] The monitor schedule."
                      },
                      "skip_builtin_dashboard": {
                        "$ref": "#/$defs/bool",
                        "description": "Whether to skip creating a default dashboard summarizing data quality metrics."
                      },
                      "slicing_exprs": {
                        "$ref": "#/$defs/slice/string",
                        "description": "[Create:OPT Update:OPT] List of column expressions to slice data with for targeted analysis. The data is grouped by\neach expression independently, resulting in a separate slice for each predicate and its\ncomplements. For example `slicing_exprs=[“col_1”, “col_2 \u003e 10”]` will generate the following\nslices: two slices for `col_2 \u003e 10` (True and False), and one slice per unique value in\n`col1`. For high-cardinality columns, only the top 100 unique values by frequency will\ngenerate slices."
                      },
                      "snapshot": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorSnapshot",
                        "description": "Configuration for monitoring snapshot tables."
                      },
                      "table_name": {
                        "$ref": "#/$defs/string"
                      },
                      "time_series": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorTimeSeries",
                        "description": "Configuration for monitoring time series tables."
                      },
                      "warehouse_id": {
                        "$ref": "#/$defs/string",
                        "description": "Optional argument to specify the warehouse for dashboard creation. If not specified, the first running\nwarehouse will be used."
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "table_name",
                      "assets_dir",
                      "output_schema_name"
                    ],
                    "markdownDescription": "The quality_monitor resource allows you to define a Unity Catalog [table monitor](https://docs.databricks.com/api/workspace/qualitymonitors/create). For information about monitors, see [link](https://docs.databricks.com/machine-learning/model-serving/monitor-diagnose-endpoints.html)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.RegisteredModel": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "catalog_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the catalog where the schema and the registered model reside"
                      },
                      "comment": {
                        "$ref": "#/$defs/string",
                        "description": "The comment attached to the registered model"
                      },
                      "grants": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.Grant"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the registered model"
                      },
                      "schema_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the schema where the registered model resides"
                      },
                      "storage_location": {
                        "$ref": "#/$defs/string",
                        "description": "The storage location on the cloud under which model version data files are stored"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["catalog_name", "name", "schema_name"],
                    "markdownDescription": "The registered model resource allows you to define models in Unity Catalog. For information about Unity Catalog [registered models](https://docs.databricks.com/api/workspace/registeredmodels/create), see [link](https://docs.databricks.com/machine-learning/manage-model-lifecycle/index.html)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "catalog_name": {
                        "$ref": "#/$defs/string",
                        "description": "Name of parent catalog."
                      },
                      "comment": {
                        "$ref": "#/$defs/string",
                        "description": "User-provided free-form text description."
                      },
                      "grants": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.SchemaGrant"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "Name of schema, relative to parent catalog."
                      },
                      "properties": {
                        "$ref": "#/$defs/map/string"
                      },
                      "storage_root": {
                        "$ref": "#/$defs/string",
                        "description": "Storage root URL for managed tables within schema."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["catalog_name", "name"],
                    "markdownDescription": "The schema resource type allows you to define Unity Catalog [schemas](https://docs.databricks.com/api/workspace/schemas/create) for tables and other assets in your workflows and pipelines created as part of a bundle. A schema, different from other resource types, has the following limitations:\n\n- The owner of a schema resource is always the deployment user, and cannot be changed. If `run_as` is specified in the bundle, it will be ignored by operations on the schema.\n- Only fields supported by the corresponding [Schemas object create API](https://docs.databricks.com/api/workspace/schemas/create) are available for the schema resource. For example, `enable_predictive_optimization` is not supported as it is only available on the [update API](https://docs.databricks.com/api/workspace/schemas/update)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SchemaGrant": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "principal": {
                        "$ref": "#/$defs/string"
                      },
                      "privileges": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.SchemaGrantPrivilege"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["privileges", "principal"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SchemaGrantPrivilege": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "ALL_PRIVILEGES",
                      "APPLY_TAG",
                      "CREATE_FUNCTION",
                      "CREATE_TABLE",
                      "CREATE_VOLUME",
                      "MANAGE",
                      "USE_SCHEMA",
                      "EXECUTE",
                      "MODIFY",
                      "REFRESH",
                      "SELECT",
                      "READ_VOLUME",
                      "WRITE_VOLUME"
                    ]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SecretScope": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "backend_type": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/workspace.ScopeBackendType",
                        "description": "The backend type the scope will be created with. If not specified, will default to `DATABRICKS`"
                      },
                      "keyvault_metadata": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/workspace.AzureKeyVaultSecretScopeMetadata",
                        "description": "The metadata for the secret scope if the `backend_type` is `AZURE_KEYVAULT`"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "Scope name requested by the user. Scope names are unique."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.SecretScopePermission",
                        "description": "The permissions to apply to the secret scope. Permissions are managed via secret scope ACLs."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["name"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SecretScopePermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the group that has the permission set in level. This field translates to a `principal` field in secret scope ACL."
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SecretScopePermissionLevel",
                        "description": "The allowed permission for user, group, service principal defined for this permission."
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string",
                        "description": "The application ID of an active service principal. This field translates to a `principal` field in secret scope ACL."
                      },
                      "user_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the user that has the permission set in level. This field translates to a `principal` field in secret scope ACL."
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SecretScopePermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["READ", "WRITE", "MANAGE"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SqlWarehouse": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "auto_stop_mins": {
                        "$ref": "#/$defs/int",
                        "description": "The amount of time in minutes that a SQL warehouse must be idle (i.e., no RUNNING queries) before\nit is automatically stopped.\n\nSupported values:\n  - Must be \u003e= 0 mins for serverless warehouses\n  - Must be == 0 or \u003e= 10 mins for non-serverless warehouses\n - 0 indicates no autostop.\n\nDefaults to 120 mins"
                      },
                      "channel": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/sql.Channel",
                        "description": "Channel Details"
                      },
                      "cluster_size": {
                        "$ref": "#/$defs/string",
                        "description": "Size of the clusters allocated for this warehouse.\nIncreasing the size of a spark cluster allows you to run larger queries on it.\nIf you want to increase the number of concurrent queries, please tune max_num_clusters.\n\nSupported values:\n  - 2X-Small\n  - X-Small\n  - Small\n  - Medium\n  - Large\n  - X-Large\n  - 2X-Large\n  - 3X-Large\n  - 4X-Large\n"
                      },
                      "creator_name": {
                        "$ref": "#/$defs/string",
                        "description": "warehouse creator name"
                      },
                      "enable_photon": {
                        "$ref": "#/$defs/bool",
                        "description": "Configures whether the warehouse should use Photon optimized clusters.\n\nDefaults to true."
                      },
                      "enable_serverless_compute": {
                        "$ref": "#/$defs/bool",
                        "description": "Configures whether the warehouse should use serverless compute"
                      },
                      "instance_profile_arn": {
                        "$ref": "#/$defs/string",
                        "description": "Deprecated. Instance profile used to pass IAM role to the cluster",
                        "deprecationMessage": "This field is deprecated",
                        "deprecated": true
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "max_num_clusters": {
                        "$ref": "#/$defs/int",
                        "description": "Maximum number of clusters that the autoscaler will create to handle concurrent queries.\n\nSupported values:\n  - Must be \u003e= min_num_clusters\n  - Must be \u003c= 30.\n\nDefaults to min_clusters if unset."
                      },
                      "min_num_clusters": {
                        "$ref": "#/$defs/int",
                        "description": "Minimum number of available clusters that will be maintained for this SQL warehouse.\nIncreasing this will ensure that a larger number of clusters are always running and therefore may reduce\nthe cold start time for new queries. This is similar to reserved vs. revocable cores in a resource manager.\n\nSupported values:\n  - Must be \u003e 0\n  - Must be \u003c= min(max_num_clusters, 30)\n\nDefaults to 1"
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "Logical name for the cluster.\n\nSupported values:\n  - Must be unique within an org.\n  - Must be less than 100 characters."
                      },
                      "permissions": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.SqlWarehousePermission"
                      },
                      "spot_instance_policy": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/sql.SpotInstancePolicy"
                      },
                      "tags": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/sql.EndpointTags",
                        "description": "A set of key-value pairs that will be tagged on all resources (e.g., AWS instances and EBS volumes) associated\nwith this SQL warehouse.\n\nSupported values:\n  - Number of tags \u003c 45."
                      },
                      "warehouse_type": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/sql.CreateWarehouseRequestWarehouseType"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SqlWarehousePermission": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group_name": {
                        "$ref": "#/$defs/string"
                      },
                      "level": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SqlWarehousePermissionLevel"
                      },
                      "service_principal_name": {
                        "$ref": "#/$defs/string"
                      },
                      "user_name": {
                        "$ref": "#/$defs/string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["level"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SqlWarehousePermissionLevel": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": ["CAN_MANAGE", "CAN_USE", "CAN_MONITOR", "CAN_VIEW"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.SyncedDatabaseTable": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Next field marker: 14",
                    "properties": {
                      "data_synchronization_status": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableStatus"
                      },
                      "database_instance_name": {
                        "$ref": "#/$defs/string"
                      },
                      "effective_database_instance_name": {
                        "$ref": "#/$defs/string"
                      },
                      "effective_logical_database_name": {
                        "$ref": "#/$defs/string"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "logical_database_name": {
                        "$ref": "#/$defs/string"
                      },
                      "name": {
                        "$ref": "#/$defs/string"
                      },
                      "spec": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableSpec"
                      },
                      "unity_catalog_provisioning_state": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.ProvisioningInfoState"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["name"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.Volume": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "catalog_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the catalog where the schema and the volume are"
                      },
                      "comment": {
                        "$ref": "#/$defs/string",
                        "description": "The comment attached to the volume"
                      },
                      "grants": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.VolumeGrant"
                      },
                      "lifecycle": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Lifecycle",
                        "description": "Lifecycle is a struct that contains the lifecycle settings for a resource. It controls the behavior of the resource when it is deployed or destroyed."
                      },
                      "name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the volume"
                      },
                      "schema_name": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the schema where the volume is"
                      },
                      "storage_location": {
                        "$ref": "#/$defs/string",
                        "description": "The storage location on the cloud"
                      },
                      "volume_type": {
                        "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.VolumeType"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["catalog_name", "name", "schema_name"],
                    "markdownDescription": "The volume resource type allows you to define and create Unity Catalog [volumes](https://docs.databricks.com/api/workspace/volumes/create) as part of a bundle. When deploying a bundle with a volume defined, note that:\n\n- A volume cannot be referenced in the `artifact_path` for the bundle until it exists in the workspace. Hence, if you want to use Databricks Asset Bundles to create the volume, you must first define the volume in the bundle, deploy it to create the volume, then reference it in the `artifact_path` in subsequent deployments.\n\n- Volumes in the bundle are not prepended with the `dev_${workspace.current_user.short_name}` prefix when the deployment target has `mode: development` configured. However, you can manually configure this prefix. See [custom-presets](https://docs.databricks.com/dev-tools/bundles/deployment-modes.html#custom-presets)."
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.VolumeGrant": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "principal": {
                        "$ref": "#/$defs/string"
                      },
                      "privileges": {
                        "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.VolumeGrantPrivilege"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["privileges", "principal"]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "resources.VolumeGrantPrivilege": {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "ALL_PRIVILEGES",
                      "APPLY_TAG",
                      "MANAGE",
                      "READ_VOLUME",
                      "WRITE_VOLUME"
                    ]
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "variable.Lookup": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "alert": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the alert for which to retrieve an ID."
                      },
                      "cluster": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the cluster for which to retrieve an ID."
                      },
                      "cluster_policy": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the cluster_policy for which to retrieve an ID."
                      },
                      "dashboard": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the dashboard for which to retrieve an ID."
                      },
                      "instance_pool": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the instance_pool for which to retrieve an ID."
                      },
                      "job": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the job for which to retrieve an ID."
                      },
                      "metastore": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the metastore for which to retrieve an ID."
                      },
                      "notification_destination": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the notification_destination for which to retrieve an ID."
                      },
                      "pipeline": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the pipeline for which to retrieve an ID."
                      },
                      "query": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the query for which to retrieve an ID."
                      },
                      "service_principal": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the service_principal for which to retrieve an ID."
                      },
                      "warehouse": {
                        "$ref": "#/$defs/string",
                        "description": "The name of the warehouse for which to retrieve an ID."
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "variable.TargetVariable": {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "default": {
                        "$ref": "#/$defs/interface",
                        "description": "The default value for the variable."
                      },
                      "description": {
                        "$ref": "#/$defs/string",
                        "description": "The description of the variable."
                      },
                      "lookup": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/variable.Lookup",
                        "description": "The name of the alert, cluster_policy, cluster, dashboard, instance_pool, job, metastore, pipeline, query, service_principal, or warehouse object for which to retrieve an ID."
                      },
                      "type": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/variable.VariableType",
                        "description": "The type of the variable."
                      }
                    },
                    "additionalProperties": false
                  },
                  {}
                ]
              },
              "variable.Variable": {
                "type": "object",
                "description": "Defines a custom variable for the bundle.",
                "properties": {
                  "default": {
                    "$ref": "#/$defs/interface",
                    "description": "The default value for the variable."
                  },
                  "description": {
                    "$ref": "#/$defs/string",
                    "description": "The description of the variable"
                  },
                  "lookup": {
                    "$ref": "#/$defs/github.com/databricks/cli/bundle/config/variable.Lookup",
                    "description": "The name of the alert, cluster_policy, cluster, dashboard, instance_pool, job, metastore, pipeline, query, service_principal, or warehouse object for which to retrieve an ID.",
                    "markdownDescription": "The name of the `alert`, `cluster_policy`, `cluster`, `dashboard`, `instance_pool`, `job`, `metastore`, `pipeline`, `query`, `service_principal`, or `warehouse` object for which to retrieve an ID."
                  },
                  "type": {
                    "$ref": "#/$defs/github.com/databricks/cli/bundle/config/variable.VariableType",
                    "description": "The type of the variable."
                  }
                },
                "additionalProperties": false,
                "markdownDescription": "Defines a custom variable for the bundle. See [variables](https://docs.databricks.com/dev-tools/bundles/settings.html#variables)."
              },
              "variable.VariableType": {
                "type": "string"
              }
            },
            "config.Artifact": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "build": {
                      "$ref": "#/$defs/string",
                      "description": "An optional set of build commands to run locally before deployment."
                    },
                    "dynamic_version": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to patch the wheel version dynamically based on the timestamp of the whl file. If this is set to `true`, new code can be deployed without having to update the version in `setup.py` or `pyproject.toml`. This setting is only valid when `type` is set to `whl`. See [\\_](/dev-tools/bundles/settings.md#bundle-syntax-mappings-artifacts)."
                    },
                    "executable": {
                      "$ref": "#/$defs/github.com/databricks/cli/libs/exec.ExecutableType",
                      "description": "The executable type. Valid values are `bash`, `sh`, and `cmd`."
                    },
                    "files": {
                      "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config.ArtifactFile",
                      "description": "The relative or absolute path to the built artifact files."
                    },
                    "path": {
                      "$ref": "#/$defs/string",
                      "description": "The local path of the directory for the artifact."
                    },
                    "type": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.ArtifactType",
                      "description": "Required if the artifact is a Python wheel. The type of the artifact. Valid values are `whl` and `jar`.",
                      "markdownDescription": "Required if the artifact is a Python wheel. The type of the artifact. Valid values are `whl` and `jar`."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.ArtifactFile": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "source": {
                      "$ref": "#/$defs/string",
                      "description": "Required. The artifact source file."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["source"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.ArtifactType": {
              "type": "string"
            },
            "config.Bundle": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "cluster_id": {
                      "$ref": "#/$defs/string",
                      "description": "The ID of a cluster to use to run the bundle.",
                      "markdownDescription": "The ID of a cluster to use to run the bundle. See [cluster_id](https://docs.databricks.com/dev-tools/bundles/settings.html#cluster_id)."
                    },
                    "compute_id": {
                      "$ref": "#/$defs/string",
                      "description": "Deprecated. The ID of the compute to use to run the bundle."
                    },
                    "databricks_cli_version": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks CLI version to use for the bundle.",
                      "markdownDescription": "The Databricks CLI version to use for the bundle. See [databricks_cli_version](https://docs.databricks.com/dev-tools/bundles/settings.html#databricks_cli_version)."
                    },
                    "deployment": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Deployment",
                      "description": "The definition of the bundle deployment",
                      "markdownDescription": "The definition of the bundle deployment. For supported attributes see [link](https://docs.databricks.com/dev-tools/bundles/deployment-modes.html)."
                    },
                    "git": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Git",
                      "description": "The Git version control details that are associated with your bundle.",
                      "markdownDescription": "The Git version control details that are associated with your bundle. For supported attributes see [git](https://docs.databricks.com/dev-tools/bundles/settings.html#git)."
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the bundle."
                    },
                    "uuid": {
                      "$ref": "#/$defs/string",
                      "description": "Reserved. A Universally Unique Identifier (UUID) for the bundle that uniquely identifies the bundle in internal Databricks systems. This is generated when a bundle project is initialized using a Databricks template (using the `databricks bundle init` command)."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["name"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Command": {
              "type": "string"
            },
            "config.Deployment": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "fail_on_active_runs": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to fail on active runs. If this is set to true a deployment that is running can be interrupted."
                    },
                    "lock": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Lock",
                      "description": "The deployment lock attributes."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Experimental": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "pydabs": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.PyDABs",
                      "description": "The PyDABs configuration.",
                      "deprecationMessage": "Deprecated: please use python instead",
                      "deprecated": true
                    },
                    "python": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Python",
                      "description": "Configures loading of Python code defined with 'databricks-bundles' package."
                    },
                    "python_wheel_wrapper": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to use a Python wheel wrapper."
                    },
                    "scripts": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config.Command",
                      "description": "The commands to run."
                    },
                    "skip_artifact_cleanup": {
                      "$ref": "#/$defs/bool",
                      "description": "Determines whether to skip cleaning up the .internal folder"
                    },
                    "skip_name_prefix_for_schema": {
                      "$ref": "#/$defs/bool",
                      "description": "Skip adding the prefix that is either set in `presets.name_prefix` or computed when `mode: development`\nis set, to the names of UC schemas defined in the bundle."
                    },
                    "use_legacy_run_as": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to use the legacy run_as behavior."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Git": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "branch": {
                      "$ref": "#/$defs/string",
                      "description": "The Git branch name.",
                      "markdownDescription": "The Git branch name. See [git](https://docs.databricks.com/dev-tools/bundles/settings.html#git)."
                    },
                    "origin_url": {
                      "$ref": "#/$defs/string",
                      "description": "The origin URL of the repository.",
                      "markdownDescription": "The origin URL of the repository. See [git](https://docs.databricks.com/dev-tools/bundles/settings.html#git)."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Lock": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether this lock is enabled."
                    },
                    "force": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to force this lock if it is enabled."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Mode": {
              "type": "string"
            },
            "config.Presets": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "artifacts_dynamic_version": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to enable dynamic_version on all artifacts."
                    },
                    "jobs_max_concurrent_runs": {
                      "$ref": "#/$defs/int",
                      "description": "The maximum concurrent runs for a job."
                    },
                    "name_prefix": {
                      "$ref": "#/$defs/string",
                      "description": "The prefix for job runs of the bundle."
                    },
                    "pipelines_development": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether pipeline deployments should be locked in development mode."
                    },
                    "source_linked_deployment": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to link the deployment to the bundle source."
                    },
                    "tags": {
                      "$ref": "#/$defs/map/string",
                      "description": "The tags for the bundle deployment."
                    },
                    "trigger_pause_status": {
                      "$ref": "#/$defs/string",
                      "description": "A pause status to apply to all job triggers and schedules. Valid values are PAUSED or UNPAUSED."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.PyDABs": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether or not PyDABs (Private Preview) is enabled"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Python": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "mutators": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Mutators contains a list of fully qualified function paths to mutator functions.\n\nExample: [\"my_project.mutators:add_default_cluster\"]"
                    },
                    "resources": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Resources contains a list of fully qualified function paths to load resources\ndefined in Python code.\n\nExample: [\"my_project.resources:load_resources\"]"
                    },
                    "venv_path": {
                      "$ref": "#/$defs/string",
                      "description": "VEnvPath is path to the virtual environment.\n\nIf enabled, Python code will execute within this environment. If disabled,\nit defaults to using the Python interpreter available in the current shell."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Resources": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "apps": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.App",
                      "description": "The app resource defines a Databricks app.",
                      "markdownDescription": "The app resource defines a [Databricks app](https://docs.databricks.com/api/workspace/apps/create). For information about Databricks Apps, see [link](https://docs.databricks.com/dev-tools/databricks-apps/index.html)."
                    },
                    "clusters": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.Cluster",
                      "description": "The cluster definitions for the bundle, where each key is the name of a cluster.",
                      "markdownDescription": "The cluster definitions for the bundle, where each key is the name of a cluster. See [clusters](https://docs.databricks.com/dev-tools/bundles/resources.html#clusters)."
                    },
                    "dashboards": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.Dashboard",
                      "description": "The dashboard definitions for the bundle, where each key is the name of the dashboard.",
                      "markdownDescription": "The dashboard definitions for the bundle, where each key is the name of the dashboard. See [dashboards](https://docs.databricks.com/dev-tools/bundles/resources.html#dashboards)."
                    },
                    "database_catalogs": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.DatabaseCatalog"
                    },
                    "database_instances": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.DatabaseInstance"
                    },
                    "experiments": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.MlflowExperiment",
                      "description": "The experiment definitions for the bundle, where each key is the name of the experiment.",
                      "markdownDescription": "The experiment definitions for the bundle, where each key is the name of the experiment. See [experiments](https://docs.databricks.com/dev-tools/bundles/resources.html#experiments)."
                    },
                    "jobs": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.Job",
                      "description": "The job definitions for the bundle, where each key is the name of the job.",
                      "markdownDescription": "The job definitions for the bundle, where each key is the name of the job. See [jobs](https://docs.databricks.com/dev-tools/bundles/resources.html#jobs)."
                    },
                    "model_serving_endpoints": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.ModelServingEndpoint",
                      "description": "The model serving endpoint definitions for the bundle, where each key is the name of the model serving endpoint.",
                      "markdownDescription": "The model serving endpoint definitions for the bundle, where each key is the name of the model serving endpoint. See [model_serving_endpoints](https://docs.databricks.com/dev-tools/bundles/resources.html#model_serving_endpoints)."
                    },
                    "models": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.MlflowModel",
                      "description": "The model definitions for the bundle, where each key is the name of the model.",
                      "markdownDescription": "The model definitions for the bundle, where each key is the name of the model. See [models](https://docs.databricks.com/dev-tools/bundles/resources.html#models)."
                    },
                    "pipelines": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.Pipeline",
                      "description": "The pipeline definitions for the bundle, where each key is the name of the pipeline.",
                      "markdownDescription": "The pipeline definitions for the bundle, where each key is the name of the pipeline. See [pipelines](https://docs.databricks.com/dev-tools/bundles/resources.html#pipelines)."
                    },
                    "quality_monitors": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.QualityMonitor",
                      "description": "The quality monitor definitions for the bundle, where each key is the name of the quality monitor.",
                      "markdownDescription": "The quality monitor definitions for the bundle, where each key is the name of the quality monitor. See [quality_monitors](https://docs.databricks.com/dev-tools/bundles/resources.html#quality_monitors)."
                    },
                    "registered_models": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.RegisteredModel",
                      "description": "The registered model definitions for the bundle, where each key is the name of the Unity Catalog registered model.",
                      "markdownDescription": "The registered model definitions for the bundle, where each key is the name of the Unity Catalog registered model. See [registered_models](https://docs.databricks.com/dev-tools/bundles/resources.html#registered_models)"
                    },
                    "schemas": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.Schema",
                      "description": "The schema definitions for the bundle, where each key is the name of the schema.",
                      "markdownDescription": "The schema definitions for the bundle, where each key is the name of the schema. See [schemas](https://docs.databricks.com/dev-tools/bundles/resources.html#schemas)."
                    },
                    "secret_scopes": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.SecretScope",
                      "description": "The secret scope definitions for the bundle, where each key is the name of the secret scope.",
                      "markdownDescription": "The secret scope definitions for the bundle, where each key is the name of the secret scope. See [secret_scopes](https://docs.databricks.com/dev-tools/bundles/resources.html#secret_scopes)."
                    },
                    "sql_warehouses": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.SqlWarehouse",
                      "description": "The SQL warehouse definitions for the bundle, where each key is the name of the warehouse.",
                      "markdownDescription": "The SQL warehouse definitions for the bundle, where each key is the name of the warehouse. See [sql_warehouses](https://docs.databricks.com/dev-tools/bundles/resources.html#sql_warehouses)."
                    },
                    "synced_database_tables": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.SyncedDatabaseTable"
                    },
                    "volumes": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/resources.Volume",
                      "description": "The volume definitions for the bundle, where each key is the name of the volume.",
                      "markdownDescription": "The volume definitions for the bundle, where each key is the name of the volume. See [volumes](https://docs.databricks.com/dev-tools/bundles/resources.html#volumes)."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Script": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "content": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["content"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Sync": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "exclude": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of files or folders to exclude from the bundle."
                    },
                    "include": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of files or folders to include in the bundle."
                    },
                    "paths": {
                      "$ref": "#/$defs/slice/string",
                      "description": "The local folder paths, which can be outside the bundle root, to synchronize to the workspace when the bundle is deployed."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Target": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "artifacts": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config.Artifact",
                      "description": "The artifacts to include in the target deployment."
                    },
                    "bundle": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Bundle",
                      "description": "The bundle attributes when deploying to this target."
                    },
                    "cluster_id": {
                      "$ref": "#/$defs/string",
                      "description": "The ID of the cluster to use for this target."
                    },
                    "compute_id": {
                      "$ref": "#/$defs/string",
                      "description": "Deprecated. The ID of the compute to use for this target.",
                      "deprecationMessage": "Deprecated: please use cluster_id instead",
                      "deprecated": true
                    },
                    "default": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether this target is the default target."
                    },
                    "git": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Git",
                      "description": "The Git version control settings for the target."
                    },
                    "mode": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Mode",
                      "description": "The deployment mode for the target.",
                      "markdownDescription": "The deployment mode for the target. Valid values are `development` or `production`. See [link](https://docs.databricks.com/dev-tools/bundles/deployment-modes.html)."
                    },
                    "permissions": {
                      "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.Permission",
                      "description": "The permissions for deploying and running the bundle in the target."
                    },
                    "presets": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Presets",
                      "description": "The deployment presets for the target."
                    },
                    "resources": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Resources",
                      "description": "The resource definitions for the target."
                    },
                    "run_as": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobRunAs",
                      "description": "The identity to use to run the bundle.",
                      "markdownDescription": "The identity to use to run the bundle, see [link](https://docs.databricks.com/dev-tools/bundles/run-as.html)."
                    },
                    "sync": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Sync",
                      "description": "The local paths to sync to the target workspace when a bundle is run or deployed."
                    },
                    "variables": {
                      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/variable.TargetVariable",
                      "description": "The custom variable definitions for the target."
                    },
                    "workspace": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Workspace",
                      "description": "The Databricks workspace for the target."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "config.Workspace": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "artifact_path": {
                      "$ref": "#/$defs/string",
                      "description": "The artifact path to use within the workspace for both deployments and workflow runs"
                    },
                    "auth_type": {
                      "$ref": "#/$defs/string",
                      "description": "The authentication type."
                    },
                    "azure_client_id": {
                      "$ref": "#/$defs/string",
                      "description": "The Azure client ID"
                    },
                    "azure_environment": {
                      "$ref": "#/$defs/string",
                      "description": "The Azure environment"
                    },
                    "azure_login_app_id": {
                      "$ref": "#/$defs/string",
                      "description": "The Azure login app ID"
                    },
                    "azure_tenant_id": {
                      "$ref": "#/$defs/string",
                      "description": "The Azure tenant ID"
                    },
                    "azure_use_msi": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to use MSI for Azure"
                    },
                    "azure_workspace_resource_id": {
                      "$ref": "#/$defs/string",
                      "description": "The Azure workspace resource ID"
                    },
                    "client_id": {
                      "$ref": "#/$defs/string",
                      "description": "The client ID for the workspace"
                    },
                    "file_path": {
                      "$ref": "#/$defs/string",
                      "description": "The file path to use within the workspace for both deployments and workflow runs"
                    },
                    "google_service_account": {
                      "$ref": "#/$defs/string",
                      "description": "The Google service account name"
                    },
                    "host": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks workspace host URL"
                    },
                    "profile": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks workspace profile name"
                    },
                    "resource_path": {
                      "$ref": "#/$defs/string",
                      "description": "The workspace resource path"
                    },
                    "root_path": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks workspace root path"
                    },
                    "state_path": {
                      "$ref": "#/$defs/string",
                      "description": "The workspace state path"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            }
          },
          "libs": {
            "exec.ExecutableType": {
              "type": "string"
            }
          }
        },
        "databricks-sdk-go": {
          "service": {
            "apps.AppDeployment": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "create_time": {
                      "$ref": "#/$defs/string"
                    },
                    "creator": {
                      "$ref": "#/$defs/string"
                    },
                    "deployment_artifacts": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppDeploymentArtifacts"
                    },
                    "deployment_id": {
                      "$ref": "#/$defs/string"
                    },
                    "mode": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppDeploymentMode"
                    },
                    "source_code_path": {
                      "$ref": "#/$defs/string"
                    },
                    "status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppDeploymentStatus"
                    },
                    "update_time": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppDeploymentArtifacts": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "source_code_path": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppDeploymentMode": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["SNAPSHOT", "AUTO_SYNC"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppDeploymentState": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["SUCCEEDED", "FAILED", "IN_PROGRESS", "CANCELLED"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppDeploymentStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "message": {
                      "$ref": "#/$defs/string"
                    },
                    "state": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppDeploymentState"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResource": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "database": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceDatabase"
                    },
                    "description": {
                      "$ref": "#/$defs/string",
                      "description": "Description of the App Resource."
                    },
                    "job": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceJob"
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the App Resource."
                    },
                    "secret": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceSecret"
                    },
                    "serving_endpoint": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceServingEndpoint"
                    },
                    "sql_warehouse": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceSqlWarehouse"
                    },
                    "uc_securable": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceUcSecurable"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["name"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceDatabase": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "database_name": {
                      "$ref": "#/$defs/string"
                    },
                    "instance_name": {
                      "$ref": "#/$defs/string"
                    },
                    "permission": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceDatabaseDatabasePermission"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["database_name", "instance_name", "permission"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceDatabaseDatabasePermission": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["CAN_CONNECT_AND_CREATE"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceJob": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/$defs/string"
                    },
                    "permission": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceJobJobPermission"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["id", "permission"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceJobJobPermission": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "CAN_MANAGE",
                    "IS_OWNER",
                    "CAN_MANAGE_RUN",
                    "CAN_VIEW"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceSecret": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "key": {
                      "$ref": "#/$defs/string"
                    },
                    "permission": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceSecretSecretPermission"
                    },
                    "scope": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["key", "permission", "scope"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceSecretSecretPermission": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Permission to grant on the secret scope. Supported permissions are: \"READ\", \"WRITE\", \"MANAGE\".",
                  "enum": ["READ", "WRITE", "MANAGE"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceServingEndpoint": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "$ref": "#/$defs/string"
                    },
                    "permission": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceServingEndpointServingEndpointPermission"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["name", "permission"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceServingEndpointServingEndpointPermission": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["CAN_MANAGE", "CAN_QUERY", "CAN_VIEW"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceSqlWarehouse": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/$defs/string"
                    },
                    "permission": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceSqlWarehouseSqlWarehousePermission"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["id", "permission"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceSqlWarehouseSqlWarehousePermission": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["CAN_MANAGE", "CAN_USE", "IS_OWNER"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceUcSecurable": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "permission": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceUcSecurableUcSecurablePermission"
                    },
                    "securable_full_name": {
                      "$ref": "#/$defs/string"
                    },
                    "securable_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResourceUcSecurableUcSecurableType"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "permission",
                    "securable_full_name",
                    "securable_type"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceUcSecurableUcSecurablePermission": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["READ_VOLUME", "WRITE_VOLUME"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.AppResourceUcSecurableUcSecurableType": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["VOLUME"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.ApplicationState": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["DEPLOYING", "RUNNING", "CRASHED", "UNAVAILABLE"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.ApplicationStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "message": {
                      "$ref": "#/$defs/string"
                    },
                    "state": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.ApplicationState"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.ComputeState": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ERROR",
                    "DELETING",
                    "STARTING",
                    "STOPPING",
                    "UPDATING",
                    "STOPPED",
                    "ACTIVE"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "apps.ComputeStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "message": {
                      "$ref": "#/$defs/string"
                    },
                    "state": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.ComputeState",
                      "description": "State of the app compute."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorCronSchedule": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "pause_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorCronSchedulePauseStatus",
                      "description": "Read only field that indicates whether a schedule is paused or not."
                    },
                    "quartz_cron_expression": {
                      "$ref": "#/$defs/string",
                      "description": "The expression that determines when to run the monitor. See [examples](https://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html)."
                    },
                    "timezone_id": {
                      "$ref": "#/$defs/string",
                      "description": "The timezone id (e.g., ``PST``) in which to evaluate the quartz expression."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["quartz_cron_expression", "timezone_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorCronSchedulePauseStatus": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Source link: https://src.dev.databricks.com/databricks/universe/-/blob/elastic-spark-common/api/messages/schedule.proto\nMonitoring workflow schedule pause status.",
                  "enum": ["UNSPECIFIED", "UNPAUSED", "PAUSED"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorDataClassificationConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Data classification related configuration.",
                  "properties": {
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to enable data classification."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorDestination": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "email_addresses": {
                      "$ref": "#/$defs/slice/string",
                      "description": "The list of email addresses to send the notification to. A maximum of 5 email addresses is supported."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorInferenceLog": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "granularities": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Granularities for aggregating data into time windows based on their timestamp. Valid values are 5 minutes, 30 minutes, 1 hour, 1 day, n weeks, 1 month, or 1 year."
                    },
                    "label_col": {
                      "$ref": "#/$defs/string",
                      "description": "Column for the label."
                    },
                    "model_id_col": {
                      "$ref": "#/$defs/string",
                      "description": "Column for the model identifier."
                    },
                    "prediction_col": {
                      "$ref": "#/$defs/string",
                      "description": "Column for the prediction."
                    },
                    "prediction_proba_col": {
                      "$ref": "#/$defs/string",
                      "description": "Column for prediction probabilities"
                    },
                    "problem_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorInferenceLogProblemType",
                      "description": "Problem type the model aims to solve."
                    },
                    "timestamp_col": {
                      "$ref": "#/$defs/string",
                      "description": "Column for the timestamp."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "granularities",
                    "model_id_col",
                    "prediction_col",
                    "problem_type",
                    "timestamp_col"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorInferenceLogProblemType": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "PROBLEM_TYPE_CLASSIFICATION",
                    "PROBLEM_TYPE_REGRESSION"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorMetric": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Custom metric definition.",
                  "properties": {
                    "definition": {
                      "$ref": "#/$defs/string",
                      "description": "Jinja template for a SQL expression that specifies how to compute the metric. See [create metric definition](https://docs.databricks.com/en/lakehouse-monitoring/custom-metrics.html#create-definition)."
                    },
                    "input_columns": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of column names in the input table the metric should be computed for.\nCan use ``\":table\"`` to indicate that the metric needs information from multiple columns."
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the metric in the output tables."
                    },
                    "output_data_type": {
                      "$ref": "#/$defs/string",
                      "description": "The output type of the custom metric."
                    },
                    "type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorMetricType",
                      "description": "Can only be one of ``\"CUSTOM_METRIC_TYPE_AGGREGATE\"``, ``\"CUSTOM_METRIC_TYPE_DERIVED\"``, or ``\"CUSTOM_METRIC_TYPE_DRIFT\"``.\nThe ``\"CUSTOM_METRIC_TYPE_AGGREGATE\"`` and ``\"CUSTOM_METRIC_TYPE_DERIVED\"`` metrics\nare computed on a single table, whereas the ``\"CUSTOM_METRIC_TYPE_DRIFT\"`` compare metrics across\nbaseline and input table, or across the two consecutive time windows.\n- CUSTOM_METRIC_TYPE_AGGREGATE: only depend on the existing columns in your table\n- CUSTOM_METRIC_TYPE_DERIVED: depend on previously computed aggregate metrics\n- CUSTOM_METRIC_TYPE_DRIFT:  depend on previously computed aggregate or derived metrics"
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "definition",
                    "input_columns",
                    "name",
                    "output_data_type",
                    "type"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorMetricType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Can only be one of ``\\\"CUSTOM_METRIC_TYPE_AGGREGATE\\\"``, ``\\\"CUSTOM_METRIC_TYPE_DERIVED\\\"``, or ``\\\"CUSTOM_METRIC_TYPE_DRIFT\\\"``.\nThe ``\\\"CUSTOM_METRIC_TYPE_AGGREGATE\\\"`` and ``\\\"CUSTOM_METRIC_TYPE_DERIVED\\\"`` metrics\nare computed on a single table, whereas the ``\\\"CUSTOM_METRIC_TYPE_DRIFT\\\"`` compare metrics across\nbaseline and input table, or across the two consecutive time windows.\n- CUSTOM_METRIC_TYPE_AGGREGATE: only depend on the existing columns in your table\n- CUSTOM_METRIC_TYPE_DERIVED: depend on previously computed aggregate metrics\n- CUSTOM_METRIC_TYPE_DRIFT:  depend on previously computed aggregate or derived metrics",
                  "enum": [
                    "CUSTOM_METRIC_TYPE_AGGREGATE",
                    "CUSTOM_METRIC_TYPE_DERIVED",
                    "CUSTOM_METRIC_TYPE_DRIFT"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorNotifications": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "on_failure": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorDestination",
                      "description": "Destinations to send notifications on failure/timeout."
                    },
                    "on_new_classification_tag_detected": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorDestination",
                      "description": "Destinations to send notifications on new classification tag detected.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorSnapshot": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Snapshot analysis configuration",
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.MonitorTimeSeries": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Time series analysis configuration.",
                  "properties": {
                    "granularities": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Granularities for aggregating data into time windows based on their timestamp. Valid values are 5 minutes, 30 minutes, 1 hour, 1 day, n weeks, 1 month, or 1 year."
                    },
                    "timestamp_col": {
                      "$ref": "#/$defs/string",
                      "description": "Column for the timestamp."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["granularities", "timestamp_col"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "catalog.VolumeType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "The type of the volume. An external volume is located in the specified external location. A managed volume is located in the default location which is specified by the parent schema, or the parent catalog, or the Metastore. [Learn more](https://docs.databricks.com/aws/en/volumes/managed-vs-external)",
                  "enum": ["EXTERNAL", "MANAGED"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.Adlsgen2Info": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "A storage location in Adls Gen2",
                  "properties": {
                    "destination": {
                      "$ref": "#/$defs/string",
                      "description": "abfss destination, e.g. `abfss://\u003ccontainer-name\u003e@\u003cstorage-account-name\u003e.dfs.core.windows.net/\u003cdirectory-name\u003e`."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["destination"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.AutoScale": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "max_workers": {
                      "$ref": "#/$defs/int",
                      "description": "The maximum number of workers to which the cluster can scale up when overloaded.\nNote that `max_workers` must be strictly greater than `min_workers`."
                    },
                    "min_workers": {
                      "$ref": "#/$defs/int",
                      "description": "The minimum number of workers to which the cluster can scale down when underutilized.\nIt is also the initial number of workers the cluster will have after creation."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.AwsAttributes": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Attributes set during cluster creation which are related to Amazon Web Services.",
                  "properties": {
                    "availability": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AwsAvailability"
                    },
                    "ebs_volume_count": {
                      "$ref": "#/$defs/int",
                      "description": "The number of volumes launched for each instance. Users can choose up to 10 volumes.\nThis feature is only enabled for supported node types. Legacy node types cannot specify\ncustom EBS volumes.\nFor node types with no instance store, at least one EBS volume needs to be specified;\notherwise, cluster creation will fail.\n\nThese EBS volumes will be mounted at `/ebs0`, `/ebs1`, and etc.\nInstance store volumes will be mounted at `/local_disk0`, `/local_disk1`, and etc.\n\nIf EBS volumes are attached, Databricks will configure Spark to use only the EBS volumes for\nscratch storage because heterogenously sized scratch devices can lead to inefficient disk\nutilization. If no EBS volumes are attached, Databricks will configure Spark to use instance\nstore volumes.\n\nPlease note that if EBS volumes are specified, then the Spark configuration `spark.local.dir`\nwill be overridden."
                    },
                    "ebs_volume_iops": {
                      "$ref": "#/$defs/int",
                      "description": "If using gp3 volumes, what IOPS to use for the disk. If this is not set, the maximum performance of a gp2 volume with the same volume size will be used."
                    },
                    "ebs_volume_size": {
                      "$ref": "#/$defs/int",
                      "description": "The size of each EBS volume (in GiB) launched for each instance. For general purpose\nSSD, this value must be within the range 100 - 4096. For throughput optimized HDD,\nthis value must be within the range 500 - 4096."
                    },
                    "ebs_volume_throughput": {
                      "$ref": "#/$defs/int",
                      "description": "If using gp3 volumes, what throughput to use for the disk. If this is not set, the maximum performance of a gp2 volume with the same volume size will be used."
                    },
                    "ebs_volume_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.EbsVolumeType"
                    },
                    "first_on_demand": {
                      "$ref": "#/$defs/int",
                      "description": "The first `first_on_demand` nodes of the cluster will be placed on on-demand instances.\nIf this value is greater than 0, the cluster driver node in particular will be placed on an\non-demand instance. If this value is greater than or equal to the current cluster size, all\nnodes will be placed on on-demand instances. If this value is less than the current cluster\nsize, `first_on_demand` nodes will be placed on on-demand instances and the remainder will\nbe placed on `availability` instances. Note that this value does not affect\ncluster size and cannot currently be mutated over the lifetime of a cluster."
                    },
                    "instance_profile_arn": {
                      "$ref": "#/$defs/string",
                      "description": "Nodes for this cluster will only be placed on AWS instances with this instance profile. If\nommitted, nodes will be placed on instances without an IAM instance profile. The instance\nprofile must have previously been added to the Databricks environment by an account\nadministrator.\n\nThis feature may only be available to certain customer plans."
                    },
                    "spot_bid_price_percent": {
                      "$ref": "#/$defs/int",
                      "description": "The bid price for AWS spot instances, as a percentage of the corresponding instance type's\non-demand price.\nFor example, if this field is set to 50, and the cluster needs a new `r3.xlarge` spot\ninstance, then the bid price is half of the price of\non-demand `r3.xlarge` instances. Similarly, if this field is set to 200, the bid price is twice\nthe price of on-demand `r3.xlarge` instances. If not specified, the default value is 100.\nWhen spot instances are requested for this cluster, only spot instances whose bid price\npercentage matches this field will be considered.\nNote that, for safety, we enforce this field to be no more than 10000."
                    },
                    "zone_id": {
                      "$ref": "#/$defs/string",
                      "description": "Identifier for the availability zone/datacenter in which the cluster resides.\nThis string will be of a form like \"us-west-2a\". The provided availability\nzone must be in the same region as the Databricks deployment. For example, \"us-west-2a\"\nis not a valid zone id if the Databricks deployment resides in the \"us-east-1\" region.\nThis is an optional field at cluster creation, and if not specified, a default zone will be used.\nIf the zone specified is \"auto\", will try to place cluster in a zone with high availability,\nand will retry placement in a different AZ if there is not enough capacity.\n\nThe list of available zones as well as the default value can be found by using the\n`List Zones` method."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.AwsAvailability": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Availability type used for all subsequent nodes past the `first_on_demand` ones.\n\nNote: If `first_on_demand` is zero, this availability type will be used for the entire cluster.",
                  "enum": ["SPOT", "ON_DEMAND", "SPOT_WITH_FALLBACK"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.AzureAttributes": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Attributes set during cluster creation which are related to Microsoft Azure.",
                  "properties": {
                    "availability": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AzureAvailability"
                    },
                    "first_on_demand": {
                      "$ref": "#/$defs/int",
                      "description": "The first `first_on_demand` nodes of the cluster will be placed on on-demand instances.\nThis value should be greater than 0, to make sure the cluster driver node is placed on an\non-demand instance. If this value is greater than or equal to the current cluster size, all\nnodes will be placed on on-demand instances. If this value is less than the current cluster\nsize, `first_on_demand` nodes will be placed on on-demand instances and the remainder will\nbe placed on `availability` instances. Note that this value does not affect\ncluster size and cannot currently be mutated over the lifetime of a cluster."
                    },
                    "log_analytics_info": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.LogAnalyticsInfo",
                      "description": "Defines values necessary to configure and run Azure Log Analytics agent"
                    },
                    "spot_bid_max_price": {
                      "$ref": "#/$defs/float64",
                      "description": "The max bid price to be used for Azure spot instances.\nThe Max price for the bid cannot be higher than the on-demand price of the instance.\nIf not specified, the default value is -1, which specifies that the instance cannot be evicted\non the basis of price, and only on the basis of availability. Further, the value should \u003e 0 or -1."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.AzureAvailability": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Availability type used for all subsequent nodes past the `first_on_demand` ones.\nNote: If `first_on_demand` is zero, this availability type will be used for the entire cluster.",
                  "enum": [
                    "SPOT_AZURE",
                    "ON_DEMAND_AZURE",
                    "SPOT_WITH_FALLBACK_AZURE"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.ClientsTypes": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "jobs": {
                      "$ref": "#/$defs/bool",
                      "description": "With jobs set, the cluster can be used for jobs"
                    },
                    "notebooks": {
                      "$ref": "#/$defs/bool",
                      "description": "With notebooks set, this cluster can be used for notebooks"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.ClusterLogConf": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Cluster log delivery config",
                  "properties": {
                    "dbfs": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.DbfsStorageInfo",
                      "description": "destination needs to be provided. e.g.\n`{ \"dbfs\" : { \"destination\" : \"dbfs:/home/cluster_log\" } }`"
                    },
                    "s3": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.S3StorageInfo",
                      "description": "destination and either the region or endpoint need to be provided. e.g.\n`{ \"s3\": { \"destination\" : \"s3://cluster_log_bucket/prefix\", \"region\" : \"us-west-2\" } }`\nCluster iam role is used to access s3, please make sure the cluster iam role in\n`instance_profile_arn` has permission to write data to the s3 destination."
                    },
                    "volumes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.VolumesStorageInfo",
                      "description": "destination needs to be provided, e.g.\n`{ \"volumes\": { \"destination\": \"/Volumes/catalog/schema/volume/cluster_log\" } }`"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.ClusterSpec": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Contains a snapshot of the latest user specified settings that were used to create/edit the cluster.",
                  "properties": {
                    "apply_policy_default_values": {
                      "$ref": "#/$defs/bool",
                      "description": "When set to true, fixed and default values from the policy will be used for fields that are omitted. When set to false, only fixed values from the policy will be applied."
                    },
                    "autoscale": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AutoScale",
                      "description": "Parameters needed in order to automatically scale clusters up and down based on load.\nNote: autoscaling works best with DB runtime versions 3.0 or later."
                    },
                    "autotermination_minutes": {
                      "$ref": "#/$defs/int",
                      "description": "Automatically terminates the cluster after it is inactive for this time in minutes. If not set,\nthis cluster will not be automatically terminated. If specified, the threshold must be between\n10 and 10000 minutes.\nUsers can also set this value to 0 to explicitly disable automatic termination."
                    },
                    "aws_attributes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AwsAttributes",
                      "description": "Attributes related to clusters running on Amazon Web Services.\nIf not specified at cluster creation, a set of default values will be used."
                    },
                    "azure_attributes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AzureAttributes",
                      "description": "Attributes related to clusters running on Microsoft Azure.\nIf not specified at cluster creation, a set of default values will be used."
                    },
                    "cluster_log_conf": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.ClusterLogConf",
                      "description": "The configuration for delivering spark logs to a long-term storage destination.\nThree kinds of destinations (DBFS, S3 and Unity Catalog volumes) are supported. Only one destination can be specified\nfor one cluster. If the conf is given, the logs will be delivered to the destination every\n`5 mins`. The destination of driver logs is `$destination/$clusterId/driver`, while\nthe destination of executor logs is `$destination/$clusterId/executor`."
                    },
                    "cluster_name": {
                      "$ref": "#/$defs/string",
                      "description": "Cluster name requested by the user. This doesn't have to be unique.\nIf not specified at creation, the cluster name will be an empty string.\nFor job clusters, the cluster name is automatically set based on the job and job run IDs."
                    },
                    "custom_tags": {
                      "$ref": "#/$defs/map/string",
                      "description": "Additional tags for cluster resources. Databricks will tag all cluster resources (e.g., AWS\ninstances and EBS volumes) with these tags in addition to `default_tags`. Notes:\n\n- Currently, Databricks allows at most 45 custom tags\n\n- Clusters can only reuse cloud resources if the resources' tags are a subset of the cluster tags"
                    },
                    "data_security_mode": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.DataSecurityMode"
                    },
                    "docker_image": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.DockerImage"
                    },
                    "driver_instance_pool_id": {
                      "$ref": "#/$defs/string",
                      "description": "The optional ID of the instance pool for the driver of the cluster belongs.\nThe pool cluster uses the instance pool with id (instance_pool_id) if the driver pool is not\nassigned."
                    },
                    "driver_node_type_id": {
                      "$ref": "#/$defs/string",
                      "description": "The node type of the Spark driver.\nNote that this field is optional; if unset, the driver node type will be set as the same value\nas `node_type_id` defined above.\n\nThis field, along with node_type_id, should not be set if virtual_cluster_size is set.\nIf both driver_node_type_id, node_type_id, and virtual_cluster_size are specified, driver_node_type_id and node_type_id take precedence."
                    },
                    "enable_elastic_disk": {
                      "$ref": "#/$defs/bool",
                      "description": "Autoscaling Local Storage: when enabled, this cluster will dynamically acquire additional disk\nspace when its Spark workers are running low on disk space. This feature requires specific AWS\npermissions to function correctly - refer to the User Guide for more details."
                    },
                    "enable_local_disk_encryption": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to enable LUKS on cluster VMs' local disks"
                    },
                    "gcp_attributes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.GcpAttributes",
                      "description": "Attributes related to clusters running on Google Cloud Platform.\nIf not specified at cluster creation, a set of default values will be used."
                    },
                    "init_scripts": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/compute.InitScriptInfo",
                      "description": "The configuration for storing init scripts. Any number of destinations can be specified.\nThe scripts are executed sequentially in the order provided.\nIf `cluster_log_conf` is specified, init script logs are sent to `\u003cdestination\u003e/\u003ccluster-ID\u003e/init_scripts`."
                    },
                    "instance_pool_id": {
                      "$ref": "#/$defs/string",
                      "description": "The optional ID of the instance pool to which the cluster belongs."
                    },
                    "is_single_node": {
                      "$ref": "#/$defs/bool",
                      "description": "This field can only be used when `kind = CLASSIC_PREVIEW`.\n\nWhen set to true, Databricks will automatically set single node related `custom_tags`, `spark_conf`, and `num_workers`"
                    },
                    "kind": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.Kind"
                    },
                    "node_type_id": {
                      "$ref": "#/$defs/string",
                      "description": "This field encodes, through a single value, the resources available to each of\nthe Spark nodes in this cluster. For example, the Spark nodes can be provisioned\nand optimized for memory or compute intensive workloads. A list of available node\ntypes can be retrieved by using the :method:clusters/listNodeTypes API call."
                    },
                    "num_workers": {
                      "$ref": "#/$defs/int",
                      "description": "Number of worker nodes that this cluster should have. A cluster has one Spark Driver\nand `num_workers` Executors for a total of `num_workers` + 1 Spark nodes.\n\nNote: When reading the properties of a cluster, this field reflects the desired number\nof workers rather than the actual current number of workers. For instance, if a cluster\nis resized from 5 to 10 workers, this field will immediately be updated to reflect\nthe target size of 10 workers, whereas the workers listed in `spark_info` will gradually\nincrease from 5 to 10 as the new nodes are provisioned."
                    },
                    "policy_id": {
                      "$ref": "#/$defs/string",
                      "description": "The ID of the cluster policy used to create the cluster if applicable."
                    },
                    "remote_disk_throughput": {
                      "$ref": "#/$defs/int",
                      "description": "If set, what the configurable throughput (in Mb/s) for the remote disk is. Currently only supported for GCP HYPERDISK_BALANCED disks."
                    },
                    "runtime_engine": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.RuntimeEngine"
                    },
                    "single_user_name": {
                      "$ref": "#/$defs/string",
                      "description": "Single user name if data_security_mode is `SINGLE_USER`"
                    },
                    "spark_conf": {
                      "$ref": "#/$defs/map/string",
                      "description": "An object containing a set of optional, user-specified Spark configuration key-value pairs.\nUsers can also pass in a string of extra JVM options to the driver and the executors via\n`spark.driver.extraJavaOptions` and `spark.executor.extraJavaOptions` respectively."
                    },
                    "spark_env_vars": {
                      "$ref": "#/$defs/map/string",
                      "description": "An object containing a set of optional, user-specified environment variable key-value pairs.\nPlease note that key-value pair of the form (X,Y) will be exported as is (i.e.,\n`export X='Y'`) while launching the driver and workers.\n\nIn order to specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we recommend appending\nthem to `$SPARK_DAEMON_JAVA_OPTS` as shown in the example below. This ensures that all\ndefault databricks managed environmental variables are included as well.\n\nExample Spark environment variables:\n`{\"SPARK_WORKER_MEMORY\": \"28000m\", \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or\n`{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS -Dspark.shuffle.service.enabled=true\"}`"
                    },
                    "spark_version": {
                      "$ref": "#/$defs/string",
                      "description": "The Spark version of the cluster, e.g. `3.3.x-scala2.11`.\nA list of available Spark versions can be retrieved by using\nthe :method:clusters/sparkVersions API call."
                    },
                    "ssh_public_keys": {
                      "$ref": "#/$defs/slice/string",
                      "description": "SSH public key contents that will be added to each Spark node in this cluster. The\ncorresponding private keys can be used to login with the user name `ubuntu` on port `2200`.\nUp to 10 keys can be specified."
                    },
                    "total_initial_remote_disk_size": {
                      "$ref": "#/$defs/int",
                      "description": "If set, what the total initial volume size (in GB) of the remote disks should be. Currently only supported for GCP HYPERDISK_BALANCED disks."
                    },
                    "use_ml_runtime": {
                      "$ref": "#/$defs/bool",
                      "description": "This field can only be used when `kind = CLASSIC_PREVIEW`.\n\n`effective_spark_version` is determined by `spark_version` (DBR release), this field `use_ml_runtime`, and whether `node_type_id` is gpu node or not."
                    },
                    "workload_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.WorkloadType"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.DataSecurityMode": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Data security mode decides what data governance model to use when accessing data\nfrom a cluster.\n\nThe following modes can only be used when `kind = CLASSIC_PREVIEW`.\n* `DATA_SECURITY_MODE_AUTO`: Databricks will choose the most appropriate access mode depending on your compute configuration.\n* `DATA_SECURITY_MODE_STANDARD`: Alias for `USER_ISOLATION`.\n* `DATA_SECURITY_MODE_DEDICATED`: Alias for `SINGLE_USER`.\n\nThe following modes can be used regardless of `kind`.\n* `NONE`: No security isolation for multiple users sharing the cluster. Data governance features are not available in this mode.\n* `SINGLE_USER`: A secure cluster that can only be exclusively used by a single user specified in `single_user_name`. Most programming languages, cluster features and data governance features are available in this mode.\n* `USER_ISOLATION`: A secure cluster that can be shared by multiple users. Cluster users are fully isolated so that they cannot see each other's data and credentials. Most data governance features are supported in this mode. But programming languages and cluster features might be limited.\n\nThe following modes are deprecated starting with Databricks Runtime 15.0 and\nwill be removed for future Databricks Runtime versions:\n\n* `LEGACY_TABLE_ACL`: This mode is for users migrating from legacy Table ACL clusters.\n* `LEGACY_PASSTHROUGH`: This mode is for users migrating from legacy Passthrough on high concurrency clusters.\n* `LEGACY_SINGLE_USER`: This mode is for users migrating from legacy Passthrough on standard clusters.\n* `LEGACY_SINGLE_USER_STANDARD`: This mode provides a way that doesn’t have UC nor passthrough enabled.",
                  "enum": [
                    "NONE",
                    "SINGLE_USER",
                    "USER_ISOLATION",
                    "LEGACY_TABLE_ACL",
                    "LEGACY_PASSTHROUGH",
                    "LEGACY_SINGLE_USER",
                    "LEGACY_SINGLE_USER_STANDARD",
                    "DATA_SECURITY_MODE_STANDARD",
                    "DATA_SECURITY_MODE_DEDICATED",
                    "DATA_SECURITY_MODE_AUTO"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.DbfsStorageInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "A storage location in DBFS",
                  "properties": {
                    "destination": {
                      "$ref": "#/$defs/string",
                      "description": "dbfs destination, e.g. `dbfs:/my/path`"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["destination"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.DockerBasicAuth": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "password": {
                      "$ref": "#/$defs/string",
                      "description": "Password of the user"
                    },
                    "username": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the user"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.DockerImage": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "basic_auth": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.DockerBasicAuth"
                    },
                    "url": {
                      "$ref": "#/$defs/string",
                      "description": "URL of the docker image."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.EbsVolumeType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "All EBS volume types that Databricks supports.\nSee https://aws.amazon.com/ebs/details/ for details.",
                  "enum": ["GENERAL_PURPOSE_SSD", "THROUGHPUT_OPTIMIZED_HDD"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.Environment": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "The environment entity used to preserve serverless environment side panel, jobs' environment for non-notebook task, and DLT's environment for classic and serverless pipelines.\nIn this minimal environment spec, only pip dependencies are supported.",
                  "properties": {
                    "client": {
                      "$ref": "#/$defs/string",
                      "description": "Use `environment_version` instead.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "dependencies": {
                      "$ref": "#/$defs/slice/string",
                      "description": "List of pip dependencies, as supported by the version of pip in this environment."
                    },
                    "environment_version": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Environment version used by the environment.\nEach version comes with a specific Python version and a set of Python packages.\nThe version is a string, consisting of an integer."
                    },
                    "jar_dependencies": {
                      "$ref": "#/$defs/slice/string",
                      "description": "List of jar dependencies, should be string representing volume paths. For example: `/Volumes/path/to/test.jar`.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.GcpAttributes": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Attributes set during cluster creation which are related to GCP.",
                  "properties": {
                    "availability": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.GcpAvailability"
                    },
                    "boot_disk_size": {
                      "$ref": "#/$defs/int",
                      "description": "Boot disk size in GB"
                    },
                    "first_on_demand": {
                      "$ref": "#/$defs/int",
                      "description": "The first `first_on_demand` nodes of the cluster will be placed on on-demand instances.\nThis value should be greater than 0, to make sure the cluster driver node is placed on an\non-demand instance. If this value is greater than or equal to the current cluster size, all\nnodes will be placed on on-demand instances. If this value is less than the current cluster\nsize, `first_on_demand` nodes will be placed on on-demand instances and the remainder will\nbe placed on `availability` instances. Note that this value does not affect\ncluster size and cannot currently be mutated over the lifetime of a cluster."
                    },
                    "google_service_account": {
                      "$ref": "#/$defs/string",
                      "description": "If provided, the cluster will impersonate the google service account when accessing\ngcloud services (like GCS). The google service account\nmust have previously been added to the Databricks environment by an account\nadministrator."
                    },
                    "local_ssd_count": {
                      "$ref": "#/$defs/int",
                      "description": "If provided, each node (workers and driver) in the cluster will have this number of local SSDs attached.\nEach local SSD is 375GB in size.\nRefer to [GCP documentation](https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds)\nfor the supported number of local SSDs for each instance type."
                    },
                    "use_preemptible_executors": {
                      "$ref": "#/$defs/bool",
                      "description": "This field determines whether the spark executors will be scheduled to run on preemptible\nVMs (when set to true) versus standard compute engine VMs (when set to false; default).\nNote: Soon to be deprecated, use the 'availability' field instead.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "zone_id": {
                      "$ref": "#/$defs/string",
                      "description": "Identifier for the availability zone in which the cluster resides.\nThis can be one of the following:\n- \"HA\" =\u003e High availability, spread nodes across availability zones for a Databricks deployment region [default].\n- \"AUTO\" =\u003e Databricks picks an availability zone to schedule the cluster on.\n- A GCP availability zone =\u003e Pick One of the available zones for (machine type + region) from\nhttps://cloud.google.com/compute/docs/regions-zones."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.GcpAvailability": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "This field determines whether the instance pool will contain preemptible\nVMs, on-demand VMs, or preemptible VMs with a fallback to on-demand VMs if the former is unavailable.",
                  "enum": [
                    "PREEMPTIBLE_GCP",
                    "ON_DEMAND_GCP",
                    "PREEMPTIBLE_WITH_FALLBACK_GCP"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.GcsStorageInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "A storage location in Google Cloud Platform's GCS",
                  "properties": {
                    "destination": {
                      "$ref": "#/$defs/string",
                      "description": "GCS destination/URI, e.g. `gs://my-bucket/some-prefix`"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["destination"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.InitScriptInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Config for an individual init script\nNext ID: 11",
                  "properties": {
                    "abfss": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.Adlsgen2Info",
                      "description": "Contains the Azure Data Lake Storage destination path"
                    },
                    "dbfs": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.DbfsStorageInfo",
                      "description": "destination needs to be provided. e.g.\n`{ \"dbfs\": { \"destination\" : \"dbfs:/home/cluster_log\" } }`",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "file": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.LocalFileInfo",
                      "description": "destination needs to be provided, e.g.\n`{ \"file\": { \"destination\": \"file:/my/local/file.sh\" } }`"
                    },
                    "gcs": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.GcsStorageInfo",
                      "description": "destination needs to be provided, e.g.\n`{ \"gcs\": { \"destination\": \"gs://my-bucket/file.sh\" } }`"
                    },
                    "s3": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.S3StorageInfo",
                      "description": "destination and either the region or endpoint need to be provided. e.g.\n`{ \\\"s3\\\": { \\\"destination\\\": \\\"s3://cluster_log_bucket/prefix\\\", \\\"region\\\": \\\"us-west-2\\\" } }`\nCluster iam role is used to access s3, please make sure the cluster iam role in\n`instance_profile_arn` has permission to write data to the s3 destination."
                    },
                    "volumes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.VolumesStorageInfo",
                      "description": "destination needs to be provided. e.g.\n`{ \\\"volumes\\\" : { \\\"destination\\\" : \\\"/Volumes/my-init.sh\\\" } }`"
                    },
                    "workspace": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.WorkspaceStorageInfo",
                      "description": "destination needs to be provided, e.g.\n`{ \"workspace\": { \"destination\": \"/cluster-init-scripts/setup-datadog.sh\" } }`"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.Kind": {
              "type": "string"
            },
            "compute.Library": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "cran": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.RCranLibrary",
                      "description": "Specification of a CRAN library to be installed as part of the library"
                    },
                    "egg": {
                      "$ref": "#/$defs/string",
                      "description": "Deprecated. URI of the egg library to install. Installing Python egg files is deprecated and is not supported in Databricks Runtime 14.0 and above.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "jar": {
                      "$ref": "#/$defs/string",
                      "description": "URI of the JAR library to install. Supported URIs include Workspace paths, Unity Catalog Volumes paths, and S3 URIs.\nFor example: `{ \"jar\": \"/Workspace/path/to/library.jar\" }`, `{ \"jar\" : \"/Volumes/path/to/library.jar\" }` or\n`{ \"jar\": \"s3://my-bucket/library.jar\" }`.\nIf S3 is used, please make sure the cluster has read access on the library. You may need to\nlaunch the cluster with an IAM role to access the S3 URI."
                    },
                    "maven": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.MavenLibrary",
                      "description": "Specification of a maven library to be installed. For example:\n`{ \"coordinates\": \"org.jsoup:jsoup:1.7.2\" }`"
                    },
                    "pypi": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.PythonPyPiLibrary",
                      "description": "Specification of a PyPi library to be installed. For example:\n`{ \"package\": \"simplejson\" }`"
                    },
                    "requirements": {
                      "$ref": "#/$defs/string",
                      "description": "URI of the requirements.txt file to install. Only Workspace paths and Unity Catalog Volumes paths are supported.\nFor example: `{ \"requirements\": \"/Workspace/path/to/requirements.txt\" }` or `{ \"requirements\" : \"/Volumes/path/to/requirements.txt\" }`"
                    },
                    "whl": {
                      "$ref": "#/$defs/string",
                      "description": "URI of the wheel library to install. Supported URIs include Workspace paths, Unity Catalog Volumes paths, and S3 URIs.\nFor example: `{ \"whl\": \"/Workspace/path/to/library.whl\" }`, `{ \"whl\" : \"/Volumes/path/to/library.whl\" }` or\n`{ \"whl\": \"s3://my-bucket/library.whl\" }`.\nIf S3 is used, please make sure the cluster has read access on the library. You may need to\nlaunch the cluster with an IAM role to access the S3 URI."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.LocalFileInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "destination": {
                      "$ref": "#/$defs/string",
                      "description": "local file destination, e.g. `file:/my/local/file.sh`"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["destination"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.LogAnalyticsInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "log_analytics_primary_key": {
                      "$ref": "#/$defs/string",
                      "description": "The primary key for the Azure Log Analytics agent configuration"
                    },
                    "log_analytics_workspace_id": {
                      "$ref": "#/$defs/string",
                      "description": "The workspace ID for the Azure Log Analytics agent configuration"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.MavenLibrary": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "coordinates": {
                      "$ref": "#/$defs/string",
                      "description": "Gradle-style maven coordinates. For example: \"org.jsoup:jsoup:1.7.2\"."
                    },
                    "exclusions": {
                      "$ref": "#/$defs/slice/string",
                      "description": "List of dependences to exclude. For example: `[\"slf4j:slf4j\", \"*:hadoop-client\"]`.\n\nMaven dependency exclusions:\nhttps://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html."
                    },
                    "repo": {
                      "$ref": "#/$defs/string",
                      "description": "Maven repo to install the Maven package from. If omitted, both Maven Central Repository\nand Spark Packages are searched."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["coordinates"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.PythonPyPiLibrary": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "package": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the pypi package to install. An optional exact version specification is also\nsupported. Examples: \"simplejson\" and \"simplejson==3.8.0\"."
                    },
                    "repo": {
                      "$ref": "#/$defs/string",
                      "description": "The repository where the package can be found. If not specified, the default pip index is\nused."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["package"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.RCranLibrary": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "package": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the CRAN package to install."
                    },
                    "repo": {
                      "$ref": "#/$defs/string",
                      "description": "The repository where the package can be found. If not specified, the default CRAN repo is used."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["package"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.RuntimeEngine": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["NULL", "STANDARD", "PHOTON"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.S3StorageInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "A storage location in Amazon S3",
                  "properties": {
                    "canned_acl": {
                      "$ref": "#/$defs/string",
                      "description": "(Optional) Set canned access control list for the logs, e.g. `bucket-owner-full-control`.\nIf `canned_cal` is set, please make sure the cluster iam role has `s3:PutObjectAcl` permission on\nthe destination bucket and prefix. The full list of possible canned acl can be found at\nhttp://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl.\nPlease also note that by default only the object owner gets full controls. If you are using cross account\nrole for writing data, you may want to set `bucket-owner-full-control` to make bucket owner able to\nread the logs."
                    },
                    "destination": {
                      "$ref": "#/$defs/string",
                      "description": "S3 destination, e.g. `s3://my-bucket/some-prefix` Note that logs will be delivered using\ncluster iam role, please make sure you set cluster iam role and the role has write access to the\ndestination. Please also note that you cannot use AWS keys to deliver logs."
                    },
                    "enable_encryption": {
                      "$ref": "#/$defs/bool",
                      "description": "(Optional) Flag to enable server side encryption, `false` by default."
                    },
                    "encryption_type": {
                      "$ref": "#/$defs/string",
                      "description": "(Optional) The encryption type, it could be `sse-s3` or `sse-kms`. It will be used only when\nencryption is enabled and the default type is `sse-s3`."
                    },
                    "endpoint": {
                      "$ref": "#/$defs/string",
                      "description": "S3 endpoint, e.g. `https://s3-us-west-2.amazonaws.com`. Either region or endpoint needs to be set.\nIf both are set, endpoint will be used."
                    },
                    "kms_key": {
                      "$ref": "#/$defs/string",
                      "description": "(Optional) Kms key which will be used if encryption is enabled and encryption type is set to `sse-kms`."
                    },
                    "region": {
                      "$ref": "#/$defs/string",
                      "description": "S3 region, e.g. `us-west-2`. Either region or endpoint needs to be set. If both are set,\nendpoint will be used."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["destination"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.VolumesStorageInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "A storage location back by UC Volumes.",
                  "properties": {
                    "destination": {
                      "$ref": "#/$defs/string",
                      "description": "UC Volumes destination, e.g. `/Volumes/catalog/schema/vol1/init-scripts/setup-datadog.sh`\nor `dbfs:/Volumes/catalog/schema/vol1/init-scripts/setup-datadog.sh`"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["destination"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.WorkloadType": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Cluster Attributes showing for clusters workload types.",
                  "properties": {
                    "clients": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.ClientsTypes",
                      "description": "defined what type of clients can use the cluster. E.g. Notebooks, Jobs"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["clients"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "compute.WorkspaceStorageInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "A storage location in Workspace Filesystem (WSFS)",
                  "properties": {
                    "destination": {
                      "$ref": "#/$defs/string",
                      "description": "wsfs destination, e.g. `workspace:/cluster-init-scripts/setup-datadog.sh`"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["destination"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "dashboards.LifecycleState": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["ACTIVE", "TRASHED"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.DatabaseInstanceRef": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "DatabaseInstanceRef is a reference to a database instance. It is used in the\nDatabaseInstance object to refer to the parent instance of an instance and\nto refer the child instances of an instance.\nTo specify as a parent instance during creation of an instance,\nthe lsn and branch_time fields are optional. If not specified, the child\ninstance will be created from the latest lsn of the parent.\nIf both lsn and branch_time are specified, the lsn will be used to create\nthe child instance.",
                  "properties": {
                    "branch_time": {
                      "$ref": "#/$defs/string",
                      "description": "Branch time of the ref database instance.\nFor a parent ref instance, this is the point in time on the parent instance from which the\ninstance was created.\nFor a child ref instance, this is the point in time on the instance from which the child\ninstance was created.\nInput: For specifying the point in time to create a child instance. Optional.\nOutput: Only populated if provided as input to create a child instance."
                    },
                    "effective_lsn": {
                      "$ref": "#/$defs/string",
                      "description": "xref AIP-129. `lsn` is owned by the client, while `effective_lsn` is owned by the server.\n`lsn` will only be set in Create/Update response messages if and only if the user provides the field via the request.\n`effective_lsn` on the other hand will always bet set in all response messages (Create/Update/Get/List).\nFor a parent ref instance, this is the LSN on the parent instance from which the\ninstance was created.\nFor a child ref instance, this is the LSN on the instance from which the child instance\nwas created."
                    },
                    "lsn": {
                      "$ref": "#/$defs/string",
                      "description": "User-specified WAL LSN of the ref database instance.\n\nInput: For specifying the WAL LSN to create a child instance. Optional.\nOutput: Only populated if provided as input to create a child instance."
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the ref database instance."
                    },
                    "uid": {
                      "$ref": "#/$defs/string",
                      "description": "Id of the ref database instance."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.DatabaseInstanceState": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "STARTING",
                    "AVAILABLE",
                    "DELETING",
                    "STOPPED",
                    "UPDATING",
                    "FAILING_OVER"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.DeltaTableSyncInfo": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "delta_commit_timestamp": {
                      "$ref": "#/$defs/string",
                      "description": "The timestamp when the above Delta version was committed in the source Delta table.\nNote: This is the Delta commit time, not the time the data was written to the synced table."
                    },
                    "delta_commit_version": {
                      "$ref": "#/$defs/int64",
                      "description": "The Delta Lake commit version that was last successfully synced."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.NewPipelineSpec": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Custom fields that user can set for pipeline while creating SyncedDatabaseTable.\nNote that other fields of pipeline are still inferred by table def internally",
                  "properties": {
                    "storage_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "This field needs to be specified if the destination catalog is a managed postgres catalog.\n\nUC catalog for the pipeline to store intermediate files (checkpoints, event logs etc).\nThis needs to be a standard catalog where the user has permissions to create Delta tables."
                    },
                    "storage_schema": {
                      "$ref": "#/$defs/string",
                      "description": "This field needs to be specified if the destination catalog is a managed postgres catalog.\n\nUC schema for the pipeline to store intermediate files (checkpoints, event logs etc).\nThis needs to be in the standard catalog where the user has permissions to create Delta tables."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.ProvisioningInfoState": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "PROVISIONING",
                    "ACTIVE",
                    "FAILED",
                    "DELETING",
                    "UPDATING",
                    "DEGRADED"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.ProvisioningPhase": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "PROVISIONING_PHASE_MAIN",
                    "PROVISIONING_PHASE_INDEX_SCAN",
                    "PROVISIONING_PHASE_INDEX_SORT"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableContinuousUpdateStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Detailed status of a synced table. Shown if the synced table is in the SYNCED_CONTINUOUS_UPDATE\nor the SYNCED_UPDATING_PIPELINE_RESOURCES state.",
                  "properties": {
                    "initial_pipeline_sync_progress": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTablePipelineProgress",
                      "description": "Progress of the initial data synchronization."
                    },
                    "last_processed_commit_version": {
                      "$ref": "#/$defs/int64",
                      "description": "The last source table Delta version that was successfully synced to the synced table."
                    },
                    "timestamp": {
                      "$ref": "#/$defs/string",
                      "description": "The end timestamp of the last time any data was synchronized from the source table to the synced\ntable. This is when the data is available in the synced table."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableFailedStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Detailed status of a synced table. Shown if the synced table is in the OFFLINE_FAILED or the\nSYNCED_PIPELINE_FAILED state.",
                  "properties": {
                    "last_processed_commit_version": {
                      "$ref": "#/$defs/int64",
                      "description": "The last source table Delta version that was successfully synced to the synced table.\nThe last source table Delta version that was synced to the synced table.\nOnly populated if the table is still\nsynced and available for serving."
                    },
                    "timestamp": {
                      "$ref": "#/$defs/string",
                      "description": "The end timestamp of the last time any data was synchronized from the source table to the synced\ntable. Only populated if the table is still synced and available for serving."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTablePipelineProgress": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Progress information of the Synced Table data synchronization pipeline.",
                  "properties": {
                    "estimated_completion_time_seconds": {
                      "$ref": "#/$defs/float64",
                      "description": "The estimated time remaining to complete this update in seconds."
                    },
                    "latest_version_currently_processing": {
                      "$ref": "#/$defs/int64",
                      "description": "The source table Delta version that was last processed by the pipeline. The pipeline may not\nhave completely processed this version yet."
                    },
                    "provisioning_phase": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.ProvisioningPhase",
                      "description": "The current phase of the data synchronization pipeline."
                    },
                    "sync_progress_completion": {
                      "$ref": "#/$defs/float64",
                      "description": "The completion ratio of this update. This is a number between 0 and 1."
                    },
                    "synced_row_count": {
                      "$ref": "#/$defs/int64",
                      "description": "The number of rows that have been synced in this update."
                    },
                    "total_row_count": {
                      "$ref": "#/$defs/int64",
                      "description": "The total number of rows that need to be synced in this update. This number may be an estimate."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTablePosition": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "delta_table_sync_info": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.DeltaTableSyncInfo"
                    },
                    "sync_end_timestamp": {
                      "$ref": "#/$defs/string",
                      "description": "The end timestamp of the most recent successful synchronization.\nThis is the time when the data is available in the synced table."
                    },
                    "sync_start_timestamp": {
                      "$ref": "#/$defs/string",
                      "description": "The starting timestamp of the most recent successful synchronization from the source table\nto the destination (synced) table.\nNote this is the starting timestamp of the sync operation, not the end time.\nE.g., for a batch, this is the time when the sync operation started."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableProvisioningStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Detailed status of a synced table. Shown if the synced table is in the\nPROVISIONING_PIPELINE_RESOURCES or the PROVISIONING_INITIAL_SNAPSHOT state.",
                  "properties": {
                    "initial_pipeline_sync_progress": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTablePipelineProgress",
                      "description": "Details about initial data synchronization. Only populated when in the\nPROVISIONING_INITIAL_SNAPSHOT state."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableSchedulingPolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["CONTINUOUS", "TRIGGERED", "SNAPSHOT"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableSpec": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Specification of a synced database table.",
                  "properties": {
                    "create_database_objects_if_missing": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, the synced table's logical database and schema resources in PG\nwill be created if they do not already exist."
                    },
                    "existing_pipeline_id": {
                      "$ref": "#/$defs/string",
                      "description": "At most one of existing_pipeline_id and new_pipeline_spec should be defined.\n\nIf existing_pipeline_id is defined, the synced table will be bin packed into the existing pipeline\nreferenced. This avoids creating a new pipeline and allows sharing existing compute.\nIn this case, the scheduling_policy of this synced table must match the scheduling policy of the existing pipeline."
                    },
                    "new_pipeline_spec": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.NewPipelineSpec",
                      "description": "At most one of existing_pipeline_id and new_pipeline_spec should be defined.\n\nIf new_pipeline_spec is defined, a new pipeline is created for this synced table. The location pointed to is used\nto store intermediate files (checkpoints, event logs etc). The caller must have write permissions to create Delta\ntables in the specified catalog and schema. Again, note this requires write permissions, whereas the source table\nonly requires read permissions."
                    },
                    "primary_key_columns": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Primary Key columns to be used for data insert/update in the destination."
                    },
                    "scheduling_policy": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableSchedulingPolicy",
                      "description": "Scheduling policy of the underlying pipeline."
                    },
                    "source_table_full_name": {
                      "$ref": "#/$defs/string",
                      "description": "Three-part (catalog, schema, table) name of the source Delta table."
                    },
                    "timeseries_key": {
                      "$ref": "#/$defs/string",
                      "description": "Time series key to deduplicate (tie-break) rows with the same primary key."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableState": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "The state of a synced table.",
                  "enum": [
                    "SYNCED_TABLE_PROVISIONING",
                    "SYNCED_TABLE_PROVISIONING_PIPELINE_RESOURCES",
                    "SYNCED_TABLE_PROVISIONING_INITIAL_SNAPSHOT",
                    "SYNCED_TABLE_ONLINE",
                    "SYNCED_TABLE_ONLINE_CONTINUOUS_UPDATE",
                    "SYNCED_TABLE_ONLINE_TRIGGERED_UPDATE",
                    "SYNCED_TABLE_ONLINE_NO_PENDING_UPDATE",
                    "SYNCED_TABLED_OFFLINE",
                    "SYNCED_TABLE_OFFLINE_FAILED",
                    "SYNCED_TABLE_ONLINE_PIPELINE_FAILED",
                    "SYNCED_TABLE_ONLINE_UPDATING_PIPELINE_RESOURCES"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Status of a synced table.",
                  "properties": {
                    "continuous_update_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableContinuousUpdateStatus",
                      "description": "Detailed status of a synced table. Shown if the synced table is in the SYNCED_CONTINUOUS_UPDATE\nor the SYNCED_UPDATING_PIPELINE_RESOURCES state."
                    },
                    "detailed_state": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableState",
                      "description": "The state of the synced table."
                    },
                    "failed_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableFailedStatus",
                      "description": "Detailed status of a synced table. Shown if the synced table is in the OFFLINE_FAILED or the\nSYNCED_PIPELINE_FAILED state."
                    },
                    "last_sync": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTablePosition",
                      "description": "Summary of the last successful synchronization from source to destination.\n\nWill always be present if there has been a successful sync. Even if the most recent syncs have failed.\n\nLimitation:\nThe only exception is if the synced table is doing a FULL REFRESH, then the last sync information\nwill not be available until the full refresh is complete. This limitation will be addressed in a future version.\n\nThis top-level field is a convenience for consumers who want easy access to last sync information\nwithout having to traverse detailed_status."
                    },
                    "message": {
                      "$ref": "#/$defs/string",
                      "description": "A text description of the current state of the synced table."
                    },
                    "pipeline_id": {
                      "$ref": "#/$defs/string",
                      "description": "ID of the associated pipeline. The pipeline ID may have been provided by the client\n(in the case of bin packing), or generated by the server (when creating a new pipeline)."
                    },
                    "provisioning_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableProvisioningStatus",
                      "description": "Detailed status of a synced table. Shown if the synced table is in the\nPROVISIONING_PIPELINE_RESOURCES or the PROVISIONING_INITIAL_SNAPSHOT state."
                    },
                    "triggered_update_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTableTriggeredUpdateStatus",
                      "description": "Detailed status of a synced table. Shown if the synced table is in the SYNCED_TRIGGERED_UPDATE\nor the SYNCED_NO_PENDING_UPDATE state."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "database.SyncedTableTriggeredUpdateStatus": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Detailed status of a synced table. Shown if the synced table is in the SYNCED_TRIGGERED_UPDATE\nor the SYNCED_NO_PENDING_UPDATE state.",
                  "properties": {
                    "last_processed_commit_version": {
                      "$ref": "#/$defs/int64",
                      "description": "The last source table Delta version that was successfully synced to the synced table."
                    },
                    "timestamp": {
                      "$ref": "#/$defs/string",
                      "description": "The end timestamp of the last time any data was synchronized from the source table to the synced\ntable. This is when the data is available in the synced table."
                    },
                    "triggered_update_progress": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.SyncedTablePipelineProgress",
                      "description": "Progress of the active data synchronization pipeline."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.AuthenticationMethod": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["OAUTH", "PAT"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.CleanRoomsNotebookTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "clean_room_name": {
                      "$ref": "#/$defs/string",
                      "description": "The clean room that the notebook belongs to."
                    },
                    "etag": {
                      "$ref": "#/$defs/string",
                      "description": "Checksum to validate the freshness of the notebook resource (i.e. the notebook being run is the latest version).\nIt can be fetched by calling the :method:cleanroomassets/get API."
                    },
                    "notebook_base_parameters": {
                      "$ref": "#/$defs/map/string",
                      "description": "Base parameters to be used for the clean room notebook job."
                    },
                    "notebook_name": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the notebook being run."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["clean_room_name", "notebook_name"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.ComputeConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "gpu_node_pool_id": {
                      "$ref": "#/$defs/string",
                      "description": "IDof the GPU pool to use."
                    },
                    "gpu_type": {
                      "$ref": "#/$defs/string",
                      "description": "GPU type."
                    },
                    "num_gpus": {
                      "$ref": "#/$defs/int",
                      "description": "Number of GPUs."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["num_gpus"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.Condition": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["ANY_UPDATED", "ALL_UPDATED"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.ConditionTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "left": {
                      "$ref": "#/$defs/string",
                      "description": "The left operand of the condition task. Can be either a string value or a job state or parameter reference."
                    },
                    "op": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.ConditionTaskOp",
                      "description": "* `EQUAL_TO`, `NOT_EQUAL` operators perform string comparison of their operands. This means that `“12.0” == “12”` will evaluate to `false`.\n* `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL` operators perform numeric comparison of their operands. `“12.0” \u003e= “12”` will evaluate to `true`, `“10.0” \u003e= “12”` will evaluate to `false`.\n\nThe boolean comparison to task values can be implemented with operators `EQUAL_TO`, `NOT_EQUAL`. If a task value was set to a boolean value, it will be serialized to `“true”` or `“false”` for the comparison."
                    },
                    "right": {
                      "$ref": "#/$defs/string",
                      "description": "The right operand of the condition task. Can be either a string value or a job state or parameter reference."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["left", "op", "right"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.ConditionTaskOp": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "* `EQUAL_TO`, `NOT_EQUAL` operators perform string comparison of their operands. This means that `“12.0” == “12”` will evaluate to `false`.\n* `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL` operators perform numeric comparison of their operands. `“12.0” \u003e= “12”` will evaluate to `true`, `“10.0” \u003e= “12”` will evaluate to `false`.\n\nThe boolean comparison to task values can be implemented with operators `EQUAL_TO`, `NOT_EQUAL`. If a task value was set to a boolean value, it will be serialized to `“true”` or `“false”` for the comparison.",
                  "enum": [
                    "EQUAL_TO",
                    "GREATER_THAN",
                    "GREATER_THAN_OR_EQUAL",
                    "LESS_THAN",
                    "LESS_THAN_OR_EQUAL",
                    "NOT_EQUAL"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.Continuous": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "pause_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PauseStatus",
                      "description": "Indicate whether the continuous execution of the job is paused or not. Defaults to UNPAUSED."
                    },
                    "task_retry_mode": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.TaskRetryMode",
                      "description": "Indicate whether the continuous job is applying task level retries or not. Defaults to NEVER."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.CronSchedule": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "pause_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PauseStatus",
                      "description": "Indicate whether this schedule is paused or not."
                    },
                    "quartz_cron_expression": {
                      "$ref": "#/$defs/string",
                      "description": "A Cron expression using Quartz syntax that describes the schedule for a job. See [Cron Trigger](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) for details. This field is required."
                    },
                    "timezone_id": {
                      "$ref": "#/$defs/string",
                      "description": "A Java timezone ID. The schedule for a job is resolved with respect to this timezone. See [Java TimeZone](https://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html) for details. This field is required."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["quartz_cron_expression", "timezone_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.DashboardTask": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configures the Lakeview Dashboard job task type.",
                  "properties": {
                    "dashboard_id": {
                      "$ref": "#/$defs/string"
                    },
                    "subscription": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Subscription"
                    },
                    "warehouse_id": {
                      "$ref": "#/$defs/string",
                      "description": "Optional: The warehouse id to execute the dashboard with for the schedule.\nIf not specified, the default warehouse of the dashboard will be used."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.DbtCloudTask": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Deprecated in favor of DbtPlatformTask",
                  "properties": {
                    "connection_resource_name": {
                      "$ref": "#/$defs/string",
                      "description": "The resource name of the UC connection that authenticates the dbt Cloud for this task"
                    },
                    "dbt_cloud_job_id": {
                      "$ref": "#/$defs/int64",
                      "description": "Id of the dbt Cloud job to be triggered"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.DbtPlatformTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "connection_resource_name": {
                      "$ref": "#/$defs/string",
                      "description": "The resource name of the UC connection that authenticates the dbt platform for this task"
                    },
                    "dbt_platform_job_id": {
                      "$ref": "#/$defs/string",
                      "description": "Id of the dbt platform job to be triggered. Specified as a string for maximum compatibility with clients."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.DbtTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "catalog": {
                      "$ref": "#/$defs/string",
                      "description": "Optional name of the catalog to use. The value is the top level in the 3-level namespace of Unity Catalog (catalog / schema / relation). The catalog value can only be specified if a warehouse_id is specified. Requires dbt-databricks \u003e= 1.1.1."
                    },
                    "commands": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of dbt commands to execute. All commands must start with `dbt`. This parameter must not be empty. A maximum of up to 10 commands can be provided."
                    },
                    "profiles_directory": {
                      "$ref": "#/$defs/string",
                      "description": "Optional (relative) path to the profiles directory. Can only be specified if no warehouse_id is specified. If no warehouse_id is specified and this folder is unset, the root directory is used."
                    },
                    "project_directory": {
                      "$ref": "#/$defs/string",
                      "description": "Path to the project directory. Optional for Git sourced tasks, in which\ncase if no value is provided, the root of the Git repository is used."
                    },
                    "schema": {
                      "$ref": "#/$defs/string",
                      "description": "Optional schema to write to. This parameter is only used when a warehouse_id is also provided. If not provided, the `default` schema is used."
                    },
                    "source": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Source",
                      "description": "Optional location type of the project directory. When set to `WORKSPACE`, the project will be retrieved\nfrom the local Databricks workspace. When set to `GIT`, the project will be retrieved from a Git repository\ndefined in `git_source`. If the value is empty, the task will use `GIT` if `git_source` is defined and `WORKSPACE` otherwise.\n\n* `WORKSPACE`: Project is located in Databricks workspace.\n* `GIT`: Project is located in cloud Git provider."
                    },
                    "warehouse_id": {
                      "$ref": "#/$defs/string",
                      "description": "ID of the SQL warehouse to connect to. If provided, we automatically generate and provide the profile and connection details to dbt. It can be overridden on a per-command basis by using the `--profiles-dir` command line argument."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["commands"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.FileArrivalTriggerConfiguration": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "min_time_between_triggers_seconds": {
                      "$ref": "#/$defs/int",
                      "description": "If set, the trigger starts a run only after the specified amount of time passed since\nthe last time the trigger fired. The minimum allowed value is 60 seconds"
                    },
                    "url": {
                      "$ref": "#/$defs/string",
                      "description": "URL to be monitored for file arrivals. The path must point to the root or a subpath of the external location."
                    },
                    "wait_after_last_change_seconds": {
                      "$ref": "#/$defs/int",
                      "description": "If set, the trigger starts a run only after no file activity has occurred for the specified amount of time.\nThis makes it possible to wait for a batch of incoming files to arrive before triggering a run. The\nminimum allowed value is 60 seconds."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["url"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.ForEachTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "concurrency": {
                      "$ref": "#/$defs/int",
                      "description": "An optional maximum allowed number of concurrent runs of the task.\nSet this value if you want to be able to execute multiple runs of the task concurrently."
                    },
                    "inputs": {
                      "$ref": "#/$defs/string",
                      "description": "Array for task to iterate on. This can be a JSON string or a reference to\nan array parameter."
                    },
                    "task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Task",
                      "description": "Configuration for the task that will be run for each element in the array"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["inputs", "task"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.Format": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["SINGLE_TASK", "MULTI_TASK"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.GenAiComputeTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "command": {
                      "$ref": "#/$defs/string",
                      "description": "Command launcher to run the actual script, e.g. bash, python etc."
                    },
                    "compute": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.ComputeConfig"
                    },
                    "dl_runtime_image": {
                      "$ref": "#/$defs/string",
                      "description": "Runtime image"
                    },
                    "mlflow_experiment_name": {
                      "$ref": "#/$defs/string",
                      "description": "Optional string containing the name of the MLflow experiment to log the run to. If name is not\nfound, backend will create the mlflow experiment using the name."
                    },
                    "source": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Source",
                      "description": "Optional location type of the training script. When set to `WORKSPACE`, the script will be retrieved from the local Databricks workspace. When set to `GIT`, the script will be retrieved from a Git repository\ndefined in `git_source`. If the value is empty, the task will use `GIT` if `git_source` is defined and `WORKSPACE` otherwise.\n* `WORKSPACE`: Script is located in Databricks workspace.\n* `GIT`: Script is located in cloud Git provider."
                    },
                    "training_script_path": {
                      "$ref": "#/$defs/string",
                      "description": "The training script file path to be executed. Cloud file URIs (such as dbfs:/, s3:/, adls:/, gcs:/) and workspace paths are supported. For python files stored in the Databricks workspace, the path must be absolute and begin with `/`. For files stored in a remote repository, the path must be relative. This field is required."
                    },
                    "yaml_parameters": {
                      "$ref": "#/$defs/string",
                      "description": "Optional string containing model parameters passed to the training script in yaml format.\nIf present, then the content in yaml_parameters_file_path will be ignored."
                    },
                    "yaml_parameters_file_path": {
                      "$ref": "#/$defs/string",
                      "description": "Optional path to a YAML file containing model parameters passed to the training script."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["dl_runtime_image"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.GitProvider": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "gitHub",
                    "bitbucketCloud",
                    "azureDevOpsServices",
                    "gitHubEnterprise",
                    "bitbucketServer",
                    "gitLab",
                    "gitLabEnterpriseEdition",
                    "awsCodeCommit"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.GitSnapshot": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Read-only state of the remote repository at the time the job was run. This field is only included on job runs.",
                  "properties": {
                    "used_commit": {
                      "$ref": "#/$defs/string",
                      "description": "Commit that was used to execute the run. If git_branch was specified, this points to the HEAD of the branch at the time of the run; if git_tag was specified, this points to the commit the tag points to."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.GitSource": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "An optional specification for a remote Git repository containing the source code used by tasks. Version-controlled source code is supported by notebook, dbt, Python script, and SQL File tasks.\n\nIf `git_source` is set, these tasks retrieve the file from the remote repository by default. However, this behavior can be overridden by setting `source` to `WORKSPACE` on the task.\n\nNote: dbt and SQL File tasks support only version-controlled sources. If dbt or SQL File tasks are used, `git_source` must be defined on the job.",
                  "properties": {
                    "git_branch": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the branch to be checked out and used by this job. This field cannot be specified in conjunction with git_tag or git_commit."
                    },
                    "git_commit": {
                      "$ref": "#/$defs/string",
                      "description": "Commit to be checked out and used by this job. This field cannot be specified in conjunction with git_branch or git_tag."
                    },
                    "git_provider": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.GitProvider",
                      "description": "Unique identifier of the service used to host the Git repository. The value is case insensitive."
                    },
                    "git_tag": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the tag to be checked out and used by this job. This field cannot be specified in conjunction with git_branch or git_commit."
                    },
                    "git_url": {
                      "$ref": "#/$defs/string",
                      "description": "URL of the repository to be cloned by this job."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["git_provider", "git_url"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobCluster": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "job_cluster_key": {
                      "$ref": "#/$defs/string",
                      "description": "A unique name for the job cluster. This field is required and must be unique within the job.\n`JobTaskSettings` may refer to this field to determine which cluster to launch for the task execution."
                    },
                    "new_cluster": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.ClusterSpec",
                      "description": "If new_cluster, a description of a cluster that is created for each task."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["job_cluster_key", "new_cluster"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobDeployment": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobDeploymentKind",
                      "description": "The kind of deployment that manages the job.\n\n* `BUNDLE`: The job is managed by Databricks Asset Bundle."
                    },
                    "metadata_file_path": {
                      "$ref": "#/$defs/string",
                      "description": "Path of the file that contains deployment metadata."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["kind"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobDeploymentKind": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "* `BUNDLE`: The job is managed by Databricks Asset Bundle.",
                  "enum": ["BUNDLE"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobEditMode": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Edit mode of the job.\n\n* `UI_LOCKED`: The job is in a locked UI state and cannot be modified.\n* `EDITABLE`: The job is in an editable state and can be modified.",
                  "enum": ["UI_LOCKED", "EDITABLE"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobEmailNotifications": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "no_alert_for_skipped_runs": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, do not send email to recipients specified in `on_failure` if the run is skipped.\nThis field is `deprecated`. Please use the `notification_settings.no_alert_for_skipped_runs` field.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "on_duration_warning_threshold_exceeded": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when the duration of a run exceeds the threshold specified for the `RUN_DURATION_SECONDS` metric in the `health` field. If no rule for the `RUN_DURATION_SECONDS` metric is specified in the `health` field for the job, notifications are not sent."
                    },
                    "on_failure": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when a run unsuccessfully completes. A run is considered to have completed unsuccessfully if it ends with an `INTERNAL_ERROR` `life_cycle_state` or a `FAILED`, or `TIMED_OUT` result_state. If this is not specified on job creation, reset, or update the list is empty, and notifications are not sent."
                    },
                    "on_start": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when a run begins. If not specified on job creation, reset, or update, the list is empty, and notifications are not sent."
                    },
                    "on_streaming_backlog_exceeded": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to notify when any streaming backlog thresholds are exceeded for any stream.\nStreaming backlog thresholds can be set in the `health` field using the following metrics: `STREAMING_BACKLOG_BYTES`, `STREAMING_BACKLOG_RECORDS`, `STREAMING_BACKLOG_SECONDS`, or `STREAMING_BACKLOG_FILES`.\nAlerting is based on the 10-minute average of these metrics. If the issue persists, notifications are resent every 30 minutes."
                    },
                    "on_success": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when a run successfully completes. A run is considered to have completed successfully if it ends with a `TERMINATED` `life_cycle_state` and a `SUCCESS` result_state. If not specified on job creation, reset, or update, the list is empty, and notifications are not sent."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobEnvironment": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "environment_key": {
                      "$ref": "#/$defs/string",
                      "description": "The key of an environment. It has to be unique within a job."
                    },
                    "spec": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.Environment"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["environment_key"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobNotificationSettings": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "no_alert_for_canceled_runs": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, do not send notifications to recipients specified in `on_failure` if the run is canceled."
                    },
                    "no_alert_for_skipped_runs": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, do not send notifications to recipients specified in `on_failure` if the run is skipped."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobParameterDefinition": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "default": {
                      "$ref": "#/$defs/string",
                      "description": "Default value of the parameter."
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the defined parameter. May only contain alphanumeric characters, `_`, `-`, and `.`"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["default", "name"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobRunAs": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Write-only setting. Specifies the user or service principal that the job runs as. If not specified, the job runs as the user who created the job.\n\nEither `user_name` or `service_principal_name` should be specified. If not, an error is thrown.",
                  "properties": {
                    "service_principal_name": {
                      "$ref": "#/$defs/string",
                      "description": "The application ID of an active service principal. Setting this field requires the `servicePrincipal/user` role."
                    },
                    "user_name": {
                      "$ref": "#/$defs/string",
                      "description": "The email of an active workspace user. Non-admin users can only set this field to their own email."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobSource": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "The source of the job specification in the remote repository when the job is source controlled.",
                  "properties": {
                    "dirty_state": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobSourceDirtyState",
                      "description": "Dirty state indicates the job is not fully synced with the job specification in the remote repository.\n\nPossible values are:\n* `NOT_SYNCED`: The job is not yet synced with the remote job specification. Import the remote job specification from UI to make the job fully synced.\n* `DISCONNECTED`: The job is temporary disconnected from the remote job specification and is allowed for live edit. Import the remote job specification again from UI to make the job fully synced."
                    },
                    "import_from_git_branch": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the branch which the job is imported from."
                    },
                    "job_config_path": {
                      "$ref": "#/$defs/string",
                      "description": "Path of the job YAML file that contains the job specification."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["import_from_git_branch", "job_config_path"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobSourceDirtyState": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Dirty state indicates the job is not fully synced with the job specification\nin the remote repository.\n\nPossible values are:\n* `NOT_SYNCED`: The job is not yet synced with the remote job specification. Import the remote job specification from UI to make the job fully synced.\n* `DISCONNECTED`: The job is temporary disconnected from the remote job specification and is allowed for live edit. Import the remote job specification again from UI to make the job fully synced.",
                  "enum": ["NOT_SYNCED", "DISCONNECTED"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobsHealthMetric": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Specifies the health metric that is being evaluated for a particular health rule.\n\n* `RUN_DURATION_SECONDS`: Expected total time for a run in seconds.\n* `STREAMING_BACKLOG_BYTES`: An estimate of the maximum bytes of data waiting to be consumed across all streams. This metric is in Public Preview.\n* `STREAMING_BACKLOG_RECORDS`: An estimate of the maximum offset lag across all streams. This metric is in Public Preview.\n* `STREAMING_BACKLOG_SECONDS`: An estimate of the maximum consumer delay across all streams. This metric is in Public Preview.\n* `STREAMING_BACKLOG_FILES`: An estimate of the maximum number of outstanding files across all streams. This metric is in Public Preview.",
                  "enum": [
                    "RUN_DURATION_SECONDS",
                    "STREAMING_BACKLOG_BYTES",
                    "STREAMING_BACKLOG_RECORDS",
                    "STREAMING_BACKLOG_SECONDS",
                    "STREAMING_BACKLOG_FILES"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobsHealthOperator": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Specifies the operator used to compare the health metric value with the specified threshold.",
                  "enum": ["GREATER_THAN"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobsHealthRule": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "metric": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthMetric"
                    },
                    "op": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthOperator"
                    },
                    "value": {
                      "$ref": "#/$defs/int64",
                      "description": "Specifies the threshold value that the health metric should obey to satisfy the health rule."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["metric", "op", "value"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.JobsHealthRules": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "An optional set of health rules that can be defined for this job.",
                  "properties": {
                    "rules": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthRule"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.NotebookTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "base_parameters": {
                      "$ref": "#/$defs/map/string",
                      "description": "Base parameters to be used for each run of this job. If the run is initiated by a call to :method:jobs/run\nNow with parameters specified, the two parameters maps are merged. If the same key is specified in\n`base_parameters` and in `run-now`, the value from `run-now` is used.\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs.\n\nIf the notebook takes a parameter that is not specified in the job’s `base_parameters` or the `run-now` override parameters,\nthe default value from the notebook is used.\n\nRetrieve these parameters in a notebook using [dbutils.widgets.get](https://docs.databricks.com/dev-tools/databricks-utils.html#dbutils-widgets).\n\nThe JSON representation of this field cannot exceed 1MB."
                    },
                    "notebook_path": {
                      "$ref": "#/$defs/string",
                      "description": "The path of the notebook to be run in the Databricks workspace or remote repository.\nFor notebooks stored in the Databricks workspace, the path must be absolute and begin with a slash.\nFor notebooks stored in a remote repository, the path must be relative. This field is required."
                    },
                    "source": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Source",
                      "description": "Optional location type of the notebook. When set to `WORKSPACE`, the notebook will be retrieved from the local Databricks workspace. When set to `GIT`, the notebook will be retrieved from a Git repository\ndefined in `git_source`. If the value is empty, the task will use `GIT` if `git_source` is defined and `WORKSPACE` otherwise.\n* `WORKSPACE`: Notebook is located in Databricks workspace.\n* `GIT`: Notebook is located in cloud Git provider."
                    },
                    "warehouse_id": {
                      "$ref": "#/$defs/string",
                      "description": "Optional `warehouse_id` to run the notebook on a SQL warehouse. Classic SQL warehouses are NOT supported, please use serverless or pro SQL warehouses.\n\nNote that SQL warehouses only support SQL cells; if the notebook contains non-SQL cells, the run will fail."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["notebook_path"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PauseStatus": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["UNPAUSED", "PAUSED"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PerformanceTarget": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "PerformanceTarget defines how performant (lower latency) or cost efficient the execution of run on serverless compute should be.\nThe performance mode on the job or pipeline should map to a performance setting that is passed to Cluster Manager\n(see cluster-common PerformanceTarget).",
                  "enum": ["PERFORMANCE_OPTIMIZED", "STANDARD"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PeriodicTriggerConfiguration": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "interval": {
                      "$ref": "#/$defs/int",
                      "description": "The interval at which the trigger should run."
                    },
                    "unit": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PeriodicTriggerConfigurationTimeUnit",
                      "description": "The unit of time for the interval."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["interval", "unit"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PeriodicTriggerConfigurationTimeUnit": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["HOURS", "DAYS", "WEEKS"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PipelineParams": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "full_refresh": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, triggers a full refresh on the delta live table."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PipelineTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "full_refresh": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, triggers a full refresh on the delta live table."
                    },
                    "pipeline_id": {
                      "$ref": "#/$defs/string",
                      "description": "The full name of the pipeline task to execute."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["pipeline_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PowerBiModel": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "authentication_method": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.AuthenticationMethod",
                      "description": "How the published Power BI model authenticates to Databricks"
                    },
                    "model_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the Power BI model"
                    },
                    "overwrite_existing": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to overwrite existing Power BI models"
                    },
                    "storage_mode": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.StorageMode",
                      "description": "The default storage mode of the Power BI model"
                    },
                    "workspace_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the Power BI workspace of the model"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PowerBiTable": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "catalog": {
                      "$ref": "#/$defs/string",
                      "description": "The catalog name in Databricks"
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "The table name in Databricks"
                    },
                    "schema": {
                      "$ref": "#/$defs/string",
                      "description": "The schema name in Databricks"
                    },
                    "storage_mode": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.StorageMode",
                      "description": "The Power BI storage mode of the table"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PowerBiTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "connection_resource_name": {
                      "$ref": "#/$defs/string",
                      "description": "The resource name of the UC connection to authenticate from Databricks to Power BI"
                    },
                    "power_bi_model": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PowerBiModel",
                      "description": "The semantic model to update"
                    },
                    "refresh_after_update": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether the model should be refreshed after the update"
                    },
                    "tables": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.PowerBiTable",
                      "description": "The tables to be exported to Power BI"
                    },
                    "warehouse_id": {
                      "$ref": "#/$defs/string",
                      "description": "The SQL warehouse ID to use as the Power BI data source"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.PythonWheelTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "entry_point": {
                      "$ref": "#/$defs/string",
                      "description": "Named entry point to use, if it does not exist in the metadata of the package it executes the function from the package directly using `$packageName.$entryPoint()`"
                    },
                    "named_parameters": {
                      "$ref": "#/$defs/map/string",
                      "description": "Command-line parameters passed to Python wheel task in the form of `[\"--name=task\", \"--data=dbfs:/path/to/data.json\"]`. Leave it empty if `parameters` is not null."
                    },
                    "package_name": {
                      "$ref": "#/$defs/string",
                      "description": "Name of the package to execute"
                    },
                    "parameters": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Command-line parameters passed to Python wheel task. Leave it empty if `named_parameters` is not null."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["entry_point", "package_name"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.QueueSettings": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, enable queueing for the job. This is a required field."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["enabled"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.RunIf": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "An optional value indicating the condition that determines whether the task should be run once its dependencies have been completed. When omitted, defaults to `ALL_SUCCESS`.\n\nPossible values are:\n* `ALL_SUCCESS`: All dependencies have executed and succeeded\n* `AT_LEAST_ONE_SUCCESS`: At least one dependency has succeeded\n* `NONE_FAILED`: None of the dependencies have failed and at least one was executed\n* `ALL_DONE`: All dependencies have been completed\n* `AT_LEAST_ONE_FAILED`: At least one dependency failed\n* `ALL_FAILED`: ALl dependencies have failed",
                  "enum": [
                    "ALL_SUCCESS",
                    "ALL_DONE",
                    "NONE_FAILED",
                    "AT_LEAST_ONE_SUCCESS",
                    "ALL_FAILED",
                    "AT_LEAST_ONE_FAILED"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.RunJobTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "dbt_commands": {
                      "$ref": "#/$defs/slice/string",
                      "description": "An array of commands to execute for jobs with the dbt task, for example `\"dbt_commands\": [\"dbt deps\", \"dbt seed\", \"dbt deps\", \"dbt seed\", \"dbt run\"]`",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "jar_params": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of parameters for jobs with Spark JAR tasks, for example `\"jar_params\": [\"john doe\", \"35\"]`.\nThe parameters are used to invoke the main function of the main class specified in the Spark JAR task.\nIf not specified upon `run-now`, it defaults to an empty list.\njar_params cannot be specified in conjunction with notebook_params.\nThe JSON representation of this field (for example `{\"jar_params\":[\"john doe\",\"35\"]}`) cannot exceed 10,000 bytes.\n\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs.",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "job_id": {
                      "$ref": "#/$defs/int64",
                      "description": "ID of the job to trigger."
                    },
                    "job_parameters": {
                      "$ref": "#/$defs/map/string",
                      "description": "Job-level parameters used to trigger the job."
                    },
                    "notebook_params": {
                      "$ref": "#/$defs/map/string",
                      "description": "A map from keys to values for jobs with notebook task, for example `\"notebook_params\": {\"name\": \"john doe\", \"age\": \"35\"}`.\nThe map is passed to the notebook and is accessible through the [dbutils.widgets.get](https://docs.databricks.com/dev-tools/databricks-utils.html) function.\n\nIf not specified upon `run-now`, the triggered run uses the job’s base parameters.\n\nnotebook_params cannot be specified in conjunction with jar_params.\n\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs.\n\nThe JSON representation of this field (for example `{\"notebook_params\":{\"name\":\"john doe\",\"age\":\"35\"}}`) cannot exceed 10,000 bytes.",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "pipeline_params": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PipelineParams",
                      "description": "Controls whether the pipeline should perform a full refresh"
                    },
                    "python_named_params": {
                      "$ref": "#/$defs/map/string",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "python_params": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of parameters for jobs with Python tasks, for example `\"python_params\": [\"john doe\", \"35\"]`.\nThe parameters are passed to Python file as command-line parameters. If specified upon `run-now`, it would overwrite\nthe parameters specified in job setting. The JSON representation of this field (for example `{\"python_params\":[\"john doe\",\"35\"]}`)\ncannot exceed 10,000 bytes.\n\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs.\n\nImportant\n\nThese parameters accept only Latin characters (ASCII character set). Using non-ASCII characters returns an error.\nExamples of invalid, non-ASCII characters are Chinese, Japanese kanjis, and emojis.",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "spark_submit_params": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of parameters for jobs with spark submit task, for example `\"spark_submit_params\": [\"--class\", \"org.apache.spark.examples.SparkPi\"]`.\nThe parameters are passed to spark-submit script as command-line parameters. If specified upon `run-now`, it would overwrite the\nparameters specified in job setting. The JSON representation of this field (for example `{\"python_params\":[\"john doe\",\"35\"]}`)\ncannot exceed 10,000 bytes.\n\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs\n\nImportant\n\nThese parameters accept only Latin characters (ASCII character set). Using non-ASCII characters returns an error.\nExamples of invalid, non-ASCII characters are Chinese, Japanese kanjis, and emojis.",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "sql_params": {
                      "$ref": "#/$defs/map/string",
                      "description": "A map from keys to values for jobs with SQL task, for example `\"sql_params\": {\"name\": \"john doe\", \"age\": \"35\"}`. The SQL alert task does not support custom parameters.",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    }
                  },
                  "additionalProperties": false,
                  "required": ["job_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.Source": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Optional location type of the SQL file. When set to `WORKSPACE`, the SQL file will be retrieved\\\nfrom the local Databricks workspace. When set to `GIT`, the SQL file will be retrieved from a Git repository\ndefined in `git_source`. If the value is empty, the task will use `GIT` if `git_source` is defined and `WORKSPACE` otherwise.\n\n* `WORKSPACE`: SQL file is located in Databricks workspace.\n* `GIT`: SQL file is located in cloud Git provider.",
                  "enum": ["WORKSPACE", "GIT"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SparkJarTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "jar_uri": {
                      "$ref": "#/$defs/string",
                      "description": "Deprecated since 04/2016. Provide a `jar` through the `libraries` field instead. For an example, see :method:jobs/create.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "main_class_name": {
                      "$ref": "#/$defs/string",
                      "description": "The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library.\n\nThe code must use `SparkContext.getOrCreate` to obtain a Spark context; otherwise, runs of the job fail."
                    },
                    "parameters": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Parameters passed to the main method.\n\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs."
                    },
                    "run_as_repl": {
                      "$ref": "#/$defs/bool",
                      "description": "Deprecated. A value of `false` is no longer supported.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SparkPythonTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Command line parameters passed to the Python file.\n\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs."
                    },
                    "python_file": {
                      "$ref": "#/$defs/string",
                      "description": "The Python file to be executed. Cloud file URIs (such as dbfs:/, s3:/, adls:/, gcs:/) and workspace paths are supported. For python files stored in the Databricks workspace, the path must be absolute and begin with `/`. For files stored in a remote repository, the path must be relative. This field is required."
                    },
                    "source": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Source",
                      "description": "Optional location type of the Python file. When set to `WORKSPACE` or not specified, the file will be retrieved from the local\nDatabricks workspace or cloud location (if the `python_file` has a URI format). When set to `GIT`,\nthe Python file will be retrieved from a Git repository defined in `git_source`.\n\n* `WORKSPACE`: The Python file is located in a Databricks workspace or at a cloud filesystem URI.\n* `GIT`: The Python file is located in a remote Git repository."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["python_file"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SparkSubmitTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Command-line parameters passed to spark submit.\n\nUse [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SqlTask": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "alert": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SqlTaskAlert",
                      "description": "If alert, indicates that this job must refresh a SQL alert."
                    },
                    "dashboard": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SqlTaskDashboard",
                      "description": "If dashboard, indicates that this job must refresh a SQL dashboard."
                    },
                    "file": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SqlTaskFile",
                      "description": "If file, indicates that this job runs a SQL file in a remote Git repository."
                    },
                    "parameters": {
                      "$ref": "#/$defs/map/string",
                      "description": "Parameters to be used for each run of this job. The SQL alert task does not support custom parameters."
                    },
                    "query": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SqlTaskQuery",
                      "description": "If query, indicates that this job must execute a SQL query."
                    },
                    "warehouse_id": {
                      "$ref": "#/$defs/string",
                      "description": "The canonical identifier of the SQL warehouse. Recommended to use with serverless or pro SQL warehouses. Classic SQL warehouses are only supported for SQL alert, dashboard and query tasks and are limited to scheduled single-task jobs."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["warehouse_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SqlTaskAlert": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "alert_id": {
                      "$ref": "#/$defs/string",
                      "description": "The canonical identifier of the SQL alert."
                    },
                    "pause_subscriptions": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, the alert notifications are not sent to subscribers."
                    },
                    "subscriptions": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.SqlTaskSubscription",
                      "description": "If specified, alert notifications are sent to subscribers."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["alert_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SqlTaskDashboard": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "custom_subject": {
                      "$ref": "#/$defs/string",
                      "description": "Subject of the email sent to subscribers of this task."
                    },
                    "dashboard_id": {
                      "$ref": "#/$defs/string",
                      "description": "The canonical identifier of the SQL dashboard."
                    },
                    "pause_subscriptions": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, the dashboard snapshot is not taken, and emails are not sent to subscribers."
                    },
                    "subscriptions": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.SqlTaskSubscription",
                      "description": "If specified, dashboard snapshots are sent to subscriptions."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["dashboard_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SqlTaskFile": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "path": {
                      "$ref": "#/$defs/string",
                      "description": "Path of the SQL file. Must be relative if the source is a remote Git repository and absolute for workspace paths."
                    },
                    "source": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Source",
                      "description": "Optional location type of the SQL file. When set to `WORKSPACE`, the SQL file will be retrieved\nfrom the local Databricks workspace. When set to `GIT`, the SQL file will be retrieved from a Git repository\ndefined in `git_source`. If the value is empty, the task will use `GIT` if `git_source` is defined and `WORKSPACE` otherwise.\n\n* `WORKSPACE`: SQL file is located in Databricks workspace.\n* `GIT`: SQL file is located in cloud Git provider."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["path"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SqlTaskQuery": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "query_id": {
                      "$ref": "#/$defs/string",
                      "description": "The canonical identifier of the SQL query."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["query_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SqlTaskSubscription": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "destination_id": {
                      "$ref": "#/$defs/string",
                      "description": "The canonical identifier of the destination to receive email notification. This parameter is mutually exclusive with user_name. You cannot set both destination_id and user_name for subscription notifications."
                    },
                    "user_name": {
                      "$ref": "#/$defs/string",
                      "description": "The user name to receive the subscription email. This parameter is mutually exclusive with destination_id. You cannot set both destination_id and user_name for subscription notifications."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.StorageMode": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["DIRECT_QUERY", "IMPORT", "DUAL"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.Subscription": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "custom_subject": {
                      "$ref": "#/$defs/string",
                      "description": "Optional: Allows users to specify a custom subject line on the email sent\nto subscribers."
                    },
                    "paused": {
                      "$ref": "#/$defs/bool",
                      "description": "When true, the subscription will not send emails."
                    },
                    "subscribers": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.SubscriptionSubscriber"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.SubscriptionSubscriber": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "destination_id": {
                      "$ref": "#/$defs/string"
                    },
                    "user_name": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.TableUpdateTriggerConfiguration": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "condition": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Condition",
                      "description": "The table(s) condition based on which to trigger a job run."
                    },
                    "min_time_between_triggers_seconds": {
                      "$ref": "#/$defs/int",
                      "description": "If set, the trigger starts a run only after the specified amount of time has passed since\nthe last time the trigger fired. The minimum allowed value is 60 seconds."
                    },
                    "table_names": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of Delta tables to monitor for changes. The table name must be in the format `catalog_name.schema_name.table_name`."
                    },
                    "wait_after_last_change_seconds": {
                      "$ref": "#/$defs/int",
                      "description": "If set, the trigger starts a run only after no table updates have occurred for the specified time\nand can be used to wait for a series of table updates before triggering a run. The\nminimum allowed value is 60 seconds."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.Task": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "clean_rooms_notebook_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.CleanRoomsNotebookTask",
                      "description": "The task runs a [clean rooms](https://docs.databricks.com/en/clean-rooms/index.html) notebook\nwhen the `clean_rooms_notebook_task` field is present."
                    },
                    "condition_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.ConditionTask",
                      "description": "The task evaluates a condition that can be used to control the execution of other tasks when the `condition_task` field is present.\nThe condition task does not require a cluster to execute and does not support retries or notifications."
                    },
                    "dashboard_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.DashboardTask",
                      "description": "The task refreshes a dashboard and sends a snapshot to subscribers."
                    },
                    "dbt_cloud_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.DbtCloudTask",
                      "description": "Task type for dbt cloud, deprecated in favor of the new name dbt_platform_task",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "dbt_platform_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.DbtPlatformTask",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "dbt_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.DbtTask",
                      "description": "The task runs one or more dbt commands when the `dbt_task` field is present. The dbt task requires both Databricks SQL and the ability to use a serverless or a pro SQL warehouse."
                    },
                    "depends_on": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.TaskDependency",
                      "description": "An optional array of objects specifying the dependency graph of the task. All tasks specified in this field must complete before executing this task. The task will run only if the `run_if` condition is true.\nThe key is `task_key`, and the value is the name assigned to the dependent task."
                    },
                    "description": {
                      "$ref": "#/$defs/string",
                      "description": "An optional description for this task."
                    },
                    "disable_auto_optimization": {
                      "$ref": "#/$defs/bool",
                      "description": "An option to disable auto optimization in serverless"
                    },
                    "email_notifications": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.TaskEmailNotifications",
                      "description": "An optional set of email addresses that is notified when runs of this task begin or complete as well as when this task is deleted. The default behavior is to not send any emails."
                    },
                    "environment_key": {
                      "$ref": "#/$defs/string",
                      "description": "The key that references an environment spec in a job. This field is required for Python script, Python wheel and dbt tasks when using serverless compute."
                    },
                    "existing_cluster_id": {
                      "$ref": "#/$defs/string",
                      "description": "If existing_cluster_id, the ID of an existing cluster that is used for all runs.\nWhen running jobs or tasks on an existing cluster, you may need to manually restart\nthe cluster if it stops responding. We suggest running jobs and tasks on new clusters for\ngreater reliability"
                    },
                    "for_each_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.ForEachTask",
                      "description": "The task executes a nested task for every input provided when the `for_each_task` field is present."
                    },
                    "gen_ai_compute_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.GenAiComputeTask",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "health": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthRules"
                    },
                    "job_cluster_key": {
                      "$ref": "#/$defs/string",
                      "description": "If job_cluster_key, this task is executed reusing the cluster specified in `job.settings.job_clusters`."
                    },
                    "libraries": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/compute.Library",
                      "description": "An optional list of libraries to be installed on the cluster.\nThe default value is an empty list."
                    },
                    "max_retries": {
                      "$ref": "#/$defs/int",
                      "description": "An optional maximum number of times to retry an unsuccessful run. A run is considered to be unsuccessful if it completes with the `FAILED` result_state or `INTERNAL_ERROR` `life_cycle_state`. The value `-1` means to retry indefinitely and the value `0` means to never retry."
                    },
                    "min_retry_interval_millis": {
                      "$ref": "#/$defs/int",
                      "description": "An optional minimal interval in milliseconds between the start of the failed run and the subsequent retry run. The default behavior is that unsuccessful runs are immediately retried."
                    },
                    "new_cluster": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.ClusterSpec",
                      "description": "If new_cluster, a description of a new cluster that is created for each run."
                    },
                    "notebook_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.NotebookTask",
                      "description": "The task runs a notebook when the `notebook_task` field is present."
                    },
                    "notification_settings": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.TaskNotificationSettings",
                      "description": "Optional notification settings that are used when sending notifications to each of the `email_notifications` and `webhook_notifications` for this task."
                    },
                    "pipeline_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PipelineTask",
                      "description": "The task triggers a pipeline update when the `pipeline_task` field is present. Only pipelines configured to use triggered more are supported."
                    },
                    "power_bi_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PowerBiTask",
                      "description": "The task triggers a Power BI semantic model update when the `power_bi_task` field is present."
                    },
                    "python_wheel_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PythonWheelTask",
                      "description": "The task runs a Python wheel when the `python_wheel_task` field is present."
                    },
                    "retry_on_timeout": {
                      "$ref": "#/$defs/bool",
                      "description": "An optional policy to specify whether to retry a job when it times out. The default behavior\nis to not retry on timeout."
                    },
                    "run_if": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.RunIf",
                      "description": "An optional value specifying the condition determining whether the task is run once its dependencies have been completed.\n\n* `ALL_SUCCESS`: All dependencies have executed and succeeded\n* `AT_LEAST_ONE_SUCCESS`: At least one dependency has succeeded\n* `NONE_FAILED`: None of the dependencies have failed and at least one was executed\n* `ALL_DONE`: All dependencies have been completed\n* `AT_LEAST_ONE_FAILED`: At least one dependency failed\n* `ALL_FAILED`: ALl dependencies have failed"
                    },
                    "run_job_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.RunJobTask",
                      "description": "The task triggers another job when the `run_job_task` field is present."
                    },
                    "spark_jar_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SparkJarTask",
                      "description": "The task runs a JAR when the `spark_jar_task` field is present."
                    },
                    "spark_python_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SparkPythonTask",
                      "description": "The task runs a Python file when the `spark_python_task` field is present."
                    },
                    "spark_submit_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SparkSubmitTask",
                      "description": "(Legacy) The task runs the spark-submit script when the `spark_submit_task` field is present. This task can run only on new clusters and is not compatible with serverless compute.\n\nIn the `new_cluster` specification, `libraries` and `spark_conf` are not supported. Instead, use `--jars` and `--py-files` to add Java and Python libraries and `--conf` to set the Spark configurations.\n\n`master`, `deploy-mode`, and `executor-cores` are automatically configured by Databricks; you _cannot_ specify them in parameters.\n\nBy default, the Spark submit job uses all available memory (excluding reserved memory for Databricks services). You can set `--driver-memory`, and `--executor-memory` to a smaller value to leave some room for off-heap usage.\n\nThe `--jars`, `--py-files`, `--files` arguments support DBFS and S3 paths."
                    },
                    "sql_task": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SqlTask",
                      "description": "The task runs a SQL query or file, or it refreshes a SQL alert or a legacy SQL dashboard when the `sql_task` field is present."
                    },
                    "task_key": {
                      "$ref": "#/$defs/string",
                      "description": "A unique name for the task. This field is used to refer to this task from other tasks.\nThis field is required and must be unique within its parent job.\nOn Update or Reset, this field is used to reference the tasks to be updated or reset."
                    },
                    "timeout_seconds": {
                      "$ref": "#/$defs/int",
                      "description": "An optional timeout applied to each run of this job task. A value of `0` means no timeout."
                    },
                    "webhook_notifications": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.WebhookNotifications",
                      "description": "A collection of system notification IDs to notify when runs of this task begin or complete. The default behavior is to not send any system notifications."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["task_key"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.TaskDependency": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "outcome": {
                      "$ref": "#/$defs/string",
                      "description": "Can only be specified on condition task dependencies. The outcome of the dependent task that must be met for this task to run."
                    },
                    "task_key": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the task this task depends on."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["task_key"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.TaskEmailNotifications": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "no_alert_for_skipped_runs": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, do not send email to recipients specified in `on_failure` if the run is skipped.\nThis field is `deprecated`. Please use the `notification_settings.no_alert_for_skipped_runs` field.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "on_duration_warning_threshold_exceeded": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when the duration of a run exceeds the threshold specified for the `RUN_DURATION_SECONDS` metric in the `health` field. If no rule for the `RUN_DURATION_SECONDS` metric is specified in the `health` field for the job, notifications are not sent."
                    },
                    "on_failure": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when a run unsuccessfully completes. A run is considered to have completed unsuccessfully if it ends with an `INTERNAL_ERROR` `life_cycle_state` or a `FAILED`, or `TIMED_OUT` result_state. If this is not specified on job creation, reset, or update the list is empty, and notifications are not sent."
                    },
                    "on_start": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when a run begins. If not specified on job creation, reset, or update, the list is empty, and notifications are not sent."
                    },
                    "on_streaming_backlog_exceeded": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to notify when any streaming backlog thresholds are exceeded for any stream.\nStreaming backlog thresholds can be set in the `health` field using the following metrics: `STREAMING_BACKLOG_BYTES`, `STREAMING_BACKLOG_RECORDS`, `STREAMING_BACKLOG_SECONDS`, or `STREAMING_BACKLOG_FILES`.\nAlerting is based on the 10-minute average of these metrics. If the issue persists, notifications are resent every 30 minutes."
                    },
                    "on_success": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when a run successfully completes. A run is considered to have completed successfully if it ends with a `TERMINATED` `life_cycle_state` and a `SUCCESS` result_state. If not specified on job creation, reset, or update, the list is empty, and notifications are not sent."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.TaskNotificationSettings": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "alert_on_last_attempt": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, do not send notifications to recipients specified in `on_start` for the retried runs and do not send notifications to recipients specified in `on_failure` until the last retry of the run."
                    },
                    "no_alert_for_canceled_runs": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, do not send notifications to recipients specified in `on_failure` if the run is canceled."
                    },
                    "no_alert_for_skipped_runs": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, do not send notifications to recipients specified in `on_failure` if the run is skipped."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.TaskRetryMode": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "task retry mode of the continuous job\n* NEVER: The failed task will not be retried.\n* ON_FAILURE: Retry a failed task if at least one other task in the job is still running its first attempt.\nWhen this condition is no longer met or the retry limit is reached, the job run is cancelled and a new run is started.",
                  "enum": ["NEVER", "ON_FAILURE"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.TriggerSettings": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "file_arrival": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.FileArrivalTriggerConfiguration",
                      "description": "File arrival trigger settings."
                    },
                    "pause_status": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PauseStatus",
                      "description": "Whether this trigger is paused or not."
                    },
                    "periodic": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PeriodicTriggerConfiguration",
                      "description": "Periodic trigger settings."
                    },
                    "table": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.TableUpdateTriggerConfiguration",
                      "description": "Old table trigger settings name. Deprecated in favor of `table_update`.",
                      "x-databricks-preview": "PRIVATE",
                      "deprecationMessage": "This field is deprecated",
                      "doNotSuggest": true,
                      "deprecated": true
                    },
                    "table_update": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.TableUpdateTriggerConfiguration",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.Webhook": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "jobs.WebhookNotifications": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "on_duration_warning_threshold_exceeded": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.Webhook",
                      "description": "An optional list of system notification IDs to call when the duration of a run exceeds the threshold specified for the `RUN_DURATION_SECONDS` metric in the `health` field. A maximum of 3 destinations can be specified for the `on_duration_warning_threshold_exceeded` property."
                    },
                    "on_failure": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.Webhook",
                      "description": "An optional list of system notification IDs to call when the run fails. A maximum of 3 destinations can be specified for the `on_failure` property."
                    },
                    "on_start": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.Webhook",
                      "description": "An optional list of system notification IDs to call when the run starts. A maximum of 3 destinations can be specified for the `on_start` property."
                    },
                    "on_streaming_backlog_exceeded": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.Webhook",
                      "description": "An optional list of system notification IDs to call when any streaming backlog thresholds are exceeded for any stream.\nStreaming backlog thresholds can be set in the `health` field using the following metrics: `STREAMING_BACKLOG_BYTES`, `STREAMING_BACKLOG_RECORDS`, `STREAMING_BACKLOG_SECONDS`, or `STREAMING_BACKLOG_FILES`.\nAlerting is based on the 10-minute average of these metrics. If the issue persists, notifications are resent every 30 minutes.\nA maximum of 3 destinations can be specified for the `on_streaming_backlog_exceeded` property."
                    },
                    "on_success": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/jobs.Webhook",
                      "description": "An optional list of system notification IDs to call when the run completes successfully. A maximum of 3 destinations can be specified for the `on_success` property."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "ml.ExperimentTag": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "A tag for an experiment.",
                  "properties": {
                    "key": {
                      "$ref": "#/$defs/string",
                      "description": "The tag key."
                    },
                    "value": {
                      "$ref": "#/$defs/string",
                      "description": "The tag value."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "ml.ModelTag": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Tag for a registered model",
                  "properties": {
                    "key": {
                      "$ref": "#/$defs/string",
                      "description": "The tag key."
                    },
                    "value": {
                      "$ref": "#/$defs/string",
                      "description": "The tag value."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.CronTrigger": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "quartz_cron_schedule": {
                      "$ref": "#/$defs/string"
                    },
                    "timezone_id": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.DayOfWeek": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Days of week in which the restart is allowed to happen (within a five-hour window starting at start_hour).\nIf not specified all days of the week will be used.",
                  "enum": [
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY",
                    "SUNDAY"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.DeploymentKind": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "The deployment method that manages the pipeline:\n- BUNDLE: The pipeline is managed by a Databricks Asset Bundle.",
                  "enum": ["BUNDLE"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.EventLogSpec": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configurable event log parameters.",
                  "properties": {
                    "catalog": {
                      "$ref": "#/$defs/string",
                      "description": "The UC catalog the event log is published under."
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "The name the event log is published to in UC."
                    },
                    "schema": {
                      "$ref": "#/$defs/string",
                      "description": "The UC schema the event log is published under."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.FileLibrary": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "path": {
                      "$ref": "#/$defs/string",
                      "description": "The absolute path of the source code."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.Filters": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "exclude": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Paths to exclude."
                    },
                    "include": {
                      "$ref": "#/$defs/slice/string",
                      "description": "Paths to include."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.IngestionConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "report": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.ReportSpec",
                      "description": "Select a specific source report."
                    },
                    "schema": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.SchemaSpec",
                      "description": "Select all tables from a specific source schema."
                    },
                    "table": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.TableSpec",
                      "description": "Select a specific source table."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.IngestionGatewayPipelineDefinition": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "connection_id": {
                      "$ref": "#/$defs/string",
                      "description": "[Deprecated, use connection_name instead] Immutable. The Unity Catalog connection that this gateway pipeline uses to communicate with the source.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "connection_name": {
                      "$ref": "#/$defs/string",
                      "description": "Immutable. The Unity Catalog connection that this gateway pipeline uses to communicate with the source."
                    },
                    "gateway_storage_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "Required, Immutable. The name of the catalog for the gateway pipeline's storage location."
                    },
                    "gateway_storage_name": {
                      "$ref": "#/$defs/string",
                      "description": "Optional. The Unity Catalog-compatible name for the gateway storage location.\nThis is the destination to use for the data that is extracted by the gateway.\nDelta Live Tables system will automatically create the storage location under the catalog and schema."
                    },
                    "gateway_storage_schema": {
                      "$ref": "#/$defs/string",
                      "description": "Required, Immutable. The name of the schema for the gateway pipelines's storage location."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "connection_name",
                    "gateway_storage_catalog",
                    "gateway_storage_schema"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.IngestionPipelineDefinition": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "connection_name": {
                      "$ref": "#/$defs/string",
                      "description": "Immutable. The Unity Catalog connection that this ingestion pipeline uses to communicate with the source. This is used with connectors for applications like Salesforce, Workday, and so on."
                    },
                    "ingestion_gateway_id": {
                      "$ref": "#/$defs/string",
                      "description": "Immutable. Identifier for the gateway that is used by this ingestion pipeline to communicate with the source database. This is used with connectors to databases like SQL Server."
                    },
                    "objects": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/pipelines.IngestionConfig",
                      "description": "Required. Settings specifying tables to replicate and the destination for the replicated tables."
                    },
                    "source_configurations": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/pipelines.SourceConfig",
                      "description": "Top-level source configurations",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "source_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.IngestionSourceType",
                      "description": "The type of the foreign source.\nThe source type will be inferred from the source connection or ingestion gateway.\nThis field is output only and will be ignored if provided."
                    },
                    "table_configuration": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.TableSpecificConfig",
                      "description": "Configuration settings to control the ingestion of tables. These settings are applied to all tables in the pipeline."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.IngestionPipelineDefinitionTableSpecificConfigQueryBasedConnectorConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configurations that are only applicable for query-based ingestion connectors.",
                  "properties": {
                    "cursor_columns": {
                      "$ref": "#/$defs/slice/string",
                      "description": "The names of the monotonically increasing columns in the source table that are used to enable\nthe table to be read and ingested incrementally through structured streaming.\nThe columns are allowed to have repeated values but have to be non-decreasing.\nIf the source data is merged into the destination (e.g., using SCD Type 1 or Type 2), these\ncolumns will implicitly define the `sequence_by` behavior. You can still explicitly set\n`sequence_by` to override this default.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "deletion_condition": {
                      "$ref": "#/$defs/string",
                      "description": "Specifies a SQL WHERE condition that specifies that the source row has been deleted.\nThis is sometimes referred to as \"soft-deletes\".\nFor example: \"Operation = 'DELETE'\" or \"is_deleted = true\".\nThis field is orthogonal to `hard_deletion_sync_interval_in_seconds`,\none for soft-deletes and the other for hard-deletes.\nSee also the hard_deletion_sync_min_interval_in_seconds field for\nhandling of \"hard deletes\" where the source rows are physically removed from the table.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "hard_deletion_sync_min_interval_in_seconds": {
                      "$ref": "#/$defs/int64",
                      "description": "Specifies the minimum interval (in seconds) between snapshots on primary keys\nfor detecting and synchronizing hard deletions—i.e., rows that have been\nphysically removed from the source table.\nThis interval acts as a lower bound. If ingestion runs less frequently than\nthis value, hard deletion synchronization will align with the actual ingestion\nfrequency instead of happening more often.\nIf not set, hard deletion synchronization via snapshots is disabled.\nThis field is mutable and can be updated without triggering a full snapshot.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.IngestionSourceType": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "MYSQL",
                    "POSTGRESQL",
                    "REDSHIFT",
                    "SQLDW",
                    "SQLSERVER",
                    "SALESFORCE",
                    "BIGQUERY",
                    "NETSUITE",
                    "WORKDAY_RAAS",
                    "GA4_RAW_DATA",
                    "SERVICENOW",
                    "MANAGED_POSTGRESQL",
                    "ORACLE",
                    "TERADATA",
                    "SHAREPOINT",
                    "DYNAMICS365",
                    "CONFLUENCE",
                    "META_MARKETING"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.ManualTrigger": {
              "oneOf": [
                {
                  "type": "object",
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.NotebookLibrary": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "path": {
                      "$ref": "#/$defs/string",
                      "description": "The absolute path of the source code."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.Notifications": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "alerts": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of alerts that trigger the sending of notifications to the configured\ndestinations. The supported alerts are:\n\n* `on-update-success`: A pipeline update completes successfully.\n* `on-update-failure`: Each time a pipeline update fails.\n* `on-update-fatal-failure`: A pipeline update fails with a non-retryable (fatal) error.\n* `on-flow-failure`: A single data flow fails."
                    },
                    "email_recipients": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses notified when a configured alert is triggered."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PathPattern": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "include": {
                      "$ref": "#/$defs/string",
                      "description": "The source code to include for pipelines"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PipelineCluster": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "apply_policy_default_values": {
                      "$ref": "#/$defs/bool",
                      "description": "Note: This field won't be persisted. Only API users will check this field."
                    },
                    "autoscale": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PipelineClusterAutoscale",
                      "description": "Parameters needed in order to automatically scale clusters up and down based on load.\nNote: autoscaling works best with DB runtime versions 3.0 or later."
                    },
                    "aws_attributes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AwsAttributes",
                      "description": "Attributes related to clusters running on Amazon Web Services.\nIf not specified at cluster creation, a set of default values will be used."
                    },
                    "azure_attributes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.AzureAttributes",
                      "description": "Attributes related to clusters running on Microsoft Azure.\nIf not specified at cluster creation, a set of default values will be used."
                    },
                    "cluster_log_conf": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.ClusterLogConf",
                      "description": "The configuration for delivering spark logs to a long-term storage destination.\nOnly dbfs destinations are supported. Only one destination can be specified\nfor one cluster. If the conf is given, the logs will be delivered to the destination every\n`5 mins`. The destination of driver logs is `$destination/$clusterId/driver`, while\nthe destination of executor logs is `$destination/$clusterId/executor`."
                    },
                    "custom_tags": {
                      "$ref": "#/$defs/map/string",
                      "description": "Additional tags for cluster resources. Databricks will tag all cluster resources (e.g., AWS\ninstances and EBS volumes) with these tags in addition to `default_tags`. Notes:\n\n- Currently, Databricks allows at most 45 custom tags\n\n- Clusters can only reuse cloud resources if the resources' tags are a subset of the cluster tags"
                    },
                    "driver_instance_pool_id": {
                      "$ref": "#/$defs/string",
                      "description": "The optional ID of the instance pool for the driver of the cluster belongs.\nThe pool cluster uses the instance pool with id (instance_pool_id) if the driver pool is not\nassigned."
                    },
                    "driver_node_type_id": {
                      "$ref": "#/$defs/string",
                      "description": "The node type of the Spark driver.\nNote that this field is optional; if unset, the driver node type will be set as the same value\nas `node_type_id` defined above."
                    },
                    "enable_local_disk_encryption": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to enable local disk encryption for the cluster."
                    },
                    "gcp_attributes": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.GcpAttributes",
                      "description": "Attributes related to clusters running on Google Cloud Platform.\nIf not specified at cluster creation, a set of default values will be used."
                    },
                    "init_scripts": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/compute.InitScriptInfo",
                      "description": "The configuration for storing init scripts. Any number of destinations can be specified. The scripts are executed sequentially in the order provided. If `cluster_log_conf` is specified, init script logs are sent to `\u003cdestination\u003e/\u003ccluster-ID\u003e/init_scripts`."
                    },
                    "instance_pool_id": {
                      "$ref": "#/$defs/string",
                      "description": "The optional ID of the instance pool to which the cluster belongs."
                    },
                    "label": {
                      "$ref": "#/$defs/string",
                      "description": "A label for the cluster specification, either `default` to configure the default cluster, or `maintenance` to configure the maintenance cluster. This field is optional. The default value is `default`."
                    },
                    "node_type_id": {
                      "$ref": "#/$defs/string",
                      "description": "This field encodes, through a single value, the resources available to each of\nthe Spark nodes in this cluster. For example, the Spark nodes can be provisioned\nand optimized for memory or compute intensive workloads. A list of available node\ntypes can be retrieved by using the :method:clusters/listNodeTypes API call."
                    },
                    "num_workers": {
                      "$ref": "#/$defs/int",
                      "description": "Number of worker nodes that this cluster should have. A cluster has one Spark Driver\nand `num_workers` Executors for a total of `num_workers` + 1 Spark nodes.\n\nNote: When reading the properties of a cluster, this field reflects the desired number\nof workers rather than the actual current number of workers. For instance, if a cluster\nis resized from 5 to 10 workers, this field will immediately be updated to reflect\nthe target size of 10 workers, whereas the workers listed in `spark_info` will gradually\nincrease from 5 to 10 as the new nodes are provisioned."
                    },
                    "policy_id": {
                      "$ref": "#/$defs/string",
                      "description": "The ID of the cluster policy used to create the cluster if applicable."
                    },
                    "spark_conf": {
                      "$ref": "#/$defs/map/string",
                      "description": "An object containing a set of optional, user-specified Spark configuration key-value pairs.\nSee :method:clusters/create for more details."
                    },
                    "spark_env_vars": {
                      "$ref": "#/$defs/map/string",
                      "description": "An object containing a set of optional, user-specified environment variable key-value pairs.\nPlease note that key-value pair of the form (X,Y) will be exported as is (i.e.,\n`export X='Y'`) while launching the driver and workers.\n\nIn order to specify an additional set of `SPARK_DAEMON_JAVA_OPTS`, we recommend appending\nthem to `$SPARK_DAEMON_JAVA_OPTS` as shown in the example below. This ensures that all\ndefault databricks managed environmental variables are included as well.\n\nExample Spark environment variables:\n`{\"SPARK_WORKER_MEMORY\": \"28000m\", \"SPARK_LOCAL_DIRS\": \"/local_disk0\"}` or\n`{\"SPARK_DAEMON_JAVA_OPTS\": \"$SPARK_DAEMON_JAVA_OPTS -Dspark.shuffle.service.enabled=true\"}`"
                    },
                    "ssh_public_keys": {
                      "$ref": "#/$defs/slice/string",
                      "description": "SSH public key contents that will be added to each Spark node in this cluster. The\ncorresponding private keys can be used to login with the user name `ubuntu` on port `2200`.\nUp to 10 keys can be specified."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PipelineClusterAutoscale": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "max_workers": {
                      "$ref": "#/$defs/int",
                      "description": "The maximum number of workers to which the cluster can scale up when overloaded. `max_workers` must be strictly greater than `min_workers`."
                    },
                    "min_workers": {
                      "$ref": "#/$defs/int",
                      "description": "The minimum number of workers the cluster can scale down to when underutilized.\nIt is also the initial number of workers the cluster will have after creation."
                    },
                    "mode": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PipelineClusterAutoscaleMode",
                      "description": "Databricks Enhanced Autoscaling optimizes cluster utilization by automatically\nallocating cluster resources based on workload volume, with minimal impact to\nthe data processing latency of your pipelines. Enhanced Autoscaling is available\nfor `updates` clusters only. The legacy autoscaling feature is used for `maintenance`\nclusters."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["max_workers", "min_workers"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PipelineClusterAutoscaleMode": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Databricks Enhanced Autoscaling optimizes cluster utilization by automatically\nallocating cluster resources based on workload volume, with minimal impact to\nthe data processing latency of your pipelines. Enhanced Autoscaling is available\nfor `updates` clusters only. The legacy autoscaling feature is used for `maintenance`\nclusters.",
                  "enum": ["ENHANCED", "LEGACY"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PipelineDeployment": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.DeploymentKind",
                      "description": "The deployment method that manages the pipeline."
                    },
                    "metadata_file_path": {
                      "$ref": "#/$defs/string",
                      "description": "The path to the file containing metadata about the deployment."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["kind"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PipelineLibrary": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "file": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.FileLibrary",
                      "description": "The path to a file that defines a pipeline and is stored in the Databricks Repos."
                    },
                    "glob": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PathPattern",
                      "description": "The unified field to include source codes.\nEach entry can be a notebook path, a file path, or a folder path that ends `/**`.\nThis field cannot be used together with `notebook` or `file`."
                    },
                    "jar": {
                      "$ref": "#/$defs/string",
                      "description": "URI of the jar to be installed. Currently only DBFS is supported.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "maven": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.MavenLibrary",
                      "description": "Specification of a maven library to be installed.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "notebook": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.NotebookLibrary",
                      "description": "The path to a notebook that defines a pipeline and is stored in the Databricks workspace."
                    },
                    "whl": {
                      "$ref": "#/$defs/string",
                      "description": "URI of the whl to be installed.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PipelineTrigger": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "cron": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.CronTrigger"
                    },
                    "manual": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.ManualTrigger"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PipelinesEnvironment": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "The environment entity used to preserve serverless environment side panel, jobs' environment for non-notebook task, and DLT's environment for classic and serverless pipelines.\nIn this minimal environment spec, only pip dependencies are supported.",
                  "properties": {
                    "dependencies": {
                      "$ref": "#/$defs/slice/string",
                      "description": "List of pip dependencies, as supported by the version of pip in this environment.\nEach dependency is a pip requirement file line https://pip.pypa.io/en/stable/reference/requirements-file-format/\nAllowed dependency could be \u003crequirement specifier\u003e, \u003carchive url/path\u003e, \u003clocal project path\u003e(WSFS or Volumes in Databricks), \u003cvcs project url\u003e"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PostgresCatalogConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "PG-specific catalog-level configuration parameters",
                  "properties": {
                    "slot_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PostgresSlotConfig",
                      "description": "Optional. The Postgres slot configuration to use for logical replication",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.PostgresSlotConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "PostgresSlotConfig contains the configuration for a Postgres logical replication slot",
                  "properties": {
                    "publication_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the publication to use for the Postgres source",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "slot_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the logical replication slot to use for the Postgres source",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.ReportSpec": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "destination_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Destination catalog to store table."
                    },
                    "destination_schema": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Destination schema to store table."
                    },
                    "destination_table": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Destination table name. The pipeline fails if a table with that name already exists."
                    },
                    "source_url": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Report URL in the source system."
                    },
                    "table_configuration": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.TableSpecificConfig",
                      "description": "Configuration settings to control the ingestion of tables. These settings override the table_configuration defined in the IngestionPipelineDefinition object."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "destination_catalog",
                    "destination_schema",
                    "source_url"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.RestartWindow": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "days_of_week": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/pipelines.DayOfWeek",
                      "description": "Days of week in which the restart is allowed to happen (within a five-hour window starting at start_hour).\nIf not specified all days of the week will be used."
                    },
                    "start_hour": {
                      "$ref": "#/$defs/int",
                      "description": "An integer between 0 and 23 denoting the start hour for the restart window in the 24-hour day.\nContinuous pipeline restart is triggered only within a five-hour window starting at this hour."
                    },
                    "time_zone_id": {
                      "$ref": "#/$defs/string",
                      "description": "Time zone id of restart window. See https://docs.databricks.com/sql/language-manual/sql-ref-syntax-aux-conf-mgmt-set-timezone.html for details.\nIf not specified, UTC will be used."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["start_hour"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.RunAs": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Write-only setting, available only in Create/Update calls. Specifies the user or service principal that the pipeline runs as. If not specified, the pipeline runs as the user who created the pipeline.\n\nOnly `user_name` or `service_principal_name` can be specified. If both are specified, an error is thrown.",
                  "properties": {
                    "service_principal_name": {
                      "$ref": "#/$defs/string",
                      "description": "Application ID of an active service principal. Setting this field requires the `servicePrincipal/user` role."
                    },
                    "user_name": {
                      "$ref": "#/$defs/string",
                      "description": "The email of an active workspace user. Users can only set this field to their own email."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.SchemaSpec": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "destination_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Destination catalog to store tables."
                    },
                    "destination_schema": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Destination schema to store tables in. Tables with the same name as the source tables are created in this destination schema. The pipeline fails If a table with the same name already exists."
                    },
                    "source_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "The source catalog name. Might be optional depending on the type of source."
                    },
                    "source_schema": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Schema name in the source database."
                    },
                    "table_configuration": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.TableSpecificConfig",
                      "description": "Configuration settings to control the ingestion of tables. These settings are applied to all tables in this schema and override the table_configuration defined in the IngestionPipelineDefinition object."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "destination_catalog",
                    "destination_schema",
                    "source_schema"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.SourceCatalogConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "SourceCatalogConfig contains catalog-level custom configuration parameters for each source",
                  "properties": {
                    "postgres": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PostgresCatalogConfig",
                      "description": "Postgres-specific catalog-level configuration parameters",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "source_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "Source catalog name",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.SourceConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "catalog": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.SourceCatalogConfig",
                      "description": "Catalog-level source configuration parameters",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.TableSpec": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "destination_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Destination catalog to store table."
                    },
                    "destination_schema": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Destination schema to store table."
                    },
                    "destination_table": {
                      "$ref": "#/$defs/string",
                      "description": "Optional. Destination table name. The pipeline fails if a table with that name already exists. If not set, the source table name is used."
                    },
                    "source_catalog": {
                      "$ref": "#/$defs/string",
                      "description": "Source catalog name. Might be optional depending on the type of source."
                    },
                    "source_schema": {
                      "$ref": "#/$defs/string",
                      "description": "Schema name in the source database. Might be optional depending on the type of source."
                    },
                    "source_table": {
                      "$ref": "#/$defs/string",
                      "description": "Required. Table name in the source database."
                    },
                    "table_configuration": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.TableSpecificConfig",
                      "description": "Configuration settings to control the ingestion of tables. These settings override the table_configuration defined in the IngestionPipelineDefinition object and the SchemaSpec."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "destination_catalog",
                    "destination_schema",
                    "source_table"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.TableSpecificConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "exclude_columns": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of column names to be excluded for the ingestion.\nWhen not specified, include_columns fully controls what columns to be ingested.\nWhen specified, all other columns including future ones will be automatically included for ingestion.\nThis field in mutually exclusive with `include_columns`."
                    },
                    "include_columns": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of column names to be included for the ingestion.\nWhen not specified, all columns except ones in exclude_columns will be included. Future\ncolumns will be automatically included.\nWhen specified, all other future columns will be automatically excluded from ingestion.\nThis field in mutually exclusive with `exclude_columns`."
                    },
                    "primary_keys": {
                      "$ref": "#/$defs/slice/string",
                      "description": "The primary key of the table used to apply changes."
                    },
                    "query_based_connector_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.IngestionPipelineDefinitionTableSpecificConfigQueryBasedConnectorConfig",
                      "description": "Configurations that are only applicable for query-based ingestion connectors.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "salesforce_include_formula_fields": {
                      "$ref": "#/$defs/bool",
                      "description": "If true, formula fields defined in the table are included in the ingestion. This setting is only valid for the Salesforce connector",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "scd_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.TableSpecificConfigScdType",
                      "description": "The SCD type to use to ingest the table.",
                      "x-databricks-preview": "PRIVATE",
                      "doNotSuggest": true
                    },
                    "sequence_by": {
                      "$ref": "#/$defs/slice/string",
                      "description": "The column names specifying the logical order of events in the source data. Delta Live Tables uses this sequencing to handle change events that arrive out of order."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "pipelines.TableSpecificConfigScdType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "The SCD type to use to ingest the table.",
                  "enum": ["SCD_TYPE_1", "SCD_TYPE_2", "APPEND_ONLY"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.Ai21LabsConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "ai21labs_api_key": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for an AI21 Labs API key. If you\nprefer to paste your API key directly, see `ai21labs_api_key_plaintext`.\nYou must provide an API key using one of the following fields:\n`ai21labs_api_key` or `ai21labs_api_key_plaintext`."
                    },
                    "ai21labs_api_key_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "An AI21 Labs API key provided as a plaintext string. If you prefer to\nreference your key using Databricks Secrets, see `ai21labs_api_key`. You\nmust provide an API key using one of the following fields:\n`ai21labs_api_key` or `ai21labs_api_key_plaintext`."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "fallback_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.FallbackConfig",
                      "description": "Configuration for traffic fallback which auto fallbacks to other served entities if the request to a served\nentity fails with certain error codes, to increase availability."
                    },
                    "guardrails": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayGuardrails",
                      "description": "Configuration for AI Guardrails to prevent unwanted data and unsafe data in requests and responses."
                    },
                    "inference_table_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayInferenceTableConfig",
                      "description": "Configuration for payload logging using inference tables.\nUse these tables to monitor and audit data being sent to and received from model APIs and to improve model quality."
                    },
                    "rate_limits": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayRateLimit",
                      "description": "Configuration for rate limits which can be set to limit endpoint traffic."
                    },
                    "usage_tracking_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayUsageTrackingConfig",
                      "description": "Configuration to enable usage tracking using system tables.\nThese tables allow you to monitor operational usage on endpoints and their associated costs."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayGuardrailParameters": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "invalid_keywords": {
                      "$ref": "#/$defs/slice/string",
                      "description": "List of invalid keywords.\nAI guardrail uses keyword or string matching to decide if the keyword exists in the request or response content.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    },
                    "pii": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayGuardrailPiiBehavior",
                      "description": "Configuration for guardrail PII filter."
                    },
                    "safety": {
                      "$ref": "#/$defs/bool",
                      "description": "Indicates whether the safety filter is enabled."
                    },
                    "valid_topics": {
                      "$ref": "#/$defs/slice/string",
                      "description": "The list of allowed topics.\nGiven a chat request, this guardrail flags the request if its topic is not in the allowed topics.",
                      "deprecationMessage": "This field is deprecated",
                      "deprecated": true
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayGuardrailPiiBehavior": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "behavior": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayGuardrailPiiBehaviorBehavior",
                      "description": "Configuration for input guardrail filters."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayGuardrailPiiBehaviorBehavior": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["NONE", "BLOCK", "MASK"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayGuardrails": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "input": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayGuardrailParameters",
                      "description": "Configuration for input guardrail filters."
                    },
                    "output": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayGuardrailParameters",
                      "description": "Configuration for output guardrail filters."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayInferenceTableConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "catalog_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the catalog in Unity Catalog. Required when enabling inference tables.\nNOTE: On update, you have to disable inference table first in order to change the catalog name."
                    },
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Indicates whether the inference table is enabled."
                    },
                    "schema_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the schema in Unity Catalog. Required when enabling inference tables.\nNOTE: On update, you have to disable inference table first in order to change the schema name."
                    },
                    "table_name_prefix": {
                      "$ref": "#/$defs/string",
                      "description": "The prefix of the table in Unity Catalog.\nNOTE: On update, you have to disable inference table first in order to change the prefix name."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayRateLimit": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "calls": {
                      "$ref": "#/$defs/int64",
                      "description": "Used to specify how many calls are allowed for a key within the renewal_period."
                    },
                    "key": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayRateLimitKey",
                      "description": "Key field for a rate limit. Currently, 'user', 'user_group, 'service_principal', and 'endpoint' are supported,\nwith 'endpoint' being the default if not specified."
                    },
                    "principal": {
                      "$ref": "#/$defs/string",
                      "description": "Principal field for a user, user group, or service principal to apply rate limiting to. Accepts a user email, group name, or service principal application ID."
                    },
                    "renewal_period": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayRateLimitRenewalPeriod",
                      "description": "Renewal period field for a rate limit. Currently, only 'minute' is supported."
                    },
                    "tokens": {
                      "$ref": "#/$defs/int64",
                      "description": "Used to specify how many tokens are allowed for a key within the renewal_period."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["renewal_period"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayRateLimitKey": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "user",
                    "endpoint",
                    "user_group",
                    "service_principal"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayRateLimitRenewalPeriod": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["minute"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AiGatewayUsageTrackingConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to enable usage tracking."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AmazonBedrockConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "aws_access_key_id": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for an AWS access key ID with\npermissions to interact with Bedrock services. If you prefer to paste\nyour API key directly, see `aws_access_key_id_plaintext`. You must provide an API\nkey using one of the following fields: `aws_access_key_id` or\n`aws_access_key_id_plaintext`."
                    },
                    "aws_access_key_id_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "An AWS access key ID with permissions to interact with Bedrock services\nprovided as a plaintext string. If you prefer to reference your key using\nDatabricks Secrets, see `aws_access_key_id`. You must provide an API key\nusing one of the following fields: `aws_access_key_id` or\n`aws_access_key_id_plaintext`."
                    },
                    "aws_region": {
                      "$ref": "#/$defs/string",
                      "description": "The AWS region to use. Bedrock has to be enabled there."
                    },
                    "aws_secret_access_key": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for an AWS secret access key paired\nwith the access key ID, with permissions to interact with Bedrock\nservices. If you prefer to paste your API key directly, see\n`aws_secret_access_key_plaintext`. You must provide an API key using one\nof the following fields: `aws_secret_access_key` or\n`aws_secret_access_key_plaintext`."
                    },
                    "aws_secret_access_key_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "An AWS secret access key paired with the access key ID, with permissions\nto interact with Bedrock services provided as a plaintext string. If you\nprefer to reference your key using Databricks Secrets, see\n`aws_secret_access_key`. You must provide an API key using one of the\nfollowing fields: `aws_secret_access_key` or\n`aws_secret_access_key_plaintext`."
                    },
                    "bedrock_provider": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AmazonBedrockConfigBedrockProvider",
                      "description": "The underlying provider in Amazon Bedrock. Supported values (case\ninsensitive) include: Anthropic, Cohere, AI21Labs, Amazon."
                    },
                    "instance_profile_arn": {
                      "$ref": "#/$defs/string",
                      "description": "ARN of the instance profile that the external model will use to access AWS resources.\nYou must authenticate using an instance profile or access keys.\nIf you prefer to authenticate using access keys, see `aws_access_key_id`,\n`aws_access_key_id_plaintext`, `aws_secret_access_key` and `aws_secret_access_key_plaintext`."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["aws_region", "bedrock_provider"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AmazonBedrockConfigBedrockProvider": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["anthropic", "cohere", "ai21labs", "amazon"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AnthropicConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "anthropic_api_key": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for an Anthropic API key. If you\nprefer to paste your API key directly, see `anthropic_api_key_plaintext`.\nYou must provide an API key using one of the following fields:\n`anthropic_api_key` or `anthropic_api_key_plaintext`."
                    },
                    "anthropic_api_key_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The Anthropic API key provided as a plaintext string. If you prefer to\nreference your key using Databricks Secrets, see `anthropic_api_key`. You\nmust provide an API key using one of the following fields:\n`anthropic_api_key` or `anthropic_api_key_plaintext`."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.ApiKeyAuth": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "key": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the API key parameter used for authentication."
                    },
                    "value": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for an API Key.\nIf you prefer to paste your token directly, see `value_plaintext`."
                    },
                    "value_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The API Key provided as a plaintext string. If you prefer to reference your\ntoken using Databricks Secrets, see `value`."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["key"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.AutoCaptureConfigInput": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "catalog_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the catalog in Unity Catalog. NOTE: On update, you cannot change the catalog name if the inference table is already enabled."
                    },
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Indicates whether the inference table is enabled."
                    },
                    "schema_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the schema in Unity Catalog. NOTE: On update, you cannot change the schema name if the inference table is already enabled."
                    },
                    "table_name_prefix": {
                      "$ref": "#/$defs/string",
                      "description": "The prefix of the table in Unity Catalog. NOTE: On update, you cannot change the prefix name if the inference table is already enabled."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.BearerTokenAuth": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "token": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for a token.\nIf you prefer to paste your token directly, see `token_plaintext`."
                    },
                    "token_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The token provided as a plaintext string. If you prefer to reference your\ntoken using Databricks Secrets, see `token`."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.CohereConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "cohere_api_base": {
                      "$ref": "#/$defs/string",
                      "description": "This is an optional field to provide a customized base URL for the Cohere\nAPI. If left unspecified, the standard Cohere base URL is used."
                    },
                    "cohere_api_key": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for a Cohere API key. If you prefer\nto paste your API key directly, see `cohere_api_key_plaintext`. You must\nprovide an API key using one of the following fields: `cohere_api_key` or\n`cohere_api_key_plaintext`."
                    },
                    "cohere_api_key_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The Cohere API key provided as a plaintext string. If you prefer to\nreference your key using Databricks Secrets, see `cohere_api_key`. You\nmust provide an API key using one of the following fields:\n`cohere_api_key` or `cohere_api_key_plaintext`."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.CustomProviderConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configs needed to create a custom provider model route.",
                  "properties": {
                    "api_key_auth": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.ApiKeyAuth",
                      "description": "This is a field to provide API key authentication for the custom provider API.\nYou can only specify one authentication method."
                    },
                    "bearer_token_auth": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.BearerTokenAuth",
                      "description": "This is a field to provide bearer token authentication for the custom provider API.\nYou can only specify one authentication method."
                    },
                    "custom_provider_url": {
                      "$ref": "#/$defs/string",
                      "description": "This is a field to provide the URL of the custom provider API."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["custom_provider_url"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.DatabricksModelServingConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "databricks_api_token": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for a Databricks API token that\ncorresponds to a user or service principal with Can Query access to the\nmodel serving endpoint pointed to by this external model. If you prefer\nto paste your API key directly, see `databricks_api_token_plaintext`. You\nmust provide an API key using one of the following fields:\n`databricks_api_token` or `databricks_api_token_plaintext`."
                    },
                    "databricks_api_token_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks API token that corresponds to a user or service principal\nwith Can Query access to the model serving endpoint pointed to by this\nexternal model provided as a plaintext string. If you prefer to reference\nyour key using Databricks Secrets, see `databricks_api_token`. You must\nprovide an API key using one of the following fields:\n`databricks_api_token` or `databricks_api_token_plaintext`."
                    },
                    "databricks_workspace_url": {
                      "$ref": "#/$defs/string",
                      "description": "The URL of the Databricks workspace containing the model serving endpoint\npointed to by this external model."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["databricks_workspace_url"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.EmailNotifications": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "on_update_failure": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when an endpoint fails to update its configuration or state."
                    },
                    "on_update_success": {
                      "$ref": "#/$defs/slice/string",
                      "description": "A list of email addresses to be notified when an endpoint successfully updates its configuration or state."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.EndpointCoreConfigInput": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "auto_capture_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AutoCaptureConfigInput",
                      "description": "Configuration for Inference Tables which automatically logs requests and responses to Unity Catalog.\nNote: this field is deprecated for creating new provisioned throughput endpoints,\nor updating existing provisioned throughput endpoints that never have inference table configured;\nin these cases please use AI Gateway to manage inference tables."
                    },
                    "served_entities": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/serving.ServedEntityInput",
                      "description": "The list of served entities under the serving endpoint config."
                    },
                    "served_models": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/serving.ServedModelInput",
                      "description": "(Deprecated, use served_entities instead) The list of served models under the serving endpoint config."
                    },
                    "traffic_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.TrafficConfig",
                      "description": "The traffic configuration associated with the serving endpoint config."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.EndpointTag": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "key": {
                      "$ref": "#/$defs/string",
                      "description": "Key field for a serving endpoint tag."
                    },
                    "value": {
                      "$ref": "#/$defs/string",
                      "description": "Optional value field for a serving endpoint tag."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["key"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.ExternalModel": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "ai21labs_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.Ai21LabsConfig",
                      "description": "AI21Labs Config. Only required if the provider is 'ai21labs'."
                    },
                    "amazon_bedrock_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AmazonBedrockConfig",
                      "description": "Amazon Bedrock Config. Only required if the provider is 'amazon-bedrock'."
                    },
                    "anthropic_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AnthropicConfig",
                      "description": "Anthropic Config. Only required if the provider is 'anthropic'."
                    },
                    "cohere_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.CohereConfig",
                      "description": "Cohere Config. Only required if the provider is 'cohere'."
                    },
                    "custom_provider_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.CustomProviderConfig",
                      "description": "Custom Provider Config. Only required if the provider is 'custom'."
                    },
                    "databricks_model_serving_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.DatabricksModelServingConfig",
                      "description": "Databricks Model Serving Config. Only required if the provider is 'databricks-model-serving'."
                    },
                    "google_cloud_vertex_ai_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.GoogleCloudVertexAiConfig",
                      "description": "Google Cloud Vertex AI Config. Only required if the provider is 'google-cloud-vertex-ai'."
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the external model."
                    },
                    "openai_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.OpenAiConfig",
                      "description": "OpenAI Config. Only required if the provider is 'openai'."
                    },
                    "palm_config": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.PaLmConfig",
                      "description": "PaLM Config. Only required if the provider is 'palm'."
                    },
                    "provider": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.ExternalModelProvider",
                      "description": "The name of the provider for the external model. Currently, the supported providers are 'ai21labs', 'anthropic', 'amazon-bedrock', 'cohere', 'databricks-model-serving', 'google-cloud-vertex-ai', 'openai', 'palm', and 'custom'."
                    },
                    "task": {
                      "$ref": "#/$defs/string",
                      "description": "The task type of the external model."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["name", "provider", "task"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.ExternalModelProvider": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ai21labs",
                    "anthropic",
                    "amazon-bedrock",
                    "cohere",
                    "databricks-model-serving",
                    "google-cloud-vertex-ai",
                    "openai",
                    "palm",
                    "custom"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.FallbackConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether to enable traffic fallback. When a served entity in the serving endpoint returns specific error\ncodes (e.g. 500), the request will automatically be round-robin attempted with other served entities in the same\nendpoint, following the order of served entity list, until a successful response is returned.\nIf all attempts fail, return the last response with the error code."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["enabled"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.GoogleCloudVertexAiConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "private_key": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for a private key for the service\naccount which has access to the Google Cloud Vertex AI Service. See [Best\npractices for managing service account keys]. If you prefer to paste your\nAPI key directly, see `private_key_plaintext`. You must provide an API\nkey using one of the following fields: `private_key` or\n`private_key_plaintext`\n\n[Best practices for managing service account keys]: https://cloud.google.com/iam/docs/best-practices-for-managing-service-account-keys"
                    },
                    "private_key_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The private key for the service account which has access to the Google\nCloud Vertex AI Service provided as a plaintext secret. See [Best\npractices for managing service account keys]. If you prefer to reference\nyour key using Databricks Secrets, see `private_key`. You must provide an\nAPI key using one of the following fields: `private_key` or\n`private_key_plaintext`.\n\n[Best practices for managing service account keys]: https://cloud.google.com/iam/docs/best-practices-for-managing-service-account-keys"
                    },
                    "project_id": {
                      "$ref": "#/$defs/string",
                      "description": "This is the Google Cloud project id that the service account is\nassociated with."
                    },
                    "region": {
                      "$ref": "#/$defs/string",
                      "description": "This is the region for the Google Cloud Vertex AI Service. See [supported\nregions] for more details. Some models are only available in specific\nregions.\n\n[supported regions]: https://cloud.google.com/vertex-ai/docs/general/locations"
                    }
                  },
                  "additionalProperties": false,
                  "required": ["project_id", "region"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.OpenAiConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configs needed to create an OpenAI model route.",
                  "properties": {
                    "microsoft_entra_client_id": {
                      "$ref": "#/$defs/string",
                      "description": "This field is only required for Azure AD OpenAI and is the Microsoft\nEntra Client ID."
                    },
                    "microsoft_entra_client_secret": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for a client secret used for\nMicrosoft Entra ID authentication. If you prefer to paste your client\nsecret directly, see `microsoft_entra_client_secret_plaintext`. You must\nprovide an API key using one of the following fields:\n`microsoft_entra_client_secret` or\n`microsoft_entra_client_secret_plaintext`."
                    },
                    "microsoft_entra_client_secret_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The client secret used for Microsoft Entra ID authentication provided as\na plaintext string. If you prefer to reference your key using Databricks\nSecrets, see `microsoft_entra_client_secret`. You must provide an API key\nusing one of the following fields: `microsoft_entra_client_secret` or\n`microsoft_entra_client_secret_plaintext`."
                    },
                    "microsoft_entra_tenant_id": {
                      "$ref": "#/$defs/string",
                      "description": "This field is only required for Azure AD OpenAI and is the Microsoft\nEntra Tenant ID."
                    },
                    "openai_api_base": {
                      "$ref": "#/$defs/string",
                      "description": "This is a field to provide a customized base URl for the OpenAI API. For\nAzure OpenAI, this field is required, and is the base URL for the Azure\nOpenAI API service provided by Azure. For other OpenAI API types, this\nfield is optional, and if left unspecified, the standard OpenAI base URL\nis used."
                    },
                    "openai_api_key": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for an OpenAI API key using the\nOpenAI or Azure service. If you prefer to paste your API key directly,\nsee `openai_api_key_plaintext`. You must provide an API key using one of\nthe following fields: `openai_api_key` or `openai_api_key_plaintext`."
                    },
                    "openai_api_key_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The OpenAI API key using the OpenAI or Azure service provided as a\nplaintext string. If you prefer to reference your key using Databricks\nSecrets, see `openai_api_key`. You must provide an API key using one of\nthe following fields: `openai_api_key` or `openai_api_key_plaintext`."
                    },
                    "openai_api_type": {
                      "$ref": "#/$defs/string",
                      "description": "This is an optional field to specify the type of OpenAI API to use. For\nAzure OpenAI, this field is required, and adjust this parameter to\nrepresent the preferred security access validation protocol. For access\ntoken validation, use azure. For authentication using Azure Active\nDirectory (Azure AD) use, azuread."
                    },
                    "openai_api_version": {
                      "$ref": "#/$defs/string",
                      "description": "This is an optional field to specify the OpenAI API version. For Azure\nOpenAI, this field is required, and is the version of the Azure OpenAI\nservice to utilize, specified by a date."
                    },
                    "openai_deployment_name": {
                      "$ref": "#/$defs/string",
                      "description": "This field is only required for Azure OpenAI and is the name of the\ndeployment resource for the Azure OpenAI service."
                    },
                    "openai_organization": {
                      "$ref": "#/$defs/string",
                      "description": "This is an optional field to specify the organization in OpenAI or Azure\nOpenAI."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.PaLmConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "palm_api_key": {
                      "$ref": "#/$defs/string",
                      "description": "The Databricks secret key reference for a PaLM API key. If you prefer to\npaste your API key directly, see `palm_api_key_plaintext`. You must\nprovide an API key using one of the following fields: `palm_api_key` or\n`palm_api_key_plaintext`."
                    },
                    "palm_api_key_plaintext": {
                      "$ref": "#/$defs/string",
                      "description": "The PaLM API key provided as a plaintext string. If you prefer to\nreference your key using Databricks Secrets, see `palm_api_key`. You must\nprovide an API key using one of the following fields: `palm_api_key` or\n`palm_api_key_plaintext`."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.RateLimit": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "calls": {
                      "$ref": "#/$defs/int64",
                      "description": "Used to specify how many calls are allowed for a key within the renewal_period."
                    },
                    "key": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.RateLimitKey",
                      "description": "Key field for a serving endpoint rate limit. Currently, only 'user' and 'endpoint' are supported, with 'endpoint' being the default if not specified."
                    },
                    "renewal_period": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.RateLimitRenewalPeriod",
                      "description": "Renewal period field for a serving endpoint rate limit. Currently, only 'minute' is supported."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["calls", "renewal_period"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.RateLimitKey": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["user", "endpoint"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.RateLimitRenewalPeriod": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": ["minute"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.Route": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "served_entity_name": {
                      "$ref": "#/$defs/string"
                    },
                    "served_model_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the served model this route configures traffic for."
                    },
                    "traffic_percentage": {
                      "$ref": "#/$defs/int",
                      "description": "The percentage of endpoint traffic to send to this route. It must be an integer between 0 and 100 inclusive."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["traffic_percentage"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.ServedEntityInput": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "entity_name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of the entity to be served. The entity may be a model in the Databricks Model Registry, a model in the Unity Catalog (UC), or a function of type FEATURE_SPEC in the UC. If it is a UC object, the full name of the object should be given in the form of **catalog_name.schema_name.model_name**."
                    },
                    "entity_version": {
                      "$ref": "#/$defs/string"
                    },
                    "environment_vars": {
                      "$ref": "#/$defs/map/string",
                      "description": "An object containing a set of optional, user-specified environment variable key-value pairs used for serving this entity. Note: this is an experimental feature and subject to change. Example entity environment variables that refer to Databricks secrets: `{\"OPENAI_API_KEY\": \"{{secrets/my_scope/my_key}}\", \"DATABRICKS_TOKEN\": \"{{secrets/my_scope2/my_key2}}\"}`"
                    },
                    "external_model": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.ExternalModel",
                      "description": "The external model to be served. NOTE: Only one of external_model and (entity_name, entity_version, workload_size, workload_type, and scale_to_zero_enabled) can be specified with the latter set being used for custom model serving for a Databricks registered model. For an existing endpoint with external_model, it cannot be updated to an endpoint without external_model. If the endpoint is created without external_model, users cannot update it to add external_model later. The task type of all external models within an endpoint must be the same."
                    },
                    "instance_profile_arn": {
                      "$ref": "#/$defs/string",
                      "description": "ARN of the instance profile that the served entity uses to access AWS resources."
                    },
                    "max_provisioned_concurrency": {
                      "$ref": "#/$defs/int",
                      "description": "The maximum provisioned concurrency that the endpoint can scale up to. Do not use if workload_size is specified."
                    },
                    "max_provisioned_throughput": {
                      "$ref": "#/$defs/int",
                      "description": "The maximum tokens per second that the endpoint can scale up to."
                    },
                    "min_provisioned_concurrency": {
                      "$ref": "#/$defs/int",
                      "description": "The minimum provisioned concurrency that the endpoint can scale down to. Do not use if workload_size is specified."
                    },
                    "min_provisioned_throughput": {
                      "$ref": "#/$defs/int",
                      "description": "The minimum tokens per second that the endpoint can scale down to."
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of a served entity. It must be unique across an endpoint. A served entity name can consist of alphanumeric characters, dashes, and underscores. If not specified for an external model, this field defaults to external_model.name, with '.' and ':' replaced with '-', and if not specified for other entities, it defaults to entity_name-entity_version."
                    },
                    "provisioned_model_units": {
                      "$ref": "#/$defs/int64",
                      "description": "The number of model units provisioned."
                    },
                    "scale_to_zero_enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether the compute resources for the served entity should scale down to zero."
                    },
                    "workload_size": {
                      "$ref": "#/$defs/string",
                      "description": "The workload size of the served entity. The workload size corresponds to a range of provisioned concurrency that the compute autoscales between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are \"Small\" (4 - 4 provisioned concurrency), \"Medium\" (8 - 16 provisioned concurrency), and \"Large\" (16 - 64 provisioned concurrency). Additional custom workload sizes can also be used when available in the workspace. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size is 0. Do not use if min_provisioned_concurrency and max_provisioned_concurrency are specified."
                    },
                    "workload_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.ServingModelWorkloadType",
                      "description": "The workload type of the served entity. The workload type selects which type of compute to use in the endpoint. The default value for this parameter is \"CPU\". For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the available [GPU types](https://docs.databricks.com/en/machine-learning/model-serving/create-manage-serving-endpoints.html#gpu-workload-types)."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.ServedModelInput": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "environment_vars": {
                      "$ref": "#/$defs/map/string",
                      "description": "An object containing a set of optional, user-specified environment variable key-value pairs used for serving this entity. Note: this is an experimental feature and subject to change. Example entity environment variables that refer to Databricks secrets: `{\"OPENAI_API_KEY\": \"{{secrets/my_scope/my_key}}\", \"DATABRICKS_TOKEN\": \"{{secrets/my_scope2/my_key2}}\"}`"
                    },
                    "instance_profile_arn": {
                      "$ref": "#/$defs/string",
                      "description": "ARN of the instance profile that the served entity uses to access AWS resources."
                    },
                    "max_provisioned_concurrency": {
                      "$ref": "#/$defs/int",
                      "description": "The maximum provisioned concurrency that the endpoint can scale up to. Do not use if workload_size is specified."
                    },
                    "max_provisioned_throughput": {
                      "$ref": "#/$defs/int",
                      "description": "The maximum tokens per second that the endpoint can scale up to."
                    },
                    "min_provisioned_concurrency": {
                      "$ref": "#/$defs/int",
                      "description": "The minimum provisioned concurrency that the endpoint can scale down to. Do not use if workload_size is specified."
                    },
                    "min_provisioned_throughput": {
                      "$ref": "#/$defs/int",
                      "description": "The minimum tokens per second that the endpoint can scale down to."
                    },
                    "model_name": {
                      "$ref": "#/$defs/string"
                    },
                    "model_version": {
                      "$ref": "#/$defs/string"
                    },
                    "name": {
                      "$ref": "#/$defs/string",
                      "description": "The name of a served entity. It must be unique across an endpoint. A served entity name can consist of alphanumeric characters, dashes, and underscores. If not specified for an external model, this field defaults to external_model.name, with '.' and ':' replaced with '-', and if not specified for other entities, it defaults to entity_name-entity_version."
                    },
                    "provisioned_model_units": {
                      "$ref": "#/$defs/int64",
                      "description": "The number of model units provisioned."
                    },
                    "scale_to_zero_enabled": {
                      "$ref": "#/$defs/bool",
                      "description": "Whether the compute resources for the served entity should scale down to zero."
                    },
                    "workload_size": {
                      "$ref": "#/$defs/string",
                      "description": "The workload size of the served entity. The workload size corresponds to a range of provisioned concurrency that the compute autoscales between. A single unit of provisioned concurrency can process one request at a time. Valid workload sizes are \"Small\" (4 - 4 provisioned concurrency), \"Medium\" (8 - 16 provisioned concurrency), and \"Large\" (16 - 64 provisioned concurrency). Additional custom workload sizes can also be used when available in the workspace. If scale-to-zero is enabled, the lower bound of the provisioned concurrency for each workload size is 0. Do not use if min_provisioned_concurrency and max_provisioned_concurrency are specified."
                    },
                    "workload_type": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.ServedModelInputWorkloadType",
                      "description": "The workload type of the served entity. The workload type selects which type of compute to use in the endpoint. The default value for this parameter is \"CPU\". For deep learning workloads, GPU acceleration is available by selecting workload types like GPU_SMALL and others. See the available [GPU types](https://docs.databricks.com/en/machine-learning/model-serving/create-manage-serving-endpoints.html#gpu-workload-types)."
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "model_name",
                    "model_version",
                    "scale_to_zero_enabled"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.ServedModelInputWorkloadType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Please keep this in sync with with workload types in InferenceEndpointEntities.scala",
                  "enum": [
                    "CPU",
                    "GPU_MEDIUM",
                    "GPU_SMALL",
                    "GPU_LARGE",
                    "MULTIGPU_MEDIUM"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.ServingModelWorkloadType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Please keep this in sync with with workload types in InferenceEndpointEntities.scala",
                  "enum": [
                    "CPU",
                    "GPU_MEDIUM",
                    "GPU_SMALL",
                    "GPU_LARGE",
                    "MULTIGPU_MEDIUM"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "serving.TrafficConfig": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "routes": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/serving.Route",
                      "description": "The list of routes that define traffic to each served entity."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "sql.Channel": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configures the channel name and DBSQL version of the warehouse. CHANNEL_NAME_CUSTOM should be chosen only when `dbsql_version` is specified.",
                  "properties": {
                    "dbsql_version": {
                      "$ref": "#/$defs/string"
                    },
                    "name": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/sql.ChannelName"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "sql.ChannelName": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "CHANNEL_NAME_PREVIEW",
                    "CHANNEL_NAME_CURRENT",
                    "CHANNEL_NAME_PREVIOUS",
                    "CHANNEL_NAME_CUSTOM"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "sql.CreateWarehouseRequestWarehouseType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Warehouse type: `PRO` or `CLASSIC`. If you want to use serverless compute, you must set to `PRO` and also set the field `enable_serverless_compute` to `true`.",
                  "enum": ["TYPE_UNSPECIFIED", "CLASSIC", "PRO"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "sql.EndpointTagPair": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "key": {
                      "$ref": "#/$defs/string"
                    },
                    "value": {
                      "$ref": "#/$defs/string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "sql.EndpointTags": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "custom_tags": {
                      "$ref": "#/$defs/slice/github.com/databricks/databricks-sdk-go/service/sql.EndpointTagPair"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "sql.SpotInstancePolicy": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Configurations whether the warehouse should use spot instances.",
                  "enum": [
                    "POLICY_UNSPECIFIED",
                    "COST_OPTIMIZED",
                    "RELIABILITY_OPTIMIZED"
                  ]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "workspace.AzureKeyVaultSecretScopeMetadata": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "The metadata of the Azure KeyVault for a secret scope of type `AZURE_KEYVAULT`",
                  "properties": {
                    "dns_name": {
                      "$ref": "#/$defs/string",
                      "description": "The DNS of the KeyVault"
                    },
                    "resource_id": {
                      "$ref": "#/$defs/string",
                      "description": "The resource id of the azure KeyVault that user wants to associate the scope with."
                    }
                  },
                  "additionalProperties": false,
                  "required": ["dns_name", "resource_id"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            },
            "workspace.ScopeBackendType": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "The types of secret scope backends in the Secret Manager. Azure KeyVault backed secret scopes\nwill be supported in a later release.",
                  "enum": ["DATABRICKS", "AZURE_KEYVAULT"]
                },
                {
                  "type": "string",
                  "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                }
              ]
            }
          }
        }
      }
    },
    "int": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(resources(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(bundle(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(workspace(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(artifacts(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        }
      ]
    },
    "int64": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(resources(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(bundle(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(workspace(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(artifacts(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        },
        {
          "type": "string",
          "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
        }
      ]
    },
    "interface": {},
    "map": {
      "github.com": {
        "databricks": {
          "cli": {
            "bundle": {
              "config": {
                "resources.App": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.App"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Cluster": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Cluster"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Dashboard": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Dashboard"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.DatabaseCatalog": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.DatabaseCatalog"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.DatabaseInstance": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.DatabaseInstance"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Job": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Job"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.MlflowExperiment": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.MlflowExperiment"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.MlflowModel": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.MlflowModel"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.ModelServingEndpoint": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.ModelServingEndpoint"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Pipeline": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Pipeline"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.QualityMonitor": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.QualityMonitor"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.RegisteredModel": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.RegisteredModel"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Schema"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.SecretScope": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SecretScope"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.SqlWarehouse": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SqlWarehouse"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.SyncedDatabaseTable": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SyncedDatabaseTable"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Volume": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Volume"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "variable.TargetVariable": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/variable.TargetVariable"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "variable.Variable": {
                  "oneOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/variable.Variable"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                }
              },
              "config.Artifact": {
                "oneOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Artifact"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "config.Command": {
                "oneOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Command"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "config.Script": {
                "oneOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Script"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "config.Target": {
                "oneOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Target"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              }
            }
          }
        }
      },
      "interface": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/interface"
            }
          },
          {
            "type": "string",
            "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
          }
        ]
      },
      "string": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/$defs/string"
            }
          },
          {
            "type": "string",
            "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
          }
        ]
      }
    },
    "slice": {
      "github.com": {
        "databricks": {
          "cli": {
            "bundle": {
              "config": {
                "resources.AppPermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.AppPermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.ClusterPermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.ClusterPermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.DashboardPermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.DashboardPermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.DatabaseInstancePermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.DatabaseInstancePermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Grant": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Grant"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.JobPermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.JobPermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.MlflowExperimentPermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.MlflowExperimentPermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.MlflowModelPermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.MlflowModelPermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.ModelServingEndpointPermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.ModelServingEndpointPermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.Permission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.Permission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.PipelinePermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.PipelinePermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.SchemaGrant": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SchemaGrant"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.SchemaGrantPrivilege": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SchemaGrantPrivilege"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.SecretScopePermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SecretScopePermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.SqlWarehousePermission": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.SqlWarehousePermission"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.VolumeGrant": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.VolumeGrant"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                },
                "resources.VolumeGrantPrivilege": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/github.com/databricks/cli/bundle/config/resources.VolumeGrantPrivilege"
                      }
                    },
                    {
                      "type": "string",
                      "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                    }
                  ]
                }
              },
              "config.ArtifactFile": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.ArtifactFile"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              }
            }
          },
          "databricks-sdk-go": {
            "service": {
              "apps.AppResource": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/apps.AppResource"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "catalog.MonitorMetric": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/catalog.MonitorMetric"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "compute.InitScriptInfo": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.InitScriptInfo"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "compute.Library": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/compute.Library"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "database.DatabaseInstanceRef": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/database.DatabaseInstanceRef"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.JobCluster": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobCluster"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.JobEnvironment": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobEnvironment"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.JobParameterDefinition": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobParameterDefinition"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.JobsHealthRule": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthRule"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.PowerBiTable": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.PowerBiTable"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.SqlTaskSubscription": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SqlTaskSubscription"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.SubscriptionSubscriber": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.SubscriptionSubscriber"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.Task": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Task"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.TaskDependency": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.TaskDependency"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "jobs.Webhook": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.Webhook"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "ml.ExperimentTag": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/ml.ExperimentTag"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "ml.ModelTag": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/ml.ModelTag"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "pipelines.DayOfWeek": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.DayOfWeek"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "pipelines.IngestionConfig": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.IngestionConfig"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "pipelines.Notifications": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.Notifications"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "pipelines.PipelineCluster": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PipelineCluster"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "pipelines.PipelineLibrary": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.PipelineLibrary"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "pipelines.SourceConfig": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/pipelines.SourceConfig"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "serving.AiGatewayRateLimit": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.AiGatewayRateLimit"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "serving.EndpointTag": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.EndpointTag"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "serving.RateLimit": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.RateLimit"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "serving.Route": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.Route"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "serving.ServedEntityInput": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.ServedEntityInput"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "serving.ServedModelInput": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/serving.ServedModelInput"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              },
              "sql.EndpointTagPair": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/sql.EndpointTagPair"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
                  }
                ]
              }
            }
          }
        }
      },
      "string": {
        "oneOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/$defs/string"
            }
          },
          {
            "type": "string",
            "pattern": "\\$\\{(var(\\.[a-zA-Z]+([-_]?[a-zA-Z0-9]+)*(\\[[0-9]+\\])*)+)\\}"
          }
        ]
      }
    },
    "string": {
      "type": "string"
    }
  },
  "type": "object",
  "properties": {
    "artifacts": {
      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config.Artifact",
      "description": "Defines the attributes to build an artifact",
      "markdownDescription": "Defines the attributes to build artifacts, where each key is the name of the artifact, and the value is a Map that defines the artifact build settings. For information about the `artifacts` mapping, see [artifacts](https://docs.databricks.com/dev-tools/bundles/settings.html#artifacts).\n\nArtifact settings defined in the top level of the bundle configuration can be overridden in the `targets` mapping. See [link](https://docs.databricks.com/dev-tools/bundles/artifact-overrides.html)."
    },
    "bundle": {
      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Bundle",
      "description": "The bundle attributes when deploying to this target.",
      "markdownDescription": "The bundle attributes when deploying to this target,"
    },
    "environments": {
      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config.Target",
      "deprecationMessage": "Deprecated: please use targets instead",
      "deprecated": true
    },
    "experimental": {
      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Experimental",
      "description": "Defines attributes for experimental features."
    },
    "include": {
      "$ref": "#/$defs/slice/string",
      "description": "Specifies a list of path globs that contain configuration files to include within the bundle.",
      "markdownDescription": "Specifies a list of path globs that contain configuration files to include within the bundle. See [include](https://docs.databricks.com/dev-tools/bundles/settings.html#include)."
    },
    "permissions": {
      "$ref": "#/$defs/slice/github.com/databricks/cli/bundle/config/resources.Permission",
      "description": "Defines a permission for a specific entity.",
      "markdownDescription": "A Sequence that defines the permissions to apply to experiments, jobs, pipelines, and models defined in the bundle, where each item in the sequence is a permission for a specific entity.\n\nSee [permissions](https://docs.databricks.com/dev-tools/bundles/settings.html#permissions) and [link](https://docs.databricks.com/dev-tools/bundles/permissions.html)."
    },
    "presets": {
      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Presets",
      "description": "Defines bundle deployment presets.",
      "markdownDescription": "Defines bundle deployment presets. See [presets](https://docs.databricks.com/dev-tools/bundles/deployment-modes.html#presets)."
    },
    "resources": {
      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Resources",
      "description": "A Map that defines the resources for the bundle, where each key is the name of the resource, and the value is a Map that defines the resource.",
      "markdownDescription": "A Map that defines the resources for the bundle, where each key is the name of the resource, and the value is a Map that defines the resource. For more information about Databricks Asset Bundles supported resources, and resource definition reference, see [link](https://docs.databricks.com/dev-tools/bundles/resources.html).\n\n```yaml\nresources:\n  \u003cresource-type\u003e:\n    \u003cresource-name\u003e:\n      \u003cresource-field-name\u003e: \u003cresource-field-value\u003e\n```"
    },
    "run_as": {
      "$ref": "#/$defs/github.com/databricks/databricks-sdk-go/service/jobs.JobRunAs",
      "description": "The identity to use when running Databricks Asset Bundles workflows.",
      "markdownDescription": "The identity to use when running Databricks Asset Bundles workflows. See [link](https://docs.databricks.com/dev-tools/bundles/run-as.html)."
    },
    "scripts": {
      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config.Script"
    },
    "sync": {
      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Sync",
      "description": "The files and file paths to include or exclude in the bundle.",
      "markdownDescription": "The files and file paths to include or exclude in the bundle. See [sync](https://docs.databricks.com/dev-tools/bundles/settings.html#sync)."
    },
    "targets": {
      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config.Target",
      "description": "Defines deployment targets for the bundle.",
      "markdownDescription": "Defines deployment targets for the bundle. See [targets](https://docs.databricks.com/dev-tools/bundles/settings.html#targets)"
    },
    "variables": {
      "$ref": "#/$defs/map/github.com/databricks/cli/bundle/config/variable.Variable",
      "description": "A Map that defines the custom variables for the bundle, where each key is the name of the variable, and the value is a Map that defines the variable."
    },
    "workspace": {
      "$ref": "#/$defs/github.com/databricks/cli/bundle/config.Workspace",
      "description": "Defines the Databricks workspace for the bundle.",
      "markdownDescription": "Defines the Databricks workspace for the bundle. See [workspace](https://docs.databricks.com/dev-tools/bundles/settings.html#workspace)."
    }
  },
  "additionalProperties": {}
}
