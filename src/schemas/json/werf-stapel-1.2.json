{
  "$comment": "Werf. Missing part of your CI/CD system https://werf.io/ docs for this file https://werf.io/documentation/v1.2/reference/werf_yaml.html",
  "$ref": "#/definitions/WerfStapel",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "WerfStapel": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "image": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "One or more unique names for image"
        },
        "artifact": {
          "type": "string",
          "description": "The unique name for artifact. More details https://werf.io/documentation/v1.2/usage/build/stapel/imports.html"
        },
        "platform": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of target platforms for this image (for example ['linux/amd64', 'linux/arm64', 'linux/arm/v8'])"
        },
        "from": {
          "type": "string",
          "description": "The name of a base image. More details https://werf.io/documentation/v1.2/usage/build/stapel/base.htmlfrom-fromlatest"
        },
        "fromLatest": {
          "type": "boolean",
          "description": "To use actual base image without caching. More details https://werf.io/documentation/v1.2/usage/build/stapel/base.htmlfrom-fromlatest"
        },
        "fromImage": {
          "type": "string",
          "description": "To use image as base image by image name. More details https://werf.io/documentation/v1.2/usage/build/stapel/base.htmlfromimage-and-fromartifact"
        },
        "fromArtifact": {
          "type": "string",
          "description": "To use artifact as base image by artifact name. More details https://werf.io/documentation/v1.2/usage/build/stapel/base.htmlfromimage-and-fromartifact"
        },
        "fromCacheVersion": {
          "type": "string",
          "description": "Cache version. More details https://werf.io/documentation/v1.2/usage/build/stapel/base.htmlfromcacheversion"
        },
        "git": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Git"
          },
          "description": "Set of directives to add source files from git repositories (both the project repository and any other). More details https://werf.io/documentation/v1.2/usage/build/stapel/git.html"
        },
        "shell": {
          "$ref": "#/definitions/Ansible",
          "description": "Shell assembly instructions. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmlshell"
        },
        "ansible": {
          "$ref": "#/definitions/Ansible",
          "description": "Ansible assembly instructions. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmlansible"
        },
        "docker": {
          "$ref": "#/definitions/Docker",
          "description": "Set of directives to effect on an image manifest. More details  https://werf.io/documentation/v1.2/usage/build/stapel/dockerfile.html"
        },
        "mount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mount"
          },
          "description": "Mount points. More details https://werf.io/documentation/v1.2/usage/build/stapel/mounts.html"
        },
        "import": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Import"
          },
          "description": "Imports. More details https://werf.io/documentation/v1.2/usage/build/stapel/imports.html"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dependency"
          },
          "description": "Dependencies images for current image"
        }
      },
      "required": ["image"],
      "title": "Stapel image/artifact section"
    },
    "Ansible": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "beforeInstall": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands for beforeInstall stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmlshell"
        },
        "install": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands for install stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmlshell"
        },
        "beforeSetup": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands for beforeSetup stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmlshell"
        },
        "setup": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Commands for setup stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmlshell"
        },
        "cacheVersion": {
          "type": "string",
          "description": "Common cache version. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmldependency-on-the-cacheversion"
        },
        "beforeInstallCacheVersion": {
          "type": "string",
          "description": "Cache version for beforeInstall stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmldependency-on-the-cacheversion"
        },
        "installCacheVersion": {
          "type": "string",
          "description": "Cache version for install stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmldependency-on-the-cacheversion"
        },
        "beforeSetupCacheVersion": {
          "type": "string",
          "description": "Cache version for beforeSetup stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmldependency-on-the-cacheversion"
        },
        "setupCacheVersion": {
          "type": "string",
          "description": "Cache version for setup stage. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmldependency-on-the-cacheversion"
        }
      },
      "title": "Ansible"
    },
    "Dependency": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "image": {
          "type": "string",
          "description": "Dependency image name, which should be built before building current image"
        },
        "before": {
          "type": "string",
          "description": "The stage name before which image info should be imported (specify install or setup). Specified target env variables will be available at user stages after stage specified by this directive."
        },
        "after": {
          "type": "string",
          "description": "The stage name after which image info should be imported (specify install or setup). Specified target env variables will be available at user stages after stage specified by this directive."
        },
        "imports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DependencyImport"
          },
          "description": "Define target environment variables to import image information into current image (optional)"
        }
      },
      "title": "Dependency"
    },
    "DependencyImport": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of image info: ImageName, ImageDigest, ImageRepo or ImageTag",
          "enum": ["ImageName", "ImageDigest", "ImageRepo", "ImageTag"]
        },
        "targetEnv": {
          "type": "string",
          "description": "Name of environment variable which will contain specified type of information about image"
        }
      },
      "title": "DependencyImport"
    },
    "Docker": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "exactValues": {
          "type": "string",
          "description": "Set specified options values as-is, including unescaped quotes and spaces. Option affects only docker-server backend and does not affect buildah backend. "
        },
        "USER": {
          "type": "string",
          "description": "The user name (or UID) and optionally the user group (or GID). More details https://docs.docker.com/engine/reference/builder/user"
        },
        "WORKDIR": {
          "type": "string",
          "description": "The working directory. More details https://docs.docker.com/engine/reference/builder/workdir"
        },
        "VOLUME": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Mount points. More details https://docs.docker.com/engine/reference/builder/volume"
        },
        "ENV": {
          "type": "object",
          "description": "The environment variables. More details https://docs.docker.com/engine/reference/builder/env"
        },
        "LABEL": {
          "type": "object",
          "description": "The metadata to an image. More details https://docs.docker.com/engine/reference/builder/label"
        },
        "EXPOSE": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "To inform Docker that the container listens on the specified network ports at runtime. More details https://docs.docker.com/engine/reference/builder/expose"
        },
        "ENTRYPOINT": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "To configure a container that will run as an executable. Shell and exec forms are supported. More details https://docs.docker.com/engine/reference/builder/entrypoint"
        },
        "CMD": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "description": "To provide default arguments for the ENTRYPOINT to configure a container that will run as an executable. Shell and exec forms are supported. More details https://docs.docker.com/engine/reference/builder/cmd"
        },
        "HEALTHCHECK": {
          "type": "string",
          "description": "To tell Docker how to test a container to check that it is still working. More details https://docs.docker.com/engine/reference/builder/healthcheck"
        }
      },
      "title": "Docker"
    },
    "Git": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "url": {
          "type": "string",
          "description": "The address of the remote repository. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlworking-with-remote-repositories"
        },
        "branch": {
          "type": "string",
          "description": "The branch name. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlsyntax-of-a-git-mapping"
        },
        "commit": {
          "type": "string",
          "description": "The commit"
        },
        "tag": {
          "type": "string",
          "description": "The tag name"
        },
        "add": {
          "type": "string",
          "description": "A source path in a repository. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlcopying-directories"
        },
        "to": {
          "type": "string",
          "description": "A destination path in image. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlcopying-directories"
        },
        "owner": {
          "type": "string",
          "description": "The name or UID of the owner. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlchanging-the-owner"
        },
        "group": {
          "type": "string",
          "description": "The name or GID of the owner's group. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlchanging-the-owner"
        },
        "includePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Globs for including. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlusing-filters"
        },
        "excludePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Globs for excluding. More details https://werf.io/documentation/v1.2/usage/build/stapel/git.htmlusing-filters"
        },
        "stageDependencies": {
          "$ref": "#/definitions/StageDependencies",
          "description": "The organization of restarting assembly instructions when defined changes occur in the git repository. More details https://werf.io/documentation/v1.2/usage/build/stapel/instructions.htmldependency-on-changes-in-the-git-repo"
        }
      },
      "title": "Git"
    },
    "StageDependencies": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "install": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Globs for install stage"
        },
        "beforeSetup": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Globs for beforeSetup stage"
        },
        "setup": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Globs for setup stage"
        }
      },
      "title": "StageDependencies"
    },
    "Import": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "artifact": {
          "type": "string",
          "description": "The artifact name from which you want to copy files"
        },
        "image": {
          "type": "string",
          "description": "The image name from which you want to copy files"
        },
        "stage": {
          "type": "string",
          "description": "The stage name from which you want to copy files (the latest one by default)"
        },
        "before": {
          "type": "string",
          "description": "The stage name before which to perform importing files. At present, only install and setup stages are supported"
        },
        "after": {
          "type": "string",
          "description": "The stage name after which to perform importing files. At present, only install and setup stages are supported"
        },
        "add": {
          "type": "string",
          "description": "The absolute file or folder path in source image for copying"
        },
        "to": {
          "type": "string",
          "description": "The absolute path in destination image. In case of absence, destination path equals source path"
        },
        "owner": {
          "type": "string",
          "description": "The name or UID of the owner"
        },
        "group": {
          "type": "string",
          "description": "The name or GID of the owner's group"
        },
        "includePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Globs for including"
        },
        "excludePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Globs for excluding"
        }
      },
      "title": "Import"
    },
    "Mount": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "from": {
          "type": "string",
          "description": "Service folder name",
          "enum": ["tmp_dir", "build_dir"]
        },
        "fromPath": {
          "type": "string",
          "description": "Absolute or relative path to an arbitrary file or folder on host"
        },
        "to": {
          "type": "string",
          "description": "Absolute path in image"
        }
      },
      "title": "Mount"
    }
  },
  "description": "Werf"
}
