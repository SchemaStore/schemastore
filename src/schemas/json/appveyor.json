{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "allOf": [
    {
      "$ref": "#/definitions/job"
    }
  ],
  "definitions": {
    "command": {
      "oneOf": [
        {
          "description": "Run a batch command",
          "type": "string"
        },
        {
          "additionalProperties": false,
          "properties": {
            "ps": {
              "description": "Run a PowerShell command",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "pwsh": {
              "description": "Run a PowerShell Core command",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Run a batch command",
          "properties": {
            "cmd": {
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "additionalProperties": false,
          "description": "Run a Bash command",
          "properties": {
            "sh": {
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    },
    "commitFilter": {
      "additionalProperties": false,
      "properties": {
        "author": {
          "anyOf": [
            {
              "format": "regex",
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "description": "Commit author's username, name, email or regexp matching one of these."
        },
        "files": {
          "description": "Only specific files (glob patterns)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "message": {
          "description": "Regex for matching commit message",
          "format": "regex",
          "type": "string"
        }
      },
      "type": "object"
    },
    "configuration": {
      "type": "string"
    },
    "envVarHash": {
      "additionalProperties": {
        "$ref": "#/definitions/possiblySecretString"
      },
      "type": "object"
    },
    "image": {
      "description": "Build worker image (VM template) -DEV_VERSION",
      "oneOf": [
        {
          "items": {
            "$ref": "#/definitions/imageName"
          },
          "type": "array"
        },
        {
          "$ref": "#/definitions/imageName"
        }
      ]
    },
    "imageName": {
      "enum": [
        "macOS",
        "macOS-Mojave",
        "Previous macOS",
        "Previous macOS-Mojave",
        "Ubuntu",
        "Ubuntu1604",
        "Ubuntu1804",
        "Ubuntu2004",
        "Previous Ubuntu",
        "Previous Ubuntu1604",
        "Previous Ubuntu1804",
        "Previous Ubuntu2004",
        "Visual Studio 2013",
        "Visual Studio 2015",
        "Visual Studio 2017",
        "Visual Studio 2019",
        "Visual Studio 2022",
        "Visual Studio 2017 Preview",
        "Visual Studio 2019 Preview",
        "Previous Visual Studio 2013",
        "Previous Visual Studio 2015",
        "Previous Visual Studio 2017",
        "zhaw18",
        "WMF 5"
      ]
    },
    "job": {
      "properties": {
        "after_build": {
          "description": "Scripts to run after build",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "after_deploy": {
          "description": "Scripts to run after deployment",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "after_test": {
          "description": "Scripts to run after tests",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "artifacts": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            },
            "required": ["path"],
            "type": "object"
          },
          "type": "array"
        },
        "assembly_info": {
          "additionalProperties": false,
          "description": "Enable patching of AssemblyInfo.* files",
          "properties": {
            "assembly_file_version": {
              "type": "string"
            },
            "assembly_informational_version": {
              "type": "string"
            },
            "assembly_version": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "patch": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "before_build": {
          "description": "Scripts to run before build",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "before_deploy": {
          "description": "Scripts to run before deployment",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "before_package": {
          "description": "Scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "before_test": {
          "description": "Scripts to run before tests",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "branches": {
          "additionalProperties": false,
          "description": "Branches to build",
          "properties": {
            "except": {
              "description": "Blacklist",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "only": {
              "description": "Whitelist",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "build": {
          "oneOf": [
            {
              "enum": [false]
            },
            {
              "additionalProperties": false,
              "properties": {
                "include_nuget_references": {
                  "description": "Add -IncludeReferencedProjects option while packaging NuGet artifacts",
                  "type": "boolean"
                },
                "parallel": {
                  "description": "Enable MSBuild parallel builds",
                  "type": "boolean"
                },
                "project": {
                  "description": "Path to Visual Studio solution or project",
                  "type": "string"
                },
                "publish_azure": {
                  "description": "Package Azure Cloud Service projects and push to artifacts",
                  "type": "boolean"
                },
                "publish_nuget": {
                  "description": "Package projects with .nuspec files and push to artifacts",
                  "type": "boolean"
                },
                "publish_nuget_symbols": {
                  "description": "Generate and publish NuGet symbol packages",
                  "type": "boolean"
                },
                "publish_wap": {
                  "description": "Package Web Application Projects (WAP) for Web Deploy",
                  "type": "boolean"
                },
                "publish_wap_xcopy": {
                  "description": "Package Web Application Projects (WAP) for XCopy deployment",
                  "type": "boolean"
                },
                "verbosity": {
                  "description": "MSBuild verbosity level",
                  "enum": ["quiet", "minimal", "normal", "detailed"]
                }
              },
              "type": "object"
            }
          ]
        },
        "build_script": {
          "description": "To run your custom scripts instead of automatic MSBuild",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "cache": {
          "description": "Build cache to preserve files/folders between builds",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clone_depth": {
          "description": "Set git clone depth",
          "type": "integer"
        },
        "clone_folder": {
          "description": "Clone directory",
          "type": "string"
        },
        "configuration": {
          "description": "Build Configuration, i.e. Debug, Release, etc.",
          "oneOf": [
            {
              "$ref": "#/definitions/configuration"
            },
            {
              "items": {
                "$ref": "#/definitions/configuration"
              },
              "type": "array"
            }
          ]
        },
        "deploy": {
          "oneOf": [
            {
              "enum": ["off"]
            },
            {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          ]
        },
        "deploy_script": {
          "description": "To run your custom scripts instead of provider deployments",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "environment": {
          "anyOf": [
            {
              "properties": {
                "global": {
                  "$ref": "#/definitions/envVarHash",
                  "description": "variables defined here are no different than those defined at top level of 'environment' node"
                },
                "matrix": {
                  "description": "an array of environment variables, each member of which is one dimension in the build matrix calculation",
                  "items": {
                    "$ref": "#/definitions/envVarHash"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            {
              "$ref": "#/definitions/envVarHash"
            }
          ],
          "description": "Environment variables"
        },
        "hosts": {
          "additionalProperties": {
            "anyOf": [
              {
                "format": "ipv4"
              },
              {
                "format": "ipv6"
              }
            ],
            "type": "string"
          },
          "description": "Setting up etc\\hosts file",
          "type": "object"
        },
        "image": {
          "$ref": "#/definitions/image"
        },
        "init": {
          "description": "Scripts that are called at very beginning, before repo cloning",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "install": {
          "description": "Scripts that run after cloning repository",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "matrix": {
          "additionalProperties": false,
          "properties": {
            "allow_failures": {
              "description": "This is how to allow failing jobs in the matrix",
              "items": {
                "$ref": "#/definitions/jobScalars"
              },
              "type": "array"
            },
            "exclude": {
              "description": "Exclude configuration from the matrix. Works similarly to 'allow_failures' but build not even being started for excluded combination.",
              "items": {
                "$ref": "#/definitions/job"
              },
              "type": "array"
            },
            "fast_finish": {
              "description": "Set this flag to immediately finish build once one of the jobs fails",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "max_jobs": {
          "description": "Maximum number of concurrent jobs for the project",
          "type": "integer"
        },
        "notifications": {
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "nuget": {
          "description": "Automatically register private account and/or project AppVeyor NuGet feeds",
          "properties": {
            "account_feed": {
              "type": "boolean"
            },
            "disable_publish_on_pr": {
              "description": "Disable publishing of .nupkg artifacts to account/project feeds for pull request builds",
              "type": "boolean"
            },
            "project_feed": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "on_failure": {
          "description": "On build failure",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "on_finish": {
          "description": "After build failure or success",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "on_success": {
          "description": "On successful build",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "only_commits": {
          "$ref": "#/definitions/commitFilter",
          "description": "Including commits with particular message or from specific user"
        },
        "platform": {
          "description": "Build platform, i.e. x86, x64, Any CPU. This setting is optional",
          "oneOf": [
            {
              "$ref": "#/definitions/platform"
            },
            {
              "items": {
                "$ref": "#/definitions/platform"
              },
              "type": "array"
            }
          ]
        },
        "services": {
          "description": "Enable service required for build/tests",
          "items": {
            "enum": [
              "docker",
              "iis",
              "mongodb",
              "msmq",
              "mssql2008r2sp2",
              "mssql2008r2sp2rs",
              "mssql2012sp1",
              "mssql2012sp1rs",
              "mssql2014",
              "mssql2014rs",
              "mysql",
              "postgresql",
              "postgresql93",
              "postgresql94",
              "postgresql95",
              "postgresql96",
              "postgresql10"
            ]
          },
          "type": "array"
        },
        "shallow_clone": {
          "default": false,
          "description": "Fetch repository as zip archive",
          "type": "boolean"
        },
        "skip_branch_with_pr": {
          "description": "Do not build feature branch with open Pull Requests",
          "type": "boolean"
        },
        "skip_commits": {
          "$ref": "#/definitions/commitFilter",
          "description": "Skipping commits with particular message or from specific user"
        },
        "skip_non_tags": {
          "description": "Start builds on tags only (GitHub and BitBucket)",
          "type": "boolean"
        },
        "skip_tags": {
          "description": "Do not build on tags (GitHub and BitBucket)",
          "type": "boolean"
        },
        "test": {
          "oneOf": [
            {
              "description": "To disable automatic tests",
              "enum": [false],
              "type": "boolean"
            },
            {
              "additionalProperties": false,
              "description": "To run tests again only selected assemblies and/or categories",
              "properties": {
                "assemblies": {
                  "additionalProperties": false,
                  "properties": {
                    "except": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "only": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "categories": {
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "properties": {
                        "except": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "only": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "description": "To run tests from different categories as separate jobs in parallel",
                      "items": {
                        "oneOf": [
                          {
                            "description": "A category common for all jobs",
                            "type": "string"
                          },
                          {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  ]
                }
              },
              "type": "object"
            }
          ]
        },
        "test_script": {
          "description": "To run your custom scripts instead of automatic tests",
          "items": {
            "$ref": "#/definitions/command"
          },
          "type": "array"
        },
        "version": {
          "description": "Version format",
          "type": "string"
        }
      }
    },
    "jobScalars": {
      "allOf": [
        {
          "not": {
            "required": ["skip_tags"]
          }
        },
        {
          "not": {
            "required": ["skip_commits"]
          }
        },
        {
          "not": {
            "required": ["skip_branch_with_pr"]
          }
        },
        {
          "not": {
            "required": ["skip_non_tags"]
          }
        }
      ],
      "properties": {
        "configuration": {
          "description": "Build Configuration, i.e. Debug, Release, etc.",
          "oneOf": [
            {
              "$ref": "#/definitions/configuration"
            },
            {
              "items": {
                "$ref": "#/definitions/configuration"
              },
              "type": "array"
            }
          ]
        },
        "image": {
          "$ref": "#/definitions/image"
        },
        "platform": {
          "description": "Build platform, i.e. x86, x64, Any CPU. This setting is optional",
          "oneOf": [
            {
              "$ref": "#/definitions/platform"
            },
            {
              "items": {
                "$ref": "#/definitions/platform"
              },
              "type": "array"
            }
          ]
        }
      },
      "type": "object"
    },
    "platform": {
      "enum": ["x86", "x64", "ARM", "ARM64", "Win32", "Any CPU"]
    },
    "possiblySecretString": {
      "anyOf": [
        {
          "description": "This value will be used directly (regular string)",
          "type": "string"
        },
        {
          "description": "This value will be treated as a string even though it is a number",
          "type": "number"
        },
        {
          "additionalProperties": false,
          "properties": {
            "secure": {
              "description": "This should have been encrypted by the same user account to which the project belongs",
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    }
  },
  "title": "JSON schema for AppVeyor CI configuration files"
}
