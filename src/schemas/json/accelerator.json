{
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "definitions" : {
    "AcceleratorOption" : {
      "type" : "object",
      "properties" : {
        "choices" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "text" : {
                "type" : "string"
              },
              "value" : { }
            }
          }
        },
        "dataType" : {
          "anyOf" : [ {
            "const" : "string"
          }, {
            "const" : "number"
          }, {
            "const" : "boolean"
          }, {
            "type" : "string",
            "pattern" : "^$|^[A-Z][a-z0-9A-Z]*$"
          }, {
            "type" : "array",
            "minItems" : 1,
            "maxItems" : 1,
            "items" : {
              "const" : "string"
            }
          }, {
            "type" : "array",
            "minItems" : 1,
            "maxItems" : 1,
            "items" : {
              "const" : "number"
            }
          }, {
            "type" : "array",
            "minItems" : 1,
            "maxItems" : 1,
            "items" : {
              "const" : "boolean"
            }
          }, {
            "type" : "array",
            "minItems" : 1,
            "maxItems" : 1,
            "items" : {
              "type" : "string",
              "pattern" : "^$|^[A-Z][a-z0-9A-Z]*$"
            }
          }, {
            "type" : "null"
          } ]
        },
        "defaultValue" : { },
        "dependsOn" : {
          "$ref" : "#/definitions/DependsOn"
        },
        "description" : {
          "type" : "string"
        },
        "inputType" : {
          "type" : "string",
          "enum" : [ "text", "textarea", "checkbox", "select", "radio" ]
        },
        "label" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "^$|^[a-z][a-z0-9A-Z]*$"
        },
        "required" : {
          "type" : "boolean"
        },
        "validationRegex" : {
          "$ref" : "#/definitions/Pattern"
        }
      },
      "anyOf" : [ {
        "properties" : {
          "dataType" : {
            "const" : "string"
          },
          "defaultValue" : {
            "type" : "string"
          }
        }
      }, {
        "properties" : {
          "dataType" : {
            "type" : "array",
            "items" : {
              "const" : "string"
            }
          },
          "defaultValue" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }, {
        "properties" : {
          "dataType" : {
            "const" : "number"
          },
          "defaultValue" : {
            "type" : "number"
          }
        }
      }, {
        "properties" : {
          "dataType" : {
            "type" : "array",
            "items" : {
              "const" : "number"
            }
          },
          "defaultValue" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }
      }, {
        "properties" : {
          "dataType" : {
            "const" : "boolean"
          },
          "defaultValue" : {
            "type" : "boolean"
          }
        }
      }, {
        "properties" : {
          "dataType" : {
            "type" : "array",
            "items" : {
              "const" : "boolean"
            }
          },
          "defaultValue" : {
            "type" : "array",
            "items" : {
              "type" : "boolean"
            }
          }
        }
      }, {
        "properties" : {
          "dataType" : {
            "type" : "string",
            "pattern" : "^$|^[A-Z][a-z0-9A-Z]*$"
          },
          "defaultValue" : {
            "type" : "object"
          }
        }
      }, {
        "properties" : {
          "dataType" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "pattern" : "^$|^[A-Z][a-z0-9A-Z]*$"
            }
          },
          "defaultValue" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      } ]
    },
    "Chain-1" : {
      "type" : "object",
      "properties" : {
        "applyTo" : {
          "minItems" : 1,
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 1,
            "pattern" : "^$|^[^/].*$"
          }
        },
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string"
        },
        "transformations" : {
          "type" : "array",
          "items" : {
            "anyOf" : [ {
              "$ref" : "#/definitions/Loop-2"
            }, {
              "$ref" : "#/definitions/Chain-2"
            }, {
              "$ref" : "#/definitions/Exclude-2"
            }, {
              "$ref" : "#/definitions/Include-2"
            }, {
              "$ref" : "#/definitions/Combo-2"
            }, {
              "$ref" : "#/definitions/ReplaceText-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            }, {
              "$ref" : "#/definitions/Merge-2"
            }, {
              "$ref" : "#/definitions/OpenRewriteRecipe-2"
            }, {
              "$ref" : "#/definitions/RewritePath-2"
            }, {
              "$ref" : "#/definitions/UniquePath-2"
            }, {
              "$ref" : "#/definitions/YTT-2"
            }, {
              "$ref" : "#/definitions/Let-2"
            }, {
              "$ref" : "#/definitions/UseEncoding-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            } ]
          }
        }
      }
    },
    "Chain-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Chain-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "Chain"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "Combo-1" : {
      "type" : "object",
      "properties" : {
        "applyTo" : {
          "minItems" : 1,
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 1,
            "pattern" : "^$|^[^/].*$"
          }
        },
        "chain" : {
          "type" : "array",
          "items" : {
            "anyOf" : [ {
              "$ref" : "#/definitions/Loop-2"
            }, {
              "$ref" : "#/definitions/Chain-2"
            }, {
              "$ref" : "#/definitions/Exclude-2"
            }, {
              "$ref" : "#/definitions/Include-2"
            }, {
              "$ref" : "#/definitions/Combo-2"
            }, {
              "$ref" : "#/definitions/ReplaceText-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            }, {
              "$ref" : "#/definitions/Merge-2"
            }, {
              "$ref" : "#/definitions/OpenRewriteRecipe-2"
            }, {
              "$ref" : "#/definitions/RewritePath-2"
            }, {
              "$ref" : "#/definitions/UniquePath-2"
            }, {
              "$ref" : "#/definitions/YTT-2"
            }, {
              "$ref" : "#/definitions/Let-2"
            }, {
              "$ref" : "#/definitions/UseEncoding-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            } ]
          }
        },
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "exclude" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 1,
            "pattern" : "^$|^[^/].*$"
          }
        },
        "include" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 1,
            "pattern" : "^$|^[^/].*$"
          }
        },
        "let" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DerivedSymbol"
          }
        },
        "merge" : {
          "type" : "array",
          "items" : {
            "anyOf" : [ {
              "$ref" : "#/definitions/Loop-2"
            }, {
              "$ref" : "#/definitions/Chain-2"
            }, {
              "$ref" : "#/definitions/Exclude-2"
            }, {
              "$ref" : "#/definitions/Include-2"
            }, {
              "$ref" : "#/definitions/Combo-2"
            }, {
              "$ref" : "#/definitions/ReplaceText-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            }, {
              "$ref" : "#/definitions/Merge-2"
            }, {
              "$ref" : "#/definitions/OpenRewriteRecipe-2"
            }, {
              "$ref" : "#/definitions/RewritePath-2"
            }, {
              "$ref" : "#/definitions/UniquePath-2"
            }, {
              "$ref" : "#/definitions/YTT-2"
            }, {
              "$ref" : "#/definitions/Let-2"
            }, {
              "$ref" : "#/definitions/UseEncoding-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            } ]
          }
        },
        "name" : {
          "type" : "string"
        },
        "onConflict" : {
          "$ref" : "#/definitions/ConflictResolution"
        }
      }
    },
    "Combo-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Combo-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "Combo"
          }
        }
      } ]
    },
    "ConflictResolution" : {
      "type" : "string",
      "enum" : [ "Fail", "UseFirst", "UseLast", "Append", "FavorOwn", "FavorForeign", "NWayDiff" ]
    },
    "DependsOn" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "^$|^[a-z][a-z0-9A-Z]*$"
        },
        "value" : { }
      }
    },
    "DerivedSymbol" : {
      "type" : "object",
      "properties" : {
        "expression" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "^$|^[a-z][a-z0-9A-Z]*$"
        }
      }
    },
    "Exclude-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string"
        },
        "patterns" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 1,
            "pattern" : "^$|^[^/].*$"
          }
        }
      }
    },
    "Exclude-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Exclude-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "Exclude"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "Expression" : {
      "type" : "string"
    },
    "Include-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string"
        },
        "patterns" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 1,
            "pattern" : "^$|^[^/].*$"
          }
        }
      }
    },
    "Include-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Include-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "Include"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "InvokeFragment-1" : {
      "type" : "object",
      "properties" : {
        "anchor" : {
          "type" : "string",
          "pattern" : "^$|^[^/]$|^[^/](.+)[^/]$"
        },
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "let" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DerivedSymbol"
          }
        },
        "name" : {
          "type" : "string"
        },
        "reference" : {
          "type" : "string",
          "minLength" : 1,
          "pattern" : "^[a-z0-9]([a-z0-9-]*[a-z0-9])?$"
        }
      }
    },
    "InvokeFragment-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/InvokeFragment-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "InvokeFragment"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "Let-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "in" : {
          "anyOf" : [ {
            "$ref" : "#/definitions/Loop-2"
          }, {
            "$ref" : "#/definitions/Chain-2"
          }, {
            "$ref" : "#/definitions/Exclude-2"
          }, {
            "$ref" : "#/definitions/Include-2"
          }, {
            "$ref" : "#/definitions/Combo-2"
          }, {
            "$ref" : "#/definitions/ReplaceText-2"
          }, {
            "$ref" : "#/definitions/InvokeFragment-2"
          }, {
            "$ref" : "#/definitions/Merge-2"
          }, {
            "$ref" : "#/definitions/OpenRewriteRecipe-2"
          }, {
            "$ref" : "#/definitions/RewritePath-2"
          }, {
            "$ref" : "#/definitions/UniquePath-2"
          }, {
            "$ref" : "#/definitions/YTT-2"
          }, {
            "$ref" : "#/definitions/Let-2"
          }, {
            "$ref" : "#/definitions/UseEncoding-2"
          }, {
            "$ref" : "#/definitions/InvokeFragment-2"
          } ]
        },
        "name" : {
          "type" : "string"
        },
        "noShadow" : {
          "type" : "boolean"
        },
        "symbols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DerivedSymbol"
          }
        }
      }
    },
    "Let-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Let-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "Let"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "Loop-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "doAsChain" : {
          "anyOf" : [ {
            "$ref" : "#/definitions/Loop-2"
          }, {
            "$ref" : "#/definitions/Chain-2"
          }, {
            "$ref" : "#/definitions/Exclude-2"
          }, {
            "$ref" : "#/definitions/Include-2"
          }, {
            "$ref" : "#/definitions/Combo-2"
          }, {
            "$ref" : "#/definitions/ReplaceText-2"
          }, {
            "$ref" : "#/definitions/InvokeFragment-2"
          }, {
            "$ref" : "#/definitions/Merge-2"
          }, {
            "$ref" : "#/definitions/OpenRewriteRecipe-2"
          }, {
            "$ref" : "#/definitions/RewritePath-2"
          }, {
            "$ref" : "#/definitions/UniquePath-2"
          }, {
            "$ref" : "#/definitions/YTT-2"
          }, {
            "$ref" : "#/definitions/Let-2"
          }, {
            "$ref" : "#/definitions/UseEncoding-2"
          }, {
            "$ref" : "#/definitions/InvokeFragment-2"
          } ]
        },
        "doAsMerge" : {
          "anyOf" : [ {
            "$ref" : "#/definitions/Loop-2"
          }, {
            "$ref" : "#/definitions/Chain-2"
          }, {
            "$ref" : "#/definitions/Exclude-2"
          }, {
            "$ref" : "#/definitions/Include-2"
          }, {
            "$ref" : "#/definitions/Combo-2"
          }, {
            "$ref" : "#/definitions/ReplaceText-2"
          }, {
            "$ref" : "#/definitions/InvokeFragment-2"
          }, {
            "$ref" : "#/definitions/Merge-2"
          }, {
            "$ref" : "#/definitions/OpenRewriteRecipe-2"
          }, {
            "$ref" : "#/definitions/RewritePath-2"
          }, {
            "$ref" : "#/definitions/UniquePath-2"
          }, {
            "$ref" : "#/definitions/YTT-2"
          }, {
            "$ref" : "#/definitions/Let-2"
          }, {
            "$ref" : "#/definitions/UseEncoding-2"
          }, {
            "$ref" : "#/definitions/InvokeFragment-2"
          } ]
        },
        "index" : {
          "type" : "string",
          "pattern" : "^$|^[a-z][a-z0-9A-Z]*$"
        },
        "name" : {
          "type" : "string"
        },
        "on" : {
          "$ref" : "#/definitions/Expression"
        },
        "var" : {
          "type" : "string",
          "pattern" : "^$|^[a-z][a-z0-9A-Z]*$"
        }
      }
    },
    "Loop-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Loop-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "Loop"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "Merge-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string"
        },
        "sources" : {
          "type" : "array",
          "items" : {
            "anyOf" : [ {
              "$ref" : "#/definitions/Loop-2"
            }, {
              "$ref" : "#/definitions/Chain-2"
            }, {
              "$ref" : "#/definitions/Exclude-2"
            }, {
              "$ref" : "#/definitions/Include-2"
            }, {
              "$ref" : "#/definitions/Combo-2"
            }, {
              "$ref" : "#/definitions/ReplaceText-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            }, {
              "$ref" : "#/definitions/Merge-2"
            }, {
              "$ref" : "#/definitions/OpenRewriteRecipe-2"
            }, {
              "$ref" : "#/definitions/RewritePath-2"
            }, {
              "$ref" : "#/definitions/UniquePath-2"
            }, {
              "$ref" : "#/definitions/YTT-2"
            }, {
              "$ref" : "#/definitions/Let-2"
            }, {
              "$ref" : "#/definitions/UseEncoding-2"
            }, {
              "$ref" : "#/definitions/InvokeFragment-2"
            } ]
          }
        }
      }
    },
    "Merge-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Merge-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "Merge"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "OpenRewriteRecipe-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string"
        },
        "options" : {
          "type" : "object"
        },
        "parseOrFail" : {
          "type" : "boolean"
        },
        "recipe" : {
          "type" : "string",
          "pattern" : "^[a-zA-Z_$][a-zA-Z\\d_$]*(?:\\.[a-zA-Z_$][a-zA-Z\\d_$]*)*$"
        }
      }
    },
    "OpenRewriteRecipe-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/OpenRewriteRecipe-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "OpenRewriteRecipe"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "Pattern" : {
      "type" : "string",
      "format" : "regex"
    },
    "ReplaceText-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string"
        },
        "regex" : {
          "type" : "object",
          "properties" : {
            "pattern" : {
              "$ref" : "#/definitions/Pattern"
            },
            "with" : {
              "$ref" : "#/definitions/Expression"
            }
          }
        },
        "substitutions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "text" : {
                "type" : "string",
                "minLength" : 1
              },
              "with" : {
                "$ref" : "#/definitions/Expression"
              }
            }
          }
        }
      }
    },
    "ReplaceText-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ReplaceText-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "ReplaceText"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "RewritePath-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "matchOrFail" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "regex" : {
          "$ref" : "#/definitions/Pattern"
        },
        "rewriteTo" : {
          "$ref" : "#/definitions/Expression"
        }
      }
    },
    "RewritePath-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/RewritePath-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "RewritePath"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "UniquePath-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "name" : {
          "type" : "string"
        },
        "strategy" : {
          "$ref" : "#/definitions/ConflictResolution"
        }
      }
    },
    "UniquePath-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/UniquePath-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "UniquePath"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "UseEncoding-1" : {
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "encoding" : {
          "type" : "object"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "UseEncoding-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/UseEncoding-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "UseEncoding"
          }
        },
        "required" : [ "type" ]
      } ]
    },
    "YTT-1" : {
      "type" : "object",
      "properties" : {
        "allowList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Pattern"
          }
        },
        "condition" : {
          "$ref" : "#/definitions/Expression"
        },
        "denyList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Pattern"
          }
        },
        "extraArgs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Expression"
          }
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "YTT-2" : {
      "allOf" : [ {
        "$ref" : "#/definitions/YTT-1"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "const" : "YTT"
          }
        },
        "required" : [ "type" ]
      } ]
    }
  },
  "type" : "object",
  "properties" : {
    "accelerator" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "iconUrl" : {
          "type" : "string"
        },
        "imports" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "expose" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "as" : {
                      "type" : "string",
                      "minLength" : 1,
                      "pattern" : "^$|^[a-z][a-z0-9A-Z]*$"
                    },
                    "dependsOn" : {
                      "$ref" : "#/definitions/DependsOn"
                    },
                    "name" : {
                      "type" : "string",
                      "minLength" : 1,
                      "pattern" : "^\\*$|^$|^[a-z][a-z0-9A-Z]*$"
                    }
                  }
                }
              },
              "exposeTypes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "as" : {
                      "type" : "string",
                      "minLength" : 1,
                      "pattern" : "^$|^[A-Z][a-z0-9A-Z]*$"
                    },
                    "name" : {
                      "type" : "string",
                      "minLength" : 1,
                      "pattern" : "^\\*$|^$|^[A-Z][a-z0-9A-Z]*$"
                    }
                  }
                }
              },
              "name" : {
                "type" : "string",
                "minLength" : 1
              }
            }
          }
        },
        "name" : {
          "type" : "string"
        },
        "options" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AcceleratorOption"
          }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "types" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "minLength" : 1,
                "pattern" : "^$|^[A-Z][a-z0-9A-Z]*$"
              },
              "struct" : {
                "minItems" : 1,
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/AcceleratorOption"
                }
              }
            }
          }
        }
      }
    },
    "engine" : {
      "anyOf" : [ {
        "$ref" : "#/definitions/Loop-2"
      }, {
        "$ref" : "#/definitions/Chain-2"
      }, {
        "$ref" : "#/definitions/Exclude-2"
      }, {
        "$ref" : "#/definitions/Include-2"
      }, {
        "$ref" : "#/definitions/Combo-2"
      }, {
        "$ref" : "#/definitions/ReplaceText-2"
      }, {
        "$ref" : "#/definitions/InvokeFragment-2"
      }, {
        "$ref" : "#/definitions/Merge-2"
      }, {
        "$ref" : "#/definitions/OpenRewriteRecipe-2"
      }, {
        "$ref" : "#/definitions/RewritePath-2"
      }, {
        "$ref" : "#/definitions/UniquePath-2"
      }, {
        "$ref" : "#/definitions/YTT-2"
      }, {
        "$ref" : "#/definitions/Let-2"
      }, {
        "$ref" : "#/definitions/UseEncoding-2"
      }, {
        "$ref" : "#/definitions/InvokeFragment-2"
      } ]
    }
  }
}