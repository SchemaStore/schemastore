{
  "$comment": "there are multiple resources describing pyproject.toml. The canonical reference is at https://packaging.python.org/en/latest/specifications/declaring-project-metadata/, which refers to multiple proposals such as PEP 517, PEP 518 and PEP 621",
  "$id": "https://json.schemastore.org/pyproject.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "BuildSystem": {
      "$comment": "see PEP 517 (https://peps.python.org/pep-0517/) and PEP 518 (https://peps.python.org/pep-0518/)",
      "additionalProperties": false,
      "description": "Build-related data.\n",
      "properties": {
        "backend-path": {
          "description": "paths to prepend to 'sys.path' when loading the build backend, relative to project root",
          "items": {
            "type": "string"
          },
          "title": "Build backend directories",
          "type": "array"
        },
        "build-backend": {
          "description": "Python path to project's build backend",
          "examples": ["setuptools.build_meta", "my_build_backend:backend"],
          "title": "Build backend",
          "type": "string",
          "x-taplo": {
            "links": {
              "key": "https://www.python.org/dev/peps/pep-0517/"
            }
          }
        },
        "requires": {
          "description": "A list of strings representing [PEP 508](https://www.python.org/dev/peps/pep-0508) dependencies required to execute the build system.\n",
          "examples": ["setuptools >= 64.0"],
          "items": {
            "type": "string"
          },
          "title": "Build system dependencies",
          "type": "array",
          "x-taplo": {
            "links": {
              "key": "https://www.python.org/dev/peps/pep-0518/#build-system-table"
            }
          }
        }
      },
      "required": ["requires"],
      "title": "Project build system configuration",
      "type": "object",
      "x-taplo": {
        "links": {
          "key": "https://www.python.org/dev/peps/pep-0518/#build-system-table"
        }
      }
    },
    "poetry-author-pattern": {
      "description": "Pattern that matches `Name <email>` like 'King Arthur' or 'Miss Islington &lt;miss-islington@python.org&gt;'.",
      "pattern": "^(?:\\S+?\\s)+?(?:<(?:[a-z\\d!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z\\d!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z\\d](?:[a-z\\d-]*[a-z\\d])?\\.)+[a-z\\d](?:[a-z\\d-]*[a-z\\d])?|\\[(?:(?:25[0-5]|2[0-4][\\d]|[01]?[\\d][\\d]?)\\.){3}(?:25[0-5]|2[0-4][\\d]|[01]?[\\d][\\d]?|[a-z\\d-]*[a-z\\d]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])>)?$",
      "type": "string"
    },
    "poetry-authors": {
      "description": "List of authors that contributed to the package. This is typically the main maintainers, not the full list.",
      "items": {
        "$ref": "#/definitions/poetry-author-pattern"
      },
      "type": "array"
    },
    "poetry-dependency": {
      "$ref": "#/definitions/poetry-pep440-version"
    },
    "poetry-dependency-any": {
      "oneOf": [
        {
          "$ref": "#/definitions/poetry-dependency"
        },
        {
          "$ref": "#/definitions/poetry-long-dependency"
        },
        {
          "$ref": "#/definitions/poetry-git-dependency"
        },
        {
          "$ref": "#/definitions/poetry-file-dependency"
        },
        {
          "$ref": "#/definitions/poetry-path-dependency"
        },
        {
          "$ref": "#/definitions/poetry-url-dependency"
        },
        {
          "$ref": "#/definitions/poetry-multiple-constraints-dependency"
        }
      ]
    },
    "poetry-extra-script": {
      "additionalProperties": false,
      "description": "A script that should be installed only if extras are activated.",
      "properties": {
        "callable": {
          "$ref": "#/definitions/poetry-script"
        },
        "extras": {
          "description": "The required extras for this script.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "poetry-file-dependency": {
      "additionalProperties": false,
      "properties": {
        "extras": {
          "description": "The required extras for this dependency.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "file": {
          "description": "The path to the file.",
          "type": "string"
        },
        "markers": {
          "description": "The PEP 508 compliant environment markers for which the dependency should be installed.",
          "type": "string"
        },
        "optional": {
          "description": "Whether the dependency is optional or not.",
          "type": "boolean"
        },
        "platform": {
          "description": "The platform(s) for which the dependency should be installed.",
          "type": "string"
        },
        "python": {
          "description": "The python versions for which the dependency should be installed.",
          "type": "string"
        }
      },
      "required": ["file"],
      "type": "object"
    },
    "poetry-git-dependency": {
      "additionalProperties": false,
      "properties": {
        "allow-prereleases": {
          "description": "Whether the dependency allows prereleases or not.",
          "type": "boolean"
        },
        "allows-prereleases": {
          "description": "Whether the dependency allows prereleases or not.",
          "type": "boolean"
        },
        "branch": {
          "description": "The branch to checkout.",
          "type": "string"
        },
        "extras": {
          "description": "The required extras for this dependency.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "git": {
          "description": "The url of the git repository.",
          "format": "uri",
          "type": "string"
        },
        "markers": {
          "description": "The PEP 508 compliant environment markers for which the dependency should be installed.",
          "type": "string"
        },
        "optional": {
          "description": "Whether the dependency is optional or not.",
          "type": "boolean"
        },
        "platform": {
          "description": "The platform(s) for which the dependency should be installed.",
          "type": "string"
        },
        "python": {
          "description": "The python versions for which the dependency should be installed.",
          "type": "string"
        },
        "rev": {
          "description": "The revision to checkout.",
          "type": "string"
        },
        "tag": {
          "description": "The tag to checkout.",
          "type": "string"
        }
      },
      "required": ["git"],
      "type": "object"
    },
    "poetry-long-dependency": {
      "additionalProperties": false,
      "properties": {
        "allow-prereleases": {
          "description": "Whether the dependency allows prereleases or not.",
          "type": "boolean"
        },
        "allows-prereleases": {
          "description": "Whether the dependency allows prereleases or not.",
          "type": "boolean"
        },
        "extras": {
          "description": "The required extras for this dependency.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "markers": {
          "description": "The PEP 508 compliant environment markers for which the dependency should be installed.",
          "type": "string"
        },
        "optional": {
          "description": "Whether the dependency is optional or not.",
          "type": "boolean"
        },
        "platform": {
          "description": "The platform(s) for which the dependency should be installed.",
          "type": "string"
        },
        "python": {
          "description": "The python versions for which the dependency should be installed.",
          "type": "string"
        },
        "source": {
          "description": "The exclusive source used to search for this dependency.",
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/poetry-pep440-version"
        }
      },
      "required": ["version"],
      "type": "object"
    },
    "poetry-maintainers": {
      "description": "List of maintainers, other than the original author(s), that upkeep the package.",
      "items": {
        "$ref": "#/definitions/poetry-author-pattern"
      },
      "type": "array"
    },
    "poetry-multiple-constraints-dependency": {
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/poetry-dependency"
          },
          {
            "$ref": "#/definitions/poetry-long-dependency"
          },
          {
            "$ref": "#/definitions/poetry-git-dependency"
          },
          {
            "$ref": "#/definitions/poetry-file-dependency"
          },
          {
            "$ref": "#/definitions/poetry-path-dependency"
          },
          {
            "$ref": "#/definitions/poetry-url-dependency"
          }
        ]
      },
      "minItems": 1,
      "type": "array"
    },
    "poetry-path-dependency": {
      "additionalProperties": false,
      "properties": {
        "develop": {
          "description": "Whether to install the dependency in development mode.",
          "type": "boolean"
        },
        "extras": {
          "description": "The required extras for this dependency.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "markers": {
          "description": "The PEP 508 compliant environment markers for which the dependency should be installed.",
          "type": "string"
        },
        "optional": {
          "description": "Whether the dependency is optional or not.",
          "type": "boolean"
        },
        "path": {
          "description": "The path to the dependency.",
          "type": "string"
        },
        "platform": {
          "description": "The platform(s) for which the dependency should be installed.",
          "type": "string"
        },
        "python": {
          "description": "The python versions for which the dependency should be installed.",
          "type": "string"
        }
      },
      "required": ["path"],
      "type": "object"
    },
    "poetry-pep440-version": {
      "description": "A version constraint. Validates against the PEP 440's version pattern.",
      "type": "string"
    },
    "poetry-repository": {
      "additionalProperties": false,
      "properties": {
        "default": {
          "description": "Make this repository the default (disable PyPI)",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the repository",
          "type": "string"
        },
        "secondary": {
          "description": "Declare this repository as secondary, i.e. it will only be looked up last for packages.",
          "type": "boolean"
        },
        "url": {
          "description": "The url of the repository",
          "format": "uri",
          "type": "string"
        }
      },
      "type": "object"
    },
    "poetry-script": {
      "description": "A simple script pointing to a callable object.",
      "type": "string"
    },
    "poetry-scripts": {
      "patternProperties": {
        "^[a-zA-Z-_.0-9]+$": {
          "oneOf": [
            {
              "$ref": "#/definitions/poetry-script"
            },
            {
              "$ref": "#/definitions/poetry-extra-script"
            }
          ]
        }
      },
      "type": "object"
    },
    "poetry-url-dependency": {
      "additionalProperties": false,
      "properties": {
        "extras": {
          "description": "The required extras for this dependency.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "markers": {
          "description": "The PEP 508 compliant environment markers for which the dependency should be installed.",
          "type": "string"
        },
        "optional": {
          "description": "Whether the dependency is optional or not.",
          "type": "boolean"
        },
        "platform": {
          "description": "The platform(s) for which the dependency should be installed.",
          "type": "string"
        },
        "python": {
          "description": "The python versions for which the dependency should be installed.",
          "type": "string"
        },
        "url": {
          "description": "The url to the file.",
          "type": "string"
        }
      },
      "required": ["url"],
      "type": "object"
    },
    "projectAuthor": {
      "additionalProperties": false,
      "anyOf": [
        {
          "properties": {
            "name": true
          },
          "required": ["name"]
        },
        {
          "properties": {
            "email": true
          },
          "required": ["email"]
        }
      ],
      "properties": {
        "email": {
          "format": "email",
          "title": "Author email",
          "type": "string"
        },
        "name": {
          "title": "Author name",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "properties": {
    "build-system": {
      "$ref": "#/definitions/BuildSystem"
    },
    "project": {
      "$comment": "see PEP 621 (https://peps.python.org/pep-0621/)",
      "additionalProperties": false,
      "dependencies": {
        "authors": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "authors"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "classifiers": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "classifiers"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "dependencies": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "dependencies"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "description": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "description"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "entry-points": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "entry-points"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "gui-scripts": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "gui-scripts"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "keywords": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "keywords"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "license": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "license"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "maintainers": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "maintainers"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "optional-dependencies": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "optional-dependencies"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "readme": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "readme"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "requires-python": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "requires-python"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "scripts": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "scripts"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "urls": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "urls"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        },
        "version": {
          "not": {
            "properties": {
              "dynamic": {
                "contains": {
                  "const": "version"
                },
                "type": "array"
              }
            },
            "required": ["dynamic"]
          }
        }
      },
      "oneOf": [
        {
          "properties": {
            "dynamic": {
              "contains": {
                "const": "version"
              },
              "type": "array"
            }
          },
          "required": ["dynamic"]
        },
        {
          "properties": {
            "version": true
          },
          "required": ["version"]
        }
      ],
      "properties": {
        "authors": {
          "items": {
            "$ref": "#/definitions/projectAuthor"
          },
          "title": "Project authors",
          "type": "array"
        },
        "classifiers": {
          "items": {
            "type": "string"
          },
          "title": "Applicable Trove classifiers",
          "type": "array"
        },
        "dependencies": {
          "examples": [["attrs", "requests ~= 2.28"]],
          "items": {
            "type": "string"
          },
          "title": "Project dependency requirements",
          "type": "array"
        },
        "description": {
          "title": "Project summary description",
          "type": "string"
        },
        "dynamic": {
          "examples": [["version"]],
          "items": {
            "enum": [
              "version",
              "description",
              "readme",
              "requires-python",
              "license",
              "authors",
              "maintainers",
              "keywords",
              "classifiers",
              "urls",
              "scripts",
              "gui-scripts",
              "entry-points",
              "dependencies",
              "optional-dependencies"
            ],
            "type": "string"
          },
          "title": "Dynamic metadata values",
          "type": "array"
        },
        "entry-points": {
          "additionalProperties": false,
          "examples": [
            {
              "pygments.styles": {
                "monokai": "package.module:object.attribute"
              }
            }
          ],
          "patternProperties": {
            "^\\w+(\\.\\w+)*$": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "propertyNames": {
            "not": {
              "anyOf": [
                {
                  "const": "console_scripts"
                },
                {
                  "const": "gui_scripts"
                }
              ]
            }
          },
          "title": "Other entry-point groups",
          "type": "object"
        },
        "gui-scripts": {
          "additionalProperties": {
            "type": "string"
          },
          "examples": [
            {
              "mycmd": "package.module:object.function"
            }
          ],
          "title": "GUI scripts",
          "type": "object"
        },
        "keywords": {
          "items": {
            "type": "string"
          },
          "title": "Project keywords",
          "type": "array"
        },
        "license": {
          "examples": [
            {
              "text": "MIT"
            },
            {
              "file": "LICENSE"
            }
          ],
          "oneOf": [
            {
              "additionalProperties": false,
              "properties": {
                "file": {
                  "title": "License file path",
                  "type": "string"
                }
              },
              "required": ["file"]
            },
            {
              "additionalProperties": false,
              "properties": {
                "text": {
                  "title": "License text",
                  "type": "string"
                }
              },
              "required": ["text"]
            }
          ],
          "title": "Project license",
          "type": "object"
        },
        "maintainers": {
          "items": {
            "$ref": "#/definitions/projectAuthor"
          },
          "title": "Project maintainers",
          "type": "array"
        },
        "name": {
          "pattern": "^([a-zA-Z\\d]|[a-zA-Z\\d][\\w.-]*[a-zA-Z\\d])$",
          "title": "Project name",
          "type": "string"
        },
        "optional-dependencies": {
          "additionalProperties": false,
          "description": "keys are extra names",
          "examples": [
            {
              "typing": ["boto3-stubs", "typing-extensions ~= 4.1"]
            }
          ],
          "patternProperties": {
            "^([a-z\\d]|[a-z\\d]([a-z\\d-](?!--))*[a-z\\d])$": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "title": "Project extra dependency requirements",
          "type": "object"
        },
        "readme": {
          "description": "AKA the README",
          "examples": [
            "README.md",
            {
              "content-type": "text/plain",
              "file": "README.txt"
            },
            {
              "content-type": "text/markdown",
              "text": "# Example project\n\nAn example project"
            }
          ],
          "oneOf": [
            {
              "title": "README file path",
              "type": "string"
            },
            {
              "oneOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "content-type": true,
                    "file": {
                      "title": "README file path",
                      "type": "string"
                    }
                  },
                  "required": ["file"]
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "content-type": true,
                    "text": {
                      "title": "README text",
                      "type": "string"
                    }
                  },
                  "required": ["text"]
                }
              ],
              "properties": {
                "content-type": {
                  "description": "RFC 1341 compliant content-type (with optional charset, defaulting to UTF-8)",
                  "title": "README text content-type",
                  "type": "string"
                }
              },
              "required": ["content-type"],
              "type": "object"
            }
          ],
          "title": "Project full description"
        },
        "requires-python": {
          "examples": [">= 3.7"],
          "title": "Python version compatibility",
          "type": "string"
        },
        "scripts": {
          "additionalProperties": {
            "type": "string"
          },
          "examples": [
            {
              "mycmd": "package.module:object.function"
            }
          ],
          "title": "Console scripts",
          "type": "object"
        },
        "urls": {
          "additionalProperties": {
            "format": "uri",
            "type": "string"
          },
          "examples": [
            {
              "homepage": "https://example.com/example-project"
            }
          ],
          "title": "Project URLs",
          "type": "object"
        },
        "version": {
          "examples": ["42.0.1", "0.3.9rc7.post0.dev5"],
          "pattern": "^([1-9]\\d*!)?(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))*((a|b|rc)(0|[1-9]\\d*))?(\\.post(0|[1-9]\\d*))?(\\.dev(0|[1-9]\\d*))?$",
          "title": "Project version",
          "type": "string"
        }
      },
      "required": ["name"],
      "title": "Project metadata",
      "type": "object"
    },
    "tool": {
      "additionalProperties": {
        "type": "object"
      },
      "description": "A table for tool configurations.\n\nEvery tool that is used by the project can have its own sub-table for its configuration.\n",
      "examples": [
        {
          "tool": {
            "isort": {
              "profile": "black"
            }
          }
        }
      ],
      "properties": {
        "poetry": {
          "additionalProperties": false,
          "properties": {
            "authors": {
              "$ref": "#/definitions/poetry-authors"
            },
            "build": {
              "description": "The file used to build extensions.",
              "type": "string"
            },
            "classifiers": {
              "description": "A list of trove classifers.",
              "type": "array"
            },
            "dependencies": {
              "description": "This is a hash of package name (keys) and version constraints (values) that are required to run this package.",
              "patternProperties": {
                "^(?!python$)[a-zA-Z-_.0-9]+$": {
                  "$ref": "#/definitions/poetry-dependency-any"
                }
              },
              "properties": {
                "python": {
                  "$ref": "#/definitions/poetry-dependency",
                  "description": "The Python versions the package is compatible with.",
                  "type": "string"
                }
              },
              "required": ["python"],
              "type": "object"
            },
            "description": {
              "description": "Short package description.",
              "type": "string"
            },
            "dev-dependencies": {
              "description": "This is a hash of package name (keys) and version constraints (values) that this package requires for developing it (testing tools and such).",
              "patternProperties": {
                "^[a-zA-Z-_.0-9]+$": {
                  "$ref": "#/definitions/poetry-dependency-any"
                }
              },
              "type": "object"
            },
            "documentation": {
              "description": "Documentation URL for the project.",
              "format": "uri",
              "type": "string"
            },
            "exclude": {
              "description": "A list of files and folders to exclude.",
              "type": "array"
            },
            "extras": {
              "patternProperties": {
                "^[a-zA-Z-_.0-9]+$": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "homepage": {
              "description": "Homepage URL for the project.",
              "format": "uri",
              "type": "string"
            },
            "include": {
              "description": "A list of files and folders to include.",
              "type": "array"
            },
            "keywords": {
              "items": {
                "description": "A tag/keyword that this package relates to.",
                "type": "string"
              },
              "type": "array"
            },
            "license": {
              "description": "License name.",
              "type": "string"
            },
            "maintainers": {
              "$ref": "#/definitions/poetry-maintainers"
            },
            "name": {
              "description": "Package name.",
              "type": "string"
            },
            "packages": {
              "description": "A list of packages to include in the final distribution.",
              "items": {
                "additionalProperties": false,
                "description": "Information about where the package resides.",
                "properties": {
                  "format": {
                    "description": "The format(s) for which the package must be included.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    ]
                  },
                  "from": {
                    "description": "Where the source directory of the package resides.",
                    "type": "string"
                  },
                  "include": {
                    "description": "What to include in the package.",
                    "type": "string"
                  }
                },
                "required": ["include"],
                "type": "object"
              },
              "type": "array"
            },
            "plugins": {
              "description": "A hash of hashes representing plugins",
              "patternProperties": {
                "^[a-zA-Z-_.0-9]+$": {
                  "patternProperties": {
                    "^[a-zA-Z-_.0-9]+$": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "readme": {
              "description": "The path to the README file",
              "type": "string"
            },
            "repository": {
              "description": "Repository URL for the project.",
              "format": "uri",
              "type": "string"
            },
            "scripts": {
              "description": "A hash of scripts to be installed.",
              "patternProperties": {
                "^.+$": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "source": {
              "description": "A set of additional repositories where packages can be found.",
              "items": {
                "$ref": "#/definitions/poetry-repository"
              },
              "type": "array"
            },
            "urls": {
              "patternProperties": {
                "^.+$": {
                  "description": "The full url of the custom url.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "version": {
              "description": "Version of the package. It should follow semantic versioning, but it is not enforced.",
              "type": "string"
            }
          },
          "required": ["name", "version", "description"],
          "type": "object"
        }
      },
      "title": "Tool-specific configuration",
      "type": "object",
      "x-taplo": {
        "links": {
          "key": "https://www.python.org/dev/peps/pep-0518/#id28"
        }
      }
    }
  },
  "title": "JSON schema for Python project metadata and configuration",
  "type": "object",
  "x-taplo-info": {
    "authors": ["zevisert (https://github.com/zevisert)"],
    "pattern": ["^(.*(/|\\\\)pyproject\\.toml|pyproject\\.toml)$"]
  }
}
