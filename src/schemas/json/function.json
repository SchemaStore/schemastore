{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "bindingBase": {
      "properties": {
        "dataType": {
          "description": "The data type hint for the binding parameter (string, binary, or stream).",
          "enum": ["string", "binary", "stream"]
        },
        "direction": {
          "enum": ["in", "out", "inout"],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": ["name", "type", "direction"]
    },
    "blobBinding": {
      "oneOf": [
        {
          "properties": {
            "direction": {
              "enum": ["in"]
            },
            "type": {
              "enum": ["blobTrigger"]
            }
          }
        },
        {
          "properties": {
            "type": {
              "enum": ["blob"]
            }
          }
        }
      ],
      "properties": {
        "connection": {
          "description": "An app setting (or environment variable) with the storage connection string to be used by this binding.",
          "type": "string"
        },
        "path": {
          "description": "The path to the blob container",
          "type": "string"
        }
      }
    },
    "documentDBBinding": {
      "oneOf": [
        {
          "properties": {
            "direction": {
              "enum": ["in"]
            },
            "id": {
              "description": "This is the id for the record to retrieve.",
              "type": "string"
            },
            "sqlQuery": {
              "description": "This is the query to run against the collection.",
              "type": "string"
            }
          }
        },
        {
          "properties": {
            "createIfNotExists": {
              "description": "When true, your database and collection will be created automatically.",
              "type": "boolean"
            },
            "direction": {
              "enum": ["out"]
            }
          }
        }
      ],
      "properties": {
        "collectionName": {
          "description": "This is the name of the collection within your database to which data will be written.",
          "type": "string"
        },
        "connection": {
          "description": "This is the connection string for your DocumentDB account.",
          "type": "string"
        },
        "databaseName": {
          "description": "This is the name of the database within your DocumentDB account to which data will be written.",
          "type": "string"
        },
        "type": {
          "enum": ["documentDB"]
        }
      }
    },
    "dynamicBinding": {
      "properties": {
        "direction": {
          "enum": ["in", "out", "inout"]
        },
        "type": {
          "not": {
            "enum": [
              "serviceBusTrigger",
              "serviceBus",
              "blobTrigger",
              "blob",
              "manualTrigger",
              "eventHubTrigger",
              "eventHub",
              "timerTrigger",
              "queueTrigger",
              "queue",
              "httpTrigger",
              "http",
              "mobileTable",
              "documentDB",
              "table",
              "notificationHub",
              "twilioSms",
              "sendGrid"
            ]
          }
        }
      }
    },
    "eventHubBinding": {
      "oneOf": [
        {
          "properties": {
            "cardinality": {
              "description": "The cardinality hint for the input binding parameter (single message or array of messages).",
              "enum": ["one", "many"]
            },
            "consumerGroup": {
              "description": "The event hub consumer group.",
              "type": "string"
            },
            "direction": {
              "enum": ["in"]
            },
            "type": {
              "enum": ["eventHubTrigger"]
            }
          }
        },
        {
          "properties": {
            "direction": {
              "enum": ["out"]
            },
            "type": {
              "enum": ["eventHub"]
            }
          }
        }
      ],
      "properties": {
        "connection": {
          "description": "The event hub connection string setting.",
          "type": "string"
        },
        "path": {
          "description": "The event hub path.",
          "type": "string"
        }
      }
    },
    "httpBinding": {
      "oneOf": [
        {
          "properties": {
            "authLevel": {
              "default": "function",
              "description": "The function HTTP authorization level.",
              "enum": ["anonymous", "function", "admin"],
              "type": "string"
            },
            "direction": {
              "enum": ["in"]
            },
            "methods": {
              "items": [
                {
                  "enum": [
                    "get",
                    "post",
                    "delete",
                    "head",
                    "patch",
                    "put",
                    "options",
                    "trace"
                  ],
                  "type": "string"
                }
              ],
              "type": "array"
            },
            "route": {
              "description": "The function HTTP route template.",
              "type": "string"
            },
            "type": {
              "enum": ["httpTrigger"]
            },
            "webHookType": {
              "description": "The type of WebHook handled by the trigger (if handling a pre-defined WebHook).",
              "type": "string"
            }
          }
        },
        {
          "properties": {
            "direction": {
              "enum": ["out"]
            },
            "type": {
              "enum": ["http"]
            }
          }
        }
      ]
    },
    "httpTrigger": {},
    "manualTriggerBinding": {
      "properties": {
        "direction": {
          "enum": ["in"]
        },
        "type": {
          "enum": ["manualTrigger"]
        }
      }
    },
    "mobileBinding": {
      "oneOf": [
        {
          "properties": {
            "direction": {
              "enum": ["in"]
            },
            "id": {
              "description": "This is the id for the record to retrieve.",
              "type": "string"
            }
          }
        },
        {
          "properties": {
            "direction": {
              "enum": ["out"]
            }
          }
        }
      ],
      "properties": {
        "apiKey": {
          "description": "This is app setting name that specifies the API Key for your Mobile App.",
          "type": "string"
        },
        "connection": {
          "description": "This is the app setting name that specifies the URL of your Mobile App.",
          "type": "string"
        },
        "tableName": {
          "description": "This is the name of the table within your Mobile App to which data will be written.",
          "type": "string"
        },
        "type": {
          "enum": ["mobileTable"]
        }
      }
    },
    "notificationHubBinding": {
      "properties": {
        "connection": {
          "description": "The name of the app setting which contains the notification hub connection string.",
          "type": "string"
        },
        "direction": {
          "enum": ["out"]
        },
        "hubName": {
          "description": "The name of the notification hub.",
          "type": "string"
        },
        "platform": {
          "description": "The notification platform to target. Sends template notification if platform is omitted.",
          "enum": ["apns", "adm", "gcm", "wns", "mpns"],
          "type": "string"
        },
        "tagExpression": {
          "description": "The tag to send the notification to.",
          "type": "string"
        },
        "type": {
          "enum": ["notificationHub"]
        }
      }
    },
    "queueBinding": {
      "oneOf": [
        {
          "properties": {
            "direction": {
              "enum": ["in"]
            },
            "type": {
              "enum": ["queueTrigger"]
            }
          }
        },
        {
          "properties": {
            "direction": {
              "enum": ["out"]
            },
            "type": {
              "enum": ["queue"]
            }
          }
        }
      ],
      "properties": {
        "connection": {
          "description": "An app setting (or environment variable) with the storage connection string to be used by this binding.",
          "type": "string"
        },
        "queueName": {
          "description": "The queue name.",
          "type": "string"
        }
      }
    },
    "sendGridBinding": {
      "properties": {
        "apiKey": {
          "description": "The name of the app setting which contains your SendGrid api key.",
          "type": "string"
        },
        "direction": {
          "enum": ["out"]
        },
        "from": {
          "description": "The email address to send from.",
          "type": "string"
        },
        "subject": {
          "description": "The subject of the email.",
          "type": "string"
        },
        "text": {
          "description": "The text of the email.",
          "type": "string"
        },
        "to": {
          "description": "The email address to send to.",
          "type": "string"
        },
        "type": {
          "enum": ["sendGrid"]
        }
      }
    },
    "serviceBusBinding": {
      "oneOf": [
        {
          "properties": {
            "direction": {
              "enum": ["in"]
            },
            "type": {
              "enum": ["serviceBusTrigger"]
            }
          }
        },
        {
          "properties": {
            "direction": {
              "enum": ["out"]
            },
            "type": {
              "enum": ["serviceBus"]
            }
          }
        }
      ],
      "properties": {
        "accessRights": {
          "description": "The permission level of the service bus connection string used by this binding.",
          "enum": ["manage", "listen"],
          "type": "string"
        },
        "connection": {
          "description": "An app setting (or environment variable) with the service bus connection string to be used by this binding.",
          "type": "string"
        },
        "queueName": {
          "description": "The service bus queue to monitor (if using a queue)",
          "type": "string"
        },
        "subscriptionName": {
          "description": "The topic subscription name",
          "type": "string"
        },
        "topicName": {
          "description": "The service bus topic to monitor (if using a queue)",
          "type": "string"
        }
      }
    },
    "tableBinding": {
      "oneOf": [
        {
          "properties": {
            "direction": {
              "enum": ["in"]
            },
            "filter": {
              "description": "A filter expression to be applied when retrieving rows.",
              "type": "string"
            },
            "take": {
              "description": "The number or records to retrieve.",
              "type": "string"
            }
          }
        },
        {
          "properties": {
            "direction": {
              "enum": ["out"]
            }
          }
        }
      ],
      "properties": {
        "connection": {
          "description": "An app setting (or environment variable) with the storage connection string to be used by this binding.",
          "type": "string"
        },
        "partitionKey": {
          "description": "The partition key.",
          "type": "string"
        },
        "rowKey": {
          "description": "The table row key.",
          "type": "string"
        },
        "tableName": {
          "description": "The name of the storage table.",
          "type": "string"
        },
        "type": {
          "enum": ["table"]
        }
      }
    },
    "timerTriggerBinding": {
      "properties": {
        "direction": {
          "enum": ["in"]
        },
        "runOnStartup": {
          "description": "When true, your timer function will be invoked immediately after a runtime restart and on-schedule thereafter.",
          "type": "boolean"
        },
        "schedule": {
          "description": "A cron expression of the format '{second} {minute} {hour} {day} {month} {day of week}' to specify the schedule.",
          "pattern": "^(\\*|((([1-5]\\d)|\\d)(-(([1-5]\\d)|\\d)(/\\d+)?)?)(,((([1-5]\\d)|\\d)(-(([1-5]\\d)|\\d)(/\\d+)?)?))*)(/\\d+)? (\\*|((([1-5]\\d)|\\d)(-(([1-5]\\d)|\\d)(/\\d+)?)?)(,((([1-5]\\d)|\\d)(-(([1-5]\\d)|\\d)(/\\d+)?)?))*)(/\\d+)? (\\*|(((1\\d)|(2[0-3])|\\d)(-((1\\d)|(2[0-3])|\\d)(/\\d+)?)?)(,(((1\\d)|(2[0-3])|\\d)(-((1\\d)|(2[0-3])|\\d)(/\\d+)?)?))*)(/\\d+)? (\\*|((([1-2]\\d)|(3[0-1])|[1-9])(-(([1-2]\\d)|(3[0-1])|[1-9])(/\\d+)?)?)(,((([1-2]\\d)|(3[0-1])|[1-9])(-(([1-2]\\d)|(3[0-1])|[1-9])(/\\d+)?)?))*)(/\\d+)? (\\*|(([A-Za-z]+|(1[0-2])|[1-9])(-([A-Za-z]+|(1[0-2])|[1-9])(/\\d+)?)?)(,(([A-Za-z]+|(1[0-2])|[1-9])(-([A-Za-z]+|(1[0-2])|[1-9])(/\\d+)?)?))*)(/\\d+)? (\\*|(([A-Za-z]+|[0-6])(-([A-Za-z]+|[0-6])(/\\d+)?)?)(,(([A-Za-z]+|[0-6])(-([A-Za-z]+|[0-6])(/\\d+)?)?))*)(/\\d+)?$",
          "type": "string"
        },
        "type": {
          "enum": ["timerTrigger"]
        },
        "useMonitor": {
          "description": "When true, schedule will be persisted to aid in maintaining the correct schedule even through restarts. Defaults to true for schedules with interval >= 1 minute.",
          "type": "boolean"
        }
      }
    },
    "twilioSmsBinding": {
      "properties": {
        "accountSid": {
          "description": "The name of the app setting which contains your Twilio Account Sid.",
          "type": "string"
        },
        "authToken": {
          "description": "The name of the app setting which contains your Twilio authentication token.",
          "type": "string"
        },
        "body": {
          "description": "Optional body of SMS text message.",
          "type": "string"
        },
        "direction": {
          "enum": ["out"]
        },
        "from": {
          "description": "The phone number the SMS text is sent from.",
          "type": "string"
        },
        "to": {
          "description": "The phone number the SMS text is sent to.",
          "type": "string"
        },
        "type": {
          "enum": ["twilioSms"]
        }
      }
    }
  },
  "properties": {
    "bindings": {
      "description": "A list of function bindings.",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/bindingBase"
          }
        ],
        "oneOf": [
          {
            "$ref": "#/definitions/dynamicBinding"
          },
          {
            "oneOf": [
              {
                "$ref": "#/definitions/serviceBusBinding"
              },
              {
                "$ref": "#/definitions/blobBinding"
              },
              {
                "$ref": "#/definitions/manualTriggerBinding"
              },
              {
                "$ref": "#/definitions/eventHubBinding"
              },
              {
                "$ref": "#/definitions/timerTriggerBinding"
              },
              {
                "$ref": "#/definitions/queueBinding"
              },
              {
                "$ref": "#/definitions/httpBinding"
              },
              {
                "$ref": "#/definitions/mobileBinding"
              },
              {
                "$ref": "#/definitions/documentDBBinding"
              },
              {
                "$ref": "#/definitions/tableBinding"
              },
              {
                "$ref": "#/definitions/notificationHubBinding"
              },
              {
                "$ref": "#/definitions/twilioSmsBinding"
              },
              {
                "$ref": "#/definitions/sendGridBinding"
              }
            ]
          }
        ]
      },
      "type": "array"
    },
    "configurationSource": {
      "description": "For C# precompiled functions only. If set to 'attributes', use WebJobs attributes to specify bindings. Otherwise, use the 'bindings' property of this function.json.",
      "enum": ["attributes", "config"]
    },
    "disabled": {
      "description": "If set to true, marks the function as disabled (it cannot be triggered).",
      "type": "boolean"
    },
    "entryPoint": {
      "description": "Optional named entry point.",
      "type": "string"
    },
    "excluded": {
      "description": "If set to true, the function will not be loaded, compiled, or triggered.",
      "type": "boolean"
    },
    "retry": {
      "description": "Retry policy of function execution failures.",
      "properties": {
        "delayInterval": {
          "description": "Value indicating the delayInterval for function execution retries when using FixedDelay strategy.",
          "oneOf": [
            {
              "pattern": "^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$",
              "type": "string"
            },
            {
              "enum": [null]
            }
          ]
        },
        "maxRetryCount": {
          "description": "The maximum number of retries allowed per function execution. -1 means to retry indefinitely.",
          "type": "integer"
        },
        "maximumInterval": {
          "description": "Value indicating the maximumInterval for function execution retries when using ExponentialBackoff strategy.",
          "oneOf": [
            {
              "pattern": "^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$",
              "type": "string"
            },
            {
              "enum": [null]
            }
          ]
        },
        "minimumInterval": {
          "description": "Value indicating the minimumInterval for function execution retries when using ExponentialBackoff strategy.",
          "oneOf": [
            {
              "pattern": "^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$",
              "type": "string"
            },
            {
              "enum": [null]
            }
          ]
        },
        "strategy": {
          "default": "exponentialBackoff",
          "description": "Retry strategy to use for retrying function executions",
          "enum": ["exponentialBackoff", "fixedDelay"]
        }
      },
      "type": "object"
    },
    "scriptFile": {
      "description": "Optional path to function script file.",
      "type": "string"
    }
  },
  "title": "JSON schema for Azure Functions function.json files",
  "type": "object"
}
