{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/pnpm-workspace.json",
  "$comment": "https://pnpm.io/pnpm-workspace_yaml",
  "title": "pnpm Workspace Specification",
  "description": "JSON schema for pnpm-workspace.yaml files",
  "type": "object",
  "definitions": {
    "dependency": {
      "$comment": "https://json.schemastore.org/package.json",
      "description": "Dependencies are specified with a simple hash of package name to version range.\nThe version range is a string which has one or more space-separated descriptors.\nDependencies can also be identified with a tarball or git URL.\n",
      "type": "object",
      "minProperties": 1,
      "propertyNames": {
        "type": "string",
        "minLength": 1,
        "maxLength": 214
      },
      "additionalProperties": {
        "type": "string",
        "minLength": 1
      }
    },
    "devDependency": {
      "description": "Specifies dependencies that are required for the development and testing of the project. These dependencies are not needed in the production environment.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "optionalDependency": {
      "description": "Specifies dependencies that are optional for your project. These dependencies are attempted to be installed during the npm install process, but if they fail to install, the installation process will not fail.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "peerDependency": {
      "description": "Specifies dependencies that are required by the package but are expected to be provided by the consumer of the package.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "peerDependencyMeta": {
      "description": "When a user installs your package, warnings are emitted if packages specified in \"peerDependencies\" are not already installed. The \"peerDependenciesMeta\" field serves to provide more information on how your peer dependencies are utilized. Most commonly, it allows peer dependencies to be marked as optional. Metadata for this field is specified with a simple hash of the package name to a metadata object.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "optional": {
            "description": "Specifies that this peer dependency is optional and should not be installed automatically.",
            "type": "boolean"
          }
        }
      }
    },
    "catalog": {
      "$ref": "#/definitions/dependency",
      "description": "Define dependency version ranges as reusable constants,\nfor later reference in package.json files.\nThis (singular) field creates a catalog named default.\n",
      "type": "object",
      "minProperties": 1
    }
  },
  "properties": {
    "packages": {
      "description": "Workspace package paths. Glob patterns are supported",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string"
      }
    },
    "catalog": {
      "$comment": "https://pnpm.io/catalogs",
      "$ref": "#/definitions/dependency",
      "description": "Define dependency version ranges as reusable constants,\nfor later reference in package.json files.\nThis (singular) field creates a catalog named default.\n",
      "type": "object",
      "minProperties": 1
    },
    "catalogs": {
      "description": "Define arbitrarily named catalogs",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": {
        "$ref": "#/definitions/catalog"
      }
    },
    "onlyBuiltDependencies": {
      "description": "A list of package names that are allowed to be executed during installation.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "overrides": {
      "description": "Used to override any dependency in the dependency graph.",
      "type": "object"
    },
    "packageExtensions": {
      "description": "Used to extend the existing package definitions with additional information.",
      "type": "object",
      "patternProperties": {
        "^.+$": {
          "type": "object",
          "properties": {
            "dependencies": {
              "$ref": "#/definitions/dependency"
            },
            "optionalDependencies": {
              "$ref": "#/definitions/optionalDependency"
            },
            "peerDependencies": {
              "$ref": "#/definitions/peerDependency"
            },
            "peerDependenciesMeta": {
              "$ref": "#/definitions/peerDependencyMeta"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "peerDependencyRules": {
      "type": "object",
      "properties": {
        "ignoreMissing": {
          "description": "pnpm will not print warnings about missing peer dependencies from this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedVersions": {
          "description": "Unmet peer dependency warnings will not be printed for peer dependencies of the specified range.",
          "type": "object"
        },
        "allowAny": {
          "description": "Any peer dependency matching the pattern will be resolved from any version, regardless of the range specified in \"peerDependencies\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "neverBuiltDependencies": {
      "description": "A list of dependencies to run builds for.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "onlyBuiltDependenciesFile": {
      "description": "Specifies a JSON file that lists the only packages permitted to run installation scripts during the pnpm install process.",
      "type": "string"
    },
    "ignoredBuiltDependencies": {
      "description": "A list of package names that should not be built during installation.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "allowedDeprecatedVersions": {
      "description": "A list of deprecated versions that the warnings are suppressed.",
      "type": "object"
    },
    "patchedDependencies": {
      "description": "A list of dependencies that are patched.",
      "type": "object"
    },
    "allowNonAppliedPatches": {
      "description": "When true, installation won't fail if some of the patches from the \"patchedDependencies\" field were not applied.",
      "type": "boolean"
    },
    "updateConfig": {
      "type": "object",
      "properties": {
        "ignoreDependencies": {
          "description": "A list of packages that should be ignored when running \"pnpm outdated\" or \"pnpm update --latest\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "configDependencies": {
      "type": "object",
      "description": "Configurational dependencies are installed before all the other types of dependencies (before 'dependencies', 'devDependencies', 'optionalDependencies')."
    },
    "auditConfig": {
      "type": "object",
      "properties": {
        "ignoreCves": {
          "description": "A list of CVE IDs that will be ignored by \"pnpm audit\".",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^CVE-\\d{4}-\\d{4,7}$"
          }
        },
        "ignoreGhsas": {
          "description": "A list of GHSA Codes that will be ignored by \"pnpm audit\".",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GHSA(-[23456789cfghjmpqrvwx]{4}){3}$"
          }
        }
      },
      "additionalProperties": false
    },
    "requiredScripts": {
      "description": "A list of scripts that must exist in each project.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "supportedArchitectures": {
      "description": "Specifies architectures for which you'd like to install optional dependencies, even if they don't match the architecture of the system running the install.",
      "type": "object",
      "properties": {
        "os": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cpu": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "libc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ignoredOptionalDependencies": {
      "description": "A list of optional dependencies that the install should be skipped.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "executionEnv": {
      "type": "object",
      "properties": {
        "nodeVersion": {
          "description": "Specifies which exact Node.js version should be used for the project's runtime.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "required": ["packages"]
}
