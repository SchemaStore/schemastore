{
  "name": "Substreams Manifest Schema",
  "description": "A Schema to support in making Substreams manifest files",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties" : {
    "specVersion" : {
      "enum" : ["v0.1.0"]
    },
    "package" : {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^([a-zA-Z][a-zA-Z0-9_]{0,63})$"
        },
        "version": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "doc": {
          "type": "string"
        }
      },
      "required": ["name", "version"],
      "additionalProperties": false
    },
    "imports": {
      "type": "object",
      "propertyNames": {
        "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
      },
      "additionalProperties": {
        "type": "string"
      },
      "minProperties": 1
    },
    "protobuf": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(.proto)$"
          },
          "minItems": 1,
          "unevaluatedItems": false
        },
        "importPaths": {
          "type": "array",
          "prefixFiles": [
            {
              "type":  "string"
            }
          ],
          "minItems": 1
        }
      },
      "required": ["files", "importPaths"],
      "unevaluatedProperties": false
    },
    "binaries" : {
      "type": "object",
      "properties": {
        "default" : {
          "type": "object",
          "properties": {
            "type": {
              "enum": ["wasm/rust-v1"]
            },
            "file": {
              "type": "string"
            },
            "protoPackageMapping" : {
              "type": "object",
              "propertyNames": {
                "pattern" : {
                  "type": "string"
                }
              },
              "unevaluatedProperties": false,
              "minProperties": 1
            }
          },
          "required": ["type", "file"],
          "additionalProperties": false
        }
      },
      "required": ["default"],
      "unevaluatedProperties": false
    },
    "modules": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "initialBlock": {
            "type": "number"
          },
          "kind": {
            "enum": [
              "map",
              "store"
            ]
          },
          "binary": {
            "type": "string"
          },
          "inputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "store": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "map": {
                  "type": "string"
                }
              },
              "if": {
                "properties": {
                  "store" : {
                    "type": "string"
                  }
                },
                "required": ["store"]
              },
              "then" : {
                "maxProperties": 2,
                "properties": {
                  "mode": {
                    "type": "string"
                  }
                }
              },
              "else": {
                "maxProperties": 1
              },
              "minProperties": 1,
              "unevaluatedProperties": false
            },
            "unevaluatedItems": false
          }
        },
        "if": {
          "properties": {
            "kind": {
              "const": "store"
            }
          },
          "required": ["kind"]
        },
        "then": {
          "properties": {
            "updatePolicy": {
              "enum": [
                "set",
                "set_if_not_exists",
                "append",
                "add",
                "min",
                "max"
              ]
            },
            "valueType": {
              "type": ["string", "number"]
            },
            "name": {
              "type": "string"
            },
            "initialBlock": {
              "type": "number"
            },
            "kind": {
              "enum": [
                "map",
                "store"
              ]
            },
            "binary": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "store": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  },
                  "map": {
                    "type": "string"
                  }
                },
                "if": {
                  "properties": {
                    "store" : {
                      "type": "string"
                    }
                  },
                  "required": ["store"]
                },
                "then" : {
                  "maxProperties": 2,
                  "properties": {
                    "mode": {
                      "type": "string"
                    }
                  }
                },
                "else": {
                  "maxProperties": 1
                },
                "minProperties": 1,
                "unevaluatedProperties": false
              },
              "unevaluatedItems": false
            }
          },
          "additionalProperties": false
        },
        "else" : {
          "properties": {
            "name": {
              "type": "string"
            },
            "initialBlock": {
              "type": "number"
            },
            "kind": {
              "enum": [
                "map",
                "store"
              ]
            },
            "binary": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "store": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  },
                  "map": {
                    "type": "string"
                  }
                },
                "if": {
                  "properties": {
                    "store" : {
                      "type": "string"
                    }
                  },
                  "required": ["store"]
                },
                "then" : {
                  "maxProperties": 2,
                  "properties": {
                    "mode": {
                      "type": "string"
                    }
                  }
                },
                "else": {
                  "maxProperties": 1
                },
                "minProperties": 1,
                "unevaluatedProperties": false
              },
              "unevaluatedItems": false
            },
            "output": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                }
              },
              "required": ["type"],
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "required": ["kind", "name", "inputs"],
        "unevaluatedProperties": false
      },
      "additionalItems": false,
      "minItems": 1
    }
  },
  "required": ["specVersion", "package", "protobuf", "binaries", "modules"],
  "additionalProperties": false
}
