{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "JSON Schema for Nodemon Config",
  "type": "object",
  "properties": {
    "cwd": {
      "description": "change into <dir> before running the script",
      "type": "string"
    },
    "delay": {
      "default": 0,
      "description": "debounce restart for a number of seconds",
      "type": "number"
    },
    "ignoreRoot": {
        "type": "array",
        "items": {
            "type": "string"
        },
        "description": "root paths to ignore"
    },
    "dump": {
      "default": false,
      "description": "print full debug configuration",
      "type": "boolean"
    },
    "exec": {
      "description": "execute script with \"app\", ie. -x \"python -v\".  May use variables.",
      "examples": [
        "{{pwd}}/index.js --some-arg",
        "{{filename}}"
      ],
      "format": "<app> <your args>",
      "type": "string"
    },
    "nodeArgs": {
        "type": "array",
        "description": "arguments to pass to node if exec is \"node\""
    },
    "execMap": {
      "description": "The global config file is useful for setting up default executables",
      "type": "object"
    },
    "ext": {
      "default": "*",
      "description": "extensions to look for, ie. \"js,jade,hbs\"",
      "type": "string"
    },
    "ignore": {
      "description": "Ignore directory or file.  One entry per ignored value.  Wildcards are allowed.",
      "items": {
        "description": "Path or pattern of file or directory to ignore.  Can also use regular expressions wrapped in an objec eith a single property named \"re\".",
        "examples": [
          ".gitignore",
          ".vscode",
          "__tests__/*",
          "__*__/*.js",
          "*.test.js"
        ],
        "$ref": "#/definitions/pathPattern"
      },
      "type": "array"
    },
    "legacyWatch": {
      "default": false,
      "description": "use polling to watch for changes (typically needed when watching over a network/Docker)",
      "type": "boolean"
    },
    "colours": {
      "default": true,
      "description": "set to false to disable color output",
      "type": "boolean"
    },
    "stdin": {
      "default": true,
      "description": "set to false to have nodemon pass stdin directly to child process",
      "type": "boolean"
    },
    "noUpdateNotifier": {
      "default": false,
      "description": "opt-out of update version check",
      "type": "boolean"
    },
    "runOnChangeOnly": {
      "default": false,
      "description": "execute script on change only, not startup",
      "type": "boolean"
    },
    "pollingInterval": {
      "default": 100,
      "description": "combined with legacyWatch, milliseconds to poll for (default 100)",
      "type": "number"
    },
    "quiet": {
      "default": false,
      "description": "minimise nodemon messages to start/stop only",
      "type": "boolean"
    },
    "signal": {
      "$ref": "#/definitions/terminationSignals",
      "description": "use specified kill signal instead of default (ex. SIGTERM)",
      "type": "string"
    },
    "spawn": {
      "default": false,
      "description": "force nodemon to use spawn (over fork) [node only]",
      "type": "boolean"
    },
    "verbose": {
      "default": false,
      "description": "show detail on what is causing restarts",
      "type": "boolean"
    },
    "watch": {
      "description": "Watch directory or file.  One entry per watched value.  Wildcards are allowed.",
      "items": {
        "description": "Path or pattern of file or directory to watch.  Can also use regular expressions wrapped in an objec eith a single property named \"re\".",
        "examples": [
          "src/index.js",
          "src",
          "src/*.js",
          "*.js"
        ],
        "$ref": "#/definitions/pathPattern"        
      },
      "type": "array"
    }
  },
  "dependencies": {
    "pollingInterval": {
      "required": ["legacyWatch"]
    },
    "nodeArgs": {
        "exec": {
            "const": "node"
        },
        "required": [ "exec" ]
    }
  },
  "definitions": {
      "pathPattern": {
        "anyOf": [
            {
                "type": "string"
            },
            {
                "type": "object",
                "properties": {
                    "re": {
                        "type": "string",
                        "pattern": "^((?:(?:[^?+*{}()[\\]\\\\|]+|\\\\.|\\[(?:\\^?\\\\.|\\^[^\\\\]|[^\\\\^])(?:[^\\]\\\\]+|\\\\.)*\\]|\\((?:\\?[:=!]|\\?<[=!]|\\?>)?(?1)??\\)|\\(\\?(?:R|[+-]?\\d+)\\))(?:(?:[?+*]|\\{\\d+(?:,\\d*)?\\})[?+]?)?|\\|)*)$"
                    }
                },
                "additionalProperties": false,
                "required": [ "re" ],
                "description": "Regular expression"
            }
        ]
      },
    "terminationSignals": {
      "anyOf": [{
          "const": "SIGTERM"
        },
        {
          "const": "SIGINT"
        },
        {
          "const": "SIGQUIT"
        },
        {
          "const": "SIGKILL"
        },
        {
          "const": "SIGHUP"
        }
      ]
    },
    "variables": {
      "anyOf": [{
          "const": "{{pwd}}",
          "description": "The current directory"
        },
        {
          "const": "{{filename}}",
          "description": "The filename you pass to nodemon"
        }
      ]
    }
  }
}
