{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$comment": "https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/syntax-for-issue-forms",
  "title": "GitHub issue forms",
  "description": "You can define different input types, validations, default assignees, and default labels for your issue forms.",
  "definitions": {
    "label": {
      "description": "A brief description of the expected user input, which is also displayed in the form.",
      "type": "string",
      "minLength": 1
    },
    "description": {
      "description": "A description of the text area to provide context or guidance, which is displayed in the form.",
      "type": "string"
    },
    "id": {
      "description": "The identifier. Can only use alpha-numeric characters, -, and _. Must be unique in the form definition. If provided, the id is the canonical identifier for the field in URL query parameter prefills.",
      "type": "string",
      "minLength": 1
    },
    "placeholder": {
      "description": "A semi-opaque placeholder that renders in the text area when empty.",
      "type": "string"
    },
    "value": {
      "description": "Text that is pre-filled in the text area.",
      "type": "string"
    },
    "render": {
      "description": "Text that is pre-filled in the text area.",
      "type": "string"
    },
    "type": {
      "description": "The type of element that you want to define.",
      "type": "string",
      "enum": [
        "checkboxes",
        "dropdown",
        "input",
        "markdown",
        "textarea"
      ]
    },
    "validations": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "required": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "body": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/type"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "markdown"
              }
            }
          },
          "then": {
            "required": [
              "type",
              "attributes"
            ],
            "additionalProperties": false,
            "$comment": "For additionalProperties to work 'type' must also be present here.",
            "properties": {
              "type": {
                "$ref": "#/definitions/type"
              },
              "attributes": {
                "additionalProperties": false,
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The text that is rendered. Markdown formatting is supported.",
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "textarea"
              }
            }
          },
          "then": {
            "required": [
              "type",
              "attributes"
            ],
            "additionalProperties": false,
            "$comment": "For additionalProperties to work 'type' must also be present here.",
            "properties": {
              "type": {
                "$ref": "#/definitions/type"
              },
              "attributes": {
                "additionalProperties": false,
                "required": [
                  "label"
                ],
                "properties": {
                  "label": {
                    "$ref": "#/definitions/label"
                  },
                  "description": {
                    "$ref": "#/definitions/description"
                  },
                  "placeholder": {
                    "$ref": "#/definitions/placeholder"
                  },
                  "value": {
                    "$ref": "#/definitions/value"
                  },
                  "render": {
                    "$ref": "#/definitions/render"
                  }
                }
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "validations": {
                "$ref": "#/definitions/validations"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "input"
              }
            }
          },
          "then": {
            "required": [
              "type",
              "attributes"
            ],
            "additionalProperties": false,
            "$comment": "For additionalProperties to work 'type' must also be present here.",
            "properties": {
              "type": {
                "$ref": "#/definitions/type"
              },
              "attributes": {
                "additionalProperties": false,
                "required": [
                  "label"
                ],
                "properties": {
                  "label": {
                    "$ref": "#/definitions/label"
                  },
                  "description": {
                    "$ref": "#/definitions/description"
                  },
                  "placeholder": {
                    "$ref": "#/definitions/placeholder"
                  },
                  "value": {
                    "$ref": "#/definitions/value"
                  }
                }
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "validations": {
                "$ref": "#/definitions/validations"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "dropdown"
              }
            }
          },
          "then": {
            "required": [
              "type",
              "attributes"
            ],
            "additionalProperties": false,
            "$comment": "For additionalProperties to work 'type' must also be present here.",
            "properties": {
              "type": {
                "$ref": "#/definitions/type"
              },
              "attributes": {
                "additionalProperties": false,
                "required": [
                  "label",
                  "options"
                ],
                "properties": {
                  "label": {
                    "$ref": "#/definitions/label"
                  },
                  "description": {
                    "$ref": "#/definitions/description"
                  },
                  "multiple": {
                    "description": "Determines if the user can select more than one option.",
                    "type": "boolean"
                  },
                  "options": {
                    "description": "An array of options the user can choose from. Cannot be empty and all choices must be distinct.",
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "id": {
                "$ref": "#/definitions/id"
              },
              "validations": {
                "$ref": "#/definitions/validations"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "checkboxes"
              }
            }
          },
          "then": {
            "required": [
              "type",
              "attributes"
            ],
            "additionalProperties": false,
            "$comment": "For additionalProperties to work 'type' must also be present here.",
            "properties": {
              "type": {
                "$ref": "#/definitions/type"
              },
              "attributes": {
                "additionalProperties": false,
                "required": [
                  "label",
                  "options"
                ],
                "properties": {
                  "label": {
                    "$ref": "#/definitions/label"
                  },
                  "description": {
                    "$ref": "#/definitions/description"
                  },
                  "options": {
                    "description": "An array of options the user can choose from. Cannot be empty and all choices must be distinct.",
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "label"
                      ],
                      "properties": {
                        "label": {
                          "description": "The identifier for the option, which is displayed in the form. Markdown is supported for bold or italic text formatting, and hyperlinks.",
                          "type": "string",
                          "minLength": 1
                        },
                        "required": {
                          "description": "Prevents form submission until element is completed.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  }
                }
              },
              "id": {
                "$ref": "#/definitions/id"
              }
            }
          }
        }
      ]
    }
  },
  "type": "object",
  "additionalProperties": false,
  "required": [
    "name",
    "description"
  ],
  "properties": {
    "name": {
      "description": "A name for the issue form template. Must be unique from all other templates, including Markdown templates.",
      "type": "string",
      "minLength": 1
    },
    "description": {
      "description": "A description for the issue form template, which appears in the template chooser interface.",
      "type": "string",
      "minLength": 1
    },
    "assignees": {
      "description": "People who will be automatically assigned to issues created with this template.",
      "oneOf": [
        {
          "type": "string",
          "minLength": 1
        },
        {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      ]
    },
    "labels": {
      "description": "Labels that will automatically be added to issues created with this template.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string",
        "minLength": 1
      }
    },
    "title": {
      "description": "A default title that will be pre-populated in the issue submission form.",
      "type": "string",
      "minLength": 1
    },
    "body": {
      "description": "Definition of the input types in the form.",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/body"
      }
    }
  }
}
