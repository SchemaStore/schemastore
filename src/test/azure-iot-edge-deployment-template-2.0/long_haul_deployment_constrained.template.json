{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "rc1": {
                "username": "<CR.Username>",
                "password": "<CR.Password>",
                "address": "<Container_Registry>"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "env": {
              "UpstreamProtocol": {
                "value": "<UpstreamProtocol>"
              },
              "experimentalfeatures__enabled": {
                "value": "true"
              },
              "RuntimeLogLevel": {
                "value": "info"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-agent:<EdgeRuntime.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"ExposedPorts\": {\"9600/tcp\": {}}, \"HostConfig\": {\"Memory\":\"<EdgeAgentMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}, \"PortBindings\": {\"9600/tcp\": [{\"HostPort\": \"9600\"}]}}}"
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "experimentalfeatures__enabled": {
                "value": "true"
              },
              "NestedEdgeEnabled": {
                "value": "false"
              },
              "RuntimeLogLevel": {
                "value": "info"
              },
              "OptimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              },
              "amqpSettings_enabled": {
                "value": "<EdgeHubAmqpEnabled>"
              },
              "mqttSettings_enabled": {
                "value": "<EdgeHubMqttEnabled>"
              },
              "SslProtocols": {
                "value": "tls1.2"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-hub:<EdgeRuntime.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"ExposedPorts\": {\"9600/tcp\": {}}, \"HostConfig\": {\"Memory\":\"<EdgeHubMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFileEdgeHub>\",\"compress\":\"true\"}}, \"PortBindings\": {\"8883/tcp\": [{\"HostPort\": \"8883\"}],\"5671/tcp\": [{\"HostPort\": \"5671\"}],\"9600/tcp\": [{\"HostPort\": \"9601\"}]}}}"
            }
          }
        },
        "modules": {
          "loadGen1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "transportType": {
                "value": "<ClientModuleTransportType>"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Memory\":\"<LoadGenMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}}}"
            }
          },
          "relayer1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "transportType": {
                "value": "<ClientModuleTransportType>"
              },
              "inputName": {
                "value": "input1"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-relayer:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Memory\":\"<RelayerMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}}}"
            }
          },
          "twinTester1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "TransportType": {
                "value": "<ClientModuleTransportType>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "EdgeHubRestartFailureTolerance": {
                "value": "<EdgeHubRestartFailureTolerance>"
              },
              "TwinUpdateFailureThreshold": {
                "value": "<TwinUpdateFailureThreshold>"
              },
              "StorageOptimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Memory\":\"<TwinTesterMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}}}"
            }
          },
          "directMethodSender1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DirectMethodResultType": {
                "value": "DirectMethodTestResult"
              },
              "InvocationSource": {
                "value": "Cloud"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "directMethodReceiver1"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "DirectMethodFrequency": {
                "value": "<DirectMethodFrequency>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-sender:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Memory\":\"<DirectMethodSenderMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}}}"
            }
          },
          "directMethodReceiver1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "<ClientModuleTransportType>"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Memory\":\"<DirectMethodReceiverMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}}}"
            }
          },
          "testResultCoordinator": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "Logging:LogLevel:Microsoft": {
                "value": "Error"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "sendReportFrequency": {
                "value": "<SendReportFrequency>"
              },
              "eventHubConnectionString": {
                "value": "<TestResultCoordinator.EventHubConnectionString>"
              },
              "ConsumerGroupName": {
                "value": "<TestResultCoordinator.ConsumerGroupId>"
              },
              "optimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              },
              "logAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "logAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "logAnalyticsLogType": {
                "value": "<TestResultCoordinator.LogAnalyticsLogType>"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "logUploadEnabled": {
                "value": "<TestResultCoordinator.logUploadEnabled>"
              },
              "STORAGE_ACCOUNT_CONNECTION_STRING": {
                "value": "<TestResultCoordinator.StorageAccountConnectionString>"
              },
              "NetworkControllerRunProfile": {
                "value": "<NetworkController.RunProfile>"
              },
              "TEST_INFO": {
                "value": "<TestInfo>"
              },
              "testMode": {
                "value": "<TestMode>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-test-result-coordinator:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\": {\"Memory\":\"<TrcMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}, \"PortBindings\": {\"5001/tcp\": [{\"HostPort\": \"5001\"}]}}}"
            }
          },
          "networkController": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "RunFrequencies__0__OfflineFrequency": {
                "value": "<NetworkController.OfflineFrequency0>"
              },
              "RunFrequencies__0__OnlineFrequency": {
                "value": "<NetworkController.OnlineFrequency0>"
              },
              "RunFrequencies__0__RunsCount": {
                "value": "<NetworkController.RunsCount0>"
              },
              "NetworkControllerRunProfile": {
                "value": "<NetworkController.RunProfile>"
              },
              "StartAfter": {
                "value": "<TestStartDelay>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-network-controller:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Memory\":\"<NetworkControllerMemoryThreshold>\", \"Privileged\":\"true\",\"NetworkMode\":\"host\",\"Binds\":[\"/var/run/docker.sock:/var/run/docker.sock\"]},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "metricsCollector": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "LogAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "LogAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "LogAnalyticsLogType": {
                "value": "testMetricsV2"
              },
              "MetricsEndpointsCSV": {
                "value": "<MetricsCollector.MetricsEndpointsCSV>"
              },
              "ScrapeFrequencyInSecs": {
                "value": "<MetricsCollector.ScrapeFrequencyInSecs>"
              },
              "UploadTarget": {
                "value": "<MetricsCollector.UploadTarget>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-metrics-collector:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Memory\":\"<MetricsCollectorMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}}}"
            }
          },
          "moduleRestarter": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "on-failure",
            "env": {
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "DesiredModulesToRestartCSV": {
                "value": "<DesiredModulesToRestartCSV>"
              },
              "RestartIntervalInMins": {
                "value": "<RestartIntervalInMins>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-module-restarter:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfir\":{\"Memory\":\"<ModuleRestarterMemoryThreshold>\", \"LogConfig\":{\"Type\":\"json-file\",\"Config\":{\"max-size\":\"4m\",\"max-file\":\"<LogRotationMaxFile>\",\"compress\":\"true\"}}}}"
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "loadGen1ToRelayer1": "FROM /messages/modules/loadGen1/outputs/output1 INTO BrokeredEndpoint(\"/modules/relayer1/inputs/input1\")",
          "relayer1ToCloud": "FROM /messages/modules/relayer1/outputs/output1 INTO $upstream",
          "loadGen2ToRelayer2": "FROM /messages/modules/loadGen2/outputs/output2 INTO BrokeredEndpoint(\"/modules/relayer2/inputs/input2\")",
          "relayer2ToCloud": "FROM /messages/modules/relayer2/outputs/output2 INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 86400
        }
      }
    },
    "metricsCollector": {
      "properties.desired": {
        "additionalTags": "<TestInfo>"
      }
    },
    "testResultCoordinator": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "reportMetadataList": {
          "reportMetadata1": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "loadGen1.send",
            "ActualSource": "relayer1.receive",
            "TestDescription": "messages | local | <ClientModuleTransportType>"
          },
          "reportMetadata2": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "relayer1.send",
            "ActualSource": "relayer1.eventHub",
            "LongHaulEventHubMode": "true",
            "TestDescription": "messages | upstream | <ClientModuleTransportType>"
          },
          "reportMetadata3": {
            "TestReportType": "LegacyTwinReport",
            "SenderSource": "twinTester1",
            "TestDescription": "twin legacy | <ClientModuleTransportType>"
          },
          "reportMetadata4": {
            "TestReportType": "DirectMethodLongHaulReport",
            "SenderSource": "directMethodSender1.send",
            "ReceiverSource": "directMethodReceiver1.receive",
            "TestDescription": "direct method | cloud | <ClientModuleTransportType>"
          },
          "reportMetadata5": {
            "TestReportType": "NetworkControllerReport",
            "Source": "networkController",
            "TestDescription": "network controller"
          },
          "reportMetadata6": {
            "TestReportType": "ErrorReport",
            "TestDescription": "test configuration"
          },
          "reportMetadata7": {
            "TestReportType": "TestInfoReport",
            "TestDescription": "test info"
          }
        }
      }
    }
  }
}
