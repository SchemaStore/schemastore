{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "rc1": {
                "username": "<CR.Username>",
                "password": "<CR.Password>",
                "address": "<Container_Registry>"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "env": {
              "UpstreamProtocol": {
                "value": "<UpstreamProtocol>"
              },
              "experimentalfeatures__enabled": {
                "value": "true"
              },
              "experimentalfeatures__enableMetrics": {
                "value": "true"
              },
              "ExperimentalFeatures__EnableUploadLogs": {
                "value": "true"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-agent:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"ExposedPorts\":{\"9600/tcp\":{}},\"HostConfig\":{\"PortBindings\":{\"9600/tcp\":[{\"HostPort\":\"9600\"}]},\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "edgeHub": {
            "type": "docker",
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-hub:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"ExposedPorts\": {\"9600/tcp\": {}}, \"HostConfig\": {\"PortBindings\": {\"8883/tcp\": [{\"HostPort\": \"8883\"}],\"5671/tcp\": [{\"HostPort\": \"5671\"}],\"9600/tcp\": [{\"HostPort\": \"9601\"}]}}}"
            },
            "env": {
              "experimentalfeatures__enabled": {
                "value": "true"
              },
              "experimentalfeatures__enableMetrics": {
                "value": "true"
              },
              "NestedEdgeEnabled": {
                "value": "false"
              },
              "SslProtocols": {
                "value": "tls1.2"
              }
            },
            "status": "running",
            "restartPolicy": "always"
          }
        },
        "modules": {
          "directMethodReceiver1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Amqp"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "directMethodReceiver2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Mqtt"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "edgeHubRestartTester1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "reportingEndpointUrl": {
                "value": "http://localhost:5001"
              },
              "restartPeriod": {
                "value": "<EdgeHubRestartTest.RestartPeriod>"
              },
              "sdkOperationTimeout": {
                "value": "<EdgeHubRestartTest.SdkOperationTimeout>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-edgehub-restart-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "relayer1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "transportType": {
                "value": "Amqp"
              },
              "inputName": {
                "value": "input1"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-relayer:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "relayer2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "transportType": {
                "value": "Mqtt"
              },
              "inputName": {
                "value": "input1"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-relayer:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "testResultCoordinator": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "Logging:LogLevel:Microsoft": {
                "value": "Error"
              },
              "TEST_BUILD_NUMBER": {
                "value": "<Test.BuildNumber>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "verificationDelay": {
                "value": "<TestResultCoordinator.VerificationDelay>"
              },
              "eventHubConnectionString": {
                "value": "<TestResultCoordinator.EventHubConnectionString>"
              },
              "ConsumerGroupName": {
                "value": "<TestResultCoordinator.ConsumerGroupId>"
              },
              "optimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              },
              "logAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "logAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "logAnalyticsLogType": {
                "value": "<TestResultCoordinator.LogAnalyticsLogType>"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "STORAGE_ACCOUNT_CONNECTION_STRING": {
                "value": "<TestResultCoordinator.StorageAccountConnectionString>"
              },
              "NetworkControllerRunProfile": {
                "value": "<NetworkController.RunProfile>"
              },
              "TEST_INFO": {
                "value": "<TestInfo>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-test-result-coordinator:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\": {\"PortBindings\": {\"5001/tcp\": [{\"HostPort\": \"5001\"}]}}}"
            }
          },
          "networkController": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "RunFrequencies__0__OfflineFrequency": {
                "value": "<NetworkController.OfflineFrequency0>"
              },
              "RunFrequencies__0__OnlineFrequency": {
                "value": "<NetworkController.OnlineFrequency0>"
              },
              "RunFrequencies__0__RunsCount": {
                "value": "<NetworkController.RunsCount0>"
              },
              "NetworkControllerRunProfile": {
                "value": "<NetworkController.RunProfile>"
              },
              "StartAfter": {
                "value": "<TestStartDelay>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-network-controller:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Privileged\":\"true\",\"NetworkMode\":\"host\",\"Binds\":[\"/var/run/docker.sock:/var/run/docker.sock\"]},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "edgeHubRestarterToRelayer1": "FROM /messages/modules/edgeHubRestartTester1/outputs/outputAmqp INTO BrokeredEndpoint(\"/modules/relayer1/inputs/input1\")",
          "edgeHubRestarterToRelayer2": "FROM /messages/modules/edgeHubRestartTester1/outputs/outputMqtt INTO BrokeredEndpoint(\"/modules/relayer2/inputs/input1\")"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 86400
        }
      }
    },
    "edgeHubRestartTester1": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "edgeHubConnectorConfig": {
          "amqpConnectors": {
            "TransportType": "Amqp",
            "DirectMethodTargetModuleId": "directMethodReceiver1",
            "MessageOutputEndpoint": "outputAmqp"
          },
          "mqttConnectors": {
            "TransportType": "Mqtt",
            "DirectMethodTargetModuleId": "directMethodReceiver2",
            "MessageOutputEndpoint": "outputMqtt"
          }
        }
      }
    },
    "testResultCoordinator": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "reportMetadataList": {
          "reportMetadata1": {
            "TestReportType": "ErrorReport",
            "TestDescription": "test configuration | restart"
          },
          "reportMetadata2": {
            "TestReportType": "TestInfoReport",
            "TestDescription": "test info | restart"
          },
          "reportMetadata3": {
            "TestReportType": "NetworkControllerReport",
            "Source": "networkController",
            "TestDescription": "network controller | restart"
          },
          "reportMetadata4": {
            "TestReportType": "EdgeHubRestartDirectMethodReport",
            "TestOperationResultType": "EdgeHubRestartDirectMethod",
            "SenderSource": "edgeHubRestartTester1.EdgeHubRestartDirectMethod.directMethodReceiver1",
            "ReceiverSource": "directMethodReceiver1.receive",
            "TestDescription": "direct method | cloud | amqp | restart"
          },
          "reportMetadata5": {
            "TestReportType": "EdgeHubRestartMessageReport",
            "TestOperationResultType": "EdgeHubRestartMessage",
            "SenderSource": "edgeHubRestartTester1.EdgeHubRestartMessage.outputAmqp",
            "ReceiverSource": "relayer1.receive",
            "TestDescription": "messages | local | amqp | restart"
          },
          "reportMetadata6": {
            "TestReportType": "EdgeHubRestartDirectMethodReport",
            "TestOperationResultType": "EdgeHubRestartDirectMethod",
            "SenderSource": "edgeHubRestartTester1.EdgeHubRestartDirectMethod.directMethodReceiver2",
            "ReceiverSource": "directMethodReceiver2.receive",
            "TestDescription": "direct method | cloud | mqtt | restart"
          },
          "reportMetadata7": {
            "TestReportType": "EdgeHubRestartMessageReport",
            "TestOperationResultType": "EdgeHubRestartMessage",
            "SenderSource": "edgeHubRestartTester1.EdgeHubRestartMessage.outputMqtt",
            "ReceiverSource": "relayer2.receive",
            "TestDescription": "messages | local | mqtt | restart"
          }
        }
      }
    }
  }
}