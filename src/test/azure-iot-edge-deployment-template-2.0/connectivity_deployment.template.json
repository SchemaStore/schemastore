{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "rc1": {
                "username": "<CR.Username>",
                "password": "<CR.Password>",
                "address": "<Container_Registry>"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "env": {
              "UpstreamProtocol": {
                "value": "<UpstreamProtocol>"
              },
              "experimentalfeatures__enabled": {
                "value": "true"
              },
              "experimentalfeatures__enableMetrics": {
                "value": "true"
              },
              "ExperimentalFeatures__EnableUploadLogs": {
                "value": "true"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-agent:<EdgeRuntime.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"ExposedPorts\": {\"9600/tcp\": {}}, \"HostConfig\": {\"PortBindings\": {\"9600/tcp\": [{\"HostPort\": \"9600\"}]}}}"
            }
          },
          "edgeHub": {
            "type": "docker",
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-hub:<EdgeRuntime.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"ExposedPorts\": {\"9600/tcp\": {}}, \"HostConfig\": {\"PortBindings\": {\"8883/tcp\": [{\"HostPort\": \"8883\"}],\"5671/tcp\": [{\"HostPort\": \"5671\"}],\"9600/tcp\": [{\"HostPort\": \"9601\"}]}}}"
            },
            "env": {
              "experimentalfeatures__enabled": {
                "value": "true"
              },
              "experimentalfeatures__enableMetrics": {
                "value": "true"
              },
              "NestedEdgeEnabled": {
                "value": "false"
              },
              "OptimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              },
              "SslProtocols": {
                "value": "tls1.2"
              }
            },
            "status": "running",
            "restartPolicy": "always"
          }
        },
        "modules": {
          "loadGen1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "transportType": {
                "value": "Amqp"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "loadGen2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "transportType": {
                "value": "Mqtt"
              },
              "outputName": {
                "value": "output2"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "directMethodSender1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DirectMethodResultType": {
                "value": "DirectMethodTestResult"
              },
              "InvocationSource": {
                "value": "Cloud"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "directMethodReceiver1"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl": {
                "value": "http://localhost:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "DirectMethodFrequency": {
                "value": "<DirectMethodFrequency>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-sender:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "directMethodReceiver1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Amqp"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "directMethodSender2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DirectMethodResultType": {
                "value": "DirectMethodTestResult"
              },
              "InvocationSource": {
                "value": "Cloud"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "directMethodReceiver2"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl": {
                "value": "http://localhost:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "DirectMethodFrequency": {
                "value": "<DirectMethodFrequency>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-sender:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "directMethodReceiver2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Mqtt"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "directMethodSender3": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DirectMethodResultType": {
                "value": "DirectMethodTestResult"
              },
              "DirectMethodName": {
                "value": "ping"
              },
              "InvocationSource": {
                "value": "Cloud"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "$edgeAgent"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl": {
                "value": "http://localhost:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "DirectMethodFrequency": {
                "value": "<DirectMethodFrequency>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-sender:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "relayer1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "transportType": {
                "value": "Amqp"
              },
              "inputName": {
                "value": "input1"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-relayer:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "relayer2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "transportType": {
                "value": "Mqtt"
              },
              "inputName": {
                "value": "input2"
              },
              "outputName": {
                "value": "output2"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-relayer:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "testResultCoordinator": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "Logging:LogLevel:Microsoft": {
                "value": "Error"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "verificationDelay": {
                "value": "<TestResultCoordinator.VerificationDelay>"
              },
              "eventHubConnectionString": {
                "value": "<TestResultCoordinator.EventHubConnectionString>"
              },
              "ConsumerGroupName": {
                "value": "<TestResultCoordinator.ConsumerGroupId>"
              },
              "optimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              },
              "logAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "logAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "logAnalyticsLogType": {
                "value": "<TestResultCoordinator.LogAnalyticsLogType>"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "logUploadEnabled": {
                "value": "<TestResultCoordinator.logUploadEnabled>"
              },
              "STORAGE_ACCOUNT_CONNECTION_STRING": {
                "value": "<TestResultCoordinator.StorageAccountConnectionString>"
              },
              "NetworkControllerRunProfile": {
                "value": "<NetworkController.RunProfile>"
              },
              "TEST_INFO": {
                "value": "<TestInfo>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-test-result-coordinator:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\": {\"PortBindings\": {\"5001/tcp\": [{\"HostPort\": \"5001\"}]}}}"
            }
          },
          "twinTester1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "TwinTestMode": {
                "value": "TwinCloudOperations"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "twinTester2"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "StorageOptimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "twinTester2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "TwinTestMode": {
                "value": "TwinEdgeOperations"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TransportType": {
                "value": "Amqp"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "StorageOptimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "twinTester3": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "TwinTestMode": {
                "value": "TwinCloudOperations"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "twinTester4"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "StorageOptimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "twinTester4": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "TwinTestMode": {
                "value": "TwinEdgeOperations"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TransportType": {
                "value": "Mqtt"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "StorageOptimizeForPerformance": {
                "value": "<OptimizeForPerformance>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "deploymentTester1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DEPLOYMENT_TESTER_MODE": {
                "value": "Sender"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "targetModuleId": {
                "value": "deploymentTester2"
              },
              "testResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "DEPLOYMENT_UPDATE_PERIOD": {
                "value": "<DeploymentTester1.DeploymentUpdatePeriod>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-deployment-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "deploymentTester2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DEPLOYMENT_TESTER_MODE": {
                "value": "Receiver"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-deployment-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "cloudToDeviceMessageSender1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "C2DMESSAGE_TESTER_MODE": {
                "value": "Sender"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl": {
                "value": "http://localhost:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-c2dmessage-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "cloudToDeviceMessageReceiver1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "C2DMESSAGE_TESTER_MODE": {
                "value": "Receiver"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "transportType": {
                "value": "Amqp"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-c2dmessage-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "cloudToDeviceMessageSender2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "C2DMESSAGE_TESTER_MODE": {
                "value": "Sender"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "transportType": {
                "value": "Mqtt"
              },
              "ReportingEndpointUrl": {
                "value": "http://localhost:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-c2dmessage-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "cloudToDeviceMessageReceiver2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "C2DMESSAGE_TESTER_MODE": {
                "value": "Receiver"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "transportType": {
                "value": "Mqtt"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-c2dmessage-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "networkController": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "RunFrequencies__0__OfflineFrequency": {
                "value": "<NetworkController.OfflineFrequency0>"
              },
              "RunFrequencies__0__OnlineFrequency": {
                "value": "<NetworkController.OnlineFrequency0>"
              },
              "RunFrequencies__0__RunsCount": {
                "value": "<NetworkController.RunsCount0>"
              },
              "NetworkControllerRunProfile": {
                "value": "<NetworkController.RunProfile>"
              },
              "StartAfter": {
                "value": "<TestStartDelay>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-network-controller:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Privileged\":\"true\",\"NetworkMode\":\"host\",\"Binds\":[\"/var/run/docker.sock:/var/run/docker.sock\"]},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "metricsCollector": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "LogAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "LogAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "LogAnalyticsLogType": {
                "value": "testMetricsV2"
              },
              "MetricsEndpointsCSV": {
                "value": "<MetricsCollector.MetricsEndpointsCSV>"
              },
              "ScrapeFrequencyInSecs": {
                "value": "<MetricsCollector.ScrapeFrequencyInSecs>"
              },
              "UploadTarget": {
                "value": "<MetricsCollector.UploadTarget>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-metrics-collector:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "loadGen1ToRelayer1": "FROM /messages/modules/loadGen1/outputs/output1 INTO BrokeredEndpoint(\"/modules/relayer1/inputs/input1\")",
          "relayer1ToCloud": "FROM /messages/modules/relayer1/outputs/output1 INTO $upstream",
          "loadGen2ToRelayer2": "FROM /messages/modules/loadGen2/outputs/output2 INTO BrokeredEndpoint(\"/modules/relayer2/inputs/input2\")",
          "relayer2ToCloud": "FROM /messages/modules/relayer2/outputs/output2 INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 86400
        }
      }
    },
    "metricsCollector": {
      "properties.desired": {
        "additionalTags": "<TestInfo>"
      }
    },
    "testResultCoordinator": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "reportMetadataList": {
          "reportMetadata1": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "loadGen1.send",
            "ActualSource": "relayer1.receive",
            "TestDescription": "messages | local | amqp"
          },
          "reportMetadata2": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "relayer1.send",
            "ActualSource": "relayer1.eventHub",
            "TestDescription": "messages | upstream | amqp"
          },
          "reportMetadata3": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "loadGen2.send",
            "ActualSource": "relayer2.receive",
            "TestDescription": "messages | local | mqtt"
          },
          "reportMetadata4": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "relayer2.send",
            "ActualSource": "relayer2.eventHub",
            "TestDescription": "messages | upstream | mqtt"
          },
          "reportMetadata5": {
            "TestReportType": "TwinCountingReport",
            "TwinTestPropertyType": "Desired",
            "ExpectedSource": "twinTester1.desiredUpdated",
            "ActualSource": "twinTester2.desiredReceived",
            "TestDescription": "twin | desired property | amqp"
          },
          "reportMetadata6": {
            "TestReportType": "TwinCountingReport",
            "TwinTestPropertyType": "Reported",
            "ExpectedSource": "twinTester2.reportedReceived",
            "ActualSource": "twinTester2.reportedUpdated",
            "TestDescription": "twin | reported property | amqp"
          },
          "reportMetadata7": {
            "TestReportType": "TwinCountingReport",
            "TwinTestPropertyType": "Desired",
            "ExpectedSource": "twinTester3.desiredUpdated",
            "ActualSource": "twinTester4.desiredReceived",
            "TestDescription": "twin | desired property | mqtt"
          },
          "reportMetadata8": {
            "TestReportType": "TwinCountingReport",
            "TwinTestPropertyType": "Reported",
            "ExpectedSource": "twinTester4.reportedReceived",
            "ActualSource": "twinTester4.reportedUpdated",
            "TestDescription": "twin | reported property | mqtt"
          },
          "reportMetadata9": {
            "TestReportType": "DeploymentTestReport",
            "ExpectedSource": "deploymentTester1.send",
            "ActualSource": "deploymentTester2.receive",
            "TestDescription": "deployment"
          },
          "reportMetadata10": {
            "TestReportType": "DirectMethodConnectivityReport",
            "SenderSource": "directMethodSender1.send",
            "ReceiverSource": "directMethodReceiver1.receive",
            "TolerancePeriod": "00:01:00",
            "TestDescription": "direct method | cloud | amqp"
          },
          "reportMetadata11": {
            "TestReportType": "DirectMethodConnectivityReport",
            "SenderSource": "directMethodSender2.send",
            "ReceiverSource": "directMethodReceiver2.receive",
            "TolerancePeriod": "00:01:00",
            "TestDescription": "direct method | cloud | mqtt"
          },
          "reportMetadata12": {
            "TestReportType": "DirectMethodConnectivityReport",
            "SenderSource": "directMethodSender3.send",
            "TolerancePeriod": "00:01:00",
            "TestDescription": "edge agent ping"
          },
          "reportMetadata13": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "cloudToDeviceMessageSender1.send",
            "ActualSource": "cloudToDeviceMessageReceiver1.receive",
            "TestDescription": "C2D | amqp"
          },
          "reportMetadata14": {
            "TestReportType": "CountingReport",
            "TestOperationResultType": "Messages",
            "ExpectedSource": "cloudToDeviceMessageSender2.send",
            "ActualSource": "cloudToDeviceMessageReceiver2.receive",
            "TestDescription": "C2D | mqtt"
          },
          "reportMetadata15": {
            "TestReportType": "NetworkControllerReport",
            "Source": "networkController",
            "TestDescription": "network controller"
          },
          "reportMetadata16": {
            "TestReportType": "ErrorReport",
            "TestDescription": "test configuration"
          },
          "reportMetadata17": {
            "TestReportType": "TestInfoReport",
            "TestDescription": "test info"
          }
        }
      }
    }
  }
}