{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "modules": {
          "analyzer": {
            "env": {
              "ConsumerGroupId": {
                "value": "<Analyzer.ConsumerGroupId>"
              },
              "EventHubConnectionString": {
                "value": "<Analyzer.EventHubConnectionString>"
              },
              "LogAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "LogAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "Logging:LogLevel:Microsoft": {
                "value": "Error"
              },
              "TestInfo": {
                "value": "<TestInfo>"
              }
            },
            "restartPolicy": "never",
            "settings": {
              "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"15000/tcp\":[{\"HostPort\":\"15000\"}]}}}",
              "image": "<Container_Registry>/microsoft/azureiotedge-analyzer:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker"
          },
          "loadGen1": {
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "transportType": {
                "value": "<TransportType1>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "loadGen2": {
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "transportType": {
                "value": "<TransportType2>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "loadGen3": {
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "transportType": {
                "value": "<TransportType3>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "loadGen4": {
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "transportType": {
                "value": "<TransportType4>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "metricsCollector": {
            "env": {
              "LogAnalyticsLogType": {
                "value": "testMetricsV2"
              },
              "LogAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "LogAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "MetricsEndpointsCSV": {
                "value": "<MetricsCollector.MetricsEndpointsCSV>"
              },
              "ScrapeFrequencyInSecs": {
                "value": "<MetricsCollector.ScrapeFrequencyInSecs>"
              },
              "UploadTarget": {
                "value": "<MetricsCollector.UploadTarget>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-metrics-collector:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "snitcher": {
            "env": {
              "ALERT_URL": {
                "value": "<Snitch.AlertUrl>"
              },
              "ANALYZER_URL": {
                "value": "http://analyzer:15000/api/report"
              },
              "BLOB_CONTAINER_NAME": {
                "value": "loadtest1"
              },
              "BLOB_STORAGE_ACCOUNT": {
                "value": "<Snitch.StorageAccount>"
              },
              "BLOB_STORAGE_MASTER_KEY": {
                "value": "<Snitch.StorageMasterKey>"
              },
              "BUILD_ID": {
                "value": "<Snitch.BuildId>"
              },
              "REPORTING_INTERVAL_IN_SECS": {
                "value": "<Snitch.ReportingIntervalInSecs>"
              },
              "RUST_LOG": {
                "value": "snitcher=info"
              },
              "TEST_DURATION_IN_SECS": {
                "value": "<Snitch.TestDurationInSecs>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "{\"HostConfig\":{\"Binds\":[\"/var/lib/iotedge/mgmt.sock:/var/lib/iotedge/mgmt.sock\"]}}",
              "image": "<Container_Registry>/microsoft/snitcher:<Snitch.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "2.0"
          },
          "twinTester1": {
            "env": {
              "EdgeHubRestartFailureTolerance": {
                "value": "<EdgeHubRestartFailureTolerance>"
              },
              "ServiceClientConnectionString": {
                "value": "<ServiceClientConnectionString>"
              },
              "TransportType": {
                "value": "<TransportType1>"
              },
              "TwinUpdateFailureThreshold": {
                "value": "<TwinUpdateFailureThreshold>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "twinTester2": {
            "env": {
              "EdgeHubRestartFailureTolerance": {
                "value": "<EdgeHubRestartFailureTolerance>"
              },
              "ServiceClientConnectionString": {
                "value": "<ServiceClientConnectionString>"
              },
              "TransportType": {
                "value": "<TransportType2>"
              },
              "TwinUpdateFailureThreshold": {
                "value": "<TwinUpdateFailureThreshold>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "twinTester3": {
            "env": {
              "EdgeHubRestartFailureTolerance": {
                "value": "<EdgeHubRestartFailureTolerance>"
              },
              "ServiceClientConnectionString": {
                "value": "<ServiceClientConnectionString>"
              },
              "TransportType": {
                "value": "<TransportType3>"
              },
              "TwinUpdateFailureThreshold": {
                "value": "<TwinUpdateFailureThreshold>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          },
          "twinTester4": {
            "env": {
              "EdgeHubRestartFailureTolerance": {
                "value": "<EdgeHubRestartFailureTolerance>"
              },
              "ServiceClientConnectionString": {
                "value": "<ServiceClientConnectionString>"
              },
              "TransportType": {
                "value": "<TransportType4>"
              },
              "TwinUpdateFailureThreshold": {
                "value": "<TwinUpdateFailureThreshold>"
              },
              "TwinUpdateFrequency": {
                "value": "<TwinUpdateFrequency>"
              },
              "TwinUpdateSize": {
                "value": "<TwinUpdateSize>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker",
            "version": "1.0"
          }
        },
        "runtime": {
          "settings": {
            "loggingOptions": "",
            "minDockerVersion": "v1.25",
            "registryCredentials": {
              "rc1": {
                "address": "<Container_Registry>",
                "password": "<CR.Password>",
                "username": "<CR.Username>"
              }
            }
          },
          "type": "docker"
        },
        "schemaVersion": "1.0",
        "systemModules": {
          "edgeAgent": {
            "env": {
              "experimentalfeatures__enableMetrics": {
                "value": "true"
              },
              "experimentalfeatures__enabled": {
                "value": "true"
              }
            },
            "settings": {
              "createOptions": "",
              "image": "<Container_Registry>/microsoft/azureiotedge-agent:<Build.BuildNumber>-linux-<Architecture>"
            },
            "type": "docker"
          },
          "edgeHub": {
            "env": {
              "NestedEdgeEnabled": {
                "value": "false"
              },
              "SslProtocols": {
                "value": "tls1.2"
              },
              "amqpSettings__enabled": {
                "value": "<amqpSettings__enabled>"
              },
              "experimentalfeatures__enableMetrics": {
                "value": "true"
              },
              "experimentalfeatures__enabled": {
                "value": "true"
              },
              "mqttSettings__enabled": {
                "value": "<mqttSettings__enabled>"
              }
            },
            "restartPolicy": "always",
            "settings": {
              "createOptions": "{\"HostConfig\": {\"PortBindings\": {\"8883/tcp\": [{\"HostPort\": \"8883\"}],\"5671/tcp\": [{\"HostPort\": \"5671\"}]}}}",
              "image": "<Container_Registry>/microsoft/azureiotedge-hub:<Build.BuildNumber>-linux-<Architecture>"
            },
            "status": "running",
            "type": "docker"
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "routes": {
          "upstreamLoadGen1": "FROM /messages/modules/loadGen1/outputs/output1 INTO $upstream",
          "upstreamLoadGen2": "FROM /messages/modules/loadGen2/outputs/output1 INTO $upstream",
          "upstreamLoadGen3": "FROM /messages/modules/loadGen3/outputs/output1 INTO $upstream",
          "upstreamLoadGen4": "FROM /messages/modules/loadGen4/outputs/output1 INTO $upstream"
        },
        "schemaVersion": "1.0",
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 86400
        }
      }
    },
    "metricsCollector": {
      "properties.desired": {
        "additionalTags": "<TestInfo>"
      }
    }
  }
}
