{
  "databaseChangeLog": [
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from simple"
            }
          }
        ],
        "id": "standard changeSet"
      }
    },
    {
      "changeSet": {
        "author": "cmouttet",
        "changes": [
          {
            "addColumn": {
              "columns": [
                {
                  "column": {
                    "afterColumn": "firstname",
                    "name": "middlename",
                    "type": "varchar(50)"
                  }
                }
              ],
              "tableName": "person"
            }
          }
        ],
        "id": "using after column attribute"
      }
    },
    {
      "changeSet": {
        "author": "cmouttet",
        "changes": [
          {
            "addColumn": {
              "columns": [
                {
                  "column": {
                    "beforeColumn": "lastname",
                    "name": "middlename",
                    "type": "varchar(50)"
                  }
                }
              ],
              "tableName": "person"
            }
          }
        ],
        "comment": "add column after",
        "id": "using before column attribute"
      }
    },
    {
      "changeSet": {
        "author": "cmouttet",
        "changes": [
          {
            "addColumn": {
              "columns": [
                {
                  "column": {
                    "name": "middlename",
                    "position": 1,
                    "type": "varchar(50)"
                  }
                }
              ],
              "tableName": "person"
            }
          }
        ],
        "id": "using position attribute"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select count(*) from validchecksum_set"
            }
          }
        ],
        "id": "validCheckSums set",
        "validCheckSum": [
          "a9b7b29ce3a75940858cd022501852e2",
          "8:b3d6a29ce3a75940858cd093501151d1"
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select count(*) from validchecksum_all"
            }
          }
        ],
        "id": "validCheckSums any",
        "validCheckSum": ["ANY"]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "id": "only preconditions",
        "preConditions": [
          {
            "sqlCheck": {
              "expectedResult": 1,
              "sql": "select count(*) from only_preconditions"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "id": "complex preconditions",
        "preConditions": [
          {
            "or": [
              {
                "and": [
                  {
                    "not": [
                      {
                        "dbms": {
                          "type": "oracle"
                        }
                      },
                      {
                        "dbms": {
                          "type": "mysql"
                        }
                      }
                    ]
                  },
                  {
                    "runningAs": {
                      "username": "sa"
                    }
                  }
                ]
              },
              {
                "not": [
                  {
                    "sqlCheck": {
                      "expectedResult": 3,
                      "sql": "select count(*) from test"
                    }
                  },
                  {
                    "or": [
                      {
                        "tableExists": {
                          "tableName": "test_table"
                        }
                      },
                      {
                        "sequenceExists": {
                          "sequenceName": "test_seq"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "and": [
              {
                "indexExists": {
                  "indexName": "test_idx"
                }
              },
              {
                "primaryKeyExists": {
                  "primaryKeyName": "test_pk"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "insert": {
              "columns": [
                {
                  "column": {
                    "name": "id",
                    "valueNumeric": 1
                  }
                }
              ],
              "tableName": "multiple_changes"
            }
          },
          {
            "insert": {
              "columns": [
                {
                  "column": {
                    "name": "id",
                    "valueNumeric": 2
                  }
                }
              ],
              "tableName": "multiple_changes"
            }
          },
          {
            "update": {
              "columns": [
                {
                  "column": {
                    "name": "id",
                    "valueNumeric": 3
                  }
                }
              ],
              "tableName": "multiple_changes"
            }
          },
          {
            "insert": {
              "columns": [
                {
                  "column": {
                    "name": "id",
                    "valueNumeric": 4
                  }
                }
              ],
              "tableName": "multiple_changes"
            }
          }
        ],
        "id": "multiple changes"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from context_and_dbms"
            }
          }
        ],
        "context": "qa, test",
        "dbms": "mock,oracle",
        "id": "context and dbms"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from run_always"
            }
          }
        ],
        "id": "runAlways set",
        "runAlways": true
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from run_on_change"
            }
          }
        ],
        "id": "runOnChange set",
        "runOnChange": true
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from fail_on_error"
            }
          }
        ],
        "failOnError": false,
        "id": "failOnError set"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from logical_file_path"
            }
          }
        ],
        "id": "logicalFilePath set",
        "logicalFilePath": "com/example/other/path.yaml"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from legacy_strategy"
            }
          }
        ],
        "id": "objectQuotingStrategy LEGACY",
        "objectQuotingStrategy": "LEGACY"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from all_strategy"
            }
          }
        ],
        "id": "objectQuotingStrategy ALL",
        "objectQuotingStrategy": "QUOTE_ALL_OBJECTS"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from reserved"
            }
          }
        ],
        "id": "objectQuotingStrategy RESERVED",
        "objectQuotingStrategy": "QUOTE_ONLY_RESERVED_WORDS"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from halt_on_validation_fail"
            }
          }
        ],
        "id": "onValidationFail HALT",
        "onValidationFail": "HALT"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from mark_ran_on_validation_fail"
            }
          }
        ],
        "id": "onValidationFail MARK_RAN",
        "onValidationFail": "MARK_RAN"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "select * from run_in_transaction"
            }
          }
        ],
        "id": "runInTransaction set",
        "runInTransaction": false
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "comment": "There is a comment in the SQL",
              "sql": "select * from comment_in_sql"
            }
          }
        ],
        "comment": "This is a changeSet level comment",
        "id": "comment in sql"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "createTable": {
              "columns": [
                {
                  "column": {
                    "constraints": {
                      "nullable": false,
                      "primaryKey": true,
                      "primaryKeyName": "pk_name"
                    },
                    "name": "id",
                    "type": "int"
                  }
                }
              ],
              "tableName": "nested_objects"
            }
          }
        ],
        "id": "nested column and constraint objects"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "id": "precondition attributes 1",
        "preConditions": [
          {
            "onSqlOutput": "FAIL"
          },
          {
            "onErrorMessage": "My Error Message"
          },
          {
            "onError": "HALT"
          },
          {
            "onFail": "HALT"
          },
          {
            "onFailMessage": "My Fail Message"
          },
          {
            "sqlCheck": {
              "expectedResult": 1,
              "sql": "select count(*) from precondition_check_1"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "id": "precondition attributes 2",
        "preConditions": [
          {
            "onSqlOutput": "IGNORE"
          },
          {
            "onError": "CONTINUE"
          },
          {
            "onFail": "CONTINUE"
          },
          {
            "sqlCheck": {
              "expectedResult": 1,
              "sql": "select count(*) from precondition_check_2"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "id": "precondition attributes 3",
        "preConditions": [
          {
            "onSqlOutput": "TEST"
          },
          {
            "onError": "MARK_RAN"
          },
          {
            "onFail": "MARK_RAN"
          },
          {
            "sqlCheck": {
              "expectedResult": 1,
              "sql": "select count(*) from precondition_check_3"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "id": "precondition attributes 4",
        "preConditions": [
          {
            "onError": "WARN"
          },
          {
            "onFail": "WARN"
          },
          {
            "sqlCheck": {
              "expectedResult": 1,
              "sql": "select count(*) from precondition_check_4"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "createTable": {
              "columns": [
                {
                  "column": {
                    "name": "id",
                    "type": "int"
                  }
                }
              ],
              "tableName": "with_modifysql"
            }
          }
        ],
        "id": "changeSet with modifySql",
        "modifySql": [
          {
            "replace": {
              "replace": "with_modifysql",
              "with": "after_modifysql"
            }
          },
          {
            "replace": {
              "applyToRollback": true,
              "dbms": "mysql, mock",
              "replace": ")",
              "with": ""
            }
          },
          {
            "append": {
              "applyToRollback": true,
              "dbms": "mysql, mock",
              "value": " , name varchar(255) )"
            }
          },
          {
            "append": {
              "context": "prod, qa",
              "value": " partitioned by stuff"
            }
          },
          {
            "append": {
              "context": "prod",
              "dbms": "mysql",
              "value": " engine innodb"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "insert into testutf8insert (stringvalue) values ('string with € and £')"
            }
          }
        ],
        "id": "changeSet with UTF8"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "create 1 tables"
            }
          }
        ],
        "id": "one rollback block",
        "rollback": [
          {
            "sql": {
              "sql": "drop table rollback_test"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "create 1 tables"
            }
          }
        ],
        "id": "empty rollback block",
        "rollback": []
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "sql": {
              "sql": "create multiple tables"
            }
          }
        ],
        "id": "multiple rollback blocks",
        "rollback": [
          {
            "sql": {
              "sql": "drop table multiRollback1"
            }
          },
          {
            "sql": {
              "sql": "drop table multiRollback2"
            }
          },
          {
            "sql": {
              "sql": "drop table multiRollback3"
            }
          },
          {
            "dropTable": {
              "tableName": "multiRollback4"
            }
          },
          {
            "dropTable": {
              "tableName": "multiRollback5"
            }
          },
          {
            "dropTable": {
              "tableName": "multiRollback6"
            }
          }
        ]
      }
    },
    {
      "include": {
        "file": "liquibase/parser/core/yaml/simpleChangeLog.yaml"
      }
    },
    {
      "include": {
        "file": "liquibase/parser/core/yaml/simpleChangeLog.yaml"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "customChange": {
              "class": "liquibase.change.custom.ExampleCustomSqlChange",
              "params": [
                {
                  "param": {
                    "name": "tableName",
                    "value": "tab_name"
                  }
                },
                {
                  "param": {
                    "name": "columnName",
                    "value": "col_name"
                  }
                },
                {
                  "param": {
                    "name": "newValue",
                    "value": ""
                  }
                }
              ]
            }
          }
        ],
        "id": "custom precondition and change",
        "preConditions": [
          {
            "customPrecondition": {
              "className": "liquibase.precondition.ExampleCustomPrecondition",
              "params": [
                {
                  "param": {
                    "name": "name",
                    "value": "test_1"
                  }
                },
                {
                  "param": {
                    "name": "count",
                    "value": 31
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "createTable": {
              "columns": [
                {
                  "column": {
                    "autoIncrement": true,
                    "constraints": {
                      "nullable": false,
                      "primaryKey": true,
                      "primaryKeyName": "pk_name"
                    },
                    "name": "id",
                    "type": "int"
                  }
                }
              ],
              "tableName": "new_table"
            }
          },
          {
            "addColumn": {
              "columns": [
                {
                  "column": {
                    "constraints": {
                      "nullable": false
                    },
                    "defaultValue": "new value",
                    "name": "new_col",
                    "type": "varchar(10)"
                  }
                },
                {
                  "column": {
                    "defaultValueNumeric": 12,
                    "name": "new_col_int",
                    "type": "int"
                  }
                },
                {
                  "column": {
                    "defaultValueBoolean": true,
                    "name": "new_col_bool",
                    "type": "boolean"
                  }
                },
                {
                  "column": {
                    "defaultValueComputed": "average_size()",
                    "name": "new_col_computed",
                    "type": "int"
                  }
                },
                {
                  "column": {
                    "defaultValueDate": "2014-12-01T19:15:33.000Z",
                    "name": "new_col_datetime",
                    "type": "datetime"
                  }
                },
                {
                  "column": {
                    "defaultValueSequenceNext": "seq_test",
                    "name": "new_col_seq",
                    "type": "int"
                  }
                }
              ],
              "tableName": "new_table"
            }
          },
          {
            "createIndex": {
              "columns": [
                {
                  "column": {
                    "constraints": {
                      "unique": true
                    },
                    "name": "id"
                  }
                }
              ],
              "indexName": "idx_new",
              "tableName": "new_table"
            }
          },
          {
            "loadData": {
              "columns": [
                {
                  "column": {
                    "name": "id"
                  }
                },
                {
                  "column": {
                    "header": "new_col_header",
                    "name": "new_col"
                  }
                }
              ],
              "file": "filename",
              "tableName": "new_table"
            }
          },
          {
            "update": {
              "columns": [
                {
                  "column": {
                    "name": "new_col_boolean",
                    "value": "false"
                  }
                }
              ],
              "tableName": "new_table",
              "where": "id=3"
            }
          }
        ],
        "id": "different object types for column"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "update": {
              "columns": [
                {
                  "column": {
                    "name": "varcharColumn",
                    "value": "new column 1 value"
                  }
                },
                {
                  "column": {
                    "name": "dateCol",
                    "valueDate": "2008-01-01T06:00:00.000Z"
                  }
                },
                {
                  "column": {
                    "name": "intCol",
                    "valueNumeric": 11
                  }
                }
              ],
              "tableName": "updateTest",
              "where": "id=:value and other_val=:value"
            }
          },
          {
            "update": {
              "columns": [
                {
                  "column": {
                    "name": "varcharColumn",
                    "value": "new column 2 value"
                  }
                },
                {
                  "column": {
                    "name": "dateCol",
                    "valueDate": "2008-01-02T06:00:00.000Z"
                  }
                },
                {
                  "column": {
                    "name": "intCol",
                    "valueNumeric": 12
                  }
                }
              ],
              "tableName": "updateTest",
              "where": "id=2"
            }
          }
        ],
        "id": "update with whereParams"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "executeCommand": {
              "args": [
                {
                  "arg": {
                    "value": "-out"
                  }
                },
                {
                  "arg": {
                    "value": "-test"
                  }
                }
              ],
              "executable": "/usr/bin/test",
              "os": "linux, mac"
            }
          }
        ],
        "id": "shell command"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "createView": {
              "selectQuery": "select * from test_table",
              "viewName": "test_view"
            }
          }
        ],
        "id": "view creation"
      }
    },
    {
      "changeSet": {
        "author": "nvoxland",
        "changes": [
          {
            "stop": {
              "message": "Stop message!"
            }
          }
        ],
        "id": "stop change"
      }
    }
  ]
}
