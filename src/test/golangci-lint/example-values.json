{
  "run": {
    "concurrency": 4,
    "timeout": "1m",
    "issues-exit-code": 1,
    "tests": true,
    "build-tags": [
      "mytag"
    ],
    "skip-dirs": [
      "src/external_libs",
      "autogenerated_by_my_lib"
    ],
    "skip-dirs-use-default": true,
    "skip-files": [
      ".*\\.my\\.go$",
      "lib/bad.go"
    ],
    "modules-download-mode": "readonly",
    "allow-parallel-runners": false
  },
  "output": {
    "format": "colored-line-number",
    "print-issued-lines": true,
    "print-linter-name": true,
    "uniq-by-line": true,
    "path-prefix": ""
  },
  "linters-settings": {
    "dogsled": {
      "max-blank-identifiers": 2
    },
    "dupl": {
      "threshold": 100
    },
    "errcheck": {
      "check-type-assertions": false,
      "check-blank": false,
      "ignore": "fmt:.*,io/ioutil:^Read.*",
      "exclude": "/path/to/file.txt"
    },
    "exhaustive": {
      "check-generated": false,
      "default-signifies-exhaustive": false
    },
    "funlen": {
      "lines": 60,
      "statements": 40
    },
    "gci": {
      "local-prefixes": "github.com/org/project"
    },
    "gocognit": {
      "min-complexity": 10
    },
    "nestif": {
      "min-complexity": 4
    },
    "goconst": {
      "min-len": 3,
      "min-occurrences": 3
    },
    "gocritic": {
      "enabled-checks": [
        "rangeValCopy"
      ],
      "disabled-checks": [
        "regexpMust"
      ],
      "enabled-tags": [
        "performance"
      ],
      "disabled-tags": [
        "experimental"
      ],
      "settings": {
        "captLocal": {
          "paramsOnly": true
        },
        "rangeValCopy": {
          "sizeThreshold": 32
        }
      }
    },
    "gocyclo": {
      "min-complexity": 10
    },
    "godot": {
      "check-all": false
    },
    "godox": {
      "keywords": [
        "NOTE",
        "OPTIMIZE",
        "HACK"
      ]
    },
    "gofmt": {
      "simplify": true
    },
    "goheader": {
      "values": {
        "const": {},
        "regexp": {}
      },
      "template-path": "/some/template/file"
    },
    "goimports": {
      "local-prefixes": "github.com/org/project"
    },
    "golint": {
      "min-confidence": 0.8
    },
    "gomnd": {
      "settings": {
        "mnd": {
          "checks": [
            "argument",
            "case"
          ]
        }
      }
    },
    "gomodguard": {
      "allowed": {
        "modules": [],
        "domains": []
      },
      "blocked": {
        "modules": [],
        "versions": []
      }
    },
    "govet": {
      "check-shadowing": true,
      "settings": {
        "printf": {
          "funcs": [
            "(github.com/golangci/golangci-lint/pkg/logutils.Log).Infof",
            "(github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf",
            "(github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf",
            "(github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf"
          ]
        }
      },
      "enable": [
        "atomic"
      ],
      "enable-all": false,
      "disable": [
        "shift"
      ],
      "disable-all": false
    },
    "depguard": {
      "list-type": "blacklist",
      "include-go-root": false,
      "packages": [
        "github.com/sirupsen/logrus"
      ],
      "packages-with-error-message": {
        "github.com/sirupsen/logrus": "logging is allowed only by logutils.Log"
      }
    },
    "lll": {
      "line-length": 120,
      "tab-width": 1
    },
    "maligned": {
      "suggest-new": true
    },
    "misspell": {
      "locale": "US",
      "ignore-words": [
        "someword"
      ]
    },
    "nakedret": {
      "max-func-lines": 30
    },
    "prealloc": {
      "simple": true,
      "range-loops": true,
      "for-loops": false
    },
    "nolintlint": {
      "allow-unused": false,
      "allow-leading-space": true,
      "allow-no-explanation": [],
      "require-explanation": true,
      "require-specific": true
    },
    "rowserrcheck": {
      "packages": [
        "github.com/jmoiron/sqlx"
      ]
    },
    "testpackage": {
      "skip-regexp": "(export|internal)_test\\.go"
    },
    "unparam": {
      "check-exported": false
    },
    "unused": {
      "check-exported": false
    },
    "whitespace": {
      "multi-if": false,
      "multi-func": false
    },
    "wsl": {
      "strict-append": true,
      "allow-assign-and-call": true,
      "allow-multiline-assign": true,
      "allow-cuddle-declarations": false,
      "allow-trailing-comment": false,
      "force-case-trailing-whitespace": 0,
      "force-err-cuddling": false,
      "allow-separated-leading-comment": false
    },
    "gofumpt": {
      "extra-rules": false
    },
    "errorlint": {
      "errorf": true
    },
    "custom": {
      "example": {
        "path": "/path/to/example.so",
        "description": "This is an example usage of a plugin linter.",
        "original-url": "github.com/golangci/example-linter"
      }
    }
  },
  "linters": {
    "enable": [
      "megacheck",
      "govet"
    ],
    "disable": [
      "maligned",
      "prealloc"
    ],
    "disable-all": false,
    "presets": [
      "bugs",
      "unused"
    ],
    "fast": false
  },
  "issues": {
    "exclude": [
      "abcdef"
    ],
    "exclude-rules": [
      {
        "path": "_test\\.go",
        "linters": [
          "gocyclo",
          "errcheck",
          "dupl",
          "gosec"
        ]
      },
      {
        "path": "internal/hmac/",
        "text": "weak cryptographic primitive",
        "linters": [
          "gosec"
        ]
      },
      {
        "linters": [
          "staticcheck"
        ],
        "text": "SA9003:"
      },
      {
        "linters": [
          "lll"
        ],
        "source": "^//go:generate "
      }
    ],
    "exclude-use-default": false,
    "exclude-case-sensitive": false,
    "include": [
      "EXC0002"
    ],
    "max-issues-per-linter": 0,
    "max-same-issues": 0,
    "new": false,
    "new-from-rev": "REV",
    "new-from-patch": "path/to/patch/file"
  },
  "severity": {
    "default-severity": "error",
    "case-sensitive": false,
    "rules": [
      {
        "linters": [
          "dupl"
        ],
        "severity": "info"
      }
    ]
  }
}
