{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "apigateway": {
      "args": ["/app/yarp.dll"],
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "targetPort": 5000,
          "transport": "http"
        }
      },
      "entrypoint": "dotnet",
      "env": {
        "ASPNETCORE_ENVIRONMENT": "Development",
        "REVERSEPROXY__CLUSTERS__cluster_basketservice__DESTINATIONS__destination1__ADDRESS": "http://_http.basketservice",
        "REVERSEPROXY__CLUSTERS__cluster_catalogservice__DESTINATIONS__destination1__ADDRESS": "http://_http.catalogservice",
        "REVERSEPROXY__ROUTES__route0__CLUSTERID": "cluster_catalogservice",
        "REVERSEPROXY__ROUTES__route0__MATCH__PATH": "/catalog/{**catch-all}",
        "REVERSEPROXY__ROUTES__route0__TRANSFORMS__0__PathRemovePrefix": "/catalog",
        "REVERSEPROXY__ROUTES__route1__CLUSTERID": "cluster_basketservice",
        "REVERSEPROXY__ROUTES__route1__MATCH__PATH": "/basket/{**catch-all}",
        "REVERSEPROXY__ROUTES__route1__TRANSFORMS__0__PathRemovePrefix": "/basket",
        "services__basketservice__http__0": "{basketservice.bindings.http.url}",
        "services__catalogservice__http__0": "{catalogservice.bindings.http.url}"
      },
      "image": "mcr.microsoft.com/dotnet/nightly/yarp:2.3.0-preview.4",
      "type": "container.v0"
    },
    "basketcache": {
      "args": ["-c", "redis-server --requirepass $REDIS_PASSWORD --save 60 1"],
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 6379,
          "transport": "tcp"
        }
      },
      "connectionString": "{basketcache.bindings.tcp.host}:{basketcache.bindings.tcp.port},password={basketcache-password.value}",
      "entrypoint": "/bin/sh",
      "env": {
        "REDIS_PASSWORD": "{basketcache-password.value}"
      },
      "image": "docker.io/library/redis:8.2",
      "type": "container.v0",
      "volumes": [
        {
          "name": "testshop.apphost-48e1ce2b9b-basketcache-data",
          "readOnly": false,
          "target": "/data"
        }
      ]
    },
    "basketcache-password": {
      "inputs": {
        "value": {
          "default": {
            "generate": {
              "minLength": 22,
              "special": false
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "parameter.v0",
      "value": "{basketcache-password.inputs.value}"
    },
    "basketcache-password-uri-encoded": {
      "filter": "uri",
      "type": "annotated.string",
      "value": "{basketcache-password.value}"
    },
    "basketservice": {
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http2"
        },
        "https": {
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http2"
        }
      },
      "env": {
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "BASKETCACHE_HOST": "{basketcache.bindings.tcp.host}",
        "BASKETCACHE_PASSWORD": "{basketcache-password.value}",
        "BASKETCACHE_PORT": "{basketcache.bindings.tcp.port}",
        "BASKETCACHE_URI": "redis://:{basketcache-password-uri-encoded.value}@{basketcache.bindings.tcp.host}:{basketcache.bindings.tcp.port}",
        "ConnectionStrings__basketcache": "{basketcache.connectionString}",
        "ConnectionStrings__messaging": "{messaging.connectionString}",
        "HTTP_PORTS": "{basketservice.bindings.http.targetPort}",
        "MESSAGING_HOST": "{messaging.bindings.tcp.host}",
        "MESSAGING_PASSWORD": "{messaging-password.value}",
        "MESSAGING_PORT": "{messaging.bindings.tcp.port}",
        "MESSAGING_URI": "amqp://guest:{messaging-password-uri-encoded.value}@{messaging.bindings.tcp.host}:{messaging.bindings.tcp.port}",
        "MESSAGING_USERNAME": "guest",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory"
      },
      "path": "../BasketService/BasketService.csproj",
      "type": "project.v0"
    },
    "catalogdb": {
      "connectionString": "{postgres.connectionString};Database=catalogdb",
      "type": "value.v0"
    },
    "catalogdbapp": {
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        },
        "https": {
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http"
        }
      },
      "env": {
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "CATALOGDB_DATABASE": "catalogdb",
        "CATALOGDB_HOST": "{postgres.bindings.tcp.host}",
        "CATALOGDB_JDBCCONNECTIONSTRING": "jdbc:postgresql://{postgres.bindings.tcp.host}:{postgres.bindings.tcp.port}/catalogdb",
        "CATALOGDB_PASSWORD": "{postgres-password.value}",
        "CATALOGDB_PORT": "{postgres.bindings.tcp.port}",
        "CATALOGDB_URI": "postgresql://postgres:{postgres-password.value}@{postgres.bindings.tcp.host}:{postgres.bindings.tcp.port}/catalogdb",
        "CATALOGDB_USERNAME": "postgres",
        "ConnectionStrings__catalogdb": "{catalogdb.connectionString}",
        "HTTP_PORTS": "{catalogdbapp.bindings.http.targetPort}",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory"
      },
      "path": "../CatalogDb/CatalogDb.csproj",
      "type": "project.v0"
    },
    "catalogservice": {
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        },
        "https": {
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http"
        }
      },
      "env": {
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "CATALOGDB_DATABASE": "catalogdb",
        "CATALOGDB_HOST": "{postgres.bindings.tcp.host}",
        "CATALOGDB_JDBCCONNECTIONSTRING": "jdbc:postgresql://{postgres.bindings.tcp.host}:{postgres.bindings.tcp.port}/catalogdb",
        "CATALOGDB_PASSWORD": "{postgres-password.value}",
        "CATALOGDB_PORT": "{postgres.bindings.tcp.port}",
        "CATALOGDB_URI": "postgresql://postgres:{postgres-password.value}@{postgres.bindings.tcp.host}:{postgres.bindings.tcp.port}/catalogdb",
        "CATALOGDB_USERNAME": "postgres",
        "ConnectionStrings__catalogdb": "{catalogdb.connectionString}",
        "HTTP_PORTS": "{catalogservice.bindings.http.targetPort}",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory"
      },
      "path": "../CatalogService/CatalogService.csproj",
      "type": "project.v0"
    },
    "frontend": {
      "bindings": {
        "http": {
          "external": true,
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        },
        "https": {
          "external": true,
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http"
        }
      },
      "env": {
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{frontend.bindings.http.targetPort}",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "services__basketservice__http__0": "{basketservice.bindings.http.url}",
        "services__basketservice__https__0": "{basketservice.bindings.https.url}",
        "services__catalogservice__http__0": "{catalogservice.bindings.http.url}",
        "services__catalogservice__https__0": "{catalogservice.bindings.https.url}"
      },
      "path": "../MyFrontend/MyFrontend.csproj",
      "type": "project.v0"
    },
    "messaging": {
      "bindings": {
        "management": {
          "protocol": "tcp",
          "scheme": "http",
          "targetPort": 15672,
          "transport": "http"
        },
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 5672,
          "transport": "tcp"
        }
      },
      "connectionString": "amqp://guest:{messaging-password-uri-encoded.value}@{messaging.bindings.tcp.host}:{messaging.bindings.tcp.port}",
      "env": {
        "RABBITMQ_DEFAULT_PASS": "{messaging-password.value}",
        "RABBITMQ_DEFAULT_USER": "guest"
      },
      "image": "docker.io/library/rabbitmq:4.1-management",
      "type": "container.v0",
      "volumes": [
        {
          "name": "testshop.apphost-48e1ce2b9b-messaging-data",
          "readOnly": false,
          "target": "/var/lib/rabbitmq"
        }
      ]
    },
    "messaging-password": {
      "inputs": {
        "value": {
          "default": {
            "generate": {
              "minLength": 22,
              "special": false
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "parameter.v0",
      "value": "{messaging-password.inputs.value}"
    },
    "messaging-password-uri-encoded": {
      "filter": "uri",
      "type": "annotated.string",
      "value": "{messaging-password.value}"
    },
    "orderprocessor": {
      "env": {
        "ConnectionStrings__messaging": "{messaging.connectionString}",
        "MESSAGING_HOST": "{messaging.bindings.tcp.host}",
        "MESSAGING_PASSWORD": "{messaging-password.value}",
        "MESSAGING_PORT": "{messaging.bindings.tcp.port}",
        "MESSAGING_URI": "amqp://guest:{messaging-password-uri-encoded.value}@{messaging.bindings.tcp.host}:{messaging.bindings.tcp.port}",
        "MESSAGING_USERNAME": "guest",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory"
      },
      "path": "../OrderProcessor/OrderProcessor.csproj",
      "type": "project.v0"
    },
    "postgres": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 5432,
          "transport": "tcp"
        }
      },
      "connectionString": "Host={postgres.bindings.tcp.host};Port={postgres.bindings.tcp.port};Username=postgres;Password={postgres-password.value}",
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_PASSWORD": "{postgres-password.value}",
        "POSTGRES_USER": "postgres"
      },
      "image": "docker.io/library/postgres:17.6",
      "type": "container.v0",
      "volumes": [
        {
          "name": "testshop.apphost-48e1ce2b9b-postgres-data",
          "readOnly": false,
          "target": "/var/lib/postgresql/data"
        }
      ]
    },
    "postgres-password": {
      "inputs": {
        "value": {
          "default": {
            "generate": {
              "minLength": 22
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "parameter.v0",
      "value": "{postgres-password.inputs.value}"
    },
    "postgres-password-uri-encoded": {
      "filter": "uri",
      "type": "annotated.string",
      "value": "{postgres-password.value}"
    }
  }
}
