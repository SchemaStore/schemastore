{
  "resources": {
    "integrationservicea": {
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        },
        "https": {
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http"
        }
      },
      "env": {
        "ConnectionStrings__mongodbabstract": "{mongodbabstract.connectionString}",
        "ConnectionStrings__mongodbcontainer": "{mongodbcontainer.connectionString}",
        "ConnectionStrings__mysqlabstract": "{mysqlabstract.connectionString}",
        "ConnectionStrings__mysqlcontainer": "{mysqlcontainer.connectionString}",
        "ConnectionStrings__postgresabstract": "{postgresabstract.connectionString}",
        "ConnectionStrings__postgrescontainer": "{postgrescontainer.connectionString}",
        "ConnectionStrings__rabbitmqabstract": "{rabbitmqabstract.connectionString}",
        "ConnectionStrings__rabbitmqcontainer": "{rabbitmqcontainer.connectionString}",
        "ConnectionStrings__redisabstract": "{redisabstract.connectionString}",
        "ConnectionStrings__rediscontainer": "{rediscontainer.connectionString}",
        "ConnectionStrings__sqlserverabstract": "{sqlserverabstract.connectionString}",
        "ConnectionStrings__sqlservercontainer": "{sqlservercontainer.connectionString}",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true"
      },
      "path": "../TestProject.IntegrationServiceA/TestProject.IntegrationServiceA.csproj",
      "type": "project.v0"
    },
    "kafkaabstract": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 9092,
          "transport": "tcp"
        }
      },
      "connectionString": "{kafkaabstract.bindings.tcp.host}:{kafkaabstract.bindings.tcp.port}",
      "env": {
        "KAFKA_ADVERTISED_LISTENERS": "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:{kafkaabstract.bindings.tcp.port}"
      },
      "image": "confluentinc/confluent-local",
      "type": "container.v0"
    },
    "kafkacontainer": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 9092,
          "transport": "tcp"
        }
      },
      "connectionString": "{kafkacontainer.bindings.tcp.host}:{kafkacontainer.bindings.tcp.port}",
      "env": {
        "KAFKA_ADVERTISED_LISTENERS": "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:{kafkacontainer.bindings.tcp.port}"
      },
      "image": "confluentinc/confluent-local",
      "type": "container.v0"
    },
    "mongodbabstract": {
      "type": "mongodb.server.v0"
    },
    "mongodbcontainer": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 27017,
          "transport": "tcp"
        }
      },
      "connectionString": "{mongodbcontainer.bindings.tcp.host}:{mongodbcontainer.bindings.tcp.port}",
      "image": "mongo:latest",
      "type": "container.v0"
    },
    "mysqlabstract": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 3306,
          "transport": "tcp"
        }
      },
      "connectionString": "Server={mysqlabstract.bindings.tcp.host};Port={mysqlabstract.bindings.tcp.port};User ID=root;Password={mysqlabstract.inputs.password}",
      "env": {
        "MYSQL_ROOT_PASSWORD": "{mysqlabstract.inputs.password}"
      },
      "image": "mysql:latest",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "mysqlcontainer": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 3306,
          "transport": "tcp"
        }
      },
      "connectionString": "Server={mysqlcontainer.bindings.tcp.host};Port={mysqlcontainer.bindings.tcp.port};User ID=root;Password={mysqlcontainer.inputs.password}",
      "env": {
        "MYSQL_ROOT_PASSWORD": "{mysqlcontainer.inputs.password}"
      },
      "image": "mysql:latest",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "nodeapp": {
      "args": [
        "C:\\Code\\dotnet\\aspire\\tests\\testproject\\TestProject.AppHost\\..\\nodeapp\\app.js"
      ],
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        }
      },
      "command": "node",
      "env": {
        "NODE_ENV": "production",
        "PORT": "{nodeapp.bindings.http.port}"
      },
      "type": "executable.v0",
      "workingDirectory": "../nodeapp"
    },
    "npmapp": {
      "args": ["run", "start"],
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        }
      },
      "command": "npm",
      "env": {
        "NODE_ENV": "production",
        "PORT": "{npmapp.bindings.http.port}"
      },
      "type": "executable.v0",
      "workingDirectory": "../nodeapp"
    },
    "postgresabstract": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 5432,
          "transport": "tcp"
        }
      },
      "connectionString": "Host={postgresabstract.bindings.tcp.host};Port={postgresabstract.bindings.tcp.port};Username=postgres;Password={postgresabstract.inputs.password};",
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_PASSWORD": "{postgresabstract.inputs.password}"
      },
      "image": "postgres:latest",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "postgrescontainer": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 5432,
          "transport": "tcp"
        }
      },
      "connectionString": "Host={postgrescontainer.bindings.tcp.host};Port={postgrescontainer.bindings.tcp.port};Username=postgres;Password={postgrescontainer.inputs.password};",
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_PASSWORD": "{postgrescontainer.inputs.password}"
      },
      "image": "postgres:latest",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "rabbitmqabstract": {
      "bindings": {
        "management": {
          "protocol": "tcp",
          "scheme": "http",
          "targetPort": 15672,
          "transport": "http"
        },
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 5672,
          "transport": "tcp"
        }
      },
      "connectionString": "amqp://guest:{rabbitmqabstract.inputs.password}@{rabbitmqabstract.bindings.management.host}:{rabbitmqabstract.bindings.management.port}",
      "env": {
        "RABBITMQ_DEFAULT_PASS": "{rabbitmqabstract.inputs.password}",
        "RABBITMQ_DEFAULT_USER": "guest"
      },
      "image": "rabbitmq:3-management",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "rabbitmqcontainer": {
      "bindings": {
        "management": {
          "protocol": "tcp",
          "scheme": "http",
          "targetPort": 15672,
          "transport": "http"
        },
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 5672,
          "transport": "tcp"
        }
      },
      "connectionString": "amqp://guest:{rabbitmqcontainer.inputs.password}@{rabbitmqcontainer.bindings.management.host}:{rabbitmqcontainer.bindings.management.port}",
      "env": {
        "RABBITMQ_DEFAULT_PASS": "{rabbitmqcontainer.inputs.password}",
        "RABBITMQ_DEFAULT_USER": "guest"
      },
      "image": "rabbitmq:3-management",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "redisabstract": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 6379,
          "transport": "tcp"
        }
      },
      "connectionString": "{redisabstract.bindings.tcp.host}:{redisabstract.bindings.tcp.port}",
      "image": "redis:latest",
      "type": "container.v0"
    },
    "rediscontainer": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 6379,
          "transport": "tcp"
        }
      },
      "connectionString": "{rediscontainer.bindings.tcp.host}:{rediscontainer.bindings.tcp.port}",
      "image": "redis:latest",
      "type": "container.v0"
    },
    "servicea": {
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        },
        "https": {
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http"
        }
      },
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true"
      },
      "path": "../TestProject.ServiceA/TestProject.ServiceA.csproj",
      "type": "project.v0"
    },
    "serviceb": {
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        },
        "https": {
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http"
        }
      },
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true"
      },
      "path": "../TestProject.ServiceB/TestProject.ServiceB.csproj",
      "type": "project.v0"
    },
    "servicec": {
      "bindings": {
        "http": {
          "protocol": "tcp",
          "scheme": "http",
          "transport": "http"
        },
        "https": {
          "protocol": "tcp",
          "scheme": "https",
          "transport": "http"
        }
      },
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true"
      },
      "path": "../TestProject.ServiceC/TestProject.ServiceC.csproj",
      "type": "project.v0"
    },
    "sqlserverabstract": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 1433,
          "transport": "tcp"
        }
      },
      "connectionString": "Server={sqlserverabstract.bindings.tcp.host},{sqlserverabstract.bindings.tcp.port};User ID=sa;Password={sqlserverabstract.inputs.password};TrustServerCertificate=true;",
      "env": {
        "ACCEPT_EULA": "Y",
        "MSSQL_SA_PASSWORD": "{sqlserverabstract.inputs.password}"
      },
      "image": "mcr.microsoft.com/mssql/server:2022-latest",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "sqlservercontainer": {
      "bindings": {
        "tcp": {
          "protocol": "tcp",
          "scheme": "tcp",
          "targetPort": 1433,
          "transport": "tcp"
        }
      },
      "connectionString": "Server={sqlservercontainer.bindings.tcp.host},{sqlservercontainer.bindings.tcp.port};User ID=sa;Password={sqlservercontainer.inputs.password};TrustServerCertificate=true;",
      "env": {
        "ACCEPT_EULA": "Y",
        "MSSQL_SA_PASSWORD": "{sqlservercontainer.inputs.password}"
      },
      "image": "mcr.microsoft.com/mssql/server:2022-latest",
      "inputs": {
        "password": {
          "default": {
            "generate": {
              "minLength": 10
            }
          },
          "secret": true,
          "type": "string"
        }
      },
      "type": "container.v0"
    },
    "workera": {
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true"
      },
      "path": "../TestProject.WorkerA/TestProject.WorkerA.csproj",
      "type": "project.v0"
    }
  }
}
