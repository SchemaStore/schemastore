sspecVersion: v0.1.0
package:
  name: 'substreams_test'
  version: v0.1.0

protobuf:
  files:
  #    - "sf/substreams/v1/test/test.proto"
  importPaths:
    - ./proto
    - sdf

binaries:
  default:
    type: wasm/rust-v1
    file: ./target/wasm32-unknown-unknown/release/substreams_test.wasm
    protoPackageMapping:
      sf.ethereum.type.v2: 'substreams_ethereum::pb::eth::v2'
      sf.substreams.v1: 'substreams::pb::substreams'
      sf.substreams.v1.test: 'pb::test'
      my.types.v1: 'pb::my_types_v1'

modules:
  - name: test_map
    kind: map
    initialBlock: 10
    inputs:
      - source: sf.substreams.v1.test.Block
    output:
      type: proto:sf.substreams.v1.test.MapResult

  - name: test_store_proto
    kind: store
    initialBlock: 10
    updatePolicy: set
    valueType: proto:sf.substreams.v1.test.MapResult
    inputs:
      - map: test_map

  - name: test_store_delete_prefix
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block
      - sdjhfs: sdf

  - name: assert_test_store_delete_prefix
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: test_store_delete_prefix
    output:
      type: proto:sf.substreams.v1.test.Boolean

  # -------------------- INT64 TESTS -------------------- #
  - name: setup_test_store_add_i64
    kind: store
    initialBlock: 1
    updatePolicy: add
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_add_i64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_i64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_add_i64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_i64
      - store: setup_test_store_add_i64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_i64
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_i64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_i64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_i64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_i64
      - store: setup_test_store_set_i64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_if_not_exists_i64
    kind: store
    initialBlock: 1
    updatePolicy: set_if_not_exists
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_if_not_exists_i64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_i64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_if_not_exists_i64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_i64
      - store: setup_test_store_set_if_not_exists_i64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_min_i64
    kind: store
    initialBlock: 1
    updatePolicy: min
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_min_i64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_i64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_min_i64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_i64
      - store: setup_test_store_min_i64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_max_i64
    kind: store
    initialBlock: 1
    updatePolicy: max
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_max_i64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_i64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_max_i64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_i64
      - store: setup_test_store_max_i64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  # -------------------- ------------------------ -------------------- #

  # -------------------- FLOAT64 TESTS -------------------- #
  - name: setup_test_store_add_float64
    kind: store
    initialBlock: 1
    updatePolicy: add
    valueType: float64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_add_float64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_float64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_add_float64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_float64
      - store: setup_test_store_add_float64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_float64
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: float64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_float64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_float64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_float64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_float64
      - store: setup_test_store_set_float64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_if_not_exists_float64
    kind: store
    initialBlock: 1
    updatePolicy: set_if_not_exists
    valueType: float64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_if_not_exists_float64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_float64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_if_not_exists_float64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_float64
      - store: setup_test_store_set_if_not_exists_float64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_min_float64
    kind: store
    initialBlock: 1
    updatePolicy: min
    valueType: float64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_min_float64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_float64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_min_float64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_float64
      - store: setup_test_store_min_float64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_max_float64
    kind: store
    initialBlock: 1
    updatePolicy: max
    valueType: float64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_max_float64
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_float64
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_max_float64_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_float64
      - store: setup_test_store_max_float64
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  # -------------------- BIGINT TESTS -------------------- #
  - name: setup_test_store_add_bigint
    kind: store
    initialBlock: 1
    updatePolicy: add
    valueType: bigint
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_add_bigint
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_bigint
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_add_bigint_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_bigint
      - store: setup_test_store_add_bigint
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_bigint
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: bigint
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_bigint
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_bigint
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_bigint_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_bigint
      - store: setup_test_store_set_bigint
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_if_not_exists_bigint
    kind: store
    initialBlock: 1
    updatePolicy: set_if_not_exists
    valueType: bigint
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_if_not_exists_bigint
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_bigint
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_if_not_exists_bigint_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_bigint
      - store: setup_test_store_set_if_not_exists_bigint
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_min_bigint
    kind: store
    initialBlock: 1
    updatePolicy: min
    valueType: bigint
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_min_bigint
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_bigint
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_min_bigint_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_bigint
      - store: setup_test_store_min_bigint
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_max_bigint
    kind: store
    initialBlock: 1
    updatePolicy: max
    valueType: bigint
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_max_bigint
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_bigint
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_max_bigint_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_bigint
      - store: setup_test_store_max_bigint
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  # -------------------- BIG DECIMAL TESTS -------------------- #
  - name: setup_test_store_add_bigdecimal
    kind: store
    initialBlock: 1
    updatePolicy: add
    valueType: bigdecimal
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_add_bigdecimal
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_bigdecimal
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_add_bigdecimal_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_add_bigdecimal
      - store: setup_test_store_add_bigdecimal
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_bigdecimal
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: bigdecimal
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_bigdecimal
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_bigdecimal
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_bigdecimal_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_bigdecimal
      - store: setup_test_store_set_bigdecimal
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_if_not_exists_bigdecimal
    kind: store
    initialBlock: 1
    updatePolicy: set_if_not_exists
    valueType: bigdecimal
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_if_not_exists_bigdecimal
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_bigdecimal
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_if_not_exists_bigdecimal_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_bigdecimal
      - store: setup_test_store_set_if_not_exists_bigdecimal
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_min_bigdecimal
    kind: store
    initialBlock: 1
    updatePolicy: min
    valueType: bigdecimal
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_min_bigdecimal
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_bigdecimal
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_min_bigdecimal_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_min_bigdecimal
      - store: setup_test_store_min_bigdecimal
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_max_bigdecimal
    kind: store
    initialBlock: 1
    updatePolicy: max
    valueType: bigdecimal
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_max_bigdecimal
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_bigdecimal
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_max_bigdecimal_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_max_bigdecimal
      - store: setup_test_store_max_bigdecimal
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

    # -------------------- STRING TESTS -------------------- #
  - name: setup_test_store_set_string
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: string
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_string
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_string
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_string_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_string
      - store: setup_test_store_set_string
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_set_if_not_exists_string
    kind: store
    initialBlock: 1
    updatePolicy: set_if_not_exists
    valueType: string
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_set_if_not_exists_string
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_string
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_set_if_not_exists_string_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_set_if_not_exists_string
      - store: setup_test_store_set_if_not_exists_string
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: setup_test_store_append_string
    kind: store
    initialBlock: 1
    updatePolicy: append
    valueType: string
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: assert_test_store_append_string
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_append_string
    output:
      type: proto:sf.substreams.v1.test.Boolean

  - name: assert_test_store_append_string_deltas
    kind: map
    initialBlock: 1
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: setup_test_store_append_string
      - store: setup_test_store_append_string
        mode: deltas
    output:
      type: proto:sf.substreams.v1.test.Boolean

  # -------------------- ------------------------ -------------------- #

  - name: store_root
    kind: store
    initialBlock: 3
    updatePolicy: set
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block

  - name: store_depend
    kind: store
    initialBlock: 3
    updatePolicy: set
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: store_root

  - name: store_depends_on_depend
    kind: store
    initialBlock: 3
    updatePolicy: set
    valueType: int64
    inputs:
      - source: sf.substreams.v1.test.Block
      - store: store_root
      - store: store_depend

  - name: assert_all_test_i64
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - map: assert_test_store_add_i64
      - map: assert_test_store_add_i64_deltas
      - map: assert_test_store_set_i64
      - map: assert_test_store_set_i64_deltas
      - map: assert_test_store_set_if_not_exists_i64
      - map: assert_test_store_set_if_not_exists_i64_deltas
      - map: assert_test_store_min_i64
      - map: assert_test_store_min_i64_deltas
      - map: assert_test_store_max_i64
      - map: assert_test_store_max_i64_deltas

  - name: assert_all_test_float64
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - map: assert_test_store_add_float64
      - map: assert_test_store_add_float64_deltas
      - map: assert_test_store_set_float64
      - map: assert_test_store_set_float64_deltas
      - map: assert_test_store_set_if_not_exists_float64
      - map: assert_test_store_set_if_not_exists_float64_deltas
      - map: assert_test_store_min_float64
      - map: assert_test_store_min_float64_deltas
      - map: assert_test_store_max_float64
      - map: assert_test_store_max_float64_deltas

  - name: assert_all_test_bigint
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - map: assert_test_store_add_bigint
      - map: assert_test_store_add_bigint_deltas
      - map: assert_test_store_set_bigint
      - map: assert_test_store_set_bigint_deltas
      - map: assert_test_store_set_if_not_exists_bigint
      - map: assert_test_store_set_if_not_exists_bigint_deltas
      - map: assert_test_store_min_bigint
      - map: assert_test_store_min_bigint_deltas
      - map: assert_test_store_max_bigint
      - map: assert_test_store_max_bigint_deltas

  - name: assert_all_test_bigdecimal
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - map: assert_test_store_add_bigdecimal
      - map: assert_test_store_add_bigdecimal_deltas
      - map: assert_test_store_set_bigdecimal
      - map: assert_test_store_set_bigdecimal_deltas
      - map: assert_test_store_set_if_not_exists_bigdecimal
      - map: assert_test_store_set_if_not_exists_bigdecimal_deltas
      - map: assert_test_store_min_bigdecimal
      - map: assert_test_store_min_bigdecimal_deltas
      - map: assert_test_store_max_bigdecimal
      - map: assert_test_store_max_bigdecimal_deltas

  - name: assert_all_test_string
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - map: assert_test_store_append_string
      - map: assert_test_store_append_string_deltas
      - map: assert_test_store_set_string
      - map: assert_test_store_set_string_deltas
      - map: assert_test_store_set_if_not_exists_string
      - map: assert_test_store_set_if_not_exists_string_deltas

  - name: assert_all_test_delete_prefix
    kind: store
    initialBlock: 1
    updatePolicy: set
    valueType: int64
    inputs:
      - map: assert_test_store_delete_prefix

  - name: assert_all_test
    kind: map
    initialBlock: 1
    inputs:
      - store: assert_all_test_delete_prefix
      - store: assert_all_test_string
      - store: assert_all_test_i64
      - store: assert_all_test_float64
      - store: assert_all_test_bigint
      - store: assert_all_test_bigdecimal
    output:
      type: proto:sf.substreams.v1.test.Boolean
