{
  "$schema": "https://neotys.com/as-code-v3.json",
  "name": "NeoLoad-CLI-example-2_0",
  "includes": [
    "paths/geosearch_get.yaml"
  ],
  "variables": [
    {
      "constant": {
        "name": "constant_variable",
        "value": "12345abcd"
      }
    },
    {
      "file": {
        "name": "cities",
        "column_names": [
          "City"
        ],
        "is_first_line_column_names": false,
        "start_from_line": 1,
        "delimiter": ",",
        "path": "data/cities.csv",
        "change_policy": "each_iteration",
        "scope": "global",
        "order": "any",
        "out_of_value": "cycle"
      }
    },
    {
      "counter": {
        "name": "counter_variable",
        "start": 0,
        "end": 100,
        "increment": 2,
        "change_policy": "each_iteration",
        "scope": "local",
        "out_of_value": "cycle"
      }
    },
    {
      "random_number": {
        "name": "random_number_variable",
        "min": 0,
        "max": 999,
        "predictable": false,
        "change_policy": "each_request"
      }
    },
    {
      "javascript": {
        "name": "My JSVar",
        "description": "This is a js var",
        "script": "function evaluate() {\n\tlogger.debug(\"Computing value of js variable\");\n\treturn\nnew function() {\n\t\tthis.firstField = \"a value\";\n\t\tthis.secondField =\nmyLibraryFunction();\n\t};\n}",
        "change_policy": "each_iteration"
      }
    }
  ],
  "servers": [
    {
      "name": "geolookup_host",
      "host": "nominatim.openstreetmap.org",
      "scheme": "https"
    },
    {
      "name": "nonstandard_port",
      "host": "nominatim.openstreetmap.org",
      "port": 81,
      "scheme": "http"
    },
    {
      "name": "basic_auth",
      "host": "nominatim.openstreetmap.org",
      "basic_authentication": {
        "login": "${auth_login}",
        "password": "${auth_password}",
        "realm": "realm-value"
      }
    },
    {
      "name": "basic_auth",
      "host": "nominatim.openstreetmap.org",
      "ntlm_authentication": {
        "login": "${auth_login}",
        "password": "${auth_password}",
        "domain": "domain-value"
      }
    },
    {
      "name": "negotiate_auth",
      "host": "nominatim.openstreetmap.org",
      "negotiate_authentication": {
        "login": "${auth_login}",
        "password": "${auth_password}"
      }
    }
  ],
  "sla_profiles": [
    {
      "name": "per_test_slas",
      "description": "SLAs calculated at the end of the test",
      "thresholds": [
        "avg-request-resp-time warn >= 1000ms fail >= 25000ms per test",
        "avg-page-resp-time warn >= 1000ms fail >= 25000ms per test",
        "avg-transaction-resp-time warn >= 1000ms fail >= 25000ms per test",
        "perc-transaction-resp-time (p95) warn >= 1s per test",
        "avg-request-per-sec warn == 0/s fail >= 250/s per test",
        "avg-throughput-per-sec warn <= 0Mbps fail >= 250Mbps per test",
        "errors-count warn >= 50 fail >= 100 per test",
        "count warn < 10 fail == 0 per test",
        "throughput warn < 1MB fail == 0MB per test",
        "error-rate warn >= 2% fail >= 25% per test"
      ]
    },
    {
      "name": "per_interval_slas",
      "description": "SLAs calculated during the test",
      "thresholds": [
        "avg-resp-time warn >= 1000ms fail >= 25000ms per interval",
        "avg-elt-per-sec warn < 1/s fail == 0/s per interval",
        "avg-throughput-per-sec warn < 1Mbps fail >= 250Mbps per interval",
        "errors-per-sec warn > 1/s fail > 5/s per interval",
        "error-rate warn >= 2% fail >= 25% per interval"
      ]
    }
  ],
  "populations": [
    {
      "name": "popGets",
      "description": "a simple population (distribution of user paths)",
      "user_paths": [
        {
          "name": "ex_2_0_geosearch_get"
        }
      ]
    },
    {
      "name": "popMix",
      "description": "a mixed population",
      "user_paths": [
        {
          "name": "ex_2_0_geosearch_get",
          "distribution": "33.3%"
        },
        {
          "name": "ex_2_0_geosearch_get",
          "distribution": "66.7%"
        }
      ]
    }
  ],
  "scenarios": [
    {
      "name": "sanityScenario",
      "description": "a scenario to run as a sanity check on environment and test assets",
      "populations": [
        {
          "name": "popGets",
          "rampup_load": {
            "min_users": 1,
            "max_users": 2,
            "increment_users": 1,
            "increment_every": "2s",
            "duration": "10s"
          }
        }
      ]
    },
    {
      "name": "rampScenario",
      "description": "a scenario to run as a sanity check on environment and test assets",
      "populations": [
        {
          "name": "popOne",
          "rampup_load": {
            "min_users": 1,
            "max_users": 2,
            "increment_users": 1,
            "increment_every": "2s",
            "duration": "10s"
          }
        },
        {
          "name": "popTwo",
          "rampup_load": {
            "min_users": 1,
            "max_users": 2,
            "increment_users": 1,
            "increment_every": "2s",
            "increment_rampup": "2s",
            "start_after": "popOne",
            "stop_after": "2m30s"
          }
        }
      ]
    },
    {
      "name": "slaScenario",
      "description": "a scenario that uses an SLA and constant population",
      "sla_profile": "per_test_slas",
      "populations": [
        {
          "name": "constantPopUnlimited",
          "constant_load": {
            "users": 5,
            "duration": "unlimited",
            "start_after": "15 iterations",
            "stop_after": "25 iterations"
          }
        },
        {
          "name": "constantPop",
          "constant_load": {
            "users": 5,
            "duration": "10m30s",
            "start_after": "constantPopUnlimited",
            "rampup": "30s"
          }
        }
      ]
    },
    {
      "name": "peakScenario",
      "description": "a scenario to test peak schema",
      "populations": [
        {
          "name": "MyPopulation1",
          "peaks_load": {
            "minimum": {
              "users": 100,
              "duration": "5m"
            },
            "maximum": {
              "users": 500,
              "duration": "3m"
            },
            "start": "minimum"
          }
        },
        {
          "name": "MyPopulation2",
          "peaks_load": {
            "minimum": {
              "users": 100,
              "duration": "5 iterations"
            },
            "maximum": {
              "users": 500,
              "duration": "3 iterations"
            },
            "start": "minimum",
            "duration": "80 iterations",
            "start_after": "MyPopulation1",
            "step_rampup": "15s",
            "stop_after": "current_iteration"
          }
        }
      ]
    }
  ],
  "user_paths": [
    {
      "name": "ex_2_0_geosearch_get",
      "actions": {
        "steps": [
          {
            "transaction": {
              "name": "External Geo-lookup",
              "description": "Call Open Street Maps to translate city names to lat/lon",
              "steps": [
                {
                  "request": {
                    "url": "/search?format=json&q=${cities.City}",
                    "server": "geolookup_host",
                    "sla_profile": "geo_3rdparty_sla"
                  }
                }
              ]
            }
          },
          {
            "delay": "1s"
          }
        ]
      }
    }
  ]
}
