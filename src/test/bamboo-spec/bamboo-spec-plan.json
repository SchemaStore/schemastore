{
  "Build binaries": {
    "artifacts": [
      {
        "location": ".",
        "name": "Binaries",
        "pattern": "script.sh",
        "required": true,
        "shared": true
      },
      {
        "name": "Logs",
        "pattern": "**/*.log",
        "required": false,
        "shared": false
      },
      {
        "name": "All",
        "pattern": "**/*"
      }
    ],
    "docker": {
      "image": "ubuntu",
      "use-default-volumes": true
    },
    "key": "BB",
    "other": {
      "clean-working-dir": true
    },
    "requirements": [
      "hasDocker",
      {
        "operating.system": "linux"
      }
    ],
    "tasks": [
      {
        "script": {
          "interpreter": "/bin/sh",
          "scripts": [
            "echo 'echo success' > script.sh",
            "echo 'success' > output.log"
          ]
        }
      },
      {
        "inject-variables": {
          "file": "folder\\file.txt",
          "namespace": "myspace",
          "scope": "RESULT"
        }
      }
    ]
  },
  "Cleanup": {
    "key": "CLEAN"
  },
  "Deploy": {
    "artifacts": [],
    "final-tasks": [],
    "other": {},
    "requirements": [],
    "tasks": []
  },
  "Integration tests": {
    "docker": "postgres",
    "final-tasks": [
      {
        "test-parser": "testng"
      },
      {
        "test-parser": {
          "test-results": ["mocha-1.json", "mocha-2.json"],
          "type": "mocha"
        }
      },
      {
        "test-parser": {
          "test-results": ["tests1\\results.trx", "tests2\\results.trx"],
          "type": "mstest"
        }
      },
      {
        "inject-variables": "tests.txt"
      }
    ],
    "key": "IT",
    "tasks": [
      "clean",
      {
        "script": ["touch report.xml"]
      }
    ]
  },
  "Unit tests": {
    "final-tasks": [
      {
        "test-parser": {
          "ignore-time": true,
          "test-results": "report.xml",
          "type": "junit"
        }
      }
    ],
    "key": "UT",
    "tasks": [
      {
        "script": {
          "scripts": ["touch report.xml"]
        }
      }
    ]
  },
  "branches": {
    "create": "for-pull-request",
    "delete": {
      "after-deleted-days": 40,
      "after-inactive-days": 10
    },
    "integration": {
      "merge-from": "master",
      "push-on-success": true
    },
    "link-to-jira": false
  },
  "docker": {
    "image": "oracle",
    "use-default-volumes": false,
    "volumes": {
      "/home/user": "/home/user",
      "/opt": "/opt"
    }
  },
  "notifications": [
    {
      "events": ["plan-failed", "job-error"],
      "recipients": [
        {
          "users": ["admin"]
        },
        {
          "emails": ["admin@example.com"]
        }
      ]
    },
    {
      "events": [
        {
          "plan-failed": 3
        },
        {
          "job-error": {
            "first-only": false
          }
        }
      ],
      "recipients": ["responsible", "watchers"]
    },
    {
      "events": [
        {
          "plan-failed": {
            "failures": 2
          }
        },
        "plan-completed",
        "plan-status-changed",
        "plan-comment-added",
        "plan-responsibility-changed",
        "job-completed",
        "job-status-changed",
        "job-failed",
        "job-first-failed",
        "job-hung",
        "job-queue-timeout",
        "job-queued-without-capable-agents"
      ],
      "recipients": ["committers"]
    }
  ],
  "plan": {
    "key": "PLAN",
    "name": "My Plan",
    "project-key": "PROJ"
  },
  "stages": [
    {
      "Build binaries": ["Build binaries"]
    },
    {
      "Run tests": {
        "final": false,
        "jobs": ["Unit tests", "Integration tests"],
        "manual": false
      }
    },
    {
      "Deploy": {
        "jobs": ["Deploy"],
        "manual": true
      }
    },
    {
      "Cleanup": {
        "final": true,
        "jobs": ["Cleanup"]
      }
    }
  ],
  "triggers": [
    {
      "polling": 130
    },
    {
      "polling": {
        "period": 150
      }
    },
    {
      "cron": "0 * * * ? *"
    },
    {
      "cron": {
        "expression": "0 0 * * ? *"
      }
    },
    "remote",
    {
      "remote": "192.168.0.1"
    },
    {
      "remote": {
        "ip": "192.168.0.2"
      }
    }
  ],
  "variables": {
    "password": "admin",
    "username": "admin"
  },
  "version": 2
}
