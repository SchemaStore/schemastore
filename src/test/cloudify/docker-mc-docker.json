{
  "description": "Cloudify Docker blueprint. Deploys Docker.",
  "imports": [
    "http://cloudify.co/spec/cloudify/5.0.5/types.yaml",
    "plugin:cloudify-fabric-plugin"
  ],
  "inputs": {
    "infra_archive": {
      "default": "https://github.com/cloudify-community/blueprint-examples/releases/download/5.0.5-10/virtual-machine.zip",
      "description": "URL of infra zip file.\n",
      "type": "string"
    },
    "infra_deployment_id": {
      "default": {
        "concat": [
          "infra-",
          {
            "get_input": "infra_name"
          }
        ]
      },
      "description": "The blueprint name, the deployment name."
    },
    "infra_exists": {
      "default": false,
      "description": "Whether a getting started infrastructure blueprint has already been uploaded to the manager or not.\n"
    },
    "infra_name": {
      "constraints": [
        {
          "valid_values": [
            "openstack",
            "azure",
            "azure-arm",
            "aws",
            "aws-terraform",
            "aws-cloudformation",
            "gcp"
          ]
        }
      ],
      "description": "Name of infrastructure blueprint to deploy.\n",
      "type": "string"
    }
  },
  "node_templates": {
    "docker": {
      "interfaces": {
        "cloudify.interfaces.lifecycle": {
          "create": {
            "implementation": "fabric.fabric_plugin.tasks.run_script",
            "inputs": {
              "fabric_env": {
                "host_string": {
                  "get_capability": [
                    {
                      "get_input": "infra_deployment_id"
                    },
                    "endpoint"
                  ]
                },
                "key": {
                  "get_capability": [
                    {
                      "get_input": "infra_deployment_id"
                    },
                    "key_content"
                  ]
                },
                "user": {
                  "get_capability": [
                    {
                      "get_input": "infra_deployment_id"
                    },
                    "user"
                  ]
                }
              },
              "script_path": "scripts/install_docker.sh",
              "use_sudo": true
            }
          },
          "delete": {
            "implementation": "fabric.fabric_plugin.tasks.run_script",
            "inputs": {
              "fabric_env": {
                "host_string": {
                  "get_capability": [
                    {
                      "get_input": "infra_deployment_id"
                    },
                    "endpoint"
                  ]
                },
                "key": {
                  "get_capability": [
                    {
                      "get_input": "infra_deployment_id"
                    },
                    "key_content"
                  ]
                },
                "user": {
                  "get_capability": [
                    {
                      "get_input": "infra_deployment_id"
                    },
                    "user"
                  ]
                }
              },
              "script_path": "scripts/uninstall_docker.sh",
              "use_sudo": true
            }
          }
        }
      },
      "relationships": [
        {
          "target": "infrastructure",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.nodes.ApplicationServer"
    },
    "infrastructure": {
      "properties": {
        "resource_config": {
          "blueprint": {
            "blueprint_archive": {
              "get_input": "infra_archive"
            },
            "external_resource": {
              "get_input": "infra_exists"
            },
            "id": {
              "get_input": "infra_deployment_id"
            },
            "main_file_name": {
              "concat": [
                {
                  "get_input": "infra_name"
                },
                ".yaml"
              ]
            }
          },
          "deployment": {
            "id": {
              "get_input": "infra_deployment_id"
            }
          }
        }
      },
      "type": "cloudify.nodes.Component"
    }
  },
  "outputs": {
    "docker_api_url": {
      "description": "Administration console URL",
      "value": {
        "concat": [
          "http://",
          {
            "get_capability": [
              {
                "get_input": "infra_deployment_id"
              },
              "endpoint"
            ]
          },
          ":2375"
        ]
      }
    }
  },
  "tosca_definitions_version": "cloudify_dsl_1_3"
}
