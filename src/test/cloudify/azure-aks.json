{
  "description": "This blueprint create a managed cluster.\n",
  "dsl_definitions": {
    "azure_config": {
      "client_id": {
        "get_input": "client_id"
      },
      "client_secret": {
        "get_input": "client_secret"
      },
      "subscription_id": {
        "get_input": "subscription_id"
      },
      "tenant_id": {
        "get_input": "tenant_id"
      }
    },
    "resource_config": {
      "addon_profiles": {},
      "agent_pool_profiles": [
        {
          "availabilityZones": ["1", "2", "3"],
          "count": 3,
          "enableNodePublicIP": true,
          "name": {
            "concat": [
              "nodepool1",
              {
                "get_input": "resource_suffix"
              }
            ]
          },
          "osType": "Linux",
          "type": "VirtualMachineScaleSets",
          "vmSize": "Standard_DS1_v2"
        }
      ],
      "dns_prefix": {
        "concat": [
          "akstest",
          {
            "get_input": "resource_suffix"
          }
        ]
      },
      "enable_rbac": true,
      "kubernetes_version": "",
      "linux_profile": {
        "adminUsername": "azureuser",
        "ssh": {
          "publicKeys": [
            {
              "keyData": {
                "get_attribute": ["agent_key", "public_key_export"]
              }
            }
          ]
        }
      },
      "location": {
        "get_input": "location"
      },
      "network_profile": {
        "loadBalancerProfile": {
          "managedOutboundIPs": {
            "count": 2
          }
        },
        "loadBalancerSku": "standard",
        "outboundType": "loadBalancer"
      },
      "service_principal_profile": {
        "clientId": {
          "get_input": "client_id"
        },
        "secret": {
          "get_input": "client_secret"
        }
      },
      "tags": {
        "Name": {
          "concat": [
            "AKS_Test",
            {
              "get_input": "resource_suffix"
            }
          ]
        },
        "tier": "Testing"
      },
      "windows_profile": {
        "adminPassword": "az#1234",
        "adminUsername": "azureuser"
      }
    }
  },
  "imports": [
    "http://www.getcloudify.org/spec/cloudify/3.4/types.yaml",
    "plugin:cloudify-azure-plugin?version= >=2.1.10",
    "plugin:cloudify-kubernetes-plugin?version= >=2.7.0",
    "plugin:cloudify-utilities-plugin?version= >=1.22.1"
  ],
  "inputs": {
    "agent_key_name": {
      "default": "agent_key",
      "type": "string"
    },
    "client_id": {
      "default": {
        "get_secret": "azure_client_id"
      },
      "required": false,
      "type": "string"
    },
    "client_secret": {
      "default": {
        "get_secret": "azure_client_secret"
      },
      "required": false,
      "type": "string"
    },
    "location": {
      "default": "eastus2",
      "required": true,
      "type": "string"
    },
    "managed_cluster_name": {
      "default": {
        "concat": [
          "aks-test-mc",
          {
            "get_input": "resource_suffix"
          }
        ]
      },
      "type": "string"
    },
    "resource_group_name": {
      "default": {
        "concat": [
          "aks-test-rg",
          {
            "get_input": "resource_suffix"
          }
        ]
      },
      "type": "string"
    },
    "resource_suffix": {
      "default": "a",
      "description": "Must be a letter.",
      "type": "string"
    },
    "service_account_name": {
      "default": "examples-user",
      "type": "string"
    },
    "service_account_namespace": {
      "default": "default",
      "type": "string"
    },
    "subscription_id": {
      "default": {
        "get_secret": "azure_subscription_id"
      },
      "required": false,
      "type": "string"
    },
    "tenant_id": {
      "default": {
        "get_secret": "azure_tenant_id"
      },
      "required": false,
      "type": "string"
    }
  },
  "node_templates": {
    "agent_key": {
      "interfaces": {
        "cloudify.interfaces.lifecycle": {
          "create": {
            "implementation": "keys.cloudify_ssh_key.operations.create",
            "inputs": {
              "store_private_key_material": true
            }
          }
        }
      },
      "properties": {
        "resource_config": {
          "key_name": {
            "get_input": "agent_key_name"
          },
          "openssh_format": true
        },
        "use_secret_store": true,
        "use_secrets_if_exist": true
      },
      "type": "cloudify.keys.nodes.RSAKey"
    },
    "kubernetes_master": {
      "properties": {
        "configuration": {
          "file_content": {
            "get_attribute": ["managed_cluster", "kubeconf"]
          }
        }
      },
      "relationships": [
        {
          "target": "managed_cluster",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.kubernetes.nodes.Master"
    },
    "managed_cluster": {
      "properties": {
        "azure_config": {
          "client_id": {
            "get_input": "client_id"
          },
          "client_secret": {
            "get_input": "client_secret"
          },
          "subscription_id": {
            "get_input": "subscription_id"
          },
          "tenant_id": {
            "get_input": "tenant_id"
          }
        },
        "cluster_name": {
          "get_input": "managed_cluster_name"
        },
        "resource_config": {
          "addon_profiles": {},
          "agent_pool_profiles": [
            {
              "availabilityZones": ["1", "2", "3"],
              "count": 3,
              "enableNodePublicIP": true,
              "name": {
                "concat": [
                  "nodepool1",
                  {
                    "get_input": "resource_suffix"
                  }
                ]
              },
              "osType": "Linux",
              "type": "VirtualMachineScaleSets",
              "vmSize": "Standard_DS1_v2"
            }
          ],
          "dns_prefix": {
            "concat": [
              "akstest",
              {
                "get_input": "resource_suffix"
              }
            ]
          },
          "enable_rbac": true,
          "kubernetes_version": "",
          "linux_profile": {
            "adminUsername": "azureuser",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": {
                    "get_attribute": ["agent_key", "public_key_export"]
                  }
                }
              ]
            }
          },
          "location": {
            "get_input": "location"
          },
          "network_profile": {
            "loadBalancerProfile": {
              "managedOutboundIPs": {
                "count": 2
              }
            },
            "loadBalancerSku": "standard",
            "outboundType": "loadBalancer"
          },
          "service_principal_profile": {
            "clientId": {
              "get_input": "client_id"
            },
            "secret": {
              "get_input": "client_secret"
            }
          },
          "tags": {
            "Name": {
              "concat": [
                "AKS_Test",
                {
                  "get_input": "resource_suffix"
                }
              ]
            },
            "tier": "Testing"
          },
          "windows_profile": {
            "adminPassword": "az#1234",
            "adminUsername": "azureuser"
          }
        },
        "resource_group": {
          "get_input": "resource_group_name"
        },
        "store_kube_config_in_runtime": true
      },
      "relationships": [
        {
          "target": "resource_group",
          "type": "cloudify.azure.relationships.contained_in_resource_group"
        },
        {
          "target": "agent_key",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.azure.nodes.compute.ManagedCluster"
    },
    "new_role_binding": {
      "properties": {
        "client_config": {
          "configuration": {
            "file_content": {
              "get_attribute": ["managed_cluster", "kubeconf"]
            }
          }
        },
        "definition": {
          "apiVersion": "rbac.authorization.k8s.io/v1beta1",
          "kind": "ClusterRoleBinding",
          "metadata": {
            "name": {
              "get_input": "service_account_name"
            }
          },
          "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "cluster-admin"
          },
          "subjects": [
            {
              "kind": "ServiceAccount",
              "name": {
                "get_input": "service_account_name"
              },
              "namespace": {
                "get_input": "service_account_namespace"
              }
            }
          ]
        },
        "options": {
          "namespace": {
            "get_input": "service_account_namespace"
          }
        }
      },
      "relationships": [
        {
          "target": "kubernetes_master",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.kubernetes.resources.RoleBinding"
    },
    "new_service_account": {
      "properties": {
        "client_config": {
          "configuration": {
            "file_content": {
              "get_attribute": ["managed_cluster", "kubeconf"]
            }
          }
        },
        "definition": {
          "apiVersion": "v1",
          "kind": "ServiceAccount",
          "metadata": {
            "name": {
              "get_input": "service_account_name"
            },
            "namespace": {
              "get_input": "service_account_namespace"
            }
          }
        },
        "options": {
          "namespace": {
            "get_input": "service_account_namespace"
          }
        }
      },
      "relationships": [
        {
          "target": "kubernetes_master",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.kubernetes.resources.ServiceAccount"
    },
    "resource_group": {
      "properties": {
        "azure_config": {
          "client_id": {
            "get_input": "client_id"
          },
          "client_secret": {
            "get_input": "client_secret"
          },
          "subscription_id": {
            "get_input": "subscription_id"
          },
          "tenant_id": {
            "get_input": "tenant_id"
          }
        },
        "location": {
          "get_input": "location"
        },
        "name": {
          "get_input": "resource_group_name"
        }
      },
      "type": "cloudify.azure.nodes.ResourceGroup"
    },
    "sanity_master": {
      "properties": {
        "configuration": {
          "api_options": {
            "api_key": {
              "get_secret": "kubernetes_token"
            },
            "debug": false,
            "host": {
              "get_attribute": [
                "managed_cluster",
                "kubeconf",
                "clusters",
                0,
                "cluster",
                "server"
              ]
            },
            "verify_ssl": false
          }
        }
      },
      "relationships": [
        {
          "target": "store_token",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.kubernetes.nodes.Master"
    },
    "sanity_pod": {
      "properties": {
        "client_config": {
          "configuration": {
            "api_options": {
              "api_key": {
                "get_secret": "kubernetes_token"
              },
              "debug": false,
              "host": {
                "get_attribute": [
                  "managed_cluster",
                  "kubeconf",
                  "clusters",
                  0,
                  "cluster",
                  "server"
                ]
              },
              "verify_ssl": false
            }
          }
        },
        "definition": {
          "apiVersion": "v1",
          "kind": "Pod",
          "metadata": {
            "name": "nginx"
          },
          "spec": {
            "containers": [
              {
                "image": "nginx:stable",
                "name": "nginx"
              }
            ]
          }
        }
      },
      "relationships": [
        {
          "target": "sanity_master",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.kubernetes.resources.Pod"
    },
    "secret": {
      "properties": {
        "api_mapping": {
          "create": {
            "api": "CoreV1Api",
            "method": "create_namespaced_secret",
            "payload": "V1Secret"
          },
          "delete": {
            "api": "CoreV1Api",
            "method": "delete_namespaced_secret",
            "payload": "V1DeleteOptions"
          },
          "read": {
            "api": "CoreV1Api",
            "method": "read_namespaced_secret"
          },
          "update": {
            "api": "CoreV1Api",
            "method": "replace_namespaced_secret",
            "payload": "V1Secret"
          }
        },
        "client_config": {
          "configuration": {
            "file_content": {
              "get_attribute": ["managed_cluster", "kubeconf"]
            }
          }
        },
        "definition": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": {
              "get_attribute": [
                "new_service_account",
                "kubernetes",
                "secrets",
                0,
                "name"
              ]
            }
          }
        },
        "use_external_resource": true
      },
      "relationships": [
        {
          "target": "kubernetes_master",
          "type": "cloudify.relationships.depends_on"
        },
        {
          "target": "new_role_binding",
          "type": "cloudify.relationships.depends_on"
        },
        {
          "target": "new_service_account",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.kubernetes.resources.CustomBlueprintDefinedResource"
    },
    "store_token": {
      "interfaces": {
        "cloudify.interfaces.lifecycle": {
          "create": {
            "executor": "central_deployment_agent",
            "implementation": "scripts/store_kube_token.py",
            "inputs": {
              "kube_token": {
                "get_attribute": ["secret", "kubernetes", "data", "token"]
              }
            }
          }
        }
      },
      "relationships": [
        {
          "target": "secret",
          "type": "cloudify.relationships.depends_on"
        }
      ],
      "type": "cloudify.nodes.Root"
    }
  },
  "tosca_definitions_version": "cloudify_dsl_1_3"
}
