{
  "basePath": "/api",
  "consumes": ["application/json"],
  "definitions": {
    "errorModel": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      },
      "required": ["code", "message"]
    },
    "newPet": {
      "allOf": [
        {
          "$ref": "Pet"
        },
        {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer"
            }
          },
          "required": ["name"]
        }
      ]
    },
    "pet": {
      "externalDocs": {
        "description": "find more info here",
        "url": "https://helloreverb.com/about"
      },
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "required": ["id", "name"]
    }
  },
  "externalDocs": {
    "description": "find more info here",
    "url": "https://helloreverb.com/about"
  },
  "host": "petstore.swagger.wordnik.com",
  "info": {
    "contact": {
      "email": "foo@example.com",
      "name": "Wordnik API Team",
      "url": "http://madskristensen.net"
    },
    "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    },
    "termsOfService": "http://helloreverb.com/terms/",
    "title": "Swagger Petstore",
    "version": "1.0.0"
  },
  "paths": {
    "/pets": {
      "get": {
        "description": "Returns all pets from the system that the user has access to",
        "externalDocs": {
          "description": "find more info here",
          "url": "https://helloreverb.com/about"
        },
        "operationId": "findPets",
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "tags to filter by",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          },
          {
            "description": "maximum number of results to return",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          },
          "200": {
            "description": "pet response",
            "schema": {
              "items": {
                "$ref": "#/definitions/pet"
              },
              "type": "array"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new pet in the store.  Duplicates are allowed",
        "operationId": "addPet",
        "parameters": [
          {
            "description": "Pet to add to the store",
            "in": "body",
            "name": "pet",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newPet"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          },
          "200": {
            "description": "pet response",
            "schema": {
              "$ref": "#/definitions/pet"
            }
          }
        }
      }
    },
    "/pets/{id}": {
      "delete": {
        "description": "deletes a single pet based on the ID supplied",
        "operationId": "deletePet",
        "parameters": [
          {
            "description": "ID of pet to delete",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          },
          "204": {
            "description": "pet deleted"
          }
        }
      },
      "get": {
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "findPetById",
        "parameters": [
          {
            "description": "ID of pet to fetch",
            "format": "int64",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/html"
        ],
        "responses": {
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "ErrorModel"
            }
          },
          "200": {
            "description": "pet response",
            "schema": {
              "$ref": "Pet"
            }
          }
        }
      }
    }
  },
  "produces": ["application/json"],
  "schemes": ["http"],
  "swagger": "2.0"
}
