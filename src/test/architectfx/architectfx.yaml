# yaml-language-server: $schema=../../schemas/json/architectfx.json
# Imports are unnecessary unless two classes with the same name are detected at runtime
# The following imports are not really necessary, I'm adding them just to test the parser
# Although it has to be said, adding imports makes the parsing much faster
# because we do not have to rely on the ClassGraph scan
.imports:
  [
    'io.github.palexdev.materialfx.controls.*',
    'javafx.geometry.*',
    'javafx.scene.control.Label',
    'javafx.scene.layout.*',
    'javafx.scene.paint.Color',
  ]

.deps: ['io.github.palexdev:materialfx:11.17.0']

# There can be only one controller per view, special handle like for imports
.controller: 'TextFieldsController'

# Global config, in this case, setting a global theme
# Needless to say, global configs only support static methods and fields
.config:
  - { .method: 'UserAgentBuilder.builder', .transform: true }
  - { .method: 'themes', .varargs: [JavaFXThemes.MODENA] }
  - { .method: 'themes', .varargs: [MaterialFXStylesheets.DEFAULT] }
  - { .method: 'setDeploy', .args: [true] }
  - { .method: 'setResolveAssets', .args: [true] }
  - { .method: 'build', .transform: true }
  - { .method: 'setGlobal' }

GridPane:
  alignment: 'Pos.CENTER'
  hgap: 20.0
  vgap: 20.0
  padding: { .type: 'Insets', .args: [20.0, 30.0, 20.0, 30.0] }
  styleClass:
    - 'grid-pane'
  stylesheets:
    - '@css/TextFields.css'

  columnConstraints:
    [
      { .type: ColumnConstraints, halignment: 'HPos.CENTER' },
      { .type: ColumnConstraints, halignment: 'HPos.CENTER' },
      { .type: ColumnConstraints, halignment: 'HPos.CENTER' },
      { .type: ColumnConstraints, halignment: 'HPos.CENTER' },
      { .type: ColumnConstraints, halignment: 'HPos.CENTER' },
      { .type: ColumnConstraints, halignment: 'HPos.CENTER' },
    ]
  rowConstraints:
    [
      { .type: 'RowConstraints', minHeight: 10.0, prefHeight: 32.0 },
      { .type: 'RowConstraints', minHeight: 10.0, prefHeight: 64.0 },
      { .type: 'RowConstraints', minHeight: 10.0, prefHeight: 64.0 },
      { .type: 'RowConstraints', minHeight: 10.0, prefHeight: 10.0 },
      { .type: 'RowConstraints', minHeight: 10.0, prefHeight: 32.0 },
      {
        .type: 'RowConstraints',
        minHeight: 10.0,
        prefHeight: 150.0,
        valignment: 'VPos.BASELINE',
      },
    ]

  children:
    # First section
    - StackPane:
        minWidth: 300.0
        minHeight: 150.0
        styleClass:
          - 'grid-background'
        .config:
          - {
              .method: 'GridPane.setColumnSpan',
              .args: ['Keyword.THIS', 2147483647],
            }
          - { .method: 'GridPane.setRowSpan', .args: ['Keyword.THIS', 3] }
          - {
              .method: 'GridPane.setMargin',
              .args:
                [
                  'Keyword.THIS',
                  { .type: 'Insets', .args: [0.0, -15.0, -7.0, -15.0] },
                ],
            }

    - Label:
        alignment: 'Pos.CENTER'
        maxWidth: 1.7976931348623157E308
        maxHeight: 1.7976931348623157E308
        text: 'Text Fields and Password Fields'
        styleClass:
          - 'header-label'
        .config:
          - {
              .method: 'GridPane.setColumnSpan',
              .args: ['Keyword.THIS', 2147483647],
            }

    - MFXTextField:
        floatingText: 'Inline Mode'
        .config:
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 1] }

    - MFXTextField:
        floatMode: 'FloatMode.BORDER'
        floatingText: 'Border Mode'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 1] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 1] }

    - MFXTextField:
        borderGap: 2.0
        floatMode: 'FloatMode.ABOVE'
        floatingText: 'Above Mode'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 2] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 1] }

    - MFXTextField:
        floatMode: 'FloatMode.DISABLED'
        floatingText: 'No Floating Text'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 3] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 1] }

    - MFXTextField:
        id: 'customField'
        floatingText: 'Custom'
        promptText: 'Prompt Text'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 4] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 1] }

    - MFXTextField:
        disable: true
        floatingText: 'Disabled'
        text: 'Text'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 5] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 1] }

    - MFXPasswordField:
        floatingText: 'Inline Mode'
        .config:
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 2] }

    - MFXPasswordField:
        floatMode: 'FloatMode.BORDER'
        floatingText: 'Border Mode'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 1] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 2] }

    - MFXPasswordField:
        borderGap: 2.0
        floatMode: 'FloatMode.ABOVE'
        floatingText: 'Above Mode'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 2] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 2] }

    - MFXPasswordField:
        floatMode: 'FloatMode.DISABLED'
        floatingText: 'No Floating Text'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 3] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 2] }

    - MFXPasswordField:
        id: 'customField'
        floatingText: 'Custom'
        promptText: 'Prompt Text'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 4] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 2] }

    - MFXPasswordField:
        disable: true
        floatingText: 'Disabled'
        text: 'Text'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 5] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 2] }

    # Second section
    - StackPane:
        minWidth: 300.0
        minHeight: 150.0
        styleClass:
          - 'grid-background'
        .config:
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 4] }
          - {
              .method: 'GridPane.setColumnSpan',
              .args: ['Keyword.THIS', 2147483647],
            }
          - {
              .method: 'GridPane.setRowSpan',
              .args: ['Keyword.THIS', 2147483647],
            }
          - {
              .method: 'GridPane.setMargin',
              .args:
                [
                  'Keyword.THIS',
                  { .type: 'Insets', .args: [0.0, -15.0, -15.0, -15.0] },
                ],
            }

    - Label:
        alignment: 'Pos.CENTER'
        maxWidth: 1.7976931348623157E308
        maxHeight: 1.7976931348623157E308
        text: 'Features'
        styleClass:
          - 'header-label'
        .config:
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 4] }
          - {
              .method: 'GridPane.setColumnSpan',
              .args: ['Keyword.THIS', 2147483647],
            }

    - MFXTextField:
        animated: false
        floatingText: 'Not Animated'
        .config:
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 5] }

    - MFXTextField:
        allowEdit: false
        caretVisible: false
        selectable: false
        floatingText: 'As Label'
        text: "Label's text"
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 1] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 5] }

    - MFXTextField:
        .cid: 'textField'
        floatingText: 'Characters Limit'
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 2] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 5] }

    # Special password field
    - VBox:
        spacing: 5.0
        padding: { .type: 'Insets', .args: [0.0, 10.0, 0.0, 0.0] }
        .config:
          - { .method: 'GridPane.setColumnIndex', .args: ['Keyword.THIS', 3] }
          - { .method: 'GridPane.setRowIndex', .args: ['Keyword.THIS', 5] }
          - {
              .method: 'GridPane.setColumnSpan',
              .args: ['Keyword.THIS', 2147483647],
            }
        children:
          - MFXPasswordField:
              id: 'validatedField'
              .cid: 'passwordField'
              floatingText: 'Validated'
              maxWidth: 200.0

          - Label:
              id: 'validationLabel'
              .cid: 'validationLabel'
              visible: false
              textFill:
                { .type: Color, .factory: Color.web, .args: ['#ef6e6b'] }
              wrapText: true
              maxWidth: 1.7976931348623157E308
              minHeight: 'Double.NEGATIVE_INFINITY'
